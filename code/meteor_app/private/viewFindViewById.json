[{"dataset": "viewFindViewById", "exampleID": 9901, "initialization": ["View view = inflate(*,*)"], "initializationStart": [403], "initializationEnd": [463], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 496, "focalAPIEnd": 526, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.setBackgroundResource(int)"], "useStart": [550, 592], "useEnd": [586, 639], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MentoSchool/skincare/tree/master/Collage_SkinCare/src/com/collage/skincare/fragment/weather/FragWeatherFun_CustemCalleryAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View mview = convertView;\n\n    // int[] mImageID = { R.drawable.weather_icon_01,\n    // R.drawable.weather_icon_02, R.drawable.weather_icon_03,\n    // R.drawable.weather_icon_04, R.drawable.weather_icon_05 };\n\n    String[] weather_code = {\"꽃가루 지수\", \"불퀘지수\", \"썬글라스\", \"감기지수\"};\n    if (mview == null) {\n      mview = mInflater.inflate(R.layout.frag_weather_today_gallery, null);\n    }\n\n    image = (ImageView) mview.findViewById(R.id.image);\n    view = (TextView) mview.findViewById(R.id.GalleryText);\n    image.setBackgroundResource(mImageID[position]);\n    view.setText(weather_code[position]);\n\n    return mview;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9902, "initialization": ["View view = getLayoutInflater()"], "initializationStart": [453], "initializationEnd": [477], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 534, "focalAPIEnd": 578, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.setBackgroundColor(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "ViewGroup.addView(view)"], "useStart": [522, 610, 598, 952, 1043, 1122, 1180], "useEnd": [592, 654, 686, 1000, 1091, 1160, 1223], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cloudspokes/mobile_campus/tree/master/aau/android/AAUCampus_SFSDK1.3/src/com/appirio/mobile/aau/nativemap/StopScheduleActivity.java", "rawCode": "  /**\n   * Create a temporqry default List item to display while Teletrack loading data and display\n   * progress dialog\n   *\n   * @param stopName\n   */\n  private void createSearchingStateView(String stopName) {\n    ViewGroup stopSchedulecontainer = (ViewGroup) this.findViewById(R.id.stopScheduleContainer);\n    stopSchedulecontainer.removeAllViews();\n    ((TextView) this.findViewById(R.id.txtBusStopName)).setText(stopName);\n\n    View scheduleView = this.getLayoutInflater().inflate(R.layout.schedule_item, null);\n\n    ((TextView) scheduleView.findViewById(R.id.txtRouteName)).setText(\"?\");\n    ((TextView) scheduleView.findViewById(R.id.txtRouteName)).setBackgroundColor(Color.BLUE);\n    // Set Circle drawable for Stop cell removed 3/18/2013 A.I. due to issue I-48489 circles are too\n    // large based on cell size\n    // ((TextView)scheduleView.findViewById(R.id.txtRouteName)).setBackgroundDrawable(createStopDefaultCircle());\n\n    ((TextView) scheduleView.findViewById(R.id.txtUpcomingStops)).setText(\"Searching...\");\n    ((TextView) scheduleView.findViewById(R.id.txtNextStopTilte)).setText(\"\");\n    ((TextView) scheduleView.findViewById(R.id.txtETA)).setText(\"\");\n\n    stopSchedulecontainer.addView(scheduleView);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9903, "initialization": ["View view = from(*)"], "initializationStart": [327], "initializationEnd": [360], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.setId(int)"], "configurationStart": [465], "configurationEnd": [505], "guardCondition": "view==null||view.getId()!=ITEM_VIEW_TYPE_FOOTER", "guardType": "IF {", "guardExpressionStart": 210, "guardExpressionEnd": 282, "guardBlockStart": 210, "guardBlockEnd": 701, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 551, "focalAPIEnd": 592, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.findViewById(int)", "view.setText(String)", "invoke(view,boolean)", "invoke(view,boolean)"], "useStart": [606, 1174, 1424, 1477, 1700, 1775], "useEnd": [688, 1214, 1465, 1530, 1738, 1814], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DocuSignDev/ActionBarSherlock/tree/master/src/com/actionbarsherlock/widget/ActivityChooserView.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      final int itemViewType = getItemViewType(position);\n      switch (itemViewType) {\n        case ITEM_VIEW_TYPE_FOOTER:\n          if (convertView == null || convertView.getId() != ITEM_VIEW_TYPE_FOOTER) {\n            convertView =\n                LayoutInflater.from(getContext())\n                    .inflate(R.layout.abs__activity_chooser_view_list_item, parent, false);\n            convertView.setId(ITEM_VIEW_TYPE_FOOTER);\n            TextView titleView = (TextView) convertView.findViewById(R.id.abs__title);\n            titleView.setText(mContext.getString(R.string.abs__activity_chooser_view_see_all));\n          }\n          return convertView;\n        case ITEM_VIEW_TYPE_ACTIVITY:\n          if (convertView == null || convertView.getId() != R.id.abs__list_item) {\n            convertView =\n                LayoutInflater.from(getContext())\n                    .inflate(R.layout.abs__activity_chooser_view_list_item, parent, false);\n          }\n          PackageManager packageManager = mContext.getPackageManager();\n          // Set the icon\n          ImageView iconView = (ImageView) convertView.findViewById(R.id.abs__icon);\n          ResolveInfo activity = (ResolveInfo) getItem(position);\n          iconView.setImageDrawable(activity.loadIcon(packageManager));\n          // Set the title.\n          TextView titleView = (TextView) convertView.findViewById(R.id.abs__title);\n          titleView.setText(activity.loadLabel(packageManager));\n          if (IS_HONEYCOMB) {\n            // Highlight the default.\n            if (mShowDefaultActivity && position == 0 && mHighlightDefaultActivity) {\n              SetActivated.invoke(convertView, true);\n            } else {\n              SetActivated.invoke(convertView, false);\n            }\n          }\n          return convertView;\n        default:\n          throw new IllegalArgumentException();\n      }\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9904, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 246, "focalAPIEnd": 283, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setText(String)"], "useStart": [316, 382, 444, 510, 691], "useEnd": [353, 415, 477, 547, 734], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/samicemalone/android-vlc-remote/tree/master/src/org/peterbaldwin/vlcremote/fragment/ServerInfoDialog.java", "rawCode": "  /**\n   * Sets up the mEditHostname, mEditPort, mEditUser and mEditPassword views with their initial\n   * data.\n   *\n   * @param view Inflated root of the view hierarchy\n   */\n  public void setupViews(View view) {\n    mEditNickname = (EditText) view.findViewById(R.id.edit_nickname);\n    mEditHostname = (EditText) view.findViewById(R.id.edit_hostname);\n    mEditPort = (EditText) view.findViewById(R.id.edit_port);\n    mEditUser = (EditText) view.findViewById(R.id.edit_user);\n    mEditPassword = (EditText) view.findViewById(R.id.edit_password);\n    if (getArguments().getString(\"currentKey\") != null) {\n      Server server = Server.fromKey(getArguments().getString(\"currentKey\"));\n      mEditNickname.setText(server.getNickname());\n      mEditHostname.setText(server.getHost());\n      mEditPort.setText(String.valueOf(server.getPort()));\n      mEditUser.setText(server.getUser());\n      mEditPassword.setText(server.getPassword());\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9905, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 108, "focalAPIEnd": 144, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.scrollTo(int,int)", "view.findViewById(int)", "view.findViewById(int)", "view.setVisibility(int)", "view.findViewById(int)"], "useStart": [108, 974, 1036, 1036, 1106], "useEnd": [159, 1002, 1072, 1100, 1138], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/eakmeister/STEP_Android/tree/master/STEP-Launcher/src/com/tmm/android/rssreader/NewspaperFragment.java", "rawCode": "  public void changeToCategory(int category) {\n    selected_category = category;\n    position_hold = 0;\n    V.findViewById(R.id.scrlReadArticle).scrollTo(0, 0); // moves to top of view\n\n    if (copies[category].getJobs() == null) {\n      rssReaderTask =\n          new RssReaderTask(\n              NewspaperFragment.this.rssReader,\n              getActivity().findViewById(R.id.txtReadArticle),\n              getActivity().findViewById(R.id.txtReadTitle),\n              category + 1);\n      rssReaderTask.setCallback(NewspaperFragment.this);\n      rssReaderTask.execute();\n    } else {\n      rssReader.setJobs(copies[category].getJobs());\n\n      try {\n        NewspaperFragment.this.rssReader.readArticle(\n            position_hold,\n            getActivity().findViewById(R.id.txtReadArticle),\n            getActivity().findViewById(R.id.txtReadTitle));\n      } catch (Exception e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n    }\n\n    V.findViewById(R.id.btnNext).setVisibility(View.VISIBLE);\n    V.findViewById(R.id.scrlReadArticle).setVisibility(View.VISIBLE);\n    V.findViewById(R.id.btnPrevious).setVisibility(View.INVISIBLE);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9906, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 342, "focalAPIEnd": 369, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mauriciojovel/clasificados/tree/master/GuanaAnuncios/src/com/udb/mad/shinmen/benja/guana/anuncios/adapters/AnuncioCustomAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    Holder h = null;\n    View vi = null;\n\n    if (convertView == null) {\n      LayoutInflater inflater = activity.getLayoutInflater();\n      vi = inflater.inflate(R.layout.anuncios_cercanos_layout, null);\n      h = new Holder();\n      h.title = (TextView) vi.findViewById(R.id.title);\n      h.description = (TextView) vi.findViewById(R.id.description);\n      h.codigo = (TextView) vi.findViewById(R.id.codigo);\n      h.imagen = (ImageView) vi.findViewById(R.id.list_image);\n      vi.setTag(h);\n    } else {\n      vi = convertView;\n      h = (Holder) vi.getTag();\n    }\n\n    Anuncio a = (Anuncio) getItem(position);\n\n    h.title.setText(a.getTituloAnuncio());\n    h.description.setText(a.getDescripcionAnuncio());\n    h.codigo.setText(a.getCodigoAnuncio());\n    h.imagen.setImageDrawable(activity.getResources().getDrawable(R.drawable.guana_logo));\n\n    /*Cargando la imagen asincronamente*/\n    // obteniendo la direccion URL para descargar la imagen\n    String url = vi.getResources().getString(R.string.imagenAnuncioService);\n    url = url.replace(\"{id}\", String.valueOf(a.getCodigoAnuncio()));\n    url =\n        url\n            + \"?usuario=\"\n            + PreferenciasUsuario.getUsuario(activity)\n            + \"&token=\"\n            + PreferenciasUsuario.getToken(activity);\n\n    imageDownloader.download(url, h.imagen);\n\n    return vi;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9907, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 94, "focalAPIEnd": 119, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.requestFocus()"], "useStart": [125], "useEnd": [148], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/serious198706/DFCarCheckerProject/tree/master/DFCarChecker/src/main/java/com/df/service/Helper.java", "rawCode": "  public static void setEditFocus(View view, int editId) {\n    EditText editText = (EditText) view.findViewById(editId);\n    editText.requestFocus();\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9908, "initialization": ["View view = inflate(*,*)"], "initializationStart": [284], "initializationEnd": [323], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 362, "focalAPIEnd": 403, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.init(*,*,*,*)", "view.findViewById(int)", "Builder.setView(view)", "view.invalidate()"], "useStart": [772, 902, 1057, 1092], "useEnd": [863, 943, 1086, 1115], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ccard/csci422FinalProject/tree/master/To_DoList/src/csci422/CandN/to_dolist/DetailForm.java", "rawCode": "  /**\n   * This method opens our date_dialog so user can select a date and we can keep it in a certain\n   * formate\n   *\n   * @param v\n   */\n  public void openCal(View v) {\n    Builder calDialog = new Builder(this);\n    LayoutInflater inf = getLayoutInflater();\n    View dialogView = inf.inflate(R.layout.date_dialog, null);\n    DatePicker date1 = ((DatePicker) dialogView.findViewById(R.id.datePicker1));\n    try {\n      dueDate = dateFormat.parse(datetext.getText().toString());\n    } catch (ParseException e) {\n      Log.e(tag, \"Can't parse the date. User probably edited manually:\");\n      Log.e(tag, e.getMessage());\n      dueDate = new Date(); // default to current time if user goofed up.\n    }\n    Calendar c = new GregorianCalendar();\n    c.setTime(dueDate);\n    date1.init(c.get(Calendar.YEAR), c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH), null);\n    TimePicker time1 = ((TimePicker) dialogView.findViewById(R.id.timePicker1));\n    time1.setCurrentHour(c.get(Calendar.HOUR_OF_DAY));\n    time1.setCurrentMinute(c.get(Calendar.MINUTE));\n    calDialog.setView(dialogView);\n    dialogView.invalidate();\n    calDialog.setCancelable(true);\n    calDialog.setPositiveButton(\n        \"Done\",\n        new OnClickListener() {\n\n          public void onClick(DialogInterface dialog, int which) {\n            ((TextView) ((Dialog) dialog).findViewById(R.id.pleaseWaitMessage))\n                .setText(\"Saving...\");\n            DatePicker dp = ((DatePicker) ((Dialog) dialog).findViewById(R.id.datePicker1));\n            TimePicker tp = ((TimePicker) ((Dialog) dialog).findViewById(R.id.timePicker1));\n            GregorianCalendar gc;\n            gc =\n                new GregorianCalendar(\n                    dp.getYear(),\n                    dp.getMonth(),\n                    dp.getDayOfMonth(),\n                    tp.getCurrentHour(),\n                    tp.getCurrentMinute()); // Is this the current, or selected?\n            DetailForm.this.setDueDate(gc.getTime());\n          }\n        });\n    calDialog.show();\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9909, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 127, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)"], "useStart": [193, 263], "useEnd": [228, 302], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/SvenAke/AboveGameServer/tree/master/abovegame/src/com/aboveware/abovegame/preference/ChangePasswordDialogPreference.java", "rawCode": "  @Override\n  protected void onBindDialogView(View view) {\n    super.onBindDialogView(view);\n\n    currentPassword = (EditText) view.findViewById(R.id.oldPassword);\n    newPassword = (EditText) view.findViewById(R.id.newPassword);\n    confirmPassword = (EditText) view.findViewById(R.id.confirmPassword);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9910, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 309, "focalAPIEnd": 351, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mfportzert/Quizz-Places/tree/master/src/com/quizz/places/adapters/SectionsItemAdapter.java", "rawCode": "  @SuppressWarnings(\"deprecation\")\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n    if (convertView == null) {\n\n      convertView = this.mInflater.inflate(this.mLineLayout, null);\n\n      holder = new ViewHolder();\n      holder.name = (TextView) convertView.findViewById(R.id.sectionName);\n      holder.levels = (TextView) convertView.findViewById(R.id.sectionNbLevels);\n      holder.buttonEnter = (ImageView) convertView.findViewById(R.id.sectionEnterButton);\n      holder.progressSwitcher =\n          (ViewSwitcher) convertView.findViewById(R.id.sectionProgressSwitcher);\n      holder.progress = (SectionProgressView) convertView.findViewById(R.id.sectionProgress);\n      holder.sectionUnlockLabel = (TextView) convertView.findViewById(R.id.sectionUnlockLabel);\n\n      holder.buttonEnter.setAlpha(225);\n\n      convertView.setTag(holder);\n\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Section section = getItem(position);\n    holder.name.setText(section.name);\n    holder.progress.setProgressDrawable(mProgressDrawables[position % mProgressDrawables.length]);\n\n    holder.levels.setText(this.nbDoneLevels(section) + \"/\" + section.levels.size());\n\n    if (section.levels != null && section.levels.size() > 0) {\n      int nbLevelsCleared = 0;\n      for (Level lvl : section.levels) {\n        nbLevelsCleared += (lvl.status == Level.STATUS_LEVEL_CLEAR) ? 1 : 0;\n      }\n      float progressValue = (nbLevelsCleared * 100.0f) / section.levels.size();\n      holder.progress.setProgressValue(progressValue);\n    } else {\n      holder.progress.setProgressValue(1);\n    }\n\n    int verticalPadding = (int) ConvertUtils.convertDpToPixels(2.5f, getContext());\n    int horizontalPadding = (int) ConvertUtils.convertDpToPixels(3f, getContext());\n    holder.progress.setPaddingProgress(\n        horizontalPadding, verticalPadding, horizontalPadding, verticalPadding);\n\n    // Section locked management\n    boolean sectionLocked = (section.status == Section.SECTION_LOCKED);\n    Drawable sectionDrawable = null;\n\n    holder.sectionUnlockLabel.setText(\"\");\n\n    if (sectionLocked) {\n      sectionDrawable = mLockDrawable;\n\n      int levelCountToUnlockSection = section.remainingClearedLevelCount();\n      if (levelCountToUnlockSection != -1) {\n        holder.sectionUnlockLabel.setVisibility(View.VISIBLE);\n        holder.sectionUnlockLabel.setText(\n            Html.fromHtml(\n                mContext\n                    .getResources()\n                    .getQuantityString(\n                        R.plurals.unlock_section_requirement,\n                        levelCountToUnlockSection,\n                        levelCountToUnlockSection)));\n      }\n\n    } else if (section.isComplete()) {\n      sectionDrawable = mCompleteDrawable;\n    }\n\n    holder.name.setCompoundDrawablesWithIntrinsicBounds(sectionDrawable, null, null, null);\n    holder.progress.setDisplayInitialProgressIfEmpty((sectionLocked) ? false : true);\n    holder.buttonEnter.setVisibility((sectionLocked) ? View.GONE : View.VISIBLE);\n    holder.levels.setVisibility((sectionLocked) ? View.GONE : View.VISIBLE);\n    holder.name.setTextColor((sectionLocked) ? 0xee666666 : 0xff666666);\n\n    if (sectionLocked) {\n      if (holder.progressSwitcher.getNextView() != holder.progress) {\n        holder.progressSwitcher.showNext();\n      }\n    } else if (holder.progressSwitcher.getNextView() == holder.progress) {\n      holder.progressSwitcher.showNext();\n    }\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9911, "initialization": ["View view = inflate(*,ViewGroup,boolean)"], "initializationStart": [158], "initializationEnd": [224], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 342, "focalAPIEnd": 373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setText(String)", "view.setTag(SuggestedMember)"], "useStart": [407, 473, 509, 977], "useEnd": [438, 503, 547, 998], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Contacts/tree/master/src/com/android/contacts/group/SuggestedMemberListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View result = convertView;\n    if (result == null) {\n      result = mInflater.inflate(R.layout.group_member_suggestion, parent, false);\n    }\n    // TODO: Use a viewholder\n    SuggestedMember member = getItem(position);\n    TextView text1 = (TextView) result.findViewById(R.id.text1);\n    TextView text2 = (TextView) result.findViewById(R.id.text2);\n    ImageView icon = (ImageView) result.findViewById(R.id.icon);\n    text1.setText(member.getDisplayName());\n    if (member.hasExtraInfo()) {\n      text2.setText(member.getExtraInfo());\n    } else {\n      text2.setVisibility(View.GONE);\n    }\n    byte[] byteArray = member.getPhotoByteArray();\n    if (byteArray == null) {\n      icon.setImageResource(R.drawable.ic_contact_picture_holo_light);\n    } else {\n      Bitmap bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length);\n      icon.setImageBitmap(bitmap);\n    }\n    result.setTag(member);\n    return result;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9912, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 87, "focalAPIEnd": 122, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.getText()", "view.setText(String)"], "useStart": [231, 465], "useEnd": [251, 487], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/msi88/Popya/tree/master/Popya/src/at/fhv/popya/application/view/SendMessageListener.java", "rawCode": "  @Override\n  public void onClick(View button) {\n\n    EditText txtMessage = (EditText) _view.findViewById(R.id.txtMessage);\n\n    // read language from settings\n    Message<Object> msg =\n        new Message<Object>(Message.LANG_EN, txtMessage.getText().toString(), Settings.getUser());\n\n    try {\n      MessagingService.enqueueMessage(msg);\n    } catch (Exception e) {\n      Log.e(getClass().toString(), \"Error sending message.\", e);\n    }\n\n    // reset textbox\n    txtMessage.setText(\"\");\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9913, "initialization": ["View view = getLayoutInflater()"], "initializationStart": [5083], "initializationEnd": [5107], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 5169, "focalAPIEnd": 5206, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "FrameLayout.addView(view)"], "useStart": [5236, 5303, 5385], "useEnd": [5275, 5340, 5416], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RudolfWeeber/eyes-free/tree/master/trunk/documentation/RockLockTutorial/RockLock_02/src/com/marvin/rocklock/RockLockActivity.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    // Start the service in case it is not already running\n    startService(new Intent(this, ScreenOnHandlerService.class));\n\n    requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);\n    getWindow().addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);\n\n    setContentView(R.layout.main);\n\n    mp = new MusicPlayer(this);\n\n    final TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\n    tm.listen(\n        new PhoneStateListener() {\n          @Override\n          public void onCallStateChanged(int state, String incomingNumber) {\n            // If the phone is not idle, immediately quit and let the\n            // default lock screen handle it.\n            if (state != TelephonyManager.CALL_STATE_IDLE) {\n              finish();\n              return;\n            }\n          }\n        },\n        PhoneStateListener.LISTEN_CALL_STATE);\n\n    unlockButton = (Button) findViewById(R.id.unlockButton);\n    unlockButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            dismissSlideUnlockScreen();\n          }\n        });\n\n    IntentFilter filter = new IntentFilter();\n    filter.addAction(Intent.ACTION_MEDIA_BUTTON);\n    filter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY);\n    registerReceiver(mediaButtonReceiver, filter);\n\n    uiAnimation = new AnimationLayer(this);\n\n    gestureOverlay =\n        new GestureOverlay(\n            this,\n            new GestureListener() {\n\n              @Override\n              public void onGestureChange(int g) {\n                isSeeking = false;\n                uiAnimation.setDirection(g);\n                switch (g) {\n                  case Gesture.UPLEFT:\n                    updateDisplayText(getString(R.string.previous_artist), mp.getPrevArtistName());\n                    break;\n                  case Gesture.UP:\n                    updateDisplayText(getString(R.string.previous_album), mp.getPrevAlbumName());\n                    break;\n                  case Gesture.UPRIGHT:\n                    updateDisplayText(getString(R.string.next_artist), mp.getNextArtistName());\n                    break;\n                  case Gesture.LEFT:\n                    updateDisplayText(getString(R.string.previous_track), mp.getPrevTrackName());\n                    break;\n                  case Gesture.CENTER:\n                    if (mp.isPlaying()) {\n                      updateDisplayText(getString(R.string.pause), mp.getCurrentSongInfo());\n                    } else {\n                      updateDisplayText(getString(R.string.play), mp.getCurrentSongInfo());\n                    }\n                    break;\n                  case Gesture.RIGHT:\n                    updateDisplayText(getString(R.string.next_track), mp.getNextTrackName());\n                    break;\n                  case Gesture.DOWNLEFT:\n                    if (seekingStopped) {\n                      updateDisplayText(getString(R.string.rewind), mp.getCurrentSongInfo());\n                      isSeeking = true;\n                      new Thread(new Seeker(-1)).start();\n                    }\n                    break;\n                  case Gesture.DOWN:\n                    updateDisplayText(getString(R.string.next_album), mp.getNextAlbumName());\n                    break;\n                  case Gesture.DOWNRIGHT:\n                    if (seekingStopped) {\n                      updateDisplayText(getString(R.string.fast_forward), mp.getCurrentSongInfo());\n                      isSeeking = true;\n                      new Thread(new Seeker(1)).start();\n                    }\n                    break;\n                }\n              }\n\n              @Override\n              public void onGestureFinish(int g) {\n                isSeeking = false;\n                uiAnimation.setDirection(-1);\n                switch (g) {\n                  case Gesture.UPLEFT:\n                    mp.prevArtist();\n                    break;\n                  case Gesture.UP:\n                    mp.prevAlbum();\n                    break;\n                  case Gesture.UPRIGHT:\n                    mp.nextArtist();\n                    break;\n                  case Gesture.LEFT:\n                    mp.prevTrack();\n                    break;\n                  case Gesture.CENTER:\n                    mp.togglePlayPause();\n                    break;\n                  case Gesture.RIGHT:\n                    mp.nextTrack();\n                    break;\n                  case Gesture.DOWN:\n                    mp.nextAlbum();\n                    break;\n                }\n                updateDisplayText(null, null);\n              }\n\n              @Override\n              public void onGestureStart(int g) {\n                poked = true;\n                isSeeking = false;\n              }\n            });\n\n    contentFrame = (FrameLayout) findViewById(R.id.contentFrame);\n    View textLayer = this.getLayoutInflater().inflate(R.layout.textlayer, null);\n    dateText = (TextView) textLayer.findViewById(R.id.dateText);\n    statusText = (TextView) textLayer.findViewById(R.id.statusText);\n    infoText = (TextView) textLayer.findViewById(R.id.infoText);\n    contentFrame.addView(uiAnimation);\n    contentFrame.addView(textLayer);\n    contentFrame.addView(gestureOverlay);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9914, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 283, "focalAPIEnd": 322, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jungilhan/recipe2/tree/master/src/com/bulgogi/recipe/adapter/BlogSearchAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n\n    if (convertView == null) {\n      convertView = inflator.inflate(R.layout.ll_blog_search_item, null);\n\n      holder = new ViewHolder();\n      holder.tvTitle = (TextView) convertView.findViewById(R.id.tv_title);\n      holder.tvBlog = (TextView) convertView.findViewById(R.id.tv_blog);\n      holder.tvDescription = (TextView) convertView.findViewById(R.id.tv_description);\n      convertView.setTag(holder);\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Item item = items.get(position);\n    holder.tvTitle.setText(Html.fromHtml(item.title));\n    holder.tvBlog.setText(item.bloggername);\n    String description = item.description.replaceAll(\"\\\\<.*?\\\\>\", \"\");\n    description = description.replaceAll(\"&.*;\", \"\");\n    holder.tvDescription.setText(description);\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9915, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 66, "focalAPIEnd": 102, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)"], "useStart": [108], "useEnd": [151], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/xiechao06/lite-mms-client/tree/master/src/com/jinheyu/lite_mms/WorkCommandFragment.java", "rawCode": "  private void _setTechReq() {\n    TextView textView = (TextView) rootView.findViewById(R.id.tech_req);\n    textView.setText(mWorkCommand.getTechReq());\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9916, "initialization": ["View view = inflate(*,*,*)"], "initializationStart": [113], "initializationEnd": [164], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 199, "focalAPIEnd": 239, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [272, 344, 416, 490, 558, 618], "useEnd": [311, 383, 455, 531, 588, 649], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/g3tsum/rb_apps_Settings/tree/master/src/com/android/settings/widgets/DeveloperPreference.java", "rawCode": "  @Override\n  protected View onCreateView(ViewGroup parent) {\n    super.onCreateView(parent);\n\n    View layout = View.inflate(getContext(), R.layout.dev_card, null);\n\n    twitterButton = (ImageView) layout.findViewById(R.id.twitter_button);\n    donateButton = (ImageView) layout.findViewById(R.id.donate_button);\n    githubButton = (ImageView) layout.findViewById(R.id.github_button);\n    googleButton = (ImageView) layout.findViewById(R.id.google_button);\n    facebookButton = (ImageView) layout.findViewById(R.id.facebook_button);\n    devName = (TextView) layout.findViewById(R.id.name);\n    photoView = (ImageView) layout.findViewById(R.id.photo);\n\n    return layout;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9917, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 98, "focalAPIEnd": 144, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)"], "useStart": [86, 214], "useEnd": [165, 261], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cse218/fbreader/tree/master/src/org/geometerplus/android/fbreader/preferences/ColorPreference.java", "rawCode": "  @Override\n  protected void onBindView(View view) {\n    super.onBindView(view);\n\n    ((TextView) view.findViewById(R.id.color_preference_title)).setText(getTitle());\n    final ZLColor color = getSavedColor();\n    view.findViewById(R.id.color_preference_widget)\n        .setBackgroundColor(color != null ? ZLAndroidColorUtil.rgb(color) : 0);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9918, "initialization": ["View view = getContentView()"], "initializationStart": [59], "initializationEnd": [75], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 176, "focalAPIEnd": 209, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.getLayoutParams()", "getArrowLeftMargin(view)"], "useStart": [236, 308, 704, 752], "useEnd": [279, 353, 727, 777], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kvite/astridclone/tree/master/greendroid/GreenDroid/src/greendroid/widget/QuickActionWidget.java", "rawCode": "  private void showArrow() {\n\n    final View contentView = getContentView();\n    final int arrowId = mIsOnTop ? R.id.gdi_arrow_down : R.id.gdi_arrow_up;\n    final View arrow = contentView.findViewById(arrowId);\n    final View arrowUp = contentView.findViewById(R.id.gdi_arrow_up);\n    final View arrowDown = contentView.findViewById(R.id.gdi_arrow_down);\n\n    if (arrowId == R.id.gdi_arrow_up) {\n      arrowUp.setVisibility(View.VISIBLE);\n      arrowDown.setVisibility(View.INVISIBLE);\n    } else if (arrowId == R.id.gdi_arrow_down) {\n      arrowUp.setVisibility(View.INVISIBLE);\n      arrowDown.setVisibility(View.VISIBLE);\n    }\n\n    ViewGroup.MarginLayoutParams param = (ViewGroup.MarginLayoutParams) arrow.getLayoutParams();\n    param.leftMargin = getArrowLeftMargin(arrow);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9919, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 244, "focalAPIEnd": 274, "followUpCheck": "view == null", "checkType": "IF", "followUpCheckExpressionStart": 280, "followUpCheckExpressionEnd": 298, "followUpCheckBlockStart": 280, "followUpCheckBlockEnd": 381, "use": ["view.setBase(*)", "view.start()"], "useStart": [387, 459], "useEnd": [453, 472], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/viv/linphone-android/tree/master/src/org/linphone/InCallActivity.java", "rawCode": "  private void registerCallDurationTimer(View v, LinphoneCall call) {\n    int callDuration = call.getDuration();\n    if (callDuration == 0 && call.getState() != State.StreamsRunning) {\n      return;\n    }\n\n    Chronometer timer = (Chronometer) v.findViewById(R.id.callTimer);\n    if (timer == null) {\n      throw new IllegalArgumentException(\"no callee_duration view found\");\n    }\n\n    timer.setBase(SystemClock.elapsedRealtime() - 1000 * callDuration);\n    timer.start();\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9920, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 96, "focalAPIEnd": 128, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [163, 221, 489, 558, 632, 898], "useEnd": [197, 261, 526, 597, 674, 940], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/PerfectButter/platform_packages_apps_Settings/tree/master/src/com/android/settings/inputmethod/SingleSpellCheckerPreference.java", "rawCode": "  @Override\n  protected void onBindView(View view) {\n    super.onBindView(view);\n    mPrefAll = view.findViewById(R.id.pref_all);\n    mRadioButton = (RadioButton) view.findViewById(R.id.pref_radio);\n    mPrefLeftButton = view.findViewById(R.id.pref_left_button);\n    mPrefLeftButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onLeftButtonClicked(arg0);\n          }\n        });\n    mTitleText = (TextView) view.findViewById(android.R.id.title);\n    mSummaryText = (TextView) view.findViewById(android.R.id.summary);\n    mSubtypeButton = (ImageView) view.findViewById(R.id.pref_right_button2);\n    mSubtypeButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onSubtypeButtonClicked(arg0);\n          }\n        });\n    mSettingsButton = view.findViewById(R.id.pref_right_button1);\n    mSettingsButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onSettingsButtonClicked(arg0);\n          }\n        });\n    updateSelectedState(mSelected);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9921, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 551, "focalAPIEnd": 579, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/irccloud/android/tree/master/src/com/irccloud/android/fragment/ServerReorderFragment.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      Server s = data.get(position);\n      View row = convertView;\n      ViewHolder holder;\n\n      if (row == null) {\n        LayoutInflater inflater = ctx.getLayoutInflater(null);\n        row = inflater.inflate(R.layout.row_reorder, null);\n\n        holder = new ViewHolder();\n        holder.background = row.findViewById(R.id.serverBackground);\n        holder.background.setFocusable(false);\n        holder.background.setEnabled(false);\n        holder.label = row.findViewById(R.id.label);\n        holder.icon = row.findViewById(R.id.icon);\n        holder.icon.setTypeface(FontAwesome.getTypeface());\n        holder.drag_handle = row.findViewById(R.id.drag_handle);\n        holder.drag_handle.setTypeface(FontAwesome.getTypeface());\n        row.setTag(holder);\n      } else {\n        holder = (ViewHolder) row.getTag();\n      }\n\n      if (s.getName() != null && s.getName().length() > 0) holder.label.setText(s.getName());\n      else holder.label.setText(s.getHostname());\n\n      if (s.getSsl() > 0) holder.icon.setText(FontAwesome.SHIELD);\n      else holder.icon.setText(FontAwesome.GLOBE);\n\n      if (s.getStatus() != null && s.getStatus().equals(\"connected_ready\")) {\n        holder.icon.setTextColor(colorScheme.bufferTextColor);\n        holder.label.setTextColor(colorScheme.bufferTextColor);\n      } else {\n        holder.icon.setTextColor(colorScheme.inactiveBufferTextColor);\n        holder.label.setTextColor(colorScheme.inactiveBufferTextColor);\n      }\n\n      holder.drag_handle.setText(FontAwesome.ARROWS);\n\n      if (getShowsDialog()) row.setBackgroundColor(colorScheme.dialogBackgroundColor);\n      else row.setBackgroundColor(colorScheme.contentBackgroundColor);\n\n      holder.label.setMinimumWidth(width);\n      return row;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9922, "initialization": ["View view = inflate(*,*)"], "initializationStart": [304], "initializationEnd": [342], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 377, "focalAPIEnd": 413, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [421, 479, 582, 853], "useEnd": [450, 516, 616, 893], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lounaspaikka/lounaspaikka/tree/master/src/fi/aalto/lounaspaikka/RestaurantsActivity.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      TextView title = null;\n      TextView detail = null;\n      ImageView i11 = null;\n      ImageView i22 = null;\n      RowData rowData = getItem(position);\n\n      if (null == convertView) {\n        convertView = mInflater.inflate(R.layout.list, null);\n      }\n      title = (TextView) convertView.findViewById(R.id.title);\n      title.setText(rowData.mTitle);\n\n      detail = (TextView) convertView.findViewById(R.id.detail);\n      detail.setText(rowData.mDetail);\n\n      i11 = (ImageView) convertView.findViewById(R.id.img);\n      // i11.setImageResource(imgid[rowData.imageNextId]);\n      i11.setImageBitmap(\n          DecodeBitmaps.decodeSampledBitmapFromResource(\n              getResources(), imgid[rowData.imageNextId], 80, 80));\n\n      i22 = (ImageView) convertView.findViewById(R.id.img_arrow);\n      // i22.setImageResource(R.drawable.arrow);\n      i22.setImageBitmap(\n          DecodeBitmaps.decodeSampledBitmapFromResource(getResources(), R.drawable.arrow, 30, 30));\n      //\n      return convertView;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9923, "initialization": ["View view = inflate(*,*)"], "initializationStart": [38], "initializationEnd": [105], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 139, "focalAPIEnd": 193, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "measureView(view)", "addHeaderView(view)", "view.getMeasuredHeight()", "view.setPadding(int,int,int,int)", "view.invalidate()", "view.setText(String)"], "useStart": [226, 308, 392, 477, 1016, 1073, 1117, 1150, 1203, 1444], "useEnd": [279, 361, 447, 531, 1036, 1095, 1144, 1197, 1223, 1469], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/comsince/myappweixin/tree/master/phoneBook/src/com/comsince/phonebook/view/pulltorefreshlistview/RefreshListView.java", "rawCode": "  private void init() {\n    mHeader = mInflater.inflate(R.layout.include_pull_to_refreshing_header, null);\n    mHtvTitle = (HandyTextView) mHeader.findViewById(R.id.refreshing_header_htv_title);\n    mHtvTime = (HandyTextView) mHeader.findViewById(R.id.refreshing_header_htv_time);\n    mIvArrow = (ImageView) mHeader.findViewById(R.id.refreshing_header_iv_arrow);\n    mIvLoading = (ImageView) mHeader.findViewById(R.id.refreshing_header_iv_loading);\n    mIvCancel = (ImageView) mHeader.findViewById(R.id.refreshing_header_iv_cancel);\n\n    mBottom = mInflater.inflate(R.layout.include_pull_to_refreshing_bottom, null);\n    mBottomLayout = (LinearLayout) mBottom.findViewById(R.id.refreshing_bottom_layout_container);\n\n    // 初始化cancel事件处理\n    mIvCancel.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View arg0) {\n            if (mOnCancelListener != null && mIsCancelable) {\n              mOnCancelListener.onCancel();\n            }\n          }\n        });\n\n    measureView(mHeader);\n    // 将刷新头加入到listview的Header上\n    addHeaderView(mHeader);\n    mHeaderHeight = mHeader.getMeasuredHeight();\n    mHeader.setPadding(0, -1 * mHeaderHeight, 0, 0);\n    mHeader.invalidate();\n\n    measureView(mBottom);\n    // 加入底部\n    addFooterView(mBottom);\n    mBottomHeight = mBottom.getMeasuredHeight();\n    mBottom.setPadding(0, -1 * mBottomHeight, 0, 0);\n    mBottom.invalidate();\n\n    // 初始化开始时基本控件值\n    mHtvTitle.setText(\"下拉刷新\");\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm\");\n    String date = format.format(new Date());\n    mHtvTime.setText(\"最后刷新: \" + date);\n\n    mPullAnimation =\n        new android.view.animation.RotateAnimation(\n            0,\n            -180,\n            RotateAnimation.RELATIVE_TO_SELF,\n            0.5f,\n            RotateAnimation.RELATIVE_TO_SELF,\n            0.5f);\n    mPullAnimation.setInterpolator(new LinearInterpolator());\n    mPullAnimation.setDuration(250);\n    mPullAnimation.setFillAfter(true);\n\n    mReverseAnimation =\n        new android.view.animation.RotateAnimation(\n            -180,\n            0,\n            RotateAnimation.RELATIVE_TO_SELF,\n            0.5f,\n            RotateAnimation.RELATIVE_TO_SELF,\n            0.5f);\n    mReverseAnimation.setInterpolator(new LinearInterpolator());\n    mReverseAnimation.setDuration(200);\n    mReverseAnimation.setFillAfter(true);\n\n    mLoadingAnimation = AnimationUtils.loadAnimation(mContext, R.anim.loading);\n\n    /** 初始化时设置可刷新 */\n    mIsRefreshable = false;\n    /** 默认状态隐藏* */\n    mState = DONE;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9924, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 274, "focalAPIEnd": 319, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ushahidi/Ushahidi_Android/tree/master/Core/src/com/ushahidi/android/app/adapters/CategorySpinnerAdater.java", "rawCode": "  public View getCustomView(int position, View convertView, ViewGroup parent) {\n\n    Widgets widget;\n    if (convertView == null) {\n      convertView = inflater.inflate(R.layout.category_spinner_row_item, null);\n      widget = new Widgets();\n      widget.title = (TextView) convertView.findViewById(R.id.category_title);\n      widget.color = (TextView) convertView.findViewById(R.id.cat_color);\n      widget.root = (LinearLayout) convertView.findViewById(R.id.root_layout);\n\n      convertView.setTag(widget);\n    } else {\n      widget = (Widgets) convertView.getTag();\n    }\n\n    if (getTag(position).getCategoryTitle() != null) {\n      widget.title.setText(getTag(position).getCategoryTitle());\n    }\n\n    // check if color is set\n    if (getTag(position).getCategoryColor() != null) {\n\n      if (TextUtils.isEmpty(getTag(position).getCategoryColor().trim())) {\n        try {\n          widget.color.setBackgroundColor(Color.parseColor(DEFAULT_COLOR));\n        } catch (IllegalArgumentException exception) {\n          log(\"Error parsing color hex\", exception);\n        }\n      } else {\n        try {\n          widget.color.setBackgroundColor(\n              Color.parseColor(getTag(position).getCategoryColor().trim()));\n        } catch (IllegalArgumentException exception) {\n          log(\"Error parsing color\", exception);\n        }\n      }\n    }\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9925, "initialization": ["View view = inflate(*,*,boolean)"], "initializationStart": [732], "initializationEnd": [819], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 862, "focalAPIEnd": 912, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.setTag(BackStackEntry)", "view.findViewById(int)", "LinearLayout.addView(view)", "view.setOnClickListener(OnClickListener)"], "useStart": [922, 970, 1020, 1119, 1153], "useEnd": [960, 986, 1074, 1143, 1194], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/frameworks_base/tree/master/core/java/android/app/FragmentBreadCrumbs.java", "rawCode": "  void updateCrumbs() {\n    FragmentManager fm = mActivity.getFragmentManager();\n    int numEntries = fm.getBackStackEntryCount();\n    int numPreEntries = getPreEntryCount();\n    int numViews = mContainer.getChildCount();\n    for (int i = 0; i < numEntries + numPreEntries; i++) {\n      BackStackEntry bse =\n          i < numPreEntries ? getPreEntry(i) : fm.getBackStackEntryAt(i - numPreEntries);\n      if (i < numViews) {\n        View v = mContainer.getChildAt(i);\n        Object tag = v.getTag();\n        if (tag != bse) {\n          for (int j = i; j < numViews; j++) {\n            mContainer.removeViewAt(i);\n          }\n          numViews = i;\n        }\n      }\n      if (i >= numViews) {\n        final View item =\n            mInflater.inflate(com.android.internal.R.layout.fragment_bread_crumb_item, this, false);\n        final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);\n        text.setText(bse.getBreadCrumbTitle());\n        text.setTag(bse);\n        if (i == 0) {\n          item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);\n        }\n        mContainer.addView(item);\n        text.setOnClickListener(mOnClickListener);\n      }\n    }\n    int viewI = numEntries + numPreEntries;\n    numViews = mContainer.getChildCount();\n    while (numViews > viewI) {\n      mContainer.removeViewAt(numViews - 1);\n      numViews--;\n    }\n    // Adjust the visibility and availability of the bread crumbs and divider\n    for (int i = 0; i < numViews; i++) {\n      final View child = mContainer.getChildAt(i);\n      // Disable the last one\n      child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);\n      if (mMaxVisible > 0) {\n        // Make only the last mMaxVisible crumbs visible\n        child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);\n        final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);\n        // Remove the divider for all but the last mMaxVisible - 1\n        leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE : View.GONE);\n      }\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9926, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 65, "focalAPIEnd": 113, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)"], "useStart": [152, 2922], "useEnd": [201, 2970], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/azapps/mirakel-android/tree/master/date-time-picker/src/com/fourmob/datetimepicker/date/DatePicker.java", "rawCode": "  private void initLayout() {\n    final View datepicker_dialog = this.layout.findViewById(R.id.datepicker_dialog);\n    this.mDayOfWeekView = (TextView) this.layout.findViewById(R.id.date_picker_header);\n    this.mMonthAndDayView = (LinearLayout) this.layout.findViewById(R.id.date_picker_month_and_day);\n    this.mMonthAndDayView.setOnClickListener(this);\n    this.mSelectedMonthTextView = (TextView) this.layout.findViewById(R.id.date_picker_month);\n\n    final ColorStateList selectorColorStates = getSelectorColorStates();\n\n    this.mSelectedMonthTextView.setTextColor(selectorColorStates);\n    this.mSelectedDayTextView = (TextView) this.layout.findViewById(R.id.date_picker_day);\n    this.mSelectedDayTextView.setTextColor(selectorColorStates);\n    this.mYearView = (TextView) this.layout.findViewById(R.id.date_picker_year);\n    this.mYearView.setTextColor(selectorColorStates);\n    this.mYearView.setOnClickListener(this);\n\n    this.mDayPickerView = new DayPickerView(this.ctx, this);\n    this.mYearPickerView = new YearPickerView(this.ctx, this);\n    this.mDayPickerDescription = getResources().getString(R.string.day_picker_description);\n    this.mYearPickerDescription = getResources().getString(R.string.year_picker_description);\n    this.mAnimator = (ViewAnimator) this.layout.findViewById(R.id.animator);\n    this.mAnimator.addView(this.mDayPickerView);\n    this.mAnimator.addView(this.mYearPickerView);\n    final AlphaAnimation inAlphaAnimation = new AlphaAnimation(0.0F, 1.0F);\n    inAlphaAnimation.setDuration(300L);\n    this.mAnimator.setInAnimation(inAlphaAnimation);\n    final AlphaAnimation outAlphaAnimation = new AlphaAnimation(1.0F, 0.0F);\n    outAlphaAnimation.setDuration(300L);\n    this.mAnimator.setOutAnimation(outAlphaAnimation);\n    this.mDoneButton = (Button) this.layout.findViewById(R.id.done);\n    this.mDoneButton.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(final View view) {\n            if (DatePicker.this.mCallBack != null) {\n              DatePicker.this.mCallBack.onDateSet(DatePicker.this, of(mCalendar));\n            }\n          }\n        });\n    this.mNoDateButton = (Button) this.layout.findViewById(R.id.dismiss);\n    this.mNoDateButton.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(final View view) {\n            if (DatePicker.this.mCallBack != null) {\n              DatePicker.this.mCallBack.onDateSet(DatePicker.this, Optional.<LocalDate>absent());\n            }\n          }\n        });\n    updateDisplay();\n    final int currentView = VIEW_DATE_PICKER_MONTH_DAY;\n    setCurrentView(currentView, true);\n    final int listPosition = -1;\n    final int listPositionOffset = 0;\n    setScroll(listPosition, currentView, listPositionOffset);\n    datepicker_dialog.setBackgroundColor(ThemeManager.getColor(R.attr.colorBackground));\n    final View header = this.layout.findViewById(R.id.datepicker_header);\n    header.setBackgroundColor(ThemeManager.getPrimaryThemeColor());\n    if (this.mDayOfWeekView != null) {\n      this.mDayOfWeekView.setBackgroundColor(ThemeManager.getPrimaryDarkThemeColor());\n      this.mDayOfWeekView.setTextColor(ThemeManager.getColor(R.attr.colorControlNormal));\n    }\n    this.mNoDateButton.setTextColor(ThemeManager.getColor(R.attr.colorTextGrey));\n    this.mDoneButton.setTextColor(ThemeManager.getColor(R.attr.colorTextGrey));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9927, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 117, "focalAPIEnd": 150, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setId(int)"], "useStart": [158, 244, 359, 483, 718], "useEnd": [207, 277, 395, 517, 746], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/codejie/EL/tree/master/src/jie/android/el/fragment/ListFragment.java", "rawCode": "    @Override\n    public void bindView(View view, Context context, Cursor cursor) {\n\n      TextView idx = (TextView) view.findViewById(R.id.textIndex);\n      idx.setText(\"ESL Podcast \" + cursor.getString(0));\n\n      TextView title = (TextView) view.findViewById(R.id.textTitle);\n      title.setText(cursor.getString(1));\n\n      TextView duration = (TextView) view.findViewById(R.id.textDuration);\n      duration.setText(Utils.formatMSec(cursor.getInt(2) * 1000));\n\n      View icon = view.findViewById(R.id.imageView1);\n      if ((cursor.getInt(3) & ListItemFlag.LAST_PLAY) == ListItemFlag.LAST_PLAY) {\n        icon.setVisibility(View.VISIBLE);\n      } else {\n        icon.setVisibility(View.INVISIBLE);\n      }\n\n      view.setId(cursor.getInt(0));\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9928, "initialization": ["View view = from(*)"], "initializationStart": [358], "initializationEnd": [400], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "view==null", "guardType": "IF {", "guardExpressionStart": 241, "guardExpressionEnd": 279, "guardBlockStart": 241, "guardBlockEnd": 614, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 541, "focalAPIEnd": 605, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["ActionMode.setCustomView(view)", "view.findViewById(int)"], "useStart": [621, 686], "useEnd": [666, 736], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cadavre/android_packages_apps_Mms/tree/master/src/com/android/mms/ui/ConversationList.java", "rawCode": "    public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n      MenuInflater inflater = getMenuInflater();\n      mSelectedThreadIds = new HashSet<Long>();\n      inflater.inflate(R.menu.conversation_multi_select_menu, menu);\n\n      if (mMultiSelectActionBarView == null) {\n        mMultiSelectActionBarView =\n            (ViewGroup)\n                LayoutInflater.from(ConversationList.this)\n                    .inflate(R.layout.conversation_list_multi_select_actionbar, null);\n\n        mSelectedConvCount =\n            (TextView) mMultiSelectActionBarView.findViewById(R.id.selected_conv_count);\n      }\n      mode.setCustomView(mMultiSelectActionBarView);\n      ((TextView) mMultiSelectActionBarView.findViewById(R.id.title))\n          .setText(R.string.select_conversations);\n      return true;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9929, "initialization": ["View view = inflate(*,*)"], "initializationStart": [275], "initializationEnd": [322], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 487, "focalAPIEnd": 534, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [542, 975, 1338, 1530, 1740, 1949], "useEnd": [604, 1023, 1385, 1579, 1787, 1996], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pronoschallenge/pronoschallenge-android/tree/master/src/fr/pronoschallenge/classement/club/ClassementClubAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View view = convertView;\n\n    if (view == null) {\n      LayoutInflater li =\n          (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      view = li.inflate(R.layout.classement_club_item, null);\n    }\n    ClassementClubEntry classementClubEntry = getItem(position);\n    if (classementClubEntry != null) {\n\n      TextView classementClubEntryClub = (TextView) view.findViewById(R.id.classementClubEntryClub);\n      classementClubEntryClub.setText(classementClubEntry.getClub());\n\n      if (classementClubEntry.getClub().compareTo(\"...\") != 0) {\n\n        if (position == 0) {\n          intPlacePrecedent = 0;\n        } else {\n          ClassementClubEntry classementClubEntryPrec = getItem(position - 1);\n          intPlacePrecedent = classementClubEntryPrec.getPlace();\n        }\n\n        TextView classementClubEntryPlace =\n            (TextView) view.findViewById(R.id.classementClubEntryPlace);\n        if (classementClubEntry.getPlace() == intPlacePrecedent) {\n          classementClubEntryPlace.setText(\"\");\n        } else {\n          classementClubEntryPlace.setText(String.valueOf(classementClubEntry.getPlace()));\n        }\n\n        AsyncImageView classementClubEntryLogo =\n            (AsyncImageView) view.findViewById(R.id.classementClubEntryLogo);\n        classementClubEntryLogo.setUrl(classementClubEntry.getUrlLogo());\n\n        TextView classementClubEntryPoints =\n            (TextView) view.findViewById(R.id.classementClubEntryPoints);\n        classementClubEntryPoints.setText(String.valueOf(classementClubEntry.getPoints()));\n\n        TextView classementClubEntryJoue =\n            (TextView) view.findViewById(R.id.classementClubEntryJoue);\n        classementClubEntryJoue.setText(String.valueOf(classementClubEntry.getMatchJoue()));\n\n        TextView classementClubEntryDiff =\n            (TextView) view.findViewById(R.id.classementClubEntryDiff);\n        classementClubEntryDiff.setText(String.valueOf(classementClubEntry.getDiff()));\n      }\n    }\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9930, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 299, "focalAPIEnd": 343, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AndlyticsProject/andlytics/tree/master/src/com/github/andlyticsproject/ExportActivity.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n\n      ViewHolder holder;\n\n      if (convertView == null) {\n\n        convertView = layoutInflater.inflate(R.layout.export_list_item, null);\n\n        holder = new ViewHolder();\n        holder.name = (TextView) convertView.findViewById(R.id.main_app_name);\n        holder.packageName = (TextView) convertView.findViewById(R.id.main_package_name);\n        holder.icon = (ImageView) convertView.findViewById(R.id.main_app_icon);\n        holder.row = (RelativeLayout) convertView.findViewById(R.id.main_app_row);\n        holder.checkbox = (CheckBox) convertView.findViewById(R.id.ghost_checkbox);\n        convertView.setTag(holder);\n\n      } else {\n        holder = (ViewHolder) convertView.getTag();\n      }\n\n      final AppInfo appDownloadInfo = getItem(position);\n      holder.name.setText(appDownloadInfo.getName());\n      holder.packageName.setText(appDownloadInfo.getPackageName());\n\n      final String packageName = appDownloadInfo.getPackageName();\n\n      holder.checkbox.setChecked(exportPackageNames.contains(packageName));\n\n      final File iconFile = new File(cacheDir + \"/\" + appDownloadInfo.getIconName());\n\n      holder.icon.setTag(TAG_IMAGE_REF, packageName);\n      if (inMemoryCache.contains(packageName)) {\n\n        holder.icon.setImageBitmap(inMemoryCache.get(packageName));\n        holder.icon.clearAnimation();\n\n      } else {\n        holder.icon.setImageDrawable(null);\n        holder.icon.clearAnimation();\n        new GetCachedImageTask(holder.icon, appDownloadInfo.getPackageName())\n            .execute(new File[] {iconFile});\n      }\n\n      holder.row.setOnClickListener(\n          new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n\n              CheckBox checkbox = ((CheckBox) (((ViewGroup) v).findViewById(R.id.ghost_checkbox)));\n              checkbox.setChecked(!checkbox.isChecked());\n\n              if (checkbox.isChecked()) {\n                exportPackageNames.add(appDownloadInfo.getPackageName());\n              } else {\n                exportPackageNames.remove(appDownloadInfo.getPackageName());\n              }\n            }\n          });\n\n      holder.checkbox.setTag(packageName);\n      holder.checkbox.setOnClickListener(\n          new CheckBox.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n              boolean checked = ((CheckBox) v).isChecked();\n              if (checked) {\n                exportPackageNames.add(appDownloadInfo.getPackageName());\n              } else {\n                exportPackageNames.remove(appDownloadInfo.getPackageName());\n              }\n            }\n          });\n\n      return convertView;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9931, "initialization": ["View view = getLastView()"], "initializationStart": [74], "initializationEnd": [87], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 140, "focalAPIEnd": 177, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)"], "useStart": [688], "useEnd": [753], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fraga/montransit/tree/master/MonTransit/src/org/montrealtransit/android/activity/v4/BusTabClosestStopsFragment.java", "rawCode": "  private void showAll() {\n    MyLog.v(TAG, \"showAll()\");\n    View view = getLastView();\n    Activity activity = getLastActivity();\n    if (view.findViewById(R.id.closest_stops) == null) { // IF NOT present/inflated DO\n      ((ViewStub) view.findViewById(R.id.closest_stops_stub)).inflate(); // inflate\n    }\n    this.adapter = new POIArrayAdapter(activity);\n    ListView closestStopsListView = (ListView) view.findViewById(R.id.closest_stops);\n    this.adapter.setListView(closestStopsListView);\n    if (this.adapter.getPois() == null) {\n      showClosestStops(view, activity);\n      return;\n    }\n    if (view.findViewById(R.id.closest_stops) != null) { // IF present/inflated DO\n      view.findViewById(R.id.closest_stops).setVisibility(View.VISIBLE); // show\n    }\n    // IF location updates are not already enabled DO\n    this.locationUpdatesEnabled =\n        LocationUtils.enableLocationUpdatesIfNecessary(\n            activity, this, this.locationUpdatesEnabled, this.paused);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9932, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 379, "focalAPIEnd": 414, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ninetwozero/BF3-Battlelog/tree/master/src/com/ninetwozero/battlelog/fragments/MenuFragment.java", "rawCode": "  public Dialog generateDialogCompare(final Context context, final View view) {\n\n    // Attributes\n    final AlertDialog.Builder builder = new AlertDialog.Builder(context);\n    final LayoutInflater inflater =\n        (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    final View layout =\n        inflater.inflate(R.layout.dialog_compare, (ViewGroup) view.findViewById(R.id.dialog_root));\n\n    // Set the title and the view\n    builder.setTitle(R.string.label_compare_bs);\n    builder.setView(layout);\n\n    // Grab the fields\n    final EditText fieldUsername = (EditText) layout.findViewById(R.id.field_username);\n\n    // Dialog options\n    builder.setNegativeButton(\n        android.R.string.cancel,\n        new DialogInterface.OnClickListener() {\n\n          public void onClick(DialogInterface dialog, int whichButton) {\n\n            dialog.dismiss();\n          }\n        });\n\n    builder.setPositiveButton(\n        android.R.string.ok,\n        new DialogInterface.OnClickListener() {\n\n          public void onClick(DialogInterface dialog, int which) {\n\n            if (!fieldUsername.getText().toString().equals(\"\")) {\n\n              new AsyncFetchDataToCompare(context, SessionKeeper.getProfileData())\n                  .execute(fieldUsername.getText().toString());\n\n            } else {\n\n              Toast.makeText(context, R.string.general_empty_user, Toast.LENGTH_SHORT).show();\n            }\n          }\n        });\n\n    // Padding fix\n    AlertDialog theDialog = builder.create();\n    theDialog.setView(layout, 0, 0, 0, 0);\n    return theDialog;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9933, "initialization": ["View view = from(*)"], "initializationStart": [147], "initializationEnd": [191], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 305, "focalAPIEnd": 339, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setImageUrl(*,*,*)", "view.findViewById(int)"], "useStart": [405, 599], "useEnd": [559, 633], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openproject/world/tree/master/floworld/src/com/tianxia/app/floworld/appreciate/AppreciateLatestActivity.java", "rawCode": "  @Override\n  protected View getView(int position, View convertView) {\n    View view = convertView;\n    if (view == null) {\n      view =\n          LayoutInflater.from(getApplicationContext())\n              .inflate(R.layout.appreciate_latest_list_item, null);\n    }\n\n    mItemImageView = (SmartImageView) view.findViewById(R.id.item_image);\n    if (listData != null && position < listData.size()) {\n      mItemImageView.setImageUrl(\n          listData.get(position).thumbnail,\n          R.drawable.app_download_fail,\n          R.drawable.app_download_loading);\n    }\n\n    mItemTextView = (TextView) view.findViewById(R.id.item_title);\n    if (listData.get(position).prefix != null && !\"\".equals(listData.get(position).prefix)) {\n      mItemTextView.setText(listData.get(position).prefix + \":\" + listData.get(position).title);\n    } else {\n      mItemTextView.setText(listData.get(position).title);\n    }\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9934, "initialization": ["View view = inflate(*,ViewGroup,boolean)"], "initializationStart": [141], "initializationEnd": [199], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 407, "focalAPIEnd": 443, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["download(*,view)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [451, 581, 724, 871, 998, 1144, 1270], "useEnd": [527, 619, 752, 899, 1026, 1181, 1304], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applicake/Beandroid/tree/master/Beanstalk Android Client/src/com/applicake/beanstalkclient/adapters/ChangesetAdapter.java", "rawCode": "  public View getView(int position, View convertView, ViewGroup parent) {\n    View view = convertView;\n\n    if (view == null) {\n      view = mInflater.inflate(R.layout.dashboard_entry, parent, false);\n    }\n\n    Changeset changeset = changesetArray.get(position);\n    Repository repository = repoMap.get(changeset.getRepositoryId());\n\n    if (changeset != null) {\n      ImageView userGravatar = (ImageView) view.findViewById(R.id.userGravatar);\n      GravatarDowloader.getInstance().download(changeset.getEmail(), userGravatar);\n\n      TextView repositoryNameTextView = (TextView) view.findViewById(R.id.reposiotryName);\n      repositoryNameTextView.setText(repository.getTitle());\n\n      TextView dateTextView = (TextView) view.findViewById(R.id.date);\n      dateTextView.setText(dateFormatter.format(changeset.getTime()));\n\n      TextView userNameTextView = (TextView) view.findViewById(R.id.hash);\n      userNameTextView.setText(changeset.getAuthor());\n\n      TextView timeTextView = (TextView) view.findViewById(R.id.time);\n      timeTextView.setText(timeFormatter.format(changeset.getTime()));\n\n      TextView messageTextView = (TextView) view.findViewById(R.id.commitMessage);\n      messageTextView.setText(changeset.getMessage());\n\n      View colorLabel = (View) view.findViewById(R.id.colorLabel);\n      colorLabel.getBackground().setLevel(repository.getColorLabelNo());\n    }\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9935, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 349, "focalAPIEnd": 416, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wanglu0919/chianwuxi_android/tree/master/chinaw/src/com/wuxi/app/fragment/homepage/mygoverinteractpeople/GIPSuggestPeopleWill.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      ViewHolder viewHolder = null;\n      if (convertView == null) {\n        convertView = mInflater.inflate(R.layout.gip_suggest_peopelwill_listview_item, null);\n\n        viewHolder = new ViewHolder();\n\n        viewHolder.title_text =\n            (TextView) convertView.findViewById(R.id.gip_suggest_peoplewill_listitem_tile);\n        viewHolder.beginTime_text =\n            (TextView) convertView.findViewById(R.id.gip_suggest_peoplewill_textview_begintime);\n        viewHolder.endTime_text =\n            (TextView) convertView.findViewById(R.id.gip_suggest_peoplewill_textview_endtime);\n        viewHolder.depName_text =\n            (TextView) convertView.findViewById(R.id.gip_suggest_peoplewill_textview_depname);\n\n        convertView.setTag(viewHolder);\n      } else {\n        viewHolder = (ViewHolder) convertView.getTag();\n      }\n      viewHolder.title_text.setText(politics.get(position).getTitle());\n      viewHolder.beginTime_text.setText(politics.get(position).getBeginTime());\n      viewHolder.endTime_text.setText(politics.get(position).getEndTime());\n      return convertView;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9936, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 106, "focalAPIEnd": 131, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)"], "useStart": [138], "useEnd": [160], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/serious198706/DFCarCheckerProject/tree/master/DFCarChecker/src/main/java/com/df/service/Helper.java", "rawCode": "  public static void setEditText(View view, int editId, String text) {\n    EditText editText = (EditText) view.findViewById(editId);\n\n    editText.setText(text);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9937, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.getContext()"], "configurationStart": [249], "configurationEnd": [267], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 383, "focalAPIEnd": 418, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.getContext()", "view.getContext()", "view.setTypeface(Typeface)", "view.getContext()", "view.getContext()"], "useStart": [463, 533, 634, 730, 787, 972, 2861], "useEnd": [499, 568, 652, 748, 812, 990, 2879], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mevansjr/FSO/tree/master/APD 2/QuoteMe v3.0/QuoteMe/src/com/markevansjr/quoteme/AddFragmentTab.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\n    _view = inflater.inflate(R.layout.add_frag, container, false);\n\n    // Check for User\n    _user = FileStuff.readStringFile(_view.getContext(), \"userName\", false);\n    Log.i(\"USER HOME\", _user);\n\n    // Set Elements\n    final EditText quoteText = (EditText) _view.findViewById(R.id.edit_quote);\n    final EditText authorText = (EditText) _view.findViewById(R.id.edit_author);\n    Button submitBtn = (Button) _view.findViewById(R.id.submit_btn);\n\n    // Set Typeface\n    Typeface tf = Typeface.createFromAsset(_view.getContext().getAssets(), \"fonts/m-reg.ttf\");\n    Typeface tf2 = Typeface.createFromAsset(_view.getContext().getAssets(), \"fonts/m-bold.ttf\");\n    quoteText.setTypeface(tf);\n    authorText.setTypeface(tf);\n    submitBtn.setTypeface(tf2);\n\n    // Check for Connectivity\n    ConnectivityManager connec =\n        (ConnectivityManager) _view.getContext().getSystemService(Context.CONNECTIVITY_SERVICE);\n    if (connec != null && (connec.getNetworkInfo(1).isAvailable() == true)\n        || (connec.getNetworkInfo(0).isAvailable() == true)) {\n\n      submitBtn.setOnClickListener(\n          new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n              InputMethodManager imm =\n                  (InputMethodManager)\n                      _view.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);\n              imm.hideSoftInputFromWindow(quoteText.getWindowToken(), 0);\n              imm.hideSoftInputFromWindow(authorText.getWindowToken(), 0);\n\n              if (quoteText.getText().toString().equals(\"\")\n                  || authorText.getText().toString().equals(\"\")) {\n                Toast toast =\n                    Toast.makeText(\n                        _view.getContext(), \"CHECK QUOTE AND AUTHOR FIELDS!\", Toast.LENGTH_SHORT);\n                toast.show();\n              } else {\n                ParseObject savedFavObject = new ParseObject(_user);\n                savedFavObject.put(\"savedQuote\", '\"' + quoteText.getText().toString() + '\"');\n                savedFavObject.put(\"savedAuthor\", authorText.getText().toString());\n                savedFavObject.saveInBackground();\n                ParseObject savedToList = new ParseObject(\"ListOfQuotes\");\n                savedToList.put(\"quote\", '\"' + quoteText.getText().toString() + '\"');\n                savedToList.put(\"author\", authorText.getText().toString());\n                savedToList.saveInBackground();\n                Toast toast = Toast.makeText(_view.getContext(), \"QUOTE SAVED\", Toast.LENGTH_SHORT);\n                toast.show();\n                quoteText.setText(\"\");\n                authorText.setText(\"\");\n              }\n            }\n          });\n\n    } else {\n      Toast toast = Toast.makeText(_view.getContext(), \"NO CONNECTION\", Toast.LENGTH_SHORT);\n      toast.show();\n    }\n\n    return _view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9938, "initialization": ["View view = LayoutInflater.inflate(int,ViewGroup,boolean)"], "initializationStart": [190], "initializationEnd": [232], "hasTryCatch": 1, "exceptionType": "ClassCastException", "exceptionHandlingCall": ["e(String,String)", "new IllegalStateException(String,*)"], "tryExpressionStart": 284, "tryExpressionEnd": 288, "tryBlockStart": 284, "tryBlockEnd": 793, "catchExpressionStart": 580, "catchExpressionEnd": 609, "catchBlockStart": 580, "catchBlockEnd": 793, "exceptionHandlingCallStart": [617, 700], "exceptionHandlingCallEnd": [686, 786], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(id==0)", "guardType": "IF {", "guardExpressionStart": 296, "guardExpressionEnd": 314, "guardBlockStart": 296, "guardBlockEnd": 573, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 537, "focalAPIEnd": 564, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.setText(String)"], "useStart": [873, 927], "useEnd": [906, 956], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zwaldowski/zw-schoolwork/tree/master/CS 2340/ProjectTeamRocket/FindMyThings/src/edu/gatech/oad/rocket/findmythings/list/ArrayListAdapter.java", "rawCode": "  private View createViewFromResource(\n      int position, View convertView, ViewGroup parent, int resource) {\n    View view;\n    TextView text;\n\n    if (convertView == null) {\n      view = mInflater.inflate(resource, parent, false);\n    } else {\n      view = convertView;\n    }\n\n    try {\n      if (mFieldId == 0) {\n        // If no custom field is assigned, assume the whole resource is a TextView\n        text = (TextView) view;\n      } else {\n        // Otherwise, find the TextView field within the layout\n        text = (TextView) view.findViewById(mFieldId);\n      }\n    } catch (ClassCastException e) {\n      Log.e(\"ArrayAdapter\", \"You must supply a resource ID for a TextView\");\n      throw new IllegalStateException(\"ArrayAdapter requires the resource ID to be a TextView\", e);\n    }\n\n    T item = getItem(position);\n    if (item instanceof CharSequence) {\n      text.setText((CharSequence) item);\n    } else {\n      text.setText(item.toString());\n    }\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9939, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 450, "focalAPIEnd": 511, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/PWrGitHub194238/project2013-2014/tree/master/Android MultiPlay/src/com/android/extendedWidgets/lists/ExplorerApplicationList.java", "rawCode": "  public View getView(int position, View convertView, ViewGroup parent) {\n\n    ViewHolderPattern view_holder;\n\n    if (convertView == null) {\n      LayoutInflater inflater =\n          (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = inflater.inflate(R.layout.list_explorer_application, parent, false);\n\n      view_holder = new ViewHolderPattern();\n      view_holder.application_icon =\n          (ImageView) convertView.findViewById(R.id.list_explorer_application_icon);\n      view_holder.application_name =\n          (TextView) convertView.findViewById(R.id.list_explorer_application_name);\n\n      convertView.setTag(view_holder);\n    } else {\n      view_holder = (ViewHolderPattern) convertView.getTag();\n    }\n\n    view_holder.setElement(data[position]);\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9940, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 100, "focalAPIEnd": 132, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)"], "useStart": [100], "useEnd": [160], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/packages_apps_Settings/tree/master/src/com/android/settings/vpn2/VpnDialog.java", "rawCode": "  @Override\n  public void onClick(View showOptions) {\n    showOptions.setVisibility(View.GONE);\n    mView.findViewById(R.id.options).setVisibility(View.VISIBLE);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9941, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 116, "focalAPIEnd": 150, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setImageResource(*)", "view.setImageResource(*)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [184, 251, 359, 952, 2438, 2739, 3086, 3305, 3525, 3762, 3988, 4623], "useEnd": [240, 310, 391, 984, 2478, 2771, 3120, 3341, 3559, 3792, 4018, 4656], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kodamirmo/Lost-Found/tree/master/LostAndFound/src/com/pawhub/lostandfound/views/ReportView.java", "rawCode": "  private void generateChartGeneral(View v) {\n\n    // ////// Alert\n    final ImageView imageViewAlert = (ImageView) v.findViewById(R.id.ivChart_Alert);\n    if (reportObject.isAlert()) imageViewAlert.setImageResource(R.drawable.alert_active);\n    else imageViewAlert.setImageResource(R.drawable.menu_alert_icon);\n\n    LinearLayout layoutAlert = (LinearLayout) v.findViewById(R.id.layoutAlert);\n\n    layoutAlert.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            vibe.vibrate(80); // 80 represents the milliseconds\n            reportObject.changeAlert();\n            if (reportObject.isAlert()) imageViewAlert.setImageResource(R.drawable.alert_active);\n            else imageViewAlert.setImageResource(R.drawable.menu_alert_icon);\n          }\n        });\n\n    // /////////////////////////////////////////////////////\n\n    // ///Share\n    LinearLayout layoutShare = (LinearLayout) v.findViewById(R.id.layoutShare);\n\n    layoutShare.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            parentV = v;\n            v.setEnabled(false);\n            vibe.vibrate(80); // 80 represents the milliseconds\n            AsyncTask<Void, View, Void> task =\n                new AsyncTask<Void, View, Void>() {\n                  @Override\n                  protected void onPreExecute() {\n                    pd = new ProgressDialog(inflater.getContext());\n                    pd.setTitle(\"Procesando...\");\n                    pd.setMessage(\"Espera por favor\");\n                    pd.setCancelable(false);\n                    pd.setIndeterminate(true);\n                    pd.show();\n                  }\n\n                  @Override\n                  protected Void doInBackground(Void... params) {\n                    if (reportObject.getHasPicture()) {\n                      shareIntentImage(parentV);\n                    } else {\n                      shareIntentText(parentV);\n                    }\n                    return null;\n                  }\n\n                  @Override\n                  protected void onPostExecute(Void result) {\n                    if (pd != null) {\n                      pd.dismiss();\n                    }\n                  }\n                };\n            task.execute((Void[]) null);\n          }\n        });\n\n    // /////// Leer más text\n    TextView leerMas = (TextView) v.findViewById(R.id.leerMasDetailChart2);\n    leerMas.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            detailsIntent();\n          }\n        });\n\n    // //// Intent for LinearMain\n    LinearLayout linearInten = (LinearLayout) v.findViewById(R.id.linearmain2);\n    linearInten.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            detailsIntent();\n          }\n        });\n\n    // /////////////////////////////////////////////////////\n\n    // ///// Num of comments\n    TextView tvNumComents = (TextView) v.findViewById(R.id.tvNumComments);\n    tvNumComents.setText(\"\" + reportObject.getNumComments());\n\n    // /////////////////////////////////////////////////////\n\n    // /// User Name\n    TextView tvUserName = (TextView) v.findViewById(R.id.txtUserNameMain);\n    tvUserName.setText(reportObject.getUserName());\n    // //////////////////////////////////////////////////////\n\n    // /// Type report text\n    TextView tvTypeReport = (TextView) v.findViewById(R.id.reportTypeLbl);\n    tvTypeReport.setText(getTitleReport(reportObject.getTypeReport()));\n    // /////////////////////////////////////////////////////\n\n    // ////// Image Icon\n    ImageView imageViewIcon = (ImageView) v.findViewById(R.id.titleIcon);\n    imageViewIcon.setImageResource(getIcon(reportObject.getTypeReport()));\n    // /////////////////////////////////////////////////////\n\n    // //////Resolve\n    TextView tvResolve = (TextView) v.findViewById(R.id.tvResolve);\n    if (reportObject.getTypeReport() == Report.CAUSE_ABUSE)\n      tvResolve.setTextColor(Color.parseColor(\"#63C2D0\"));\n    else if (reportObject.getTypeReport() == Report.CAUSE_FOUND)\n      tvResolve.setTextColor(Color.parseColor(\"#B71C4E\"));\n    else if (reportObject.getTypeReport() == Report.CAUSE_ACCIDENT)\n      tvResolve.setTextColor(Color.parseColor(\"#B71C4E\"));\n    if (reportObject.isResolve()) tvResolve.setText(\" - ¡Resuelto!\");\n    else tvResolve.setText(\"\");\n\n    // /////////////////////////////////////////////////////\n\n    // ///User message\n    TextView tvUserShortMessage = (TextView) v.findViewById(R.id.userShortMsg);\n    tvUserShortMessage.setText(reportObject.getComments());\n    // /////////////////////////////////////////////////////\n\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9942, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 418, "focalAPIEnd": 455, "followUpCheck": "view != null", "checkType": "IF", "followUpCheckExpressionStart": 461, "followUpCheckExpressionEnd": 481, "followUpCheckBlockStart": 461, "followUpCheckBlockEnd": 515, "use": ["view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [482, 552, 726, 879, 1041, 1111, 1616], "useEnd": [514, 588, 764, 913, 1076, 1145, 1653], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/defrex/Connectsy-Android/tree/master/src/com/connectsy2/events/EventRenderer.java", "rawCode": "  private void render() {\n\n    final OnClickListener userClick =\n        new View.OnClickListener() {\n          public void onClick(View v) {\n            Intent i = new Intent(Intent.ACTION_VIEW);\n            i.setType(\"vnd.android.cursor.item/vnd.connectsy.user\");\n            i.putExtra(\"com.connectsy2.user.username\", event.creator);\n            context.startActivity(i);\n          }\n        };\n\n    View loading = view.findViewById(R.id.event_loading);\n    if (loading != null) loading.setVisibility(View.GONE);\n\n    ImageView avatar = (ImageView) view.findViewById(R.id.event_avatar);\n    avatar.setOnClickListener(userClick);\n    AvatarFetcher.download(event.creator, avatar, false);\n\n    TextView username = (TextView) view.findViewById(R.id.event_username);\n    username.setText(event.creator);\n    username.setOnClickListener(userClick);\n\n    TextView what = (TextView) view.findViewById(R.id.event_what);\n    if (event.what != null && what != null) what.setText(event.what);\n\n    if (!truncate) {\n      TextView where = (TextView) view.findViewById(R.id.event_where);\n      TextView when = (TextView) view.findViewById(R.id.event_when);\n      if (event.where != null) where.setText(Html.fromHtml(\"<b>where:</b> \" + event.where));\n      // where.setText(\"where: \"+ event.where);\n      else where.setVisibility(TextView.GONE);\n      if (event.when != 0)\n        // when.setText(\"when: \"+ DateUtils.formatTimestamp(event.when));\n        when.setText(Html.fromHtml(\"<b>when:</b> \" + DateUtils.formatTimestamp(event.when)));\n      else when.setVisibility(TextView.GONE);\n    }\n    TextView created = (TextView) view.findViewById(R.id.event_created);\n    created.setText(\"Created \" + DateUtils.formatTimestamp(event.created));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9943, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 68, "focalAPIEnd": 109, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)"], "useStart": [140, 215], "useEnd": [187, 259], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dstucki/RadioTour/tree/master/src/ch/hsr/sa/radiotour/fragments/AdminFragment.java", "rawCode": "  private void assignTextFields(View view) {\n    start = (EditText) view.findViewById(R.id.edtxt_start_stage);\n    destination = (EditText) view.findViewById(R.id.edtxt_destination_stage);\n    distance = (EditText) view.findViewById(R.id.edtxt_distance_stage);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9944, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 639, "focalAPIEnd": 688, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "View.setLayoutParams(view)", "ListView.addFooterView(view)"], "useStart": [768, 768, 896], "useEnd": [817, 841, 927], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/k-kojak/rgai.android.message.logger/tree/master/src/hu/rgai/android/test/MainActivity.java", "rawCode": "  /** Handles LoadMore button press. */\n  public static void loadMoreMessage() {\n    int coolDown = 5; // sec\n    if (lastLoadMoreEvent == null\n        || lastLoadMoreEvent.getTime() + coolDown * 1000 < new Date().getTime()) {\n      Intent service = new Intent(instance, MainService.class);\n      service.putExtra(\"load_more\", true);\n      instance.startService(service);\n      lastLoadMoreEvent = new Date();\n\n      if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n        // getting height of load button\n        LinearLayout.LayoutParams params =\n            (LinearLayout.LayoutParams)\n                loadIndicator.findViewById(R.id.pbHeaderProgress).getLayoutParams();\n        params.height = loadMoreButton.getHeight();\n        loadIndicator.findViewById(R.id.pbHeaderProgress).setLayoutParams(params);\n        lv.removeFooterView(loadMoreButton);\n        lv.addFooterView(loadIndicator);\n        isLoading = true;\n      } else {\n        Toast.makeText(instance, \"Loading more...\", Toast.LENGTH_LONG).show();\n      }\n    } else {\n      Log.d(\"rgai\", \"@@@skipping load button press for \" + coolDown + \" sec\");\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9945, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 163, "focalAPIEnd": 219, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.addView(TableRow)"], "useStart": [672], "useEnd": [704], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/HawaiianNinja/RoseHulman-Android-App/tree/master/RoseHulman-Android-App/src/awesome/app/activity/ScheduleLookupActivity.java", "rawCode": "  private void makeClassDataTable(ArrayList<ScheduleData> classList) {\n    reinflateScheduleScrollLayout();\n    TableLayout classDataTable =\n        (TableLayout) scheduleDataScrollView.findViewById(R.id.classDataTable);\n    for (ScheduleData classData : classList) {\n      TableRow tableRow = new TableRow(this);\n      tableRow.addView(getConfiguredTextView(classData.classNumber));\n      tableRow.addView(getConfiguredTextView(classData.className));\n      tableRow.addView(getConfiguredTextView(classData.instructor));\n      tableRow.addView(getConfiguredTextView(classData.GetMeetingString()));\n      tableRow.addView(getConfiguredTextView(classData.finalData));\n      classDataTable.addView(tableRow);\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9946, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 527, "focalAPIEnd": 568, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [527, 599, 687, 754, 1269, 1379, 1379, 1464, 1536, 1602], "useEnd": [593, 656, 720, 789, 1326, 1420, 1448, 1503, 1569, 1637], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/packages_apps_Settings/tree/master/src/com/android/settings/wifi/WifiSettingsForSetupWizardXL.java", "rawCode": "  /**\n   * Called before security fields are correctly set by {@link WifiConfigController}.\n   *\n   * @param view security field view\n   * @param accessPointSecurity type of security. e.g. AccessPoint.SECURITY_NONE\n   * @return true when it is ok for the caller to init security fields. false when all security\n   *     fields are managed by this method, and thus the caller shouldn't touch them.\n   */\n  /* package */ boolean initSecurityFields(View view, int accessPointSecurity) {\n    // Reset all states tweaked below.\n    view.findViewById(R.id.eap_not_supported).setVisibility(View.GONE);\n    view.findViewById(R.id.eap_not_supported_for_add_network).setVisibility(View.GONE);\n    view.findViewById(R.id.ssid_text).setVisibility(View.VISIBLE);\n    view.findViewById(R.id.ssid_layout).setVisibility(View.VISIBLE);\n\n    if (accessPointSecurity == AccessPoint.SECURITY_EAP) {\n      setPaddingVisibility(View.VISIBLE);\n      hideSoftwareKeyboard();\n\n      // In SetupWizard for XLarge screen, we don't have enough space for showing\n      // configurations needed for EAP. We instead disable the whole feature there and let\n      // users configure those networks after the setup.\n      if (view.findViewById(R.id.type_ssid).getVisibility() == View.VISIBLE) {\n        view.findViewById(R.id.eap_not_supported_for_add_network).setVisibility(View.VISIBLE);\n      } else {\n        view.findViewById(R.id.eap_not_supported).setVisibility(View.VISIBLE);\n      }\n      view.findViewById(R.id.security_fields).setVisibility(View.GONE);\n      view.findViewById(R.id.ssid_text).setVisibility(View.GONE);\n      view.findViewById(R.id.ssid_layout).setVisibility(View.GONE);\n      onEapNetworkSelected();\n\n      // This method did init security fields by itself. The caller must not do it.\n      return false;\n    }\n\n    mConnectButton.setVisibility(View.VISIBLE);\n    setPaddingVisibility(View.GONE);\n\n    // In \"add network\" flow, we'll see multiple initSecurityFields() calls with different\n    // accessPointSecurity variable. We want to show software keyboard conditionally everytime\n    // when this method is called.\n    if (mWifiConfig != null) {\n      if (accessPointSecurity == AccessPoint.SECURITY_PSK\n          || accessPointSecurity == AccessPoint.SECURITY_WEP) {\n        mWifiConfig.requestFocusAndShowKeyboard(R.id.password);\n      } else {\n        mWifiConfig.requestFocusAndShowKeyboard(R.id.ssid);\n      }\n    }\n\n    // Let the caller init security fields.\n    return true;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9947, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 92, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setAdapter(AlbumsAdapter)", "view.setOnItemClickListener(*)"], "useStart": [130, 161], "useEnd": [155, 194], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/photo/mobile-android/tree/master/app/src/com/trovebox/android/app/AlbumsFragment.java", "rawCode": "  void refresh(View v) {\n    mAdapter = new AlbumsAdapter();\n    ListView list = (ListView) v.findViewById(R.id.list_albums);\n    list.setAdapter(mAdapter);\n    list.setOnItemClickListener(this);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9948, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 533, "focalAPIEnd": 560, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jonasberglund/skrubb_DAT255/tree/master/H-sektionen/src/se/chalmers_h/h_sektionen/adapters/ContactCardArrayAdapter.java", "rawCode": "  /**\n   * Fills a row in the ListView with data.\n   *\n   * @param position The row number\n   * @param convertView\n   * @param parent The parent view\n   */\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n\n    View row = convertView;\n    ContactCardHolder holder = null;\n\n    LayoutInflater inflater = ((Activity) context).getLayoutInflater();\n\n    if (row == null) {\n      row = inflater.inflate(resource, parent, false);\n\n      holder = new ContactCardHolder();\n\n      holder.name = (TextView) row.findViewById(R.id.name);\n      holder.pos = (TextView) row.findViewById(R.id.position);\n      holder.email = (TextView) row.findViewById(R.id.email);\n      holder.picture = (ImageView) row.findViewById(R.id.picture);\n      holder.phoneNumber = (TextView) row.findViewById(R.id.phone_number);\n\n      row.setTag(holder);\n\n    } else {\n      holder = (ContactCardHolder) row.getTag();\n    }\n\n    ContactCard card = contactCards.get(position);\n    holder.name.setText(card.getName());\n    holder.pos.setText(card.getPosition());\n    holder.email.setText(card.getEmail());\n    holder.phoneNumber.setText(card.getPhoneNumber());\n    holder.picture.setImageBitmap(card.getPic());\n\n    return row;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9949, "initialization": ["View view = Activity.getLayoutInflater()"], "initializationStart": [123], "initializationEnd": [151], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 299, "focalAPIEnd": 352, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setText(String)", "view.getBackground()"], "useStart": [395, 506, 568, 614], "useEnd": [449, 562, 608, 642], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ImaginationForPeople/android/tree/master/src/org/imaginationforpeople/android2/adapter/ProjectsGridAdapter.java", "rawCode": "  public View getView(int position, View convertView, ViewGroup parent) {\n    if (convertView == null)\n      convertView = activity.getLayoutInflater().inflate(R.layout.projectslist_item, parent, false);\n\n    I4pProjectTranslation project = getItem(position);\n    TextView projectTitle = (TextView) convertView.findViewById(R.id.projectslist_item_text);\n    ImageView projectImage = (ImageView) convertView.findViewById(R.id.projectslist_item_image);\n    ProgressBar projectLoading =\n        (ProgressBar) convertView.findViewById(R.id.projectslist_item_loading);\n    projectTitle.setText(project.getTitle());\n    projectTitle.getBackground().setAlpha(127);\n    List<Picture> projectPictures = project.getProject().getPictures();\n    if (projectPictures.size() > 0) {\n      Bitmap thumb = projectPictures.get(0).getThumbBitmap();\n      if (thumb == null) {\n        projectImage.setVisibility(View.GONE);\n        projectLoading.setVisibility(View.VISIBLE);\n      } else {\n        projectImage.setImageBitmap(thumb);\n        projectLoading.setVisibility(View.GONE);\n        projectImage.setVisibility(View.VISIBLE);\n      }\n    } else {\n      projectLoading.setVisibility(View.GONE);\n      projectImage.setImageResource(R.drawable.project_nophoto);\n      projectImage.setVisibility(View.VISIBLE);\n    }\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9950, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 177, "focalAPIEnd": 250, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.removeAllViews()", "view.addView(GraphicalView,*)"], "useStart": [519, 557], "useEnd": [551, 674], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/Broadband-Usage/tree/master/src/au/id/teda/broadband/usage/fragments/DailyUsageFragment.java", "rawCode": "  /** Load stacked bar chart into view */\n  private void loadStackedBarChart() {\n    // Set layout container for chart\n    LinearLayout mChartContainer =\n        (LinearLayout) mFragmentView.findViewById(R.id.fragment_daily_usage_bar_chart_container);\n\n    // Initialise chart class\n    StackedBarChart mBarChart = new StackedBarChart(mContext);\n\n    // Get chart view from library\n    GraphicalView mBarChartView = (GraphicalView) mBarChart.getBarChartView(mDailyUsageArray);\n\n    // Add chart view to layout view\n    mChartContainer.removeAllViews();\n    mChartContainer.addView(\n        mBarChartView, new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n\n    // Setup the touch listener for chart\n    mBarChartView.setOnTouchListener(\n        new OnTouchListener() {\n          @Override\n          public boolean onTouch(View v, MotionEvent event) {\n            mGestureDetector.onTouchEvent(event);\n            return false;\n          }\n        });\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9951, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.getContext()"], "configurationStart": [249], "configurationEnd": [267], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 383, "focalAPIEnd": 418, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.getContext()", "view.getContext()", "view.setTypeface(Typeface)", "view.getContext()", "view.getContext()"], "useStart": [463, 533, 634, 730, 787, 972, 2861], "useEnd": [499, 568, 652, 748, 812, 990, 2879], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mevansjr/FSO/tree/master/ADP 2/QuoteMe v3.0/QuoteMe/src/com/markevansjr/quoteme/AddFragmentTab.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\n    _view = inflater.inflate(R.layout.add_frag, container, false);\n\n    // Check for User\n    _user = FileStuff.readStringFile(_view.getContext(), \"userName\", false);\n    Log.i(\"USER HOME\", _user);\n\n    // Set Elements\n    final EditText quoteText = (EditText) _view.findViewById(R.id.edit_quote);\n    final EditText authorText = (EditText) _view.findViewById(R.id.edit_author);\n    Button submitBtn = (Button) _view.findViewById(R.id.submit_btn);\n\n    // Set Typeface\n    Typeface tf = Typeface.createFromAsset(_view.getContext().getAssets(), \"fonts/m-reg.ttf\");\n    Typeface tf2 = Typeface.createFromAsset(_view.getContext().getAssets(), \"fonts/m-bold.ttf\");\n    quoteText.setTypeface(tf);\n    authorText.setTypeface(tf);\n    submitBtn.setTypeface(tf2);\n\n    // Check for Connectivity\n    ConnectivityManager connec =\n        (ConnectivityManager) _view.getContext().getSystemService(Context.CONNECTIVITY_SERVICE);\n    if (connec != null && (connec.getNetworkInfo(1).isAvailable() == true)\n        || (connec.getNetworkInfo(0).isAvailable() == true)) {\n\n      submitBtn.setOnClickListener(\n          new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n              InputMethodManager imm =\n                  (InputMethodManager)\n                      _view.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);\n              imm.hideSoftInputFromWindow(quoteText.getWindowToken(), 0);\n              imm.hideSoftInputFromWindow(authorText.getWindowToken(), 0);\n\n              if (quoteText.getText().toString().equals(\"\")\n                  || authorText.getText().toString().equals(\"\")) {\n                Toast toast =\n                    Toast.makeText(\n                        _view.getContext(), \"CHECK QUOTE AND AUTHOR FIELDS!\", Toast.LENGTH_SHORT);\n                toast.show();\n              } else {\n                ParseObject savedFavObject = new ParseObject(_user);\n                savedFavObject.put(\"savedQuote\", '\"' + quoteText.getText().toString() + '\"');\n                savedFavObject.put(\"savedAuthor\", authorText.getText().toString());\n                savedFavObject.saveInBackground();\n                ParseObject savedToList = new ParseObject(\"ListOfQuotes\");\n                savedToList.put(\"quote\", '\"' + quoteText.getText().toString() + '\"');\n                savedToList.put(\"author\", authorText.getText().toString());\n                savedToList.saveInBackground();\n                Toast toast = Toast.makeText(_view.getContext(), \"QUOTE SAVED\", Toast.LENGTH_SHORT);\n                toast.show();\n                quoteText.setText(\"\");\n                authorText.setText(\"\");\n              }\n            }\n          });\n\n    } else {\n      Toast toast = Toast.makeText(_view.getContext(), \"NO CONNECTION\", Toast.LENGTH_SHORT);\n      toast.show();\n    }\n\n    return _view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9952, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 328, "focalAPIEnd": 383, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [421, 504, 593, 687], "useEnd": [465, 549, 640, 738], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/daubigne/Android-Budget-Project/tree/master/Android_Budget_App/src/it/chalmers/mufasa/android_budget_app/activities/AddTransactionFragment.java", "rawCode": "  /** Sets up the fragment when created. */\n  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    this.view = inflater.inflate(R.layout.fragment_add_transaction, container, false);\n\n    calendar = Calendar.getInstance();\n    chooseCategoryButton = (Button) view.findViewById(R.id.chooseTransactionCategoryButton);\n    addTransactionButton = (Button) view.findViewById(R.id.addTransactionButton);\n    dateTransactionButton = (Button) view.findViewById(R.id.transactionDateButton);\n\n    transactionDateTextView = (TextView) view.findViewById(R.id.transactionDateTextView);\n    transactionCategoryTextView = (TextView) view.findViewById(R.id.transactionCategoryTextView);\n\n    this.setupOnClickListeners();\n\n    choosenCategory = controller.getCurrentMainCategory();\n\n    updateDateText();\n    updateCategoryText();\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9953, "initialization": ["View view = from(*)"], "initializationStart": [126], "initializationEnd": [160], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 233, "focalAPIEnd": 267, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "setView(view)"], "useStart": [310, 387, 1213], "useEnd": [345, 421, 1280], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/PaperAirplane-Dev-Team/Music-Share-Android/tree/master/src/com/paperairplane/music/share/dialogs/SearchDialogFragment.java", "rawCode": "  @Override\n  public Dialog onCreateDialog(Bundle savedInstanceState) {\n    final AlertDialog dialogSearch;\n    View search = LayoutInflater.from(getActivity()).inflate(R.layout.search, null);\n    final EditText etTitle = (EditText) search.findViewById(R.id.et_title);\n    final EditText etArtist = (EditText) search.findViewById(R.id.et_artist);\n    final EditText etAlbum = (EditText) search.findViewById(R.id.et_album);\n    DialogInterface.OnClickListener listenerClick =\n        new DialogInterface.OnClickListener() {\n          @Override\n          public void onClick(DialogInterface dialog, int whichButton) {\n            if (etTitle.getText().toString().trim().equals(\"\")) {\n              new EmptyDialogFragment().show(getFragmentManager(), \"emptyDialog\");\n            } else {\n              MusicData music = new MusicData();\n              music.setAlbum(etAlbum.getText().toString());\n              music.setAlbumId(Consts.NULL);\n              music.setArtist(etArtist.getText().toString());\n              music.setTitle(etTitle.getText().toString());\n              listenerSearch.onShareMusic(music);\n              getDialog().dismiss();\n            }\n          }\n        };\n    dialogSearch =\n        new AlertDialog.Builder(getActivity())\n            .setView(search)\n            .setCancelable(true)\n            .setPositiveButton(R.string.share, listenerClick)\n            .setTitle(R.string.search)\n            .setIcon(android.R.drawable.ic_dialog_info)\n            .create();\n    return dialogSearch;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9954, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 200, "focalAPIEnd": 244, "followUpCheck": "view == null", "checkType": "IF", "followUpCheckExpressionStart": 251, "followUpCheckExpressionEnd": 279, "followUpCheckBlockStart": 251, "followUpCheckBlockEnd": 287, "use": ["view.setVisibility(int)", "view.setOrientation(*)", "view.addView(ImageView,int)"], "useStart": [292, 557, 641], "useEnd": [335, 629, 678], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/adblockplus/adblockplusandroid/tree/master/src/org/adblockplus/android/HelpfulCheckBoxPreference.java", "rawCode": "  @Override\n  protected void onBindView(final View view) {\n    super.onBindView(view);\n\n    final ImageView helpImage = new ImageView(getContext());\n    final ViewGroup widgetFrameView = ((ViewGroup) view.findViewById(android.R.id.widget_frame));\n    if (widgetFrameView == null) return;\n    widgetFrameView.setVisibility(View.VISIBLE);\n    final int rightPaddingDip = android.os.Build.VERSION.SDK_INT < 14 ? 8 : 5;\n    final float mDensity = getContext().getResources().getDisplayMetrics().density;\n    if (widgetFrameView instanceof LinearLayout) {\n      ((LinearLayout) widgetFrameView).setOrientation(LinearLayout.HORIZONTAL);\n    }\n    widgetFrameView.addView(helpImage, 0);\n    helpImage.setImageResource(R.drawable.ic_menu_help);\n    helpImage.setPadding(\n        helpImage.getPaddingLeft(),\n        helpImage.getPaddingTop(),\n        (int) (mDensity * rightPaddingDip),\n        helpImage.getPaddingBottom());\n    helpImage.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(final View v) {\n            if (helpClickListener != null) {\n              helpClickListener.onClick(helpImage);\n            } else if (url != null) {\n              final Uri uri = Uri.parse(url);\n              final Intent intent = new Intent(Intent.ACTION_VIEW, uri);\n              HelpfulCheckBoxPreference.this.getContext().startActivity(intent);\n            }\n          }\n        });\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9955, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 71, "focalAPIEnd": 105, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setText(String)", "view.setText(String)", "view.getText()", "view.setText(String)", "view.getText()", "view.setText(String)", "view.setText(String)"], "useStart": [140, 204, 250, 274, 417, 402, 486, 471, 814], "useEnd": [174, 243, 268, 315, 433, 444, 502, 516, 876], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OLIMEX/OLINUXINO/tree/master/SOFTWARE/A20/ANDROID A20-OLINUXINO-TOOLS/A20-OLINUXINO-TOOLS/src/olimex/a20/tools/fragments/I2CFragment.java", "rawCode": "  protected void scanI2C(View view) {\n    TextView status = (TextView) view.findViewById(R.id.i2c_status);\n    TextView result = (TextView) view.findViewById(R.id.i2c_result);\n    Spinner bus = (Spinner) view.findViewById(R.id.i2c_bus_spinner);\n\n    status.setText(\"\");\n    status.setText(\"Initialating i2c-bus...\");\n    I2C.fd = I2C.init(bus.getSelectedItem().toString());\n    if (I2C.fd < 0) {\n      status.setText(status.getText() + \"Fail!\");\n      return;\n    } else status.setText(status.getText() + \"Success!\");\n\n    /** Now do some real work */\n    result.append(\" --> Scanning:\\n\\n\");\n\n    result.append(\"\\t0\\t1\\t2\\t3\\t4\\t5\\t6\\t7\\t8\\t9\\tA\\tB\\tC\\tD\\tE\\tF\\n\");\n    int[] buf = new int[1];\n    for (int i = 0; i < 8; i++) {\n      result.append(String.valueOf(i));\n      for (int j = 0; j < 16; j++) {\n        status.setText(\"Scanning: \" + Integer.toHexString(i * 16 + j));\n        I2C.open(I2C.fd, i * 16 + j);\n        if (I2C.read(I2C.fd, buf, 1) < 0) result.append(\"\\t\" + \"--\");\n        else result.append(\"\\t\" + Integer.toHexString(i * 16 + j));\n      }\n      result.append(\"\\n\");\n    }\n    result.append(\"\\n --> Done\\n\");\n\n    I2C.close(I2C.fd);\n\n    for (int i = 0; i < (int) result.getWidth() / result.getTextSize(); i++) result.append(\"- \");\n    result.append(\"\\n\");\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9956, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 118, "focalAPIEnd": 152, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [158, 234, 351, 476, 604], "useEnd": [199, 273, 384, 515, 645], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wkrupchenko/swe2/tree/master/ShopApp/src/de/shop/ui/artikel/ArtikelEdit.java", "rawCode": "  @Override\n  public void onViewCreated(View view, Bundle savedInstanceState) {\n    final TextView txtId = (TextView) view.findViewById(R.id.artikel_id);\n    txtId.setText(String.valueOf(artikel.id));\n\n    edtBezeichnung = (EditText) view.findViewById(R.id.bezeichnung_edt);\n    edtBezeichnung.setText(artikel.bezeichnung);\n\n    edtPreis = (EditText) view.findViewById(R.id.preis_edt);\n    edtPreis.setText(String.valueOf(artikel.preis));\n\n    tglErhaeltlich = (ToggleButton) view.findViewById(R.id.erhaeltlich_tgl);\n    tglErhaeltlich.setChecked(artikel.erhaeltlich);\n\n    edtArtikelgruppe = (EditText) view.findViewById(R.id.artikelgruppe_edt);\n    edtArtikelgruppe.setText(String.valueOf(artikel.artikelgruppeUri));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9957, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 389, "focalAPIEnd": 430, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/boboxu/smile/tree/master/src/Smile/src/com/heme/smile/ui/view/ExpandableAdapter.java", "rawCode": "  @Override\n  public View getGroupView(\n      final int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    GroupViewHolder groupViewHolder = null;\n    if (convertView == null) {\n      convertView = LayoutInflater.from(context).inflate(R.layout.expand_group_item, null);\n      groupViewHolder = new GroupViewHolder();\n      groupViewHolder.expandImg = (ImageView) convertView.findViewById(R.id.expand_tag);\n      groupViewHolder.ivAvatar = (ImageView) convertView.findViewById(R.id.group_avatar_iv);\n      groupViewHolder.name = (TextView) convertView.findViewById(R.id.group_name);\n      groupViewHolder.checkBox = (CheckBox) convertView.findViewById(R.id.checkbox);\n      groupViewHolder.rightImg = (ImageView) convertView.findViewById(R.id.right_img);\n      convertView.setTag(groupViewHolder);\n    } else {\n      groupViewHolder = (GroupViewHolder) convertView.getTag();\n    }\n    groupViewHolder.ivAvatar.setImageResource(logos[groupPosition]);\n    groupViewHolder.name.setText(((ChatGroup) getGroup(groupPosition)).name);\n    if (showCheckBox) {\n      groupViewHolder.expandImg.setVisibility(View.VISIBLE);\n      groupViewHolder.rightImg.setVisibility(View.GONE);\n      groupViewHolder.checkBox.setVisibility(View.VISIBLE);\n      // groupViewHolder.checkBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {\n      //\n      // @Override\n      // public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n      // ChatGroup group = getGroup(groupPosition);\n      // LinkedList<Contacter> contacters = groupContacterMap.get(group.id);\n      // if (isChecked) {\n      // for (Contacter contacter : contacters) {\n      // mCheckFlagMap.put(contacter.serverId, true);\n      // }\n      // }else {\n      // for (Contacter contacter : contacters) {\n      // mCheckFlagMap.put(contacter.serverId, false);\n      // }\n      // }\n      // notifyDataSetChanged();\n      // }\n      // });\n      groupViewHolder.checkBox.setOnClickListener(\n          new OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n              // TODO Auto-generated method stub\n              Boolean isChecked = ((CheckBox) v).isChecked();\n              if (isChecked) {\n                mGroupCheckMap.put(getGroup(groupPosition).id, true);\n                for (Contacter contacter : contacters) {\n                  if (contacter.groupId == getGroup(groupPosition).id) {\n                    mCheckFlagMap.put(contacter.serverId, true);\n                  }\n                }\n              } else {\n                mGroupCheckMap.put(getGroup(groupPosition).id, false);\n                for (Contacter contacter : contacters) {\n                  if (contacter.groupId == getGroup(groupPosition).id) {\n                    mCheckFlagMap.put(contacter.serverId, false);\n                  }\n                }\n              }\n              notifyDataSetChanged();\n            }\n          });\n      if (isExpanded) {\n        groupViewHolder.expandImg.setBackgroundResource(R.drawable.ibtn_gallery_zoom_out);\n      } else {\n        groupViewHolder.expandImg.setBackgroundResource(R.drawable.ibtn_gallery_zoom_in);\n      }\n      groupViewHolder.checkBox.setChecked(mGroupCheckMap.get(getGroup(groupPosition).id));\n    } else {\n      groupViewHolder.rightImg.setVisibility(View.VISIBLE);\n      groupViewHolder.checkBox.setVisibility(View.GONE);\n      groupViewHolder.expandImg.setVisibility(View.GONE);\n    }\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9958, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 159, "focalAPIEnd": 204, "followUpCheck": "view == null", "checkType": "IF", "followUpCheckExpressionStart": 210, "followUpCheckExpressionEnd": 237, "followUpCheckBlockStart": 210, "followUpCheckBlockEnd": 245, "use": ["view.addView(ViewGroup)"], "useStart": [1148], "useEnd": [1176], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_packages_apps_Settings/tree/master/src/com/android/settings/fuelgauge/PowerUsageDetail.java", "rawCode": "  private void fillPackagesSection(int uid) {\n    if (uid < 1) {\n      removePackagesSection();\n      return;\n    }\n    ViewGroup packagesParent = (ViewGroup) mRootView.findViewById(R.id.packages_section);\n    if (packagesParent == null) return;\n    LayoutInflater inflater = getActivity().getLayoutInflater();\n\n    PackageManager pm = getActivity().getPackageManager();\n    // final Drawable defaultActivityIcon = pm.getDefaultActivityIcon();\n    mPackages = pm.getPackagesForUid(uid);\n    if (mPackages == null || mPackages.length < 2) {\n      removePackagesSection();\n      return;\n    }\n\n    // Convert package names to user-facing labels where possible\n    for (int i = 0; i < mPackages.length; i++) {\n      try {\n        ApplicationInfo ai = pm.getApplicationInfo(mPackages[i], 0);\n        CharSequence label = ai.loadLabel(pm);\n        // Drawable icon = defaultActivityIcon;\n        if (label != null) {\n          mPackages[i] = label.toString();\n        }\n        // if (ai.icon != 0) {\n        // icon = ai.loadIcon(pm);\n        // }\n        ViewGroup item = (ViewGroup) inflater.inflate(R.layout.power_usage_package_item, null);\n        packagesParent.addView(item);\n        TextView labelView = (TextView) item.findViewById(R.id.label);\n        labelView.setText(mPackages[i]);\n      } catch (NameNotFoundException e) {\n      }\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9959, "initialization": ["View view = inflate(*,*,*)"], "initializationStart": [302], "initializationEnd": [357], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 390, "focalAPIEnd": 429, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "addFooterView(view,*,boolean)"], "useStart": [463, 508], "useEnd": [502, 549], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/timothyjlaurent/WhereToEat/tree/master/src/com/codepath/apps/nommable/fragments/MenuFragment.java", "rawCode": "  @Override\n  public void onActivityCreated(Bundle savedInstanceState) {\n    super.onActivityCreated(savedInstanceState);\n    lvMenu = (ListView) getActivity().findViewById(R.id.lvMenu);\n\n    // Footer needs to be added before setting adapter in order to be compatible with order API\n    View footer = View.inflate(getActivity(), R.layout.menu_footer, null);\n    tvAttribution = (TextView) footer.findViewById(R.id.tvAttribution);\n    ivAttribution = (ImageView) footer.findViewById(R.id.ivAttribution);\n    lvMenu.addFooterView(footer, null, false);\n\n    mAdapter = new MenuAdapter(getActivity(), new ArrayList<MenuRow>());\n    lvMenu.setAdapter(mAdapter);\n    if (savedInstanceState != null && savedInstanceState.containsKey(\"menu\")) {\n      menu = (Menu) savedInstanceState.getSerializable(\"menu\");\n      updateView(menu);\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9960, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 144, "focalAPIEnd": 183, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)"], "useStart": [231], "useEnd": [284], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/philipflohr/AKKtuell/tree/master/AKKtuell/src/org/akk/akktuell/Activity/AKKtuellMainActivity.java", "rawCode": "  /**\n   * Display data.\n   *\n   * <p>There is something(maybe new) to display! Do it!\n   */\n  private void displayData() {\n    View mainView = findViewById(R.id.main_activity_layout);\n    TextView listHeaderMonthName = (TextView) mainView.findViewById(R.id.main_activity_list_header);\n    listHeaderMonthName.setText(\n        new DateFormatSymbols()\n            .getMonths()[new GregorianCalendar().get(GregorianCalendar.MONTH) + monthCounter]);\n    AkkEventAdapter adapter =\n        new AkkEventAdapter(getApplicationContext(), infoManager.getEvents(), infoManager);\n    elementListView.setAdapter(adapter);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9961, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 128, "focalAPIEnd": 152, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["setView(int,view)"], "useStart": [102], "useEnd": [153], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/artkoshelev/where-to-live/tree/master/client/wtl-android/wtl-android/src/main/java/ru/yandex/hackaton/wheretolive/ui/adapters/BaseArrayAdapter.java", "rawCode": "  protected void addViewToHolder(final View view, final ViewHolder viewHolder, final int resId) {\n    viewHolder.setView(resId, view.findViewById(resId));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9962, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 455, "focalAPIEnd": 496, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envsmth/tree/master/EnvSocialApp/src/com/envsocial/android/BrowseLocationsListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder viewHolder;\n    View rowView = convertView;\n\n    if (rowView == null) {\n      LayoutInflater inflater =\n          (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      rowView = inflater.inflate(R.layout.browse_locations_row, parent, false);\n      viewHolder = new ViewHolder();\n\n      viewHolder.areaImageView = (ImageView) rowView.findViewById(R.id.location_image);\n      viewHolder.areaNameView = (TextView) rowView.findViewById(R.id.location_name);\n      viewHolder.areaCheckinCountView =\n          (TextView) rowView.findViewById(R.id.location_checked_in_count);\n      viewHolder.areaTagsView = (TagListView) rowView.findViewById(R.id.location_tag_list);\n\n      rowView.setTag(viewHolder);\n    } else {\n      viewHolder = (ViewHolder) rowView.getTag();\n    }\n\n    bindViewData(viewHolder, position);\n\n    return rowView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9963, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.getTag()"], "configurationStart": [76], "configurationEnd": [86], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 1621, "focalAPIEnd": 1663, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setBackgroundResource(int)", "view.getBackground()", "view.findViewById(int)"], "useStart": [1677, 1783, 1897], "useEnd": [1741, 1810, 1935], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fywb251/bsl_impc_android/tree/master/cube-android/src/com/foreveross/chameleon/phone/chat/chatroom/ChatRoomAdapter.java", "rawCode": "    @Override\n    public void onClick(View v) {\n      String tag = (String) v.getTag();\n      if (tag == null) {\n        if (!voiceDowning) {\n          new VoiceTask(null, v, null, conversation).execute(null, conversation.getPicId());\n        } else {\n        }\n        return;\n      }\n\n      if (!isPlay) {\n        String path = conversation.getContent();\n        if (path == null) {\n          return;\n        }\n        if (null != mLastPlayIv && mAnim.isRunning()) {\n          mAnim.stop();\n          mLastPlayIv.setBackgroundResource(R.drawable.chat_record_m_3);\n        }\n        if (null != fLastPlayIv && fAnim.isRunning()) {\n          fAnim.stop();\n          fLastPlayIv.setBackgroundResource(R.drawable.chat_record_f_3);\n        }\n        File file = new File(path);\n        if (!file.exists()) {\n          Toast.makeText(context, \"该文件已经不存在\", Toast.LENGTH_SHORT).show();\n        } else {\n          boolean playable = player.playByPath(path);\n          if (!playable) {\n            if (null != mLastPlayIv && mAnim.isRunning()) {\n              mAnim.stop();\n              mLastPlayIv.setBackgroundResource(R.drawable.chat_record_m_3);\n            }\n            if (null != fLastPlayIv && fAnim.isRunning()) {\n              fAnim.stop();\n              fLastPlayIv.setBackgroundResource(R.drawable.chat_record_f_3);\n            }\n            Toast.makeText(context, \"音频文件不能播放，重新下载音频\", Toast.LENGTH_SHORT).show();\n            new VoiceTask(null, v, null, conversation).execute(null, conversation.getPicId());\n            return;\n          }\n          if (who.equals(\"friend\")) {\n            fLastPlayIv = (ImageView) v.findViewById(R.id.chatroom_friend_voice);\n            fLastPlayIv.setBackgroundResource(R.drawable.chat_record_friend);\n            fAnim = (AnimationDrawable) fLastPlayIv.getBackground();\n            fAnim.start();\n\n          } else {\n            mLastPlayIv = (ImageView) v.findViewById(R.id.chatroom_my_voice);\n            mLastPlayIv.setBackgroundResource(R.drawable.chat_record_my);\n            mAnim = (AnimationDrawable) mLastPlayIv.getBackground();\n            mAnim.start();\n          }\n          isPlay = true;\n        }\n\n      } else {\n        isPlay = false;\n        stopPlay();\n      }\n    };\n"}, {"dataset": "viewFindViewById", "exampleID": 9964, "initialization": ["View view = from(*)"], "initializationStart": [203], "initializationEnd": [243], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 330, "focalAPIEnd": 376, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)", "view.findViewById(int)", "view.measure(int,int)", "view.getMeasuredHeight()", "view.requestLayout()", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [318, 419, 554, 663, 741, 814, 1173], "useEnd": [401, 473, 639, 687, 761, 860, 1221], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/geometer/FBReaderJ-alex/tree/master/src/org/geometerplus/android/fbreader/network/NetworkBaseActivity.java", "rawCode": "  protected View setupNetworkTreeItemView(\n      View convertView, final ViewGroup parent, NetworkTree tree) {\n    final View view =\n        (convertView != null)\n            ? convertView\n            : LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.network_tree_item, parent, false);\n\n    ((TextView) view.findViewById(R.id.network_tree_item_name)).setText(tree.getName());\n    ((TextView) view.findViewById(R.id.network_tree_item_childrenlist))\n        .setText(tree.getSecondString());\n\n    if (myCoverWidth == -1) {\n      view.measure(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n      myCoverHeight = view.getMeasuredHeight();\n      myCoverWidth = myCoverHeight * 15 / 32;\n      view.requestLayout();\n    }\n\n    final ImageView coverView = (ImageView) view.findViewById(R.id.network_tree_item_icon);\n    coverView.getLayoutParams().width = myCoverWidth;\n    coverView.getLayoutParams().height = myCoverHeight;\n    coverView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);\n    coverView.requestLayout();\n    setupCover(coverView, tree, myCoverWidth, myCoverWidth);\n\n    final ImageView statusView = (ImageView) view.findViewById(R.id.network_tree_item_status);\n    final int status =\n        (tree instanceof NetworkBookTree)\n            ? NetworkBookActions.getBookStatus(((NetworkBookTree) tree).Book, Connection)\n            : 0;\n    if (status != 0) {\n      statusView.setVisibility(View.VISIBLE);\n      statusView.setImageResource(status);\n    } else {\n      statusView.setVisibility(View.GONE);\n    }\n    statusView.requestLayout();\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9965, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 122, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setImageResource(*)", "view.setImageResource(*)", "view.setImageResource(*)"], "useStart": [245, 334, 430], "useEnd": [309, 401, 495], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chgenly/experiment/tree/master/OsmAnd/src/net/osmand/plus/activities/OsmandBaseExpandableListAdapter.java", "rawCode": "  protected void adjustIndicator(int groupPosition, boolean isExpanded, View row) {\n    ImageView indicator = (ImageView) row.findViewById(R.id.explist_indicator);\n    if (!isExpanded) {\n      if (getChildrenCount(groupPosition) == 0) {\n        indicator.setImageResource(R.drawable.expandable_category_empty);\n      } else {\n        indicator.setImageResource(R.drawable.expandable_category_unpushed);\n      }\n    } else {\n      indicator.setImageResource(R.drawable.expandable_category_pushed);\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9966, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 255, "focalAPIEnd": 296, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jsyeo/OCBCApp/tree/master/src/com/jason/ocbcapp/BranchAdapter.java", "rawCode": "  /**\n   * @param convertView\n   * @return The initialized view holder that contains the view's layouts\n   */\n  private ViewHolder initializeViewHolder(View convertView) {\n    ViewHolder holder;\n    holder = new ViewHolder();\n    holder.name = (TextView) convertView.findViewById(R.id.branchName);\n    holder.btn = (Button) convertView.findViewById(R.id.waitingTimeBtn);\n    holder.pb = (ProgressBar) convertView.findViewById(R.id.progressBar);\n    return holder;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9967, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 69, "focalAPIEnd": 101, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setOnFocusChangeListener(OnFocusChangeListener)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [107, 200, 379, 517, 624, 738], "useEnd": [169, 228, 416, 547, 653, 773], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/packages_apps_Settings/tree/master/src/com/android/settings/ProxySelector.java", "rawCode": "  private void initView(View view) {\n    mHostnameField = (EditText) view.findViewById(R.id.hostname);\n    mHostnameField.setOnFocusChangeListener(mOnFocusChangeHandler);\n\n    mPortField = (EditText) view.findViewById(R.id.port);\n    mPortField.setOnClickListener(mOKHandler);\n    mPortField.setOnFocusChangeListener(mOnFocusChangeHandler);\n\n    mExclusionListField = (EditText) view.findViewById(R.id.exclusionlist);\n    mExclusionListField.setOnFocusChangeListener(mOnFocusChangeHandler);\n\n    mOKButton = (Button) view.findViewById(R.id.action);\n    mOKButton.setOnClickListener(mOKHandler);\n\n    mClearButton = (Button) view.findViewById(R.id.clear);\n    mClearButton.setOnClickListener(mClearHandler);\n\n    mDefaultButton = (Button) view.findViewById(R.id.defaultView);\n    mDefaultButton.setOnClickListener(mDefaultHandler);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9968, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 197, "focalAPIEnd": 234, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setAdapter(ArrayAdapter<String>)", "view.setOnPageChangeListener(*)"], "useStart": [240, 361], "useEnd": [355, 404], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sandyimu/EDUkid/tree/master/EDUkid/src/bu/edu/cs673/edukid/learn/LearnContentViewFragment.java", "rawCode": "  /** {@inheritDoc} */\n  @Override\n  public void onViewCreated(View view, Bundle savedInstanceState) {\n    super.onViewCreated(view, savedInstanceState);\n\n    ViewPager wordViewPager = (ViewPager) view.findViewById(R.id.wordViewPager);\n    wordViewPager.setAdapter(\n        new WordFragmentPagerAdapter(getChildFragmentManager(), categoryType, itemIndex));\n    wordViewPager.setOnPageChangeListener(this);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9969, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 116, "focalAPIEnd": 151, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setText(String)"], "useStart": [185, 1171, 1724, 1842], "useEnd": [222, 1207, 1759, 1859], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mturek/gras/tree/master/NestedFragments/src/com/example/newspinproj/ContactsFragment.java", "rawCode": "    @Override\n    public void bindView(View view, Context context, Cursor cursor) {\n      TextView tv1 = (TextView) view.findViewById(R.id.contactName);\n      TextView tv2 = (TextView) view.findViewById(R.id.contactNumber);\n\n      String name =\n          cursor.getString(\n              cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));\n\n      String phoneNumber =\n          cursor.getString(cursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));\n\n      /*Cursor photoCursor = managedQuery(\n      Data.CONTENT_URI,\n      new String[] { Photo.PHOTO }, // column for the blob\n      Data._ID + \"=?\", // select row by id\n      new String[] { photoId }, // filter by photoId\n      null);*/\n\n      /*Cursor photoCursor = getContentResolver().query(\n      ContactsContract.Data, new String[] {ContactsContract.Data.}, selection,\n      null, sortOrder);*/\n\n      String contactId = cursor.getString(cursor.getColumnIndex(ContactsContract.Data.CONTACT_ID));\n      Uri contactUri =\n          Uri.withAppendedPath(ContactsContract.Contacts.CONTENT_URI, String.valueOf(contactId));\n\n      QuickContactBadge badgeSmall = (QuickContactBadge) view.findViewById(R.id.contactImage);\n      badgeSmall.assignContactUri(contactUri);\n      badgeSmall.setMode(ContactsContract.QuickContact.MODE_MEDIUM);\n      InputStream input =\n          ContactsContract.Contacts.openContactPhotoInputStream(\n              getActivity().getContentResolver(), contactUri);\n      badgeSmall.setImageBitmap(BitmapFactory.decodeStream(input));\n\n      Boolean isLeader = DataContainer.getFullLeaderNames(groupName).contains(name);\n      // Boolean isLeader = name.startsWith(\"M\");\n      ImageView leaderIcon = (ImageView) view.findViewById(R.id.leader_icon);\n      leaderIcon.setVisibility(isLeader ? View.VISIBLE : View.INVISIBLE);\n\n      tv1.setText(name);\n      tv2.setText(phoneNumber);\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9970, "initialization": ["View view = inflateAndSetupView(LayoutInflater,ViewGroup,Bundle,*)"], "initializationStart": [151], "initializationEnd": [261], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 421, "focalAPIEnd": 467, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.addView(View)"], "useStart": [473], "useEnd": [508], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ninjanetworks/contacts/tree/master/src/com/android/contacts/list/ContactTileFrequentFragment.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View listLayout =\n        inflateAndSetupView(\n            inflater, container, savedInstanceState, R.layout.contact_tile_list_frequent);\n    View headerView =\n        ContactsUtils.createHeaderView(getActivity(), R.string.favoritesFrequentContacted);\n    ViewGroup headerContainer = (ViewGroup) listLayout.findViewById(R.id.header_container);\n    headerContainer.addView(headerView);\n    return listLayout;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9971, "initialization": ["View view = newGroupView(ViewGroup)"], "initializationStart": [303], "initializationEnd": [323], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 368, "focalAPIEnd": 394, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.getResources()", "view.setText(String)"], "useStart": [430, 479, 893], "useEnd": [456, 495, 912], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/android/platform_packages_apps_im/tree/master/src/com/android/im/app/ContactListTreeAdapter.java", "rawCode": "  public View getGroupView(\n      int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    if (isPosForOngoingConversation(groupPosition) || isPosForSubscription(groupPosition)) {\n      View v;\n      if (convertView != null) {\n        v = convertView;\n      } else {\n        v = newGroupView(parent);\n      }\n\n      TextView text1 = (TextView) v.findViewById(R.id.text1);\n      TextView text2 = (TextView) v.findViewById(R.id.text2);\n\n      Resources r = v.getResources();\n      ImApp app = ImApp.getApplication(mActivity);\n      BrandingResources brandingRes = app.getBrandingResource(mProviderId);\n      String text =\n          isPosForOngoingConversation(groupPosition)\n              ? brandingRes.getString(\n                  BrandingResourceIDs.STRING_ONGOING_CONVERSATION, getOngoingConversationCount())\n              : r.getString(R.string.subscriptions);\n      text1.setText(text);\n      text2.setVisibility(View.GONE);\n      return v;\n    } else {\n      return mAdapter.getGroupView(\n          getChildAdapterPosition(groupPosition), isExpanded, convertView, parent);\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9972, "initialization": ["View view = inflate(*,*)"], "initializationStart": [175], "initializationEnd": [235], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "view==null", "guardType": "IF {", "guardExpressionStart": 142, "guardExpressionEnd": 159, "guardBlockStart": 142, "guardBlockEnd": 696, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 281, "focalAPIEnd": 311, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setTag(ViewHolder)", "view.getTag()"], "useStart": [357, 431, 614, 676], "useEnd": [388, 459, 633, 689], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/feelinglucky/iZhihu/tree/master/src/com/gracecode/iZhihu/adapter/CommentAdapter.java", "rawCode": "  @Override\n  public View getView(int i, View view, ViewGroup viewGroup) {\n    ViewHolder holder;\n    Comment comment = comments.get(i);\n\n    if (view == null) {\n      view = layoutInflater.inflate(R.layout.listview_comment_item, null);\n\n      TextView textViewAuthor = (TextView) view.findViewById(R.id.author);\n      TextView textViewContent = (TextView) view.findViewById(R.id.content);\n      TextView textViewTime = (TextView) view.findViewById(R.id.time);\n\n      holder = new ViewHolder();\n      holder.author = textViewAuthor;\n      holder.content = textViewContent;\n      holder.time = textViewTime;\n\n      view.setTag(holder);\n    } else {\n      holder = (ViewHolder) view.getTag();\n    }\n\n    holder.author.setText(comment.getAuthor());\n    holder.content.setText(comment.getContent());\n    holder.time.setText(formatTime(comment.getTimeStamp()));\n\n    return view;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9973, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 63, "focalAPIEnd": 99, "followUpCheck": "view != null", "checkType": "IF", "followUpCheckExpressionStart": 105, "followUpCheckExpressionEnd": 120, "followUpCheckBlockStart": 105, "followUpCheckBlockEnd": 237, "use": ["view.setMinLines(*)", "view.setMaxLines(*)", "view.setText(String)"], "useStart": [129, 173, 217], "useEnd": [165, 209, 230], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/widgets/map/MapBaloonInfoWindowAdapter.java", "rawCode": "  public void setText(String t) {\n    TextView tv = (TextView) mView.findViewById(R.id.baloon_text);\n    if (tv != null) {\n      tv.setMinLines(t.split(\"\\n\").length);\n      tv.setMaxLines(t.split(\"\\n\").length);\n      tv.setText(t);\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9974, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 69, "focalAPIEnd": 94, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/packages/SystemUI/src/com/android/systemui/statusbar/policy/NotificationRowLayout.java", "rawCode": "  public boolean canChildBeDismissed(View v) {\n    final View veto = v.findViewById(R.id.veto);\n    return (veto != null && veto.getVisibility() != View.GONE);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9975, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 292, "focalAPIEnd": 344, "followUpCheck": "view != null", "checkType": "IF", "followUpCheckExpressionStart": 351, "followUpCheckExpressionEnd": 381, "followUpCheckBlockStart": 351, "followUpCheckBlockEnd": 821, "use": ["view.setText(CharSequence)", "view.setVisibility(int)"], "useStart": [581, 760], "useEnd": [628, 806], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/core/java/android/preference/DialogPreference.java", "rawCode": "  /**\n   * Binds views in the content View of the dialog to data.\n   *\n   * <p>Make sure to call through to the superclass implementation.\n   *\n   * @param view The content View of the dialog, if it is custom.\n   */\n  protected void onBindDialogView(View view) {\n    View dialogMessageView = view.findViewById(com.android.internal.R.id.message);\n\n    if (dialogMessageView != null) {\n      final CharSequence message = getDialogMessage();\n      int newVisibility = View.GONE;\n\n      if (!TextUtils.isEmpty(message)) {\n        if (dialogMessageView instanceof TextView) {\n          ((TextView) dialogMessageView).setText(message);\n        }\n\n        newVisibility = View.VISIBLE;\n      }\n\n      if (dialogMessageView.getVisibility() != newVisibility) {\n        dialogMessageView.setVisibility(newVisibility);\n      }\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9976, "initialization": ["View view = LayoutInflater.inflate(int,ViewGroup,boolean)"], "initializationStart": [292], "initializationEnd": [335], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 414, "focalAPIEnd": 443, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setText(String)", "view.setTag(Site)", "view.setText(String)"], "useStart": [473, 532, 592, 661, 938, 1411, 3526], "useEnd": [505, 560, 626, 698, 974, 1428, 3581], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/qhkyzf/FeiAndroid/tree/master/SysBrowser/src/com/android/browser/kai/WebsiteSettingsActivity.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      View view;\n      final TextView title;\n      final TextView subtitle;\n      ImageView icon;\n      final ImageView usageIcon;\n      final ImageView locationIcon;\n\n      if (convertView == null) {\n        view = mInflater.inflate(mResource, parent, false);\n      } else {\n        view = convertView;\n      }\n\n      title = (TextView) view.findViewById(R.id.title);\n      subtitle = (TextView) view.findViewById(R.id.subtitle);\n      icon = (ImageView) view.findViewById(R.id.icon);\n      usageIcon = (ImageView) view.findViewById(R.id.usage_icon);\n      locationIcon = (ImageView) view.findViewById(R.id.location_icon);\n      usageIcon.setVisibility(View.GONE);\n      locationIcon.setVisibility(View.GONE);\n\n      if (mCurrentSite == null) {\n        setTitle(getString(R.string.pref_extras_website_settings));\n\n        Site site = getItem(position);\n        title.setText(site.getPrettyTitle());\n        subtitle.setText(site.getPrettyOrigin());\n        icon.setVisibility(View.VISIBLE);\n        usageIcon.setVisibility(View.INVISIBLE);\n        locationIcon.setVisibility(View.INVISIBLE);\n        Bitmap bmp = site.getIcon();\n        if (bmp == null) {\n          bmp = mDefaultIcon;\n        }\n        icon.setImageBitmap(bmp);\n        // We set the site as the view's tag,\n        // so that we can get it in onItemClick()\n        view.setTag(site);\n\n        String origin = site.getOrigin();\n        if (site.hasFeature(Site.FEATURE_WEB_STORAGE)) {\n          WebStorage.getInstance()\n              .getUsageForOrigin(\n                  origin,\n                  new ValueCallback<Long>() {\n                    public void onReceiveValue(Long value) {\n                      if (value != null) {\n                        setIconForUsage(usageIcon, value.longValue());\n                      }\n                    }\n                  });\n        }\n\n        if (site.hasFeature(Site.FEATURE_GEOLOCATION)) {\n          locationIcon.setVisibility(View.VISIBLE);\n          GeolocationPermissions.getInstance()\n              .getAllowed(\n                  origin,\n                  new ValueCallback<Boolean>() {\n                    public void onReceiveValue(Boolean allowed) {\n                      if (allowed != null) {\n                        if (allowed.booleanValue()) {\n                          locationIcon.setImageBitmap(mLocationAllowedIcon);\n                        } else {\n                          locationIcon.setImageBitmap(mLocationDisallowedIcon);\n                        }\n                      }\n                    }\n                  });\n        }\n      } else {\n        setTitle(mCurrentSite.getPrettyTitle());\n        icon.setVisibility(View.GONE);\n        String origin = mCurrentSite.getOrigin();\n        switch (mCurrentSite.getFeatureByIndex(position)) {\n          case Site.FEATURE_WEB_STORAGE:\n            WebStorage.getInstance()\n                .getUsageForOrigin(\n                    origin,\n                    new ValueCallback<Long>() {\n                      public void onReceiveValue(Long value) {\n                        if (value != null) {\n                          String usage = sizeValueToString(value.longValue()) + \" \" + sMBStored;\n                          title.setText(R.string.webstorage_clear_data_title);\n                          subtitle.setText(usage);\n                        }\n                      }\n                    });\n            break;\n          case Site.FEATURE_GEOLOCATION:\n            title.setText(R.string.geolocation_settings_page_title);\n            GeolocationPermissions.getInstance()\n                .getAllowed(\n                    origin,\n                    new ValueCallback<Boolean>() {\n                      public void onReceiveValue(Boolean allowed) {\n                        if (allowed != null) {\n                          if (allowed.booleanValue()) {\n                            subtitle.setText(R.string.geolocation_settings_page_summary_allowed);\n                          } else {\n                            subtitle.setText(\n                                R.string.geolocation_settings_page_summary_not_allowed);\n                          }\n                        }\n                      }\n                    });\n            break;\n        }\n      }\n\n      return view;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9977, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 527, "focalAPIEnd": 568, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [527, 599, 687, 754, 1269, 1379, 1379, 1464, 1536, 1602], "useEnd": [593, 656, 720, 789, 1326, 1420, 1448, 1503, 1569, 1637], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_packages_apps_Settings/tree/master/src/com/android/settings/wifi/WifiSettingsForSetupWizardXL.java", "rawCode": "  /**\n   * Called before security fields are correctly set by {@link WifiConfigController}.\n   *\n   * @param view security field view\n   * @param accessPointSecurity type of security. e.g. AccessPoint.SECURITY_NONE\n   * @return true when it is ok for the caller to init security fields. false when all security\n   *     fields are managed by this method, and thus the caller shouldn't touch them.\n   */\n  /* package */ boolean initSecurityFields(View view, int accessPointSecurity) {\n    // Reset all states tweaked below.\n    view.findViewById(R.id.eap_not_supported).setVisibility(View.GONE);\n    view.findViewById(R.id.eap_not_supported_for_add_network).setVisibility(View.GONE);\n    view.findViewById(R.id.ssid_text).setVisibility(View.VISIBLE);\n    view.findViewById(R.id.ssid_layout).setVisibility(View.VISIBLE);\n\n    if (accessPointSecurity == AccessPoint.SECURITY_EAP) {\n      setPaddingVisibility(View.VISIBLE);\n      hideSoftwareKeyboard();\n\n      // In SetupWizard for XLarge screen, we don't have enough space for showing\n      // configurations needed for EAP. We instead disable the whole feature there and let\n      // users configure those networks after the setup.\n      if (view.findViewById(R.id.type_ssid).getVisibility() == View.VISIBLE) {\n        view.findViewById(R.id.eap_not_supported_for_add_network).setVisibility(View.VISIBLE);\n      } else {\n        view.findViewById(R.id.eap_not_supported).setVisibility(View.VISIBLE);\n      }\n      view.findViewById(R.id.security_fields).setVisibility(View.GONE);\n      view.findViewById(R.id.ssid_text).setVisibility(View.GONE);\n      view.findViewById(R.id.ssid_layout).setVisibility(View.GONE);\n      onEapNetworkSelected();\n\n      // This method did init security fields by itself. The caller must not do it.\n      return false;\n    }\n\n    mConnectButton.setVisibility(View.VISIBLE);\n    setPaddingVisibility(View.GONE);\n\n    // In \"add network\" flow, we'll see multiple initSecurityFields() calls with different\n    // accessPointSecurity variable. We want to show software keyboard conditionally everytime\n    // when this method is called.\n    if (mWifiConfig != null) {\n      if (accessPointSecurity == AccessPoint.SECURITY_PSK\n          || accessPointSecurity == AccessPoint.SECURITY_WEP) {\n        mWifiConfig.requestFocusAndShowKeyboard(R.id.password);\n      } else {\n        mWifiConfig.requestFocusAndShowKeyboard(R.id.ssid);\n      }\n    }\n\n    // Let the caller init security fields.\n    return true;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9978, "initialization": ["View view = inflate(*,ViewGroup,boolean)"], "initializationStart": [196], "initializationEnd": [265], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 308, "focalAPIEnd": 351, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setText(CharSequence)", "view.setText(CharSequence)"], "useStart": [393, 479, 784, 869], "useEnd": [436, 521, 804, 890], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/droidjunk_packages_apps_Contacts/tree/master/src/com/android/contacts/detail/ContactDetailFragment.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      final View resultView =\n          (convertView != null)\n              ? convertView\n              : mInflater.inflate(R.layout.account_selector_list_item, parent, false);\n\n      final TextView text1 = (TextView) resultView.findViewById(android.R.id.text1);\n      final TextView text2 = (TextView) resultView.findViewById(android.R.id.text2);\n      final ImageView icon = (ImageView) resultView.findViewById(android.R.id.icon);\n\n      final AccountType accountType = mAccountTypes.get(position);\n\n      CharSequence action = accountType.getInviteContactActionLabel(mContext);\n      CharSequence label = accountType.getDisplayLabel(mContext);\n      if (TextUtils.isEmpty(action)) {\n        text1.setText(label);\n        text2.setVisibility(View.GONE);\n      } else {\n        text1.setText(action);\n        text2.setVisibility(View.VISIBLE);\n        text2.setText(label);\n      }\n      icon.setImageDrawable(accountType.getDisplayIcon(mContext));\n\n      return resultView;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9979, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 91, "focalAPIEnd": 117, "followUpCheck": "view instanceof ListView", "checkType": "IF", "followUpCheckExpressionStart": 124, "followUpCheckExpressionEnd": 153, "followUpCheckBlockStart": 124, "followUpCheckBlockEnd": 191, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iweinzierl/passsafe/tree/master/androidapp/src/de/iweinzierl/passsafe/android/util/UiUtils.java", "rawCode": "  public static ListView getListView(final View parent, final int resId) {\n    View view = parent.findViewById(resId);\n\n    if (view instanceof ListView) {\n      return (ListView) view;\n    }\n\n    return null;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9980, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 92, "focalAPIEnd": 147, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/racamirko/Common-Sense-Net-2/tree/master/RealFarm/src/com/commonsensenet/realfarm/view/WeatherForecastItemWrapper.java", "rawCode": "  public TextView getForecast() {\n    if (mForecast == null) {\n      mForecast = (TextView) mRow.findViewById(R.id.label_weather_forecast_forecast);\n    }\n    return (mForecast);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9981, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 109, "focalAPIEnd": 138, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setVisibility(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [109, 169, 234, 300, 568, 568, 703, 834, 834, 969, 1111], "useEnd": [163, 203, 269, 335, 597, 625, 737, 863, 891, 1004, 1146], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kitkatandroid/JLS36G_settings/tree/master/src/com/android/settings/vpn2/VpnDialog.java", "rawCode": "  private void changeType(int type) {\n    // First, hide everything.\n    mMppe.setVisibility(View.GONE);\n    mView.findViewById(R.id.l2tp).setVisibility(View.GONE);\n    mView.findViewById(R.id.ipsec_psk).setVisibility(View.GONE);\n    mView.findViewById(R.id.ipsec_user).setVisibility(View.GONE);\n    mView.findViewById(R.id.ipsec_peer).setVisibility(View.GONE);\n\n    // Then, unhide type-specific fields.\n    switch (type) {\n      case VpnProfile.TYPE_PPTP:\n        mMppe.setVisibility(View.VISIBLE);\n        break;\n\n      case VpnProfile.TYPE_L2TP_IPSEC_PSK:\n        mView.findViewById(R.id.l2tp).setVisibility(View.VISIBLE);\n        // fall through\n      case VpnProfile.TYPE_IPSEC_XAUTH_PSK:\n        mView.findViewById(R.id.ipsec_psk).setVisibility(View.VISIBLE);\n        break;\n\n      case VpnProfile.TYPE_L2TP_IPSEC_RSA:\n        mView.findViewById(R.id.l2tp).setVisibility(View.VISIBLE);\n        // fall through\n      case VpnProfile.TYPE_IPSEC_XAUTH_RSA:\n        mView.findViewById(R.id.ipsec_user).setVisibility(View.VISIBLE);\n        // fall through\n      case VpnProfile.TYPE_IPSEC_HYBRID_RSA:\n        mView.findViewById(R.id.ipsec_peer).setVisibility(View.VISIBLE);\n        break;\n    }\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9982, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 871, "focalAPIEnd": 906, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/development/tree/master/samples/ApiDemos/src/com/example/android/apis/view/List14.java", "rawCode": "    /**\n     * Make a view to hold each row.\n     *\n     * @see android.widget.ListAdapter#getView(int, android.view.View, android.view.ViewGroup)\n     */\n    public View getView(int position, View convertView, ViewGroup parent) {\n      // A ViewHolder keeps references to children views to avoid unneccessary calls\n      // to findViewById() on each row.\n      ViewHolder holder;\n\n      // When convertView is not null, we can reuse it directly, there is no need\n      // to reinflate it. We only inflate a new View when the convertView supplied\n      // by ListView is null.\n      if (convertView == null) {\n        convertView = mInflater.inflate(R.layout.list_item_icon_text, null);\n\n        // Creates a ViewHolder and store references to the two children views\n        // we want to bind data to.\n        holder = new ViewHolder();\n        holder.text = (TextView) convertView.findViewById(R.id.text);\n        holder.icon = (ImageView) convertView.findViewById(R.id.icon);\n\n        convertView.setTag(holder);\n      } else {\n        // Get the ViewHolder back to get fast access to the TextView\n        // and the ImageView.\n        holder = (ViewHolder) convertView.getTag();\n      }\n\n      // Bind the data efficiently with the holder.\n      holder.text.setText(DATA[position]);\n      holder.icon.setImageBitmap((position & 1) == 1 ? mIcon1 : mIcon2);\n\n      return convertView;\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9983, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 101, "focalAPIEnd": 122, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)", "view.setOnClickListener(OnClickListener)"], "useStart": [128, 174], "useEnd": [168, 197], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nescara1/linphone2/tree/master/src/org/linphone/LinphoneUtils.java", "rawCode": "  public static void enableView(View root, int id, OnClickListener l, boolean enable) {\n    View v = root.findViewById(id);\n    v.setVisibility(enable ? VISIBLE : GONE);\n    v.setOnClickListener(l);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9984, "initialization": ["View view = getLayoutInflater()"], "initializationStart": [133], "initializationEnd": [157], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 223, "focalAPIEnd": 263, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setAdapter(LoginOptionsAdapter)", "new PopupWindow(view,int,*,boolean)"], "useStart": [359, 421], "useEnd": [394, 490], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wangwang4git/4MyLove/tree/master/src/com/bbs/whu/activity/LoginActivity.java", "rawCode": "  /** 初始化PopupWindow */\n  private void initPopuWindow() {\n\n    initDatas();\n\n    // PopupWindow浮动下拉框布局\n    View loginwindow = (View) this.getLayoutInflater().inflate(R.layout.login_options, null);\n    listView = (ListView) loginwindow.findViewById(R.id.user_list);\n\n    // 设置自定义Adapter\n    optionsAdapter = new LoginOptionsAdapter(this, mHandler, datas);\n    listView.setAdapter(optionsAdapter);\n\n    selectPopupWindow = new PopupWindow(loginwindow, pwidth, LayoutParams.WRAP_CONTENT, true);\n\n    selectPopupWindow.setOutsideTouchable(true);\n\n    // 这一句是为了实现弹出PopupWindow后，当点击屏幕其他部分及Back键时PopupWindow会消失，\n    // 没有这一句则效果不能出来，但并不会影响背景\n    // 本人能力极其有限，不明白其原因，还望高手、知情者指点一下\n    selectPopupWindow.setBackgroundDrawable(new BitmapDrawable());\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9985, "initialization": ["View view = inflate(*,*)"], "initializationStart": [165], "initializationEnd": [217], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "view==null", "guardType": "IF {", "guardExpressionStart": 120, "guardExpressionEnd": 143, "guardBlockStart": 120, "guardBlockEnd": 366, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 249, "focalAPIEnd": 299, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setOnClickListener(Button.OnClickListener)", "setContentView(view)"], "useStart": [307, 372], "useEnd": [359, 398], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/MySettings/tree/master/src/com/android/settings/MediaFormat.java", "rawCode": "  /** Configure the UI for the final confirmation interaction */\n  private void establishFinalConfirmationState() {\n    if (mFinalView == null) {\n      mFinalView = mInflater.inflate(R.layout.media_format_final, null);\n      mFinalButton = (Button) mFinalView.findViewById(R.id.execute_media_format);\n      mFinalButton.setOnClickListener(mFinalClickListener);\n    }\n\n    setContentView(mFinalView);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9986, "initialization": ["View view = getLayoutInflater()"], "initializationStart": [71], "initializationEnd": [90], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 166, "focalAPIEnd": 202, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.getTextColors()", "view.setTextColor(int)", "view.setText(String)", "view.findViewById(int)", "AlertDialog.Builder.setView(view)"], "useStart": [240, 209, 327, 562, 1350], "useEnd": [264, 283, 498, 611, 1371], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/doits/Sparse-RSS/tree/master/src/de/shandschuh/sparserss/MainTabActivity.java", "rawCode": "  void setupLicenseText(AlertDialog.Builder builder) {\n    View view = getLayoutInflater().inflate(R.layout.license, null);\n\n    final TextView textView = (TextView) view.findViewById(R.id.license_text);\n\n    textView.setTextColor(\n        textView.getTextColors().getDefaultColor()); // disables color change on selection\n    textView.setText(\n        new StringBuilder(getString(R.string.license_intro))\n            .append(Strings.THREENEWLINES)\n            .append(getString(R.string.license)));\n\n    final TextView contributorsTextView =\n        (TextView) view.findViewById(R.id.contributors_togglebutton);\n\n    contributorsTextView.setOnClickListener(\n        new OnClickListener() {\n          boolean showingLicense = true;\n\n          @Override\n          public void onClick(View view) {\n            if (showingLicense) {\n              textView.setText(R.string.contributors_list);\n              contributorsTextView.setText(R.string.license_word);\n            } else {\n              textView.setText(\n                  new StringBuilder(getString(R.string.license_intro))\n                      .append(Strings.THREENEWLINES)\n                      .append(getString(R.string.license)));\n              contributorsTextView.setText(R.string.contributors);\n            }\n            showingLicense = !showingLicense;\n          }\n        });\n    builder.setView(view);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9987, "initialization": ["View view = inflate(*,*)"], "initializationStart": [393], "initializationEnd": [441], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 485, "focalAPIEnd": 525, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)"], "useStart": [531], "useEnd": [555], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zh2009/CHIPS/tree/master/CHIPSApp/src/com/chips/adapters/ExpandableFavoritesAdapter.java", "rawCode": "  @Override\n  public View getGroupView(\n      int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    MealRecord meal = (MealRecord) getGroup(groupPosition);\n\n    String group = meal.getName();\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.meal_group, null);\n    }\n    TextView groupName = (TextView) convertView.findViewById(R.id.groupName);\n    groupName.setText(group);\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9988, "initialization": ["View view = inflate(*,*)"], "initializationStart": [104], "initializationEnd": [149], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 180, "focalAPIEnd": 214, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)"], "useStart": [220], "useEnd": [247], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zhoulzhou/IPCPlayer/tree/master/src/com/example/ipcplayer/merge/CTVAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    convertView = mInflater.inflate(R.layout.merge_item1, null);\n    TextView iv = (TextView) convertView.findViewById(R.id.tx1);\n    iv.setText(\"merge example\");\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9989, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 218, "focalAPIEnd": 258, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [288, 353, 417, 487, 564, 642, 708, 771], "useEnd": [328, 392, 456, 530, 608, 683, 741, 809], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dayana7789/apprhc/tree/master/src/com/nahmens/rhcimax/controlador/DatosEmpresaActivity.java", "rawCode": "  /**\n   * Funcion que almacena la referencia de los campos de tal manera que estos sean calculados una\n   * sola vez.\n   *\n   * @param view\n   */\n  private void setReferenciaCampos(View v) {\n    etNombre = (EditText) v.findViewById(R.id.textEditNombEmpresa);\n    etTelefono = (EditText) v.findViewById(R.id.textEditTelfEmpresa);\n    etWeb = (EditText) v.findViewById(R.id.textEditWebEmpresa);\n    etRif = (EditText) v.findViewById(R.id.textEditRifEmpresa);\n    etDirFiscal = (EditText) v.findViewById(R.id.textEditDirFiscEmpresa);\n    etDirComercial = (EditText) v.findViewById(R.id.textEditDirComerEmpresa);\n    tvErrorPermiso = (TextView) v.findViewById(R.id.textViewErrorPermiso);\n    bSalvar = (Button) v.findViewById(R.id.buttonSalvar);\n    bCopiar = (ImageButton) v.findViewById(R.id.imageButtonCopiar);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9990, "initialization": ["View view = ListView.getChildAt(int)"], "initializationStart": [185], "initializationEnd": [207], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 230, "focalAPIEnd": 273, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["clickOnView(view)"], "useStart": [213], "useEnd": [274], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/SmruthiManjunath/owncloud_friends/tree/master/src/com/owncloud/android/test/AddFriendsActivityTest.java", "rawCode": "  public void testremoveBtn() {\n\n    // Button removeBtn = (Button)solo.getView(R.id.removebtn1);\n    ListView listview = (ListView) solo.getView(R.id.listview);\n    View listElement = listview.getChildAt(0);\n    solo.clickOnView((listElement).findViewById(R.id.removebtn1));\n\n    assertTrue(this.solo.waitForText(\"You removed friend successfully\"));\n    assertTrue(solo.searchText(\"You removed friend successfully\"));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9991, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 88, "focalAPIEnd": 119, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(int)", "view.findViewById(int)", "view.setVisibility(int)"], "useStart": [88, 170, 170], "useEnd": [144, 201, 229], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidTh3ory/packages_apps_Settings/tree/master/src/com/android/settings/wifi/WifiApDialog.java", "rawCode": "  private void showSecurityFields() {\n    if (mSecurityTypeIndex == OPEN_INDEX) {\n      mView.findViewById(R.id.fields).setVisibility(View.GONE);\n      return;\n    }\n    mView.findViewById(R.id.fields).setVisibility(View.VISIBLE);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9992, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 96, "focalAPIEnd": 128, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [163, 221, 489, 558, 632, 898], "useEnd": [197, 261, 526, 597, 674, 940], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dzo/packages_apps_settings/tree/master/src/com/android/settings/inputmethod/SingleSpellCheckerPreference.java", "rawCode": "  @Override\n  protected void onBindView(View view) {\n    super.onBindView(view);\n    mPrefAll = view.findViewById(R.id.pref_all);\n    mRadioButton = (RadioButton) view.findViewById(R.id.pref_radio);\n    mPrefLeftButton = view.findViewById(R.id.pref_left_button);\n    mPrefLeftButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onLeftButtonClicked(arg0);\n          }\n        });\n    mTitleText = (TextView) view.findViewById(android.R.id.title);\n    mSummaryText = (TextView) view.findViewById(android.R.id.summary);\n    mSubtypeButton = (ImageView) view.findViewById(R.id.pref_right_button2);\n    mSubtypeButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onSubtypeButtonClicked(arg0);\n          }\n        });\n    mSettingsButton = view.findViewById(R.id.pref_right_button1);\n    mSettingsButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            onSettingsButtonClicked(arg0);\n          }\n        });\n    updateSelectedState(mSelected);\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9993, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(view==null)", "guardType": "IF {", "guardExpressionStart": 39, "guardExpressionEnd": 57, "guardBlockStart": 39, "guardBlockEnd": 65, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 168, "focalAPIEnd": 213, "followUpCheck": "view == null", "checkType": "IF", "followUpCheckExpressionStart": 220, "followUpCheckExpressionEnd": 248, "followUpCheckBlockStart": 220, "followUpCheckBlockEnd": 256, "use": ["view.setVisibility(int)", "view.getPaddingLeft()", "view.setPadding(int,int,int,int)", "view.getChildCount()", "view.removeViews(int,int)", "view.addView(ImageView)", "view.setMinimumWidth(int)"], "useStart": [261, 346, 310, 555, 615, 664, 700], "useEnd": [304, 378, 494, 586, 652, 694, 734], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/IDKJava/the-elements/tree/master/android-ColorPickerPreference/src/net/margaritov/preference/colorpicker/ColorPickerPreference.java", "rawCode": "  private void setPreviewColor() {\n    if (mView == null) return;\n    ImageView iView = new ImageView(getContext());\n    LinearLayout widgetFrameView = ((LinearLayout) mView.findViewById(android.R.id.widget_frame));\n    if (widgetFrameView == null) return;\n    widgetFrameView.setVisibility(View.VISIBLE);\n    widgetFrameView.setPadding(\n        widgetFrameView.getPaddingLeft(),\n        widgetFrameView.getPaddingTop(),\n        (int) (mDensity * 8),\n        widgetFrameView.getPaddingBottom());\n    // remove already create preview image\n    int count = widgetFrameView.getChildCount();\n    if (count > 0) {\n      widgetFrameView.removeViews(0, count);\n    }\n    widgetFrameView.addView(iView);\n    widgetFrameView.setMinimumWidth(0);\n    iView.setBackgroundDrawable(new AlphaPatternDrawable((int) (5 * mDensity)));\n    iView.setImageBitmap(getPreviewBitmap());\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9994, "initialization": ["View view = inflate(*,*)"], "initializationStart": [133], "initializationEnd": [188], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 208, "focalAPIEnd": 251, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["initTapZone(view,int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "BaseDialog.setView(view)"], "useStart": [196, 275, 342, 409, 476, 543, 610, 677, 744, 826], "useEnd": [255, 318, 385, 452, 519, 586, 653, 720, 787, 843], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onyx-intl/boox-opensource/tree/master/code/src/cr3/android/src/org/coolreader/crengine/OptionsDialog.java", "rawCode": "    public void onSelect() {\n      BaseDialog dlg = new BaseDialog(mActivity, R.string.dlg_button_ok, 0, false);\n      grid = (View) mInflater.inflate(R.layout.options_tap_zone_grid, null);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell1), 1);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell2), 2);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell3), 3);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell4), 4);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell5), 5);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell6), 6);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell7), 7);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell8), 8);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell9), 9);\n      dlg.setTitle(label);\n      dlg.setView(grid);\n      dlg.show();\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9995, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 299, "focalAPIEnd": 340, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/VLebedinskyi/FMV_client/tree/master/src/com/music/fms/adapters/SearchSongAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent, PlayAbleSong song) {\n    ViewHolder holder = null;\n    if (convertView == null) {\n      holder = new ViewHolder();\n      convertView = inflateView(R.layout.search_songs_row, parent);\n      holder.owner = (TextView) convertView.findViewById(R.id.song_owner);\n      holder.duration = (TextView) convertView.findViewById(R.id.duration);\n      holder.isCached = convertView.findViewById(R.id.is_cached);\n      holder.name = (TextView) convertView.findViewById(R.id.song_name);\n      holder.play = convertView.findViewById(R.id.song_play);\n      holder.addToQueue = convertView.findViewById(R.id.song_add_to_queu);\n      holder.download = convertView.findViewById(R.id.song_download);\n      convertView.setTag(holder);\n    } else holder = (ViewHolder) convertView.getTag();\n\n    holder.download.setOnClickListener(new ButtonListener(song, position));\n    holder.addToQueue.setOnClickListener(new ButtonListener(song, position));\n    holder.play.setOnClickListener(new ButtonListener(song, position));\n\n    holder.owner.setText(song.getArtist());\n    holder.name.setText(song.getName());\n    holder.duration.setText(song.getNiceDuration());\n\n    if (core.getCacheManager().isSongExists(song)) {\n      holder.isCached.setVisibility(View.VISIBLE);\n    } else holder.isCached.setVisibility(View.GONE);\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9996, "initialization": ["View view = inflate(*,*)"], "initializationStart": [480], "initializationEnd": [526], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 571, "focalAPIEnd": 610, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.setText(String)"], "useStart": [652, 735, 779], "useEnd": [695, 772, 809], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ese-unibe-ch/ese2013-team9/tree/master/ShoppyApp/src/com/eseteam9/shoppyapp/adapters/ExpandableListAdapter.java", "rawCode": "  @Override\n  public View getChildView(\n      int groupPosition,\n      final int childPosition,\n      boolean isLastChild,\n      View convertView,\n      ViewGroup parent) {\n\n    Item[] items = Items.getByListId(this.context, listDataHeader[groupPosition].id());\n    Item item = items[childPosition];\n\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.item_row, null);\n    }\n\n    TextView childName = (TextView) convertView.findViewById(R.id.itemname);\n    TextView childQuantity = (TextView) convertView.findViewById(R.id.quantityText);\n    CheckBox childStatus = (CheckBox) convertView.findViewById(R.id.status);\n\n    childName.setText(item.name());\n    childQuantity.setText(item.quantity());\n    childStatus.setChecked(item.bought());\n    childStatus.setTag(item.id());\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9997, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.getContext()"], "configurationStart": [49], "configurationEnd": [67], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 103, "focalAPIEnd": 143, "followUpCheck": "view == null || true", "checkType": "IF", "followUpCheckExpressionStart": 422, "followUpCheckExpressionEnd": 496, "followUpCheckBlockStart": 422, "followUpCheckBlockEnd": 675, "use": ["view.findViewById(int)", "view.findViewById(int)", "view.findViewById(int)", "view.setContextView(ActionBarContextView)", "view.isSplitActionBar()"], "useStart": [187, 279, 369, 681, 757], "useEnd": [235, 329, 415, 721, 787], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/victoryckl/android-demos/tree/master/TextReader/actionbarsherlock/src/com/actionbarsherlock/internal/app/ActionBarImpl.java", "rawCode": "  private void init(View decor) {\n    mContext = decor.getContext();\n    mActionView = (ActionBarView) decor.findViewById(R.id.abs__action_bar);\n    mContextView = (ActionBarContextView) decor.findViewById(R.id.abs__action_context_bar);\n    mContainerView = (ActionBarContainer) decor.findViewById(R.id.abs__action_bar_container);\n    mSplitView = (ActionBarContainer) decor.findViewById(R.id.abs__split_action_bar);\n\n    if (mActionView == null || mContextView == null || mContainerView == null) {\n      throw new IllegalStateException(\n          getClass().getSimpleName()\n              + \" can only be used \"\n              + \"with a compatible window decor layout\");\n    }\n\n    mActionView.setContextView(mContextView);\n    mContextDisplayMode =\n        mActionView.isSplitActionBar() ? CONTEXT_DISPLAY_SPLIT : CONTEXT_DISPLAY_NORMAL;\n\n    // Older apps get the home button interaction enabled by default.\n    // Newer apps need to enable it explicitly.\n    boolean homeButtonEnabled =\n        mContext.getApplicationInfo().targetSdkVersion < Build.VERSION_CODES.ICE_CREAM_SANDWICH;\n\n    // If the homeAsUp display option is set, always enable the home button.\n    homeButtonEnabled |= (mActionView.getDisplayOptions() & ActionBar.DISPLAY_HOME_AS_UP) != 0;\n\n    setHomeButtonEnabled(homeButtonEnabled);\n\n    setHasEmbeddedTabs(getResources_getBoolean(mContext, R.bool.abs__action_bar_embed_tabs));\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 9998, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 106, "focalAPIEnd": 135, "followUpCheck": "view != null", "checkType": "IF", "followUpCheckExpressionStart": 388, "followUpCheckExpressionEnd": 409, "followUpCheckBlockStart": 388, "followUpCheckBlockEnd": 516, "use": ["view.setBackgroundColor(int)", "view.findViewById(int)", "view.findViewById(int)"], "useStart": [420, 551, 753], "useEnd": [507, 588, 789], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Calendar/tree/master/src/com/android/calendar/event/EditEventView.java", "rawCode": "    @Override\n    public void bindView(View view, Context context, Cursor cursor) {\n      View colorBar = view.findViewById(R.id.color);\n      int colorColumn = cursor.getColumnIndexOrThrow(Calendars.CALENDAR_COLOR);\n      int nameColumn = cursor.getColumnIndexOrThrow(Calendars.CALENDAR_DISPLAY_NAME);\n      int ownerColumn = cursor.getColumnIndexOrThrow(Calendars.OWNER_ACCOUNT);\n      if (colorBar != null) {\n        colorBar.setBackgroundColor(Utils.getDisplayColorFromColor(cursor.getInt(colorColumn)));\n      }\n\n      TextView name = (TextView) view.findViewById(R.id.calendar_name);\n      if (name != null) {\n        String displayName = cursor.getString(nameColumn);\n        name.setText(displayName);\n\n        TextView accountName = (TextView) view.findViewById(R.id.account_name);\n        if (accountName != null) {\n          accountName.setText(cursor.getString(ownerColumn));\n          accountName.setVisibility(TextView.VISIBLE);\n        }\n      }\n    }\n"}, {"dataset": "viewFindViewById", "exampleID": 9999, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 437, "focalAPIEnd": 500, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envived-client/tree/master/src/com/envived/android/features/program/PresentationCommentListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n\n    if (convertView == null) {\n      convertView = mInflater.inflate(R.layout.program_presentation_comment_row, parent, false);\n\n      // Creates a ViewHolder and store references to the two children views\n      // we want to bind data to.\n      holder = new ViewHolder();\n      holder.wrapperLayout =\n          (LinearLayout) convertView.findViewById(R.id.presentation_comment_row_wrapper);\n      holder.author = (TextView) convertView.findViewById(R.id.presentation_comment_author);\n      holder.date = (TextView) convertView.findViewById(R.id.presentation_comment_date);\n      holder.text = (TextView) convertView.findViewById(R.id.presentation_comment_text);\n\n      convertView.setTag(holder);\n    } else {\n      // Get the ViewHolder back to get fast access to the TextView\n      // and the ImageView.\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Resources r = mContext.getResources();\n    int marginPx =\n        (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 40, r.getDisplayMetrics());\n\n    LinearLayout.LayoutParams marginLayoutParams =\n        new LinearLayout.LayoutParams(\n            LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n\n    PresentationComment currentComment = (PresentationComment) getItem(position);\n    int currentLayout = LEFT;\n\n    if (position == 0) {\n      currentLayout = LEFT;\n    } else {\n      // get previous item\n      PresentationComment prevComment = (PresentationComment) getItem(position - 1);\n      Integer prevLayout = mCommentLayoutMap.get(prevComment.getCommentUrl());\n      if (prevLayout == null) {\n        prevLayout = LEFT;\n      }\n\n      if (currentComment.getCommentOwnerUrl().equals(prevComment.getCommentOwnerUrl())) {\n        currentLayout = prevLayout;\n      } else {\n        currentLayout = 1 - prevLayout;\n      }\n    }\n\n    mCommentLayoutMap.put(currentComment.getCommentUrl(), currentLayout);\n\n    if (currentLayout == LEFT) {\n      // to the left\n      marginLayoutParams.rightMargin = marginPx;\n      marginLayoutParams.gravity = Gravity.LEFT;\n      holder.wrapperLayout.setBackgroundDrawable(\n          (mContext\n              .getResources()\n              .getDrawable(R.drawable.feature_program_presentation_comment_wrapper)));\n    } else {\n      // to the right\n      marginLayoutParams.leftMargin = marginPx;\n      marginLayoutParams.gravity = Gravity.RIGHT;\n      holder.wrapperLayout.setBackgroundDrawable(\n          mContext\n              .getResources()\n              .getDrawable(R.drawable.feature_program_presentation_comment_wrapper_gray));\n    }\n\n    holder.wrapperLayout.setLayoutParams(marginLayoutParams);\n\n    bind(holder, position);\n\n    return convertView;\n  }\n"}, {"dataset": "viewFindViewById", "exampleID": 10000, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = view.findViewById(id)", "focalAPIStart": 473, "focalAPIEnd": 508, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/facebook-android-sdk-3.0.1/samples/Hackbook/src/com/facebook/android/Places.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      JSONObject jsonObject = null;\n      try {\n        jsonObject = jsonArray.getJSONObject(position);\n      } catch (JSONException e1) {\n        e1.printStackTrace();\n      }\n      View hView = convertView;\n      if (convertView == null) {\n        hView = mInflater.inflate(R.layout.place_item, null);\n        ViewHolder holder = new ViewHolder();\n        holder.name = (TextView) hView.findViewById(R.id.place_name);\n        holder.location = (TextView) hView.findViewById(R.id.place_location);\n        hView.setTag(holder);\n      }\n\n      ViewHolder holder = (ViewHolder) hView.getTag();\n      try {\n        holder.name.setText(jsonObject.getString(\"name\"));\n      } catch (JSONException e) {\n        holder.name.setText(\"\");\n      }\n      try {\n        String location =\n            jsonObject.getJSONObject(\"location\").getString(\"street\")\n                + \", \"\n                + jsonObject.getJSONObject(\"location\").getString(\"city\")\n                + \", \"\n                + jsonObject.getJSONObject(\"location\").getString(\"state\");\n        holder.location.setText(location);\n      } catch (JSONException e) {\n        holder.location.setText(\"\");\n      }\n      return hView;\n    }\n"}]