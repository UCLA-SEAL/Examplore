[{"dataset": "inflate", "exampleID": 4701, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 59, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["new ViewHolder(view)"], "useStart": [132], "useEnd": [149], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamSourcery/packages_apps_Settings/tree/master/src/com/android/settings/applications/RunningProcessesView.java", "rawCode": "    public View newView(ViewGroup parent) {\n      View v = mInflater.inflate(R.layout.running_processes_item, parent, false);\n      new ViewHolder(v);\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4702, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 216, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MMS-Projects/copyit-app/tree/master/android/libs/android/actionbarsherlock/src/com/actionbarsherlock/internal/view/menu/BaseMenuPresenter.java", "rawCode": "  /**\n   * Create a new item view that can be re-bound to other item data later.\n   *\n   * @return The new item view\n   */\n  public MenuView.ItemView createItemView(ViewGroup parent) {\n    return (MenuView.ItemView) mSystemInflater.inflate(mItemLayoutRes, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4703, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 403, "focalAPIEnd": 463, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [496, 550], "useEnd": [526, 586], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MentoSchool/skincare/tree/master/Collage_SkinCare/src/com/collage/skincare/fragment/weather/FragWeatherFun_CustemCalleryAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View mview = convertView;\n\n    // int[] mImageID = { R.drawable.weather_icon_01,\n    // R.drawable.weather_icon_02, R.drawable.weather_icon_03,\n    // R.drawable.weather_icon_04, R.drawable.weather_icon_05 };\n\n    String[] weather_code = {\"꽃가루 지수\", \"불퀘지수\", \"썬글라스\", \"감기지수\"};\n    if (mview == null) {\n      mview = mInflater.inflate(R.layout.frag_weather_today_gallery, null);\n    }\n\n    image = (ImageView) mview.findViewById(R.id.image);\n    view = (TextView) mview.findViewById(R.id.GalleryText);\n    image.setBackgroundResource(mImageID[position]);\n    view.setText(weather_code[position]);\n\n    return mview;\n  }\n"}, {"dataset": "inflate", "exampleID": 4704, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 178, "focalAPIEnd": 231, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.Tab,boolean)", "view.setBackgroundDrawable(*)", "view.setLayoutParams(*)", "view.setFocusable(boolean)", "view.setOnClickListener(TabClickListener)"], "useStart": [237, 303, 346, 480, 614], "useEnd": [272, 338, 459, 506, 659], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zfdang/asm-android-client-for-newsmth/tree/master/libs/ActionBarSherlock/src/com/actionbarsherlock/internal/widget/ScrollingTabContainerView.java", "rawCode": "  private TabView createTabView(ActionBar.Tab tab, boolean forAdapter) {\n    // Workaround for not being able to pass a defStyle on pre-3.0\n    final TabView tabView = (TabView) mInflater.inflate(R.layout.abs__action_bar_tab, null);\n    tabView.init(this, tab, forAdapter);\n\n    if (forAdapter) {\n      tabView.setBackgroundDrawable(null);\n      tabView.setLayoutParams(\n          new ListView.LayoutParams(ListView.LayoutParams.MATCH_PARENT, mContentHeight));\n    } else {\n      tabView.setFocusable(true);\n\n      if (mTabClickListener == null) {\n        mTabClickListener = new TabClickListener();\n      }\n      tabView.setOnClickListener(mTabClickListener);\n    }\n    return tabView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4705, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 97, "focalAPIEnd": 157, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/erikwt/ParandroidMessaging/tree/master/src/org/parandroid/sms/ui/MessageListAdapter.java", "rawCode": "  @Override\n  public View newView(Context context, Cursor cursor, ViewGroup parent) {\n    return mInflater.inflate(R.layout.message_list_item, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4706, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 115, "focalAPIEnd": 171, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [217, 410], "useEnd": [250, 448], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Th0ra/Naamakahvi/tree/master/Naamakahvi-parent/android-ui/src/naamakahvi/android/MainActivity.java", "rawCode": "  private TableRow makeProductRow(final IProduct product, TableRow t) {\n\n    if (t == null) {\n      t = (TableRow) this.mInflater.inflate(R.layout.product_table_row, null);\n    }\n\n    final TextView name = (TextView) t.findViewById(R.id.product_name);\n    name.setText(product.getName());\n\n    final Context c = this;\n\n    for (int i = 0; i < PRODUCT_QTY_BUTTONS.length; ++i) {\n      final Button b = (Button) t.findViewById(PRODUCT_QTY_BUTTONS[i]);\n      final int qty = i + 1;\n\n      b.setOnClickListener(\n          new View.OnClickListener() {\n\n            public void onClick(final View v) {\n              if (!MainActivity.this.mActionStarted) {\n                MainActivity.this.mActionStarted = true;\n                final Intent in = new Intent(c, RecogActivity.class);\n                final Basket b = new Basket();\n                b.addProduct(product, qty);\n                in.putExtra(ExtraNames.PRODUCTS, b);\n                startActivityForResult(in, REQUEST_IDENTIFY);\n              }\n            }\n          });\n\n      b.setOnLongClickListener(\n          new View.OnLongClickListener() {\n\n            public boolean onLongClick(final View v) {\n              if (!MainActivity.this.mActionStarted) {\n                MainActivity.this.mActionStarted = true;\n                final Intent in = new Intent(c, LoginwithusernameActivity.class);\n                final Basket b = new Basket();\n                b.addProduct(product, qty);\n                in.putExtra(ExtraNames.PRODUCTS, b);\n                startActivityForResult(in, REQUEST_LOGIN);\n                return true;\n              }\n              return false;\n            }\n          });\n    }\n\n    return t;\n  }\n"}, {"dataset": "inflate", "exampleID": 4707, "initialization": ["LayoutInflater layoutInflater = getLayoutInflater()"], "initializationStart": [241], "initializationEnd": [260], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 284, "focalAPIEnd": 323, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "Builder.setView(view)", "view.invalidate()"], "useStart": [362, 902, 1057, 1092], "useEnd": [403, 943, 1086, 1115], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ccard/csci422FinalProject/tree/master/To_DoList/src/csci422/CandN/to_dolist/DetailForm.java", "rawCode": "  /**\n   * This method opens our date_dialog so user can select a date and we can keep it in a certain\n   * formate\n   *\n   * @param v\n   */\n  public void openCal(View v) {\n    Builder calDialog = new Builder(this);\n    LayoutInflater inf = getLayoutInflater();\n    View dialogView = inf.inflate(R.layout.date_dialog, null);\n    DatePicker date1 = ((DatePicker) dialogView.findViewById(R.id.datePicker1));\n    try {\n      dueDate = dateFormat.parse(datetext.getText().toString());\n    } catch (ParseException e) {\n      Log.e(tag, \"Can't parse the date. User probably edited manually:\");\n      Log.e(tag, e.getMessage());\n      dueDate = new Date(); // default to current time if user goofed up.\n    }\n    Calendar c = new GregorianCalendar();\n    c.setTime(dueDate);\n    date1.init(c.get(Calendar.YEAR), c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH), null);\n    TimePicker time1 = ((TimePicker) dialogView.findViewById(R.id.timePicker1));\n    time1.setCurrentHour(c.get(Calendar.HOUR_OF_DAY));\n    time1.setCurrentMinute(c.get(Calendar.MINUTE));\n    calDialog.setView(dialogView);\n    dialogView.invalidate();\n    calDialog.setCancelable(true);\n    calDialog.setPositiveButton(\n        \"Done\",\n        new OnClickListener() {\n\n          public void onClick(DialogInterface dialog, int which) {\n            ((TextView) ((Dialog) dialog).findViewById(R.id.pleaseWaitMessage))\n                .setText(\"Saving...\");\n            DatePicker dp = ((DatePicker) ((Dialog) dialog).findViewById(R.id.datePicker1));\n            TimePicker tp = ((TimePicker) ((Dialog) dialog).findViewById(R.id.timePicker1));\n            GregorianCalendar gc;\n            gc =\n                new GregorianCalendar(\n                    dp.getYear(),\n                    dp.getMonth(),\n                    dp.getDayOfMonth(),\n                    tp.getCurrentHour(),\n                    tp.getCurrentMinute()); // Is this the current, or selected?\n            DetailForm.this.setDueDate(gc.getTime());\n          }\n        });\n    calDialog.show();\n  }\n"}, {"dataset": "inflate", "exampleID": 4708, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 196, "focalAPIEnd": 242, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [875, 945], "useEnd": [901, 965], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mfportzert/Quizz-Places/tree/master/src/com/quizz/places/adapters/SectionsItemAdapter.java", "rawCode": "  @SuppressWarnings(\"deprecation\")\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n    if (convertView == null) {\n\n      convertView = this.mInflater.inflate(this.mLineLayout, null);\n\n      holder = new ViewHolder();\n      holder.name = (TextView) convertView.findViewById(R.id.sectionName);\n      holder.levels = (TextView) convertView.findViewById(R.id.sectionNbLevels);\n      holder.buttonEnter = (ImageView) convertView.findViewById(R.id.sectionEnterButton);\n      holder.progressSwitcher =\n          (ViewSwitcher) convertView.findViewById(R.id.sectionProgressSwitcher);\n      holder.progress = (SectionProgressView) convertView.findViewById(R.id.sectionProgress);\n      holder.sectionUnlockLabel = (TextView) convertView.findViewById(R.id.sectionUnlockLabel);\n\n      holder.buttonEnter.setAlpha(225);\n\n      convertView.setTag(holder);\n\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Section section = getItem(position);\n    holder.name.setText(section.name);\n    holder.progress.setProgressDrawable(mProgressDrawables[position % mProgressDrawables.length]);\n\n    holder.levels.setText(this.nbDoneLevels(section) + \"/\" + section.levels.size());\n\n    if (section.levels != null && section.levels.size() > 0) {\n      int nbLevelsCleared = 0;\n      for (Level lvl : section.levels) {\n        nbLevelsCleared += (lvl.status == Level.STATUS_LEVEL_CLEAR) ? 1 : 0;\n      }\n      float progressValue = (nbLevelsCleared * 100.0f) / section.levels.size();\n      holder.progress.setProgressValue(progressValue);\n    } else {\n      holder.progress.setProgressValue(1);\n    }\n\n    int verticalPadding = (int) ConvertUtils.convertDpToPixels(2.5f, getContext());\n    int horizontalPadding = (int) ConvertUtils.convertDpToPixels(3f, getContext());\n    holder.progress.setPaddingProgress(\n        horizontalPadding, verticalPadding, horizontalPadding, verticalPadding);\n\n    // Section locked management\n    boolean sectionLocked = (section.status == Section.SECTION_LOCKED);\n    Drawable sectionDrawable = null;\n\n    holder.sectionUnlockLabel.setText(\"\");\n\n    if (sectionLocked) {\n      sectionDrawable = mLockDrawable;\n\n      int levelCountToUnlockSection = section.remainingClearedLevelCount();\n      if (levelCountToUnlockSection != -1) {\n        holder.sectionUnlockLabel.setVisibility(View.VISIBLE);\n        holder.sectionUnlockLabel.setText(\n            Html.fromHtml(\n                mContext\n                    .getResources()\n                    .getQuantityString(\n                        R.plurals.unlock_section_requirement,\n                        levelCountToUnlockSection,\n                        levelCountToUnlockSection)));\n      }\n\n    } else if (section.isComplete()) {\n      sectionDrawable = mCompleteDrawable;\n    }\n\n    holder.name.setCompoundDrawablesWithIntrinsicBounds(sectionDrawable, null, null, null);\n    holder.progress.setDisplayInitialProgressIfEmpty((sectionLocked) ? false : true);\n    holder.buttonEnter.setVisibility((sectionLocked) ? View.GONE : View.VISIBLE);\n    holder.levels.setVisibility((sectionLocked) ? View.GONE : View.VISIBLE);\n    holder.name.setTextColor((sectionLocked) ? 0xee666666 : 0xff666666);\n\n    if (sectionLocked) {\n      if (holder.progressSwitcher.getNextView() != holder.progress) {\n        holder.progressSwitcher.showNext();\n      }\n    } else if (holder.progressSwitcher.getNextView() == holder.progress) {\n      holder.progressSwitcher.showNext();\n    }\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4709, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 158, "focalAPIEnd": 224, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.setTag(SuggestedMember)"], "useStart": [342, 407, 473, 977], "useEnd": [373, 438, 503, 998], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Contacts/tree/master/src/com/android/contacts/group/SuggestedMemberListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View result = convertView;\n    if (result == null) {\n      result = mInflater.inflate(R.layout.group_member_suggestion, parent, false);\n    }\n    // TODO: Use a viewholder\n    SuggestedMember member = getItem(position);\n    TextView text1 = (TextView) result.findViewById(R.id.text1);\n    TextView text2 = (TextView) result.findViewById(R.id.text2);\n    ImageView icon = (ImageView) result.findViewById(R.id.icon);\n    text1.setText(member.getDisplayName());\n    if (member.hasExtraInfo()) {\n      text2.setText(member.getExtraInfo());\n    } else {\n      text2.setVisibility(View.GONE);\n    }\n    byte[] byteArray = member.getPhotoByteArray();\n    if (byteArray == null) {\n      icon.setImageResource(R.drawable.ic_contact_picture_holo_light);\n    } else {\n      Bitmap bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length);\n      icon.setImageBitmap(bitmap);\n    }\n    result.setTag(member);\n    return result;\n  }\n"}, {"dataset": "inflate", "exampleID": 4710, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [53], "initializationEnd": [86], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 108, "focalAPIEnd": 177, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setVisibility(*)", "ViewGroup.addView(view)"], "useStart": [183, 227], "useEnd": [221, 263], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/packages/SystemUI/src/com/android/systemui/statusbar/tablet/NotificationPanel.java", "rawCode": "  void addSettingsView() {\n    LayoutInflater infl = LayoutInflater.from(getContext());\n    mSettingsView = infl.inflate(R.layout.system_bar_settings_view, mContentFrame, false);\n    mSettingsView.setVisibility(View.GONE);\n    mContentFrame.addView(mSettingsView);\n  }\n"}, {"dataset": "inflate", "exampleID": 4711, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 161, "focalAPIEnd": 213, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [490, 559], "useEnd": [516, 579], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jungilhan/recipe2/tree/master/src/com/bulgogi/recipe/adapter/BlogSearchAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n\n    if (convertView == null) {\n      convertView = inflator.inflate(R.layout.ll_blog_search_item, null);\n\n      holder = new ViewHolder();\n      holder.tvTitle = (TextView) convertView.findViewById(R.id.tv_title);\n      holder.tvBlog = (TextView) convertView.findViewById(R.id.tv_blog);\n      holder.tvDescription = (TextView) convertView.findViewById(R.id.tv_description);\n      convertView.setTag(holder);\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Item item = items.get(position);\n    holder.tvTitle.setText(Html.fromHtml(item.title));\n    holder.tvBlog.setText(item.bloggername);\n    String description = item.description.replaceAll(\"\\\\<.*?\\\\>\", \"\");\n    description = description.replaceAll(\"&.*;\", \"\");\n    holder.tvDescription.setText(description);\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4712, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 118, "focalAPIEnd": 170, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.initialize(MenuBuilder)"], "useStart": [178], "useEnd": [205], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/yfli/aSM-clone/tree/master/libs/ActionBarSherlock/src/com/actionbarsherlock/internal/view/menu/BaseMenuPresenter.java", "rawCode": "  @Override\n  public MenuView getMenuView(ViewGroup root) {\n    if (mMenuView == null) {\n      mMenuView = (MenuView) mSystemInflater.inflate(mMenuLayoutRes, root, false);\n      mMenuView.initialize(mMenu);\n      updateMenuView(true);\n    }\n\n    return mMenuView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4713, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 781, "focalAPIEnd": 821, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["createHolder(view)", "view.setTag(ViewHolder)", "view.getTag()"], "useStart": [878, 938, 1052], "useEnd": [896, 957, 1065], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/droidgiro/droidgiro-android/tree/master/src/se/droidgiro/scanner/resultlist/TextViewListAdapter.java", "rawCode": "  /**\n   * Make a view to hold each row. This method is instantiated for each list data object. Using the\n   * Holder Pattern, avoids the unnecessary findViewById(...) calls.\n   *\n   * @param position (index) to retrieve\n   * @param view is the view\n   * @param parent is the associated ViewGroup\n   * @return The view associated with this row\n   */\n  public View getView(int position, View view, ViewGroup parent) {\n    // A ViewHolder keeps references to children views to avoid unnecessary\n    // calls to findViewById(...) on each row.\n    ViewHolder holder;\n\n    // When the view is not null, we can reuse it directly, there is no need\n    // to re-inflate it. We only inflate a new View when the view supplied\n    // by ListView is null.\n    if (view == null) {\n      view = this.inflater.inflate(this.viewId, null);\n      // call the user's implementation\n      holder = createHolder(view);\n      // we set the holder as tag\n      view.setTag(holder);\n    } else {\n      // get holder back...much faster than inflate\n      holder = (ViewHolder) view.getTag();\n    }\n\n    // we must update the object's reference\n    holder.data = getItem(position);\n    // call the user's implementation\n    bindHolder(holder);\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4714, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 304, "focalAPIEnd": 342, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [377, 479, 582, 853], "useEnd": [413, 516, 616, 893], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lounaspaikka/lounaspaikka/tree/master/src/fi/aalto/lounaspaikka/RestaurantsActivity.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      TextView title = null;\n      TextView detail = null;\n      ImageView i11 = null;\n      ImageView i22 = null;\n      RowData rowData = getItem(position);\n\n      if (null == convertView) {\n        convertView = mInflater.inflate(R.layout.list, null);\n      }\n      title = (TextView) convertView.findViewById(R.id.title);\n      title.setText(rowData.mTitle);\n\n      detail = (TextView) convertView.findViewById(R.id.detail);\n      detail.setText(rowData.mDetail);\n\n      i11 = (ImageView) convertView.findViewById(R.id.img);\n      // i11.setImageResource(imgid[rowData.imageNextId]);\n      i11.setImageBitmap(\n          DecodeBitmaps.decodeSampledBitmapFromResource(\n              getResources(), imgid[rowData.imageNextId], 80, 80));\n\n      i22 = (ImageView) convertView.findViewById(R.id.img_arrow);\n      // i22.setImageResource(R.drawable.arrow);\n      i22.setImageBitmap(\n          DecodeBitmaps.decodeSampledBitmapFromResource(getResources(), R.drawable.arrow, 30, 30));\n      //\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4715, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 732, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "LinearLayout.addView(view)"], "useStart": [862, 1020, 1119], "useEnd": [912, 1074, 1143], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/frameworks_base/tree/master/core/java/android/app/FragmentBreadCrumbs.java", "rawCode": "  void updateCrumbs() {\n    FragmentManager fm = mActivity.getFragmentManager();\n    int numEntries = fm.getBackStackEntryCount();\n    int numPreEntries = getPreEntryCount();\n    int numViews = mContainer.getChildCount();\n    for (int i = 0; i < numEntries + numPreEntries; i++) {\n      BackStackEntry bse =\n          i < numPreEntries ? getPreEntry(i) : fm.getBackStackEntryAt(i - numPreEntries);\n      if (i < numViews) {\n        View v = mContainer.getChildAt(i);\n        Object tag = v.getTag();\n        if (tag != bse) {\n          for (int j = i; j < numViews; j++) {\n            mContainer.removeViewAt(i);\n          }\n          numViews = i;\n        }\n      }\n      if (i >= numViews) {\n        final View item =\n            mInflater.inflate(com.android.internal.R.layout.fragment_bread_crumb_item, this, false);\n        final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);\n        text.setText(bse.getBreadCrumbTitle());\n        text.setTag(bse);\n        if (i == 0) {\n          item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);\n        }\n        mContainer.addView(item);\n        text.setOnClickListener(mOnClickListener);\n      }\n    }\n    int viewI = numEntries + numPreEntries;\n    numViews = mContainer.getChildCount();\n    while (numViews > viewI) {\n      mContainer.removeViewAt(numViews - 1);\n      numViews--;\n    }\n    // Adjust the visibility and availability of the bread crumbs and divider\n    for (int i = 0; i < numViews; i++) {\n      final View child = mContainer.getChildAt(i);\n      // Disable the last one\n      child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);\n      if (mMaxVisible > 0) {\n        // Make only the last mMaxVisible crumbs visible\n        child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);\n        final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);\n        // Remove the divider for all but the last mMaxVisible - 1\n        leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE : View.GONE);\n      }\n    }\n  }\n"}, {"dataset": "inflate", "exampleID": 4716, "initialization": ["LayoutInflater layoutInflater = getContext()"], "initializationStart": [193], "initializationEnd": [210], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 275, "focalAPIEnd": 322, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [487, 975, 1338, 1530, 1740, 1949], "useEnd": [534, 1023, 1385, 1579, 1787, 1996], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pronoschallenge/pronoschallenge-android/tree/master/src/fr/pronoschallenge/classement/club/ClassementClubAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View view = convertView;\n\n    if (view == null) {\n      LayoutInflater li =\n          (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      view = li.inflate(R.layout.classement_club_item, null);\n    }\n    ClassementClubEntry classementClubEntry = getItem(position);\n    if (classementClubEntry != null) {\n\n      TextView classementClubEntryClub = (TextView) view.findViewById(R.id.classementClubEntryClub);\n      classementClubEntryClub.setText(classementClubEntry.getClub());\n\n      if (classementClubEntry.getClub().compareTo(\"...\") != 0) {\n\n        if (position == 0) {\n          intPlacePrecedent = 0;\n        } else {\n          ClassementClubEntry classementClubEntryPrec = getItem(position - 1);\n          intPlacePrecedent = classementClubEntryPrec.getPlace();\n        }\n\n        TextView classementClubEntryPlace =\n            (TextView) view.findViewById(R.id.classementClubEntryPlace);\n        if (classementClubEntry.getPlace() == intPlacePrecedent) {\n          classementClubEntryPlace.setText(\"\");\n        } else {\n          classementClubEntryPlace.setText(String.valueOf(classementClubEntry.getPlace()));\n        }\n\n        AsyncImageView classementClubEntryLogo =\n            (AsyncImageView) view.findViewById(R.id.classementClubEntryLogo);\n        classementClubEntryLogo.setUrl(classementClubEntry.getUrlLogo());\n\n        TextView classementClubEntryPoints =\n            (TextView) view.findViewById(R.id.classementClubEntryPoints);\n        classementClubEntryPoints.setText(String.valueOf(classementClubEntry.getPoints()));\n\n        TextView classementClubEntryJoue =\n            (TextView) view.findViewById(R.id.classementClubEntryJoue);\n        classementClubEntryJoue.setText(String.valueOf(classementClubEntry.getMatchJoue()));\n\n        TextView classementClubEntryDiff =\n            (TextView) view.findViewById(R.id.classementClubEntryDiff);\n        classementClubEntryDiff.setText(String.valueOf(classementClubEntry.getDiff()));\n      }\n    }\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4717, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 173, "focalAPIEnd": 228, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [690, 764], "useEnd": [716, 784], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AndlyticsProject/andlytics/tree/master/src/com/github/andlyticsproject/ExportActivity.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n\n      ViewHolder holder;\n\n      if (convertView == null) {\n\n        convertView = layoutInflater.inflate(R.layout.export_list_item, null);\n\n        holder = new ViewHolder();\n        holder.name = (TextView) convertView.findViewById(R.id.main_app_name);\n        holder.packageName = (TextView) convertView.findViewById(R.id.main_package_name);\n        holder.icon = (ImageView) convertView.findViewById(R.id.main_app_icon);\n        holder.row = (RelativeLayout) convertView.findViewById(R.id.main_app_row);\n        holder.checkbox = (CheckBox) convertView.findViewById(R.id.ghost_checkbox);\n        convertView.setTag(holder);\n\n      } else {\n        holder = (ViewHolder) convertView.getTag();\n      }\n\n      final AppInfo appDownloadInfo = getItem(position);\n      holder.name.setText(appDownloadInfo.getName());\n      holder.packageName.setText(appDownloadInfo.getPackageName());\n\n      final String packageName = appDownloadInfo.getPackageName();\n\n      holder.checkbox.setChecked(exportPackageNames.contains(packageName));\n\n      final File iconFile = new File(cacheDir + \"/\" + appDownloadInfo.getIconName());\n\n      holder.icon.setTag(TAG_IMAGE_REF, packageName);\n      if (inMemoryCache.contains(packageName)) {\n\n        holder.icon.setImageBitmap(inMemoryCache.get(packageName));\n        holder.icon.clearAnimation();\n\n      } else {\n        holder.icon.setImageDrawable(null);\n        holder.icon.clearAnimation();\n        new GetCachedImageTask(holder.icon, appDownloadInfo.getPackageName())\n            .execute(new File[] {iconFile});\n      }\n\n      holder.row.setOnClickListener(\n          new View.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n\n              CheckBox checkbox = ((CheckBox) (((ViewGroup) v).findViewById(R.id.ghost_checkbox)));\n              checkbox.setChecked(!checkbox.isChecked());\n\n              if (checkbox.isChecked()) {\n                exportPackageNames.add(appDownloadInfo.getPackageName());\n              } else {\n                exportPackageNames.remove(appDownloadInfo.getPackageName());\n              }\n            }\n          });\n\n      holder.checkbox.setTag(packageName);\n      holder.checkbox.setOnClickListener(\n          new CheckBox.OnClickListener() {\n\n            @Override\n            public void onClick(View v) {\n              boolean checked = ((CheckBox) v).isChecked();\n              if (checked) {\n                exportPackageNames.add(appDownloadInfo.getPackageName());\n              } else {\n                exportPackageNames.remove(appDownloadInfo.getPackageName());\n              }\n            }\n          });\n\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4718, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 141, "focalAPIEnd": 199, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [407, 581, 724, 871, 998, 1144, 1270], "useEnd": [443, 619, 752, 899, 1026, 1181, 1304], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applicake/Beandroid/tree/master/Beanstalk Android Client/src/com/applicake/beanstalkclient/adapters/ChangesetAdapter.java", "rawCode": "  public View getView(int position, View convertView, ViewGroup parent) {\n    View view = convertView;\n\n    if (view == null) {\n      view = mInflater.inflate(R.layout.dashboard_entry, parent, false);\n    }\n\n    Changeset changeset = changesetArray.get(position);\n    Repository repository = repoMap.get(changeset.getRepositoryId());\n\n    if (changeset != null) {\n      ImageView userGravatar = (ImageView) view.findViewById(R.id.userGravatar);\n      GravatarDowloader.getInstance().download(changeset.getEmail(), userGravatar);\n\n      TextView repositoryNameTextView = (TextView) view.findViewById(R.id.reposiotryName);\n      repositoryNameTextView.setText(repository.getTitle());\n\n      TextView dateTextView = (TextView) view.findViewById(R.id.date);\n      dateTextView.setText(dateFormatter.format(changeset.getTime()));\n\n      TextView userNameTextView = (TextView) view.findViewById(R.id.hash);\n      userNameTextView.setText(changeset.getAuthor());\n\n      TextView timeTextView = (TextView) view.findViewById(R.id.time);\n      timeTextView.setText(timeFormatter.format(changeset.getTime()));\n\n      TextView messageTextView = (TextView) view.findViewById(R.id.commitMessage);\n      messageTextView.setText(changeset.getMessage());\n\n      View colorLabel = (View) view.findViewById(R.id.colorLabel);\n      colorLabel.getBackground().setLevel(repository.getColorLabelNo());\n    }\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4719, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 190, "focalAPIEnd": 232, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(int)"], "useStart": [537], "useEnd": [564], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zwaldowski/zw-schoolwork/tree/master/CS 2340/ProjectTeamRocket/FindMyThings/src/edu/gatech/oad/rocket/findmythings/list/ArrayListAdapter.java", "rawCode": "  private View createViewFromResource(\n      int position, View convertView, ViewGroup parent, int resource) {\n    View view;\n    TextView text;\n\n    if (convertView == null) {\n      view = mInflater.inflate(resource, parent, false);\n    } else {\n      view = convertView;\n    }\n\n    try {\n      if (mFieldId == 0) {\n        // If no custom field is assigned, assume the whole resource is a TextView\n        text = (TextView) view;\n      } else {\n        // Otherwise, find the TextView field within the layout\n        text = (TextView) view.findViewById(mFieldId);\n      }\n    } catch (ClassCastException e) {\n      Log.e(\"ArrayAdapter\", \"You must supply a resource ID for a TextView\");\n      throw new IllegalStateException(\"ArrayAdapter requires the resource ID to be a TextView\", e);\n    }\n\n    T item = getItem(position);\n    if (item instanceof CharSequence) {\n      text.setText((CharSequence) item);\n    } else {\n      text.setText(item.toString());\n    }\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4720, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [230], "initializationEnd": [259], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 285, "focalAPIEnd": 331, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(String)"], "useStart": [469], "useEnd": [488], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OMFGB/packages_apps_Browser/tree/master/src/com/android/browser/DateSortedExpandableListAdapter.java", "rawCode": "  public View getGroupView(\n      int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    TextView item;\n    if (null == convertView || !(convertView instanceof TextView)) {\n      LayoutInflater factory = LayoutInflater.from(mContext);\n      item = (TextView) factory.inflate(R.layout.history_header, null);\n    } else {\n      item = (TextView) convertView;\n    }\n    String label = mDateSorter.getLabel(groupPositionToBin(groupPosition));\n    item.setText(label);\n    return item;\n  }\n"}, {"dataset": "inflate", "exampleID": 4721, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 216, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/yfli/aSM-clone/tree/master/libs/ActionBarSherlock/src/com/actionbarsherlock/internal/view/menu/BaseMenuPresenter.java", "rawCode": "  /**\n   * Create a new item view that can be re-bound to other item data later.\n   *\n   * @return The new item view\n   */\n  public MenuView.ItemView createItemView(ViewGroup parent) {\n    return (MenuView.ItemView) mSystemInflater.inflate(mItemLayoutRes, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4722, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [180], "initializationEnd": [209], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 229, "focalAPIEnd": 292, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)"], "useStart": [335], "useEnd": [365], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zhaoyuqing/SlidingMenu/tree/master/actionbarsherlock-samples/demos/src/com/actionbarsherlock/sample/demos/ActionProviders.java", "rawCode": "    /** {@inheritDoc} */\n    @Override\n    public View onCreateActionView() {\n      // Inflate the action view to be shown on the action bar.\n      LayoutInflater layoutInflater = LayoutInflater.from(mContext);\n      View view = layoutInflater.inflate(R.layout.settings_action_provider, null);\n      ImageButton button = (ImageButton) view.findViewById(R.id.button);\n      // Attach a click listener for launching the system settings.\n      button.setOnClickListener(\n          new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n              mContext.startActivity(sSettingsIntent);\n            }\n          });\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4723, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 114, "focalAPIEnd": 175, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/luigiliquori/myMed/tree/master/frontend/binary/android/myjam/src/com/mymed/android/myjam/ui/SearchActivity.java", "rawCode": "    @Override\n    public View newView(Context context, Cursor cursor, ViewGroup parent) {\n      final View view = mInflater.inflate(R.layout.search_report_item, parent, false);\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4724, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 175, "focalAPIEnd": 235, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.setTag(ViewHolder)", "view.getTag()"], "useStart": [281, 357, 431, 614, 676], "useEnd": [311, 388, 459, 633, 689], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/feelinglucky/iZhihu/tree/master/src/com/gracecode/iZhihu/adapter/CommentAdapter.java", "rawCode": "  @Override\n  public View getView(int i, View view, ViewGroup viewGroup) {\n    ViewHolder holder;\n    Comment comment = comments.get(i);\n\n    if (view == null) {\n      view = layoutInflater.inflate(R.layout.listview_comment_item, null);\n\n      TextView textViewAuthor = (TextView) view.findViewById(R.id.author);\n      TextView textViewContent = (TextView) view.findViewById(R.id.content);\n      TextView textViewTime = (TextView) view.findViewById(R.id.time);\n\n      holder = new ViewHolder();\n      holder.author = textViewAuthor;\n      holder.content = textViewContent;\n      holder.time = textViewTime;\n\n      view.setTag(holder);\n    } else {\n      holder = (ViewHolder) view.getTag();\n    }\n\n    holder.author.setText(comment.getAuthor());\n    holder.content.setText(comment.getContent());\n    holder.time.setText(formatTime(comment.getTimeStamp()));\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4725, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 292, "focalAPIEnd": 335, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.setTag(Site)"], "useStart": [414, 473, 532, 592, 661, 1411], "useEnd": [443, 505, 560, 626, 698, 1428], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/qhkyzf/FeiAndroid/tree/master/SysBrowser/src/com/android/browser/kai/WebsiteSettingsActivity.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      View view;\n      final TextView title;\n      final TextView subtitle;\n      ImageView icon;\n      final ImageView usageIcon;\n      final ImageView locationIcon;\n\n      if (convertView == null) {\n        view = mInflater.inflate(mResource, parent, false);\n      } else {\n        view = convertView;\n      }\n\n      title = (TextView) view.findViewById(R.id.title);\n      subtitle = (TextView) view.findViewById(R.id.subtitle);\n      icon = (ImageView) view.findViewById(R.id.icon);\n      usageIcon = (ImageView) view.findViewById(R.id.usage_icon);\n      locationIcon = (ImageView) view.findViewById(R.id.location_icon);\n      usageIcon.setVisibility(View.GONE);\n      locationIcon.setVisibility(View.GONE);\n\n      if (mCurrentSite == null) {\n        setTitle(getString(R.string.pref_extras_website_settings));\n\n        Site site = getItem(position);\n        title.setText(site.getPrettyTitle());\n        subtitle.setText(site.getPrettyOrigin());\n        icon.setVisibility(View.VISIBLE);\n        usageIcon.setVisibility(View.INVISIBLE);\n        locationIcon.setVisibility(View.INVISIBLE);\n        Bitmap bmp = site.getIcon();\n        if (bmp == null) {\n          bmp = mDefaultIcon;\n        }\n        icon.setImageBitmap(bmp);\n        // We set the site as the view's tag,\n        // so that we can get it in onItemClick()\n        view.setTag(site);\n\n        String origin = site.getOrigin();\n        if (site.hasFeature(Site.FEATURE_WEB_STORAGE)) {\n          WebStorage.getInstance()\n              .getUsageForOrigin(\n                  origin,\n                  new ValueCallback<Long>() {\n                    public void onReceiveValue(Long value) {\n                      if (value != null) {\n                        setIconForUsage(usageIcon, value.longValue());\n                      }\n                    }\n                  });\n        }\n\n        if (site.hasFeature(Site.FEATURE_GEOLOCATION)) {\n          locationIcon.setVisibility(View.VISIBLE);\n          GeolocationPermissions.getInstance()\n              .getAllowed(\n                  origin,\n                  new ValueCallback<Boolean>() {\n                    public void onReceiveValue(Boolean allowed) {\n                      if (allowed != null) {\n                        if (allowed.booleanValue()) {\n                          locationIcon.setImageBitmap(mLocationAllowedIcon);\n                        } else {\n                          locationIcon.setImageBitmap(mLocationDisallowedIcon);\n                        }\n                      }\n                    }\n                  });\n        }\n      } else {\n        setTitle(mCurrentSite.getPrettyTitle());\n        icon.setVisibility(View.GONE);\n        String origin = mCurrentSite.getOrigin();\n        switch (mCurrentSite.getFeatureByIndex(position)) {\n          case Site.FEATURE_WEB_STORAGE:\n            WebStorage.getInstance()\n                .getUsageForOrigin(\n                    origin,\n                    new ValueCallback<Long>() {\n                      public void onReceiveValue(Long value) {\n                        if (value != null) {\n                          String usage = sizeValueToString(value.longValue()) + \" \" + sMBStored;\n                          title.setText(R.string.webstorage_clear_data_title);\n                          subtitle.setText(usage);\n                        }\n                      }\n                    });\n            break;\n          case Site.FEATURE_GEOLOCATION:\n            title.setText(R.string.geolocation_settings_page_title);\n            GeolocationPermissions.getInstance()\n                .getAllowed(\n                    origin,\n                    new ValueCallback<Boolean>() {\n                      public void onReceiveValue(Boolean allowed) {\n                        if (allowed != null) {\n                          if (allowed.booleanValue()) {\n                            subtitle.setText(R.string.geolocation_settings_page_summary_allowed);\n                          } else {\n                            subtitle.setText(\n                                R.string.geolocation_settings_page_summary_not_allowed);\n                          }\n                        }\n                      }\n                    });\n            break;\n        }\n      }\n\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4726, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 196, "focalAPIEnd": 265, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [308, 393, 479], "useEnd": [351, 436, 521], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/droidjunk_packages_apps_Contacts/tree/master/src/com/android/contacts/detail/ContactDetailFragment.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      final View resultView =\n          (convertView != null)\n              ? convertView\n              : mInflater.inflate(R.layout.account_selector_list_item, parent, false);\n\n      final TextView text1 = (TextView) resultView.findViewById(android.R.id.text1);\n      final TextView text2 = (TextView) resultView.findViewById(android.R.id.text2);\n      final ImageView icon = (ImageView) resultView.findViewById(android.R.id.icon);\n\n      final AccountType accountType = mAccountTypes.get(position);\n\n      CharSequence action = accountType.getInviteContactActionLabel(mContext);\n      CharSequence label = accountType.getDisplayLabel(mContext);\n      if (TextUtils.isEmpty(action)) {\n        text1.setText(label);\n        text2.setVisibility(View.GONE);\n      } else {\n        text1.setText(action);\n        text2.setVisibility(View.VISIBLE);\n        text2.setText(label);\n      }\n      icon.setImageDrawable(accountType.getDisplayIcon(mContext));\n\n      return resultView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4727, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 131, "focalAPIEnd": 176, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setForceShowIcon(boolean)"], "useStart": [291], "useEnd": [346], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/adhigunasurya/JalinSuara/tree/master/workspace/actionbarsherlock/src/com/actionbarsherlock/internal/view/menu/MenuPopupHelper.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      if (convertView == null) {\n        convertView = mInflater.inflate(ITEM_LAYOUT, parent, false);\n      }\n\n      MenuView.ItemView itemView = (MenuView.ItemView) convertView;\n      if (mForceShowIcon) {\n        ((ListMenuItemView) convertView).setForceShowIcon(true);\n      }\n      itemView.initialize(getItem(position), 0);\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4728, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 632, "focalAPIEnd": 685, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [988, 1161], "useEnd": [1014, 1181], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/development/tree/master/samples/ApiDemos/src/com/example/android/apis/view/List14.java", "rawCode": "    /**\n     * Make a view to hold each row.\n     *\n     * @see android.widget.ListAdapter#getView(int, android.view.View, android.view.ViewGroup)\n     */\n    public View getView(int position, View convertView, ViewGroup parent) {\n      // A ViewHolder keeps references to children views to avoid unneccessary calls\n      // to findViewById() on each row.\n      ViewHolder holder;\n\n      // When convertView is not null, we can reuse it directly, there is no need\n      // to reinflate it. We only inflate a new View when the convertView supplied\n      // by ListView is null.\n      if (convertView == null) {\n        convertView = mInflater.inflate(R.layout.list_item_icon_text, null);\n\n        // Creates a ViewHolder and store references to the two children views\n        // we want to bind data to.\n        holder = new ViewHolder();\n        holder.text = (TextView) convertView.findViewById(R.id.text);\n        holder.icon = (ImageView) convertView.findViewById(R.id.icon);\n\n        convertView.setTag(holder);\n      } else {\n        // Get the ViewHolder back to get fast access to the TextView\n        // and the ImageView.\n        holder = (ViewHolder) convertView.getTag();\n      }\n\n      // Bind the data efficiently with the holder.\n      holder.text.setText(DATA[position]);\n      holder.icon.setImageBitmap((position & 1) == 1 ? mIcon1 : mIcon2);\n\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4729, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 165, "focalAPIEnd": 217, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "setContentView(view)"], "useStart": [249, 372], "useEnd": [299, 398], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/MySettings/tree/master/src/com/android/settings/MediaFormat.java", "rawCode": "  /** Configure the UI for the final confirmation interaction */\n  private void establishFinalConfirmationState() {\n    if (mFinalView == null) {\n      mFinalView = mInflater.inflate(R.layout.media_format_final, null);\n      mFinalButton = (Button) mFinalView.findViewById(R.id.execute_media_format);\n      mFinalButton.setOnClickListener(mFinalClickListener);\n    }\n\n    setContentView(mFinalView);\n  }\n"}, {"dataset": "inflate", "exampleID": 4730, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [314], "initializationEnd": [371], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 393, "focalAPIEnd": 441, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)"], "useStart": [485], "useEnd": [525], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zh2009/CHIPS/tree/master/CHIPSApp/src/com/chips/adapters/ExpandableFavoritesAdapter.java", "rawCode": "  @Override\n  public View getGroupView(\n      int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    MealRecord meal = (MealRecord) getGroup(groupPosition);\n\n    String group = meal.getName();\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.meal_group, null);\n    }\n    TextView groupName = (TextView) convertView.findViewById(R.id.groupName);\n    groupName.setText(group);\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4731, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 157, "focalAPIEnd": 217, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(*)"], "useStart": [287], "useEnd": [345], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/frameworks_base/tree/master/core/tests/coretests/src/android/widget/listview/ListThrasher.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      TextView view;\n\n      if (convertView == null) {\n        view = (TextView) mInflater.inflate(android.R.layout.simple_list_item_1, null);\n      } else {\n        view = (TextView) convertView;\n      }\n      view.setText(mTitles[position] + \" \" + mVersion[position]);\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4732, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 104, "focalAPIEnd": 149, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)"], "useStart": [180], "useEnd": [214], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zhoulzhou/IPCPlayer/tree/master/src/com/example/ipcplayer/merge/CTVAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    convertView = mInflater.inflate(R.layout.merge_item1, null);\n    TextView iv = (TextView) convertView.findViewById(R.id.tx1);\n    iv.setText(\"merge example\");\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4733, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 247, "focalAPIEnd": 319, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "LinearLayout.addView(view)"], "useStart": [394, 472, 832], "useEnd": [443, 517, 863], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/akavel/maniana-fork/tree/master/Maniana/src/com/zapta/apps/maniana/widget/ListWidgetProviderTemplate.java", "rawCode": "  /**\n   * Add an informative message to the item list. These messages are formatted differently than\n   * actual tasks.\n   */\n  private final void addTemplateMessageItem(String message) {\n\n    final LinearLayout itemView =\n        (LinearLayout) mLayoutInflater.inflate(R.layout.widget_list_template_item_layout, null);\n    final ExtendedTextView extendedTextView =\n        (ExtendedTextView) itemView.findViewById(R.id.widget_item_text_view);\n    final View colorView = itemView.findViewById(R.id.widget_item_color);\n\n    // TODO: setup message text using widget font size preference?\n    extendedTextView.setSingleLine(false);\n    extendedTextView.setText(message);\n    TextUtil.ICS_HACK_TEXT_VIEW(extendedTextView);\n    mFontVariationPreference.apply(extendedTextView, false, true);\n    colorView.setVisibility(View.GONE);\n\n    mItemListView.addView(itemView);\n\n    mItemTextViews.add(extendedTextView);\n  }\n"}, {"dataset": "inflate", "exampleID": 4734, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 133, "focalAPIEnd": 188, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "BaseDialog.setView(view)"], "useStart": [208, 275, 342, 409, 476, 543, 610, 677, 744, 826], "useEnd": [251, 318, 385, 452, 519, 586, 653, 720, 787, 843], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onyx-intl/boox-opensource/tree/master/code/src/cr3/android/src/org/coolreader/crengine/OptionsDialog.java", "rawCode": "    public void onSelect() {\n      BaseDialog dlg = new BaseDialog(mActivity, R.string.dlg_button_ok, 0, false);\n      grid = (View) mInflater.inflate(R.layout.options_tap_zone_grid, null);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell1), 1);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell2), 2);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell3), 3);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell4), 4);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell5), 5);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell6), 6);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell7), 7);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell8), 8);\n      initTapZone(grid.findViewById(R.id.tap_zone_grid_cell9), 9);\n      dlg.setTitle(label);\n      dlg.setView(grid);\n      dlg.show();\n    }\n"}, {"dataset": "inflate", "exampleID": 4735, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [396], "initializationEnd": [458], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 480, "focalAPIEnd": 526, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [571, 652, 735], "useEnd": [610, 695, 772], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ese-unibe-ch/ese2013-team9/tree/master/ShoppyApp/src/com/eseteam9/shoppyapp/adapters/ExpandableListAdapter.java", "rawCode": "  @Override\n  public View getChildView(\n      int groupPosition,\n      final int childPosition,\n      boolean isLastChild,\n      View convertView,\n      ViewGroup parent) {\n\n    Item[] items = Items.getByListId(this.context, listDataHeader[groupPosition].id());\n    Item item = items[childPosition];\n\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.item_row, null);\n    }\n\n    TextView childName = (TextView) convertView.findViewById(R.id.itemname);\n    TextView childQuantity = (TextView) convertView.findViewById(R.id.quantityText);\n    CheckBox childStatus = (CheckBox) convertView.findViewById(R.id.status);\n\n    childName.setText(item.name());\n    childQuantity.setText(item.quantity());\n    childStatus.setChecked(item.bought());\n    childStatus.setTag(item.id());\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4736, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 161, "focalAPIEnd": 236, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [780, 945], "useEnd": [806, 965], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envived-client/tree/master/src/com/envived/android/features/program/PresentationCommentListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder;\n\n    if (convertView == null) {\n      convertView = mInflater.inflate(R.layout.program_presentation_comment_row, parent, false);\n\n      // Creates a ViewHolder and store references to the two children views\n      // we want to bind data to.\n      holder = new ViewHolder();\n      holder.wrapperLayout =\n          (LinearLayout) convertView.findViewById(R.id.presentation_comment_row_wrapper);\n      holder.author = (TextView) convertView.findViewById(R.id.presentation_comment_author);\n      holder.date = (TextView) convertView.findViewById(R.id.presentation_comment_date);\n      holder.text = (TextView) convertView.findViewById(R.id.presentation_comment_text);\n\n      convertView.setTag(holder);\n    } else {\n      // Get the ViewHolder back to get fast access to the TextView\n      // and the ImageView.\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    Resources r = mContext.getResources();\n    int marginPx =\n        (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 40, r.getDisplayMetrics());\n\n    LinearLayout.LayoutParams marginLayoutParams =\n        new LinearLayout.LayoutParams(\n            LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n\n    PresentationComment currentComment = (PresentationComment) getItem(position);\n    int currentLayout = LEFT;\n\n    if (position == 0) {\n      currentLayout = LEFT;\n    } else {\n      // get previous item\n      PresentationComment prevComment = (PresentationComment) getItem(position - 1);\n      Integer prevLayout = mCommentLayoutMap.get(prevComment.getCommentUrl());\n      if (prevLayout == null) {\n        prevLayout = LEFT;\n      }\n\n      if (currentComment.getCommentOwnerUrl().equals(prevComment.getCommentOwnerUrl())) {\n        currentLayout = prevLayout;\n      } else {\n        currentLayout = 1 - prevLayout;\n      }\n    }\n\n    mCommentLayoutMap.put(currentComment.getCommentUrl(), currentLayout);\n\n    if (currentLayout == LEFT) {\n      // to the left\n      marginLayoutParams.rightMargin = marginPx;\n      marginLayoutParams.gravity = Gravity.LEFT;\n      holder.wrapperLayout.setBackgroundDrawable(\n          (mContext\n              .getResources()\n              .getDrawable(R.drawable.feature_program_presentation_comment_wrapper)));\n    } else {\n      // to the right\n      marginLayoutParams.leftMargin = marginPx;\n      marginLayoutParams.gravity = Gravity.RIGHT;\n      holder.wrapperLayout.setBackgroundDrawable(\n          mContext\n              .getResources()\n              .getDrawable(R.drawable.feature_program_presentation_comment_wrapper_gray));\n    }\n\n    holder.wrapperLayout.setLayoutParams(marginLayoutParams);\n\n    bind(holder, position);\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4737, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 348, "focalAPIEnd": 392, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [596, 666], "useEnd": [616, 680], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/facebook-android-sdk-3.0.1/samples/Hackbook/src/com/facebook/android/Places.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      JSONObject jsonObject = null;\n      try {\n        jsonObject = jsonArray.getJSONObject(position);\n      } catch (JSONException e1) {\n        e1.printStackTrace();\n      }\n      View hView = convertView;\n      if (convertView == null) {\n        hView = mInflater.inflate(R.layout.place_item, null);\n        ViewHolder holder = new ViewHolder();\n        holder.name = (TextView) hView.findViewById(R.id.place_name);\n        holder.location = (TextView) hView.findViewById(R.id.place_location);\n        hView.setTag(holder);\n      }\n\n      ViewHolder holder = (ViewHolder) hView.getTag();\n      try {\n        holder.name.setText(jsonObject.getString(\"name\"));\n      } catch (JSONException e) {\n        holder.name.setText(\"\");\n      }\n      try {\n        String location =\n            jsonObject.getJSONObject(\"location\").getString(\"street\")\n                + \", \"\n                + jsonObject.getJSONObject(\"location\").getString(\"city\")\n                + \", \"\n                + jsonObject.getJSONObject(\"location\").getString(\"state\");\n        holder.location.setText(location);\n      } catch (JSONException e) {\n        holder.location.setText(\"\");\n      }\n      return hView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4738, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 670, "focalAPIEnd": 724, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "setContentView(view)"], "useStart": [759, 909, 1003, 1286], "useEnd": [812, 965, 1049, 1314], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/MySettings/tree/master/src/com/android/settings/MasterClear.java", "rawCode": "  /**\n   * In its initial state, the activity presents a button for the user to click in order to initiate\n   * a confirmation sequence. This method is called from various other points in the code to reset\n   * the activity to this base state.\n   *\n   * <p>Reinflating views from resources is expensive and prevents us from caching widget pointers,\n   * so we use a single-inflate pattern: we lazy- inflate each view, caching all of the widget\n   * pointers we'll need at the time, then simply reuse the inflated views directly whenever we need\n   * to change contents.\n   */\n  private void establishInitialState() {\n    if (mInitialView == null) {\n      mInitialView = mInflater.inflate(R.layout.master_clear_primary, null);\n      mInitiateButton = (Button) mInitialView.findViewById(R.id.initiate_master_clear);\n      mInitiateButton.setOnClickListener(mInitiateListener);\n      mExternalStorageContainer = mInitialView.findViewById(R.id.erase_external_container);\n      mExternalStorage = (CheckBox) mInitialView.findViewById(R.id.erase_external);\n      mExternalStorageContainer.setOnClickListener(\n          new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n              mExternalStorage.toggle();\n            }\n          });\n    }\n\n    setContentView(mInitialView);\n  }\n"}, {"dataset": "inflate", "exampleID": 4739, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [274], "initializationEnd": [332], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 366, "focalAPIEnd": 416, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [522, 725], "useEnd": [552, 760], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/artkoshelev/where-to-live/tree/master/client/wtl-android/wtl-android/src/main/java/ru/yandex/hackaton/wheretolive/ui/adapters/InfoAdapter.java", "rawCode": "  @Override\n  public View getView(int pos, View convertView, ViewGroup parent) {\n    String key = mKeys[pos];\n    String Value = getItem(pos).toString();\n\n    RelativeLayout layout;\n\n    if (convertView == null) {\n      LayoutInflater mInflater =\n          (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      layout = (RelativeLayout) mInflater.inflate(R.layout.search_list_item, null);\n    } else {\n      layout = (RelativeLayout) convertView;\n    }\n\n    TextView nameTextView = (TextView) layout.findViewById(R.id.name);\n    Category category = WtlUtils.Factory.get(mContext).getCategoryBySearchParam(key);\n    nameTextView.setText(category.getName());\n\n    RatingBar ratingBar = (RatingBar) layout.findViewById(R.id.ratingBar);\n    ratingBar.setIsIndicator(true);\n    ratingBar.setRating(mData.get(key));\n\n    return layout;\n  }\n"}, {"dataset": "inflate", "exampleID": 4740, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [296], "initializationEnd": [347], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 359, "focalAPIEnd": 407, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [510, 583], "useEnd": [548, 623], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/WeHeartGaming/Codename-WHIRC/tree/master/WHIRC/src/no/whg/whirc/adapters/ConnectionListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n\n    // set the current view object to draw on\n    View v = convertView;\n\n    if (v == null) {\n      // inflate (draw) the view, with list_item_connection.xml as base\n      LayoutInflater vi = (LayoutInflater) c.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      v = vi.inflate(R.layout.list_item_connections, null);\n    }\n\n    // Point variables to textview objects created through xml\n    TextView name = (TextView) v.findViewById(R.id.tv_connectionName);\n    TextView status = (TextView) v.findViewById(R.id.tv_connectionStatus);\n\n    Server server = data.get(position);\n\n    name.setText(server.getSimpleName());\n\n    if (server.getSession() == null) {\n      status.setText(R.string.disconnected);\n    } else {\n      if (server.getSession().isConnected()) {\n        status.setText(R.string.connected);\n      }\n    }\n\n    // return the inflated view\n    return v;\n  }\n"}, {"dataset": "inflate", "exampleID": 4741, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 216, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/xinyis/android-training/tree/master/libraries/actionbarsherlock/src/com/actionbarsherlock/internal/view/menu/BaseMenuPresenter.java", "rawCode": "  /**\n   * Create a new item view that can be re-bound to other item data later.\n   *\n   * @return The new item view\n   */\n  public MenuView.ItemView createItemView(ViewGroup parent) {\n    return (MenuView.ItemView) mSystemInflater.inflate(mItemLayoutRes, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4742, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [802], "initializationEnd": [855], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 870, "focalAPIEnd": 909, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["new ViewHolder(view)", "view.setTag(*)", "view.getTag()", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "layoutInflater.inflate(int,ViewGroup)", "view.findViewById(*)", "layoutInflater.inflate(int,ViewGroup)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [929, 920, 1127, 3038, 4810, 5526, 6207, 7257, 9773, 9858, 10726, 10819, 11431, 12484], "useEnd": [946, 947, 1137, 3077, 4844, 5556, 6240, 7287, 9822, 9892, 10775, 10853, 11471, 12515], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/alberapps/tiempobus/tree/master/TiempoBus/src/alberapps/android/tiempobus/principal/TiemposAdapter.java", "rawCode": "  /** Genera la vista de cada uno de los items */\n  @Override\n  public View getView(int position, View v, ViewGroup parent) {\n\n    final MainActivity actividad = (MainActivity) contexto;\n\n    Typeface ubuntu = null;\n\n    try {\n      ubuntu = ResourcesCompat.getFont(contexto, R.font.ubuntu);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    final BusLlegada bus = getItem(position);\n\n    if (!bus.isSinDatos() && !bus.isErrorServicio()) {\n\n      TextView busLinea = null;\n\n      if (v != null) {\n        busLinea = (TextView) v.findViewById(R.id.bus_linea);\n      }\n\n      // Si no tenemos la vista de la fila creada componemos una\n      if (v == null || busLinea == null) {\n        Context ctx = this.getContext().getApplicationContext();\n        LayoutInflater vi = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        v = vi.inflate(R.layout.tiempos_item, null);\n\n        v.setTag(new ViewHolder(v));\n      }\n\n      // animar\n      // v.setAlpha(0.0f);\n      // v.animate().alpha(1.0f);\n\n      // Accedemos a la vista cacheada y la rellenamos\n      ViewHolder tag = (ViewHolder) v.getTag();\n\n      // BusLlegada bus = getItem(position);\n      if (bus != null) {\n\n        if (bus.getLinea() != null && !bus.getLinea().equals(\"\") && !bus.getLinea().equals(\"-\")) {\n          tag.busLinea.setText(bus.getLinea().trim());\n          tag.busLinea.setVisibility(View.VISIBLE);\n        } else {\n          tag.busLinea.setVisibility(View.GONE);\n        }\n\n        tag.busDestino.setText(bus.getDestino().trim());\n\n        tag.tiempoPrincipal.setText(controlAviso(bus.getProximo(), true, false).trim());\n\n        // Formato colores\n        DatosPantallaPrincipal.formatoLinea(contexto, tag.busLinea, bus.getLinea(), true);\n\n        /*if (bus.getLinea().equals(\"L9\")) {\n\n        tag.busProximo.setText(\"\");\n\n        } else {*/\n\n        if (bus.getSegundoTram() != null) {\n\n          tag.busProximo.setText(\n              controlAviso(bus.getProximo(), false, true).trim()\n                  + \"\\n\"\n                  + controlAviso(bus.getSegundoTram().getProximo(), false, false).trim());\n\n        } else if (bus.getSegundoBus() != null\n            && !bus.getSegundoBus().getProximo().equals(\"sinestimacion;sinestimacion\")) {\n\n          tag.busProximo.setText(\n              controlAviso(bus.getProximo(), false, true).trim()\n                  + \"\\n\"\n                  + controlAviso(bus.getSegundoBus().getProximo(), false, false).trim());\n\n        } else {\n\n          tag.busProximo.setText(controlAviso(bus.getProximo(), false, true).trim());\n        }\n        // }\n\n        // Mensaje tiempo real\n        TextView textoTiempoReal = (TextView) v.findViewById(R.id.tiempo_aviso);\n\n        if (ubuntu != null) {\n          textoTiempoReal.setTypeface(ubuntu);\n        }\n        if (bus.isTiempoReal()) {\n          textoTiempoReal.setVisibility(View.GONE);\n        } else {\n          textoTiempoReal.setVisibility(View.VISIBLE);\n        }\n      }\n\n      // Botones\n      AppCompatImageView alertaText = v.findViewById(R.id.tiempos_alerta_img);\n\n      Bundle bundle = new Bundle();\n\n      alertaText.setOnClickListener(\n          new OnClickListener() {\n\n            public void onClick(View view) {\n\n              MainActivity actividad = (MainActivity) contexto;\n\n              if (bus != null) {\n\n                try {\n\n                  // Texto para receiver\n                  String textoReceiver =\n                      actividad.gestionarAlarmas.prepararReceiver(bus, actividad.paradaActual);\n\n                  // Activar alarma y mostrar modal\n                  actividad.gestionarAlarmas.mostrarModalTiemposAlerta(\n                      bus, actividad.paradaActual, textoReceiver);\n\n                } catch (Exception e) {\n                  e.printStackTrace();\n                  Toast.makeText(\n                          actividad.getApplicationContext(),\n                          actividad.getApplicationContext().getString(R.string.alarma_auto_error),\n                          Toast.LENGTH_SHORT)\n                      .show();\n                }\n\n              } else {\n                Toast.makeText(\n                        actividad.getApplicationContext(),\n                        actividad.getApplicationContext().getString(R.string.alarma_auto_error),\n                        Toast.LENGTH_SHORT)\n                    .show();\n              }\n\n              bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C06\");\n              bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Alarma\");\n              bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n              actividad.mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n            }\n          });\n\n      AppCompatImageView compartir = v.findViewById(R.id.compartir_img);\n\n      compartir.setOnClickListener(\n          new OnClickListener() {\n\n            public void onClick(View view) {\n\n              MainActivity actividad = (MainActivity) contexto;\n\n              actividad.datosPantallaPrincipal.shareBus(bus, actividad.paradaActual);\n\n              bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C07\");\n              bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Compartir\");\n              bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n              actividad.mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n            }\n          });\n\n      AppCompatImageView leer = v.findViewById(R.id.audio_img);\n\n      leer.setOnClickListener(\n          new OnClickListener() {\n\n            public void onClick(View view) {\n\n              MainActivity actividad = (MainActivity) contexto;\n\n              actividad.datosPantallaPrincipal.cantarLinea(bus);\n\n              bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C08\");\n              bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Leer\");\n              bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n              actividad.mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n            }\n          });\n\n      AppCompatImageView mapa = v.findViewById(R.id.mapa_tarjeta);\n\n      mapa.setOnClickListener(\n          new OnClickListener() {\n\n            public void onClick(View view) {\n\n              MainActivity actividad = (MainActivity) contexto;\n\n              if (actividad.datosPantallaPrincipal.servicesConnected()) {\n\n                Intent i = new Intent(actividad, MapasActivity.class);\n                i.putExtra(\"LINEA_MAPA\", bus.getLinea());\n                i.putExtra(\"LINEA_MAPA_PARADA\", Integer.toString(actividad.paradaActual));\n                actividad.startActivityForResult(i, MainActivity.SUB_ACTIVITY_REQUEST_PARADA);\n              }\n\n              bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C09\");\n              bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Mapa\");\n              bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n              actividad.mFirebaseAnalytics.logEvent(FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n            }\n          });\n\n      // Fijar\n      final ImageView fijar = (ImageView) v.findViewById(R.id.fijar_img);\n\n      if (bus.isTarjetaFijada()) {\n\n        fijar.setImageResource(R.drawable.content_remove);\n\n        fijar.setOnClickListener(\n            new OnClickListener() {\n\n              public void onClick(View view) {\n\n                MainActivity actividad = (MainActivity) contexto;\n\n                actividad.datosPantallaPrincipal.eliminarTarjeta(bus);\n\n                actividad.buses.get(getPosition(bus)).setTarjetaFijada(false);\n\n                actividad.buses =\n                    actividad.datosPantallaPrincipal.ordenarTiemposPorTarjetaFija(actividad.buses);\n\n                actividad.handler.sendEmptyMessage(MainActivity.MSG_FRECUENCIAS_ACTUALIZADAS);\n\n                fijar.setImageResource(R.drawable.fijar);\n\n                notifyDataSetChanged();\n\n                bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C10\");\n                bundle.putString(\n                    FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Fijar - Quitar\");\n                bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n                actividad.mFirebaseAnalytics.logEvent(\n                    FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n              }\n            });\n\n      } else {\n\n        fijar.setOnClickListener(\n            new OnClickListener() {\n\n              public void onClick(View view) {\n\n                MainActivity actividad = (MainActivity) contexto;\n\n                actividad.datosPantallaPrincipal.fijarTarjeta(bus);\n\n                actividad.buses.get(getPosition(bus)).setTarjetaFijada(true);\n\n                actividad.buses =\n                    actividad.datosPantallaPrincipal.ordenarTiemposPorTarjetaFija(actividad.buses);\n\n                actividad.handler.sendEmptyMessage(MainActivity.MSG_FRECUENCIAS_ACTUALIZADAS);\n\n                notifyDataSetChanged();\n\n                bundle.putString(FirebaseAnalytics.Param.ITEM_ID, \"C11\");\n                bundle.putString(\n                    FirebaseAnalytics.Param.ITEM_NAME, \"Tarjeta - Boton Fijar - Poner\");\n                bundle.putString(FirebaseAnalytics.Param.CONTENT_TYPE, \"button\");\n                actividad.mFirebaseAnalytics.logEvent(\n                    FirebaseAnalytics.Event.SELECT_CONTENT, bundle);\n              }\n            });\n      }\n\n    } else if (bus.isConsultaInicial()) {\n\n      Context ctx = this.getContext().getApplicationContext();\n      LayoutInflater vi = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n      v = vi.inflate(R.layout.tiempos_item_sin_datos, null);\n\n      TextView text = (TextView) v.findViewById(R.id.txt_sin_datos);\n\n      if (ubuntu != null) {\n        text.setTypeface(ubuntu, Typeface.BOLD);\n      }\n\n      text.setText(ctx.getString(R.string.aviso_recarga));\n\n    } else {\n\n      // tram\n      // boolean opcionTR = actividad.preferencias.getBoolean(\"tram_opcion_tr\", false);\n      boolean opcionTR = false;\n\n      Context ctx = this.getContext().getApplicationContext();\n      LayoutInflater vi = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n      if (DatosPantallaPrincipal.esTram(Integer.toString(actividad.paradaActual))) {\n\n        // Vacio para opcion sin tiempo real\n        if (bus != null && bus.isSinDatos() && !opcionTR) {\n          v = vi.inflate(R.layout.sin_datos_tram, null);\n          return v;\n        }\n\n        v = vi.inflate(R.layout.tiempos_item_sin_datos_tram, null);\n      } else {\n        v = vi.inflate(R.layout.tiempos_item_sin_datos, null);\n      }\n\n      TextView text = (TextView) v.findViewById(R.id.txt_sin_datos);\n      if (ubuntu != null) {\n        text.setTypeface(ubuntu, Typeface.BOLD);\n      }\n\n      if (bus != null && bus.isErrorServicio()) {\n\n        if (DatosPantallaPrincipal.esTram(Integer.toString(actividad.paradaActual)) && opcionTR) {\n          text.setText(ctx.getString(R.string.error_tiempos_tram));\n        } else {\n          text.setText(ctx.getString(R.string.error_tiempos));\n        }\n      } else {\n        text.setText(\n            ctx.getString(R.string.main_no_items) + \"\\n\" + ctx.getString(R.string.error_status));\n      }\n\n      TextView textAviso = (TextView) v.findViewById(R.id.txt_sin_datos_aviso);\n      if (ubuntu != null) {\n        textAviso.setTypeface(ubuntu, Typeface.BOLD);\n      }\n\n      String aviso = \"\";\n\n      if (DatosPantallaPrincipal.esTram(Integer.toString(actividad.paradaActual))) {\n        // aviso = ctx.getString(R.string.tlf_tram);\n        aviso = ctx.getString(R.string.info_tram_tr);\n\n        // //Horarios\n\n        /*AppCompatTextView botonHorarios = (AppCompatTextView) v.findViewById(R.id.boton_horarios);\n        botonHorarios.setText(botonHorarios.getText().toString().toUpperCase());\n\n        botonHorarios.setOnClickListener(new Button.OnClickListener() {\n        public void onClick(View arg0) {\n\n        actividad.detenerTodasTareas();\n\n        Intent i = new Intent(actividad, InfoLineasTabsPager.class);\n        i.putExtra(\"HORARIOS\", \"TRAM\");\n\n        actividad.startActivityForResult(i, MainActivity.SUB_ACTIVITY_REQUEST_PARADA);\n\n        }\n        });*/\n\n      } else {\n        aviso = ctx.getString(R.string.tlf_subus);\n      }\n\n      ImageView imagenAviso = (ImageView) v.findViewById(R.id.imageAviso);\n      imagenAviso.setImageResource(R.drawable.ic_warning_black_48dp);\n\n      textAviso.setText(aviso);\n    }\n\n    // animar\n\n    if (position > lastPosition) {\n      // v.animate().alpha(0.0f).setDuration(800);\n      // ViewCompat.setAlpha(v, 0.0f);\n      // ViewCompat.animate(v).alpha(1.0f).setDuration(800);\n\n      Animation animation = AnimationUtils.loadAnimation(getContext(), R.anim.push_up);\n      v.startAnimation(animation);\n\n      lastPosition = position;\n    }\n\n    return v;\n  }\n"}, {"dataset": "inflate", "exampleID": 4743, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 105, "focalAPIEnd": 145, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bindViewHolder(view)"], "useStart": [151], "useEnd": [168], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/romainguefveneu/naonedbus/tree/master/src/net/naonedbus/widget/adapter/CursorSectionAdapter.java", "rawCode": "  @Override\n  public View newView(Context context, Cursor cursor, ViewGroup parent) {\n    final View v = mLayoutInflater.inflate(mLayoutId, null);\n    bindViewHolder(v);\n    return v;\n  }\n"}, {"dataset": "inflate", "exampleID": 4744, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [387], "initializationEnd": [412], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 440, "focalAPIEnd": 477, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["setView(view)"], "useStart": [424], "useEnd": [478], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pdudits/supergenpass-android/tree/master/src/info/staticfree/SuperGenPass/Super_Gen_Pass.java", "rawCode": "  @Override\n  protected Dialog onCreateDialog(int id) {\n    switch (id) {\n      case DIALOG_ABOUT:\n        {\n          final Builder builder = new AlertDialog.Builder(this);\n\n          builder.setTitle(R.string.about_title);\n          builder.setIcon(R.drawable.icon);\n\n          // using this instead of setMessage lets us have clickable links.\n          final LayoutInflater factory = LayoutInflater.from(this);\n          builder.setView(factory.inflate(R.layout.about, null));\n\n          builder.setPositiveButton(\n              android.R.string.ok,\n              new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int which) {\n                  setResult(RESULT_OK);\n                }\n              });\n          return builder.create();\n        }\n\n      case DIALOG_CONFIRM_MASTER:\n        {\n          final Builder builder = new AlertDialog.Builder(this);\n          builder.setTitle(R.string.dialog_verify_title);\n          builder.setCancelable(true);\n          final LayoutInflater inflater = LayoutInflater.from(this);\n          final View pwVerifyLayout = inflater.inflate(R.layout.master_pw_verify, null);\n          final EditText pwVerify = (EditText) pwVerifyLayout.findViewById(R.id.verify);\n\n          builder.setNegativeButton(\n              android.R.string.cancel,\n              new Dialog.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface dialog, int which) {\n                  dialog.cancel();\n                }\n              });\n\n          pwVerify.addTextChangedListener(\n              new TextWatcher() {\n\n                @Override\n                public void onTextChanged(CharSequence s, int start, int before, int count) {}\n\n                @Override\n                public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n                @Override\n                public void afterTextChanged(Editable s) {\n                  if (pwVerify.getTag() instanceof String) {\n                    final String masterPw = (String) pwVerify.getTag();\n                    if (masterPw.length() > 0 && masterPw.equals(s.toString())) {\n                      dismissDialog(DIALOG_CONFIRM_MASTER);\n                      Toast.makeText(\n                              getApplicationContext(),\n                              R.string.toast_verify_success,\n                              Toast.LENGTH_SHORT)\n                          .show();\n                    }\n                  }\n                }\n              });\n          builder.setView(pwVerifyLayout);\n          final Dialog d = builder.create();\n          // This is added below to ensure that the soft input doesn't get hidden if it's\n          // showing,\n          // which seems to be the default for dialogs.\n          d.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_UNCHANGED);\n          return d;\n        }\n      default:\n        throw new IllegalArgumentException(\"Unknown dialog ID: \" + id);\n    }\n  }\n"}, {"dataset": "inflate", "exampleID": 4745, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [1644], "initializationEnd": [1673], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 1704, "focalAPIEnd": 1759, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["setView(view)"], "useStart": [1773], "useEnd": [1992], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/core/java/android/app/VibrationPickerDialog.java", "rawCode": "  @Override\n  public Dialog onCreateDialog(Bundle savedInstanceState) {\n    mIsDel = getArguments().getBoolean(\"isdel\");\n    String mUriString = getArguments().getString(\"uri\");\n    mHandler = ((HandlerHolder) getArguments().getSerializable(\"handler\")).getHandler();\n    mContext = getActivity();\n    mVibrator = (Vibrator) mContext.getSystemService(Context.VIBRATOR_SERVICE);\n\n    final Uri allVibrations = Uri.parse(VibrationPattern.URI);\n    final Cursor vibrations =\n        mContext.getContentResolver().query(allVibrations, null, null, null, null);\n\n    vibrations.moveToFirst();\n    int ID = -1;\n    if (!mUriString.isEmpty()) {\n      Uri mUri = Uri.parse(mUriString);\n      do {\n        try {\n          if (Integer.parseInt(mUri.getLastPathSegment()) == vibrations.getInt(0)) {\n            ID = vibrations.getPosition();\n          }\n        } catch (Exception ex) {\n          // nothing to do here\n        }\n      } while (vibrations.moveToNext());\n    }\n    final int selectedID = ID;\n    final SimpleCursorAdapter adapter =\n        new SimpleCursorAdapter(\n            mContext,\n            android.R.layout.simple_list_item_single_choice,\n            vibrations,\n            new String[] {\"name\"},\n            new int[] {android.R.id.text1},\n            0) {\n\n          @Override\n          public Object getItem(int pos) {\n            vibrations.moveToPosition(pos);\n            int id = vibrations.getInt(0);\n            setSelectedVibration(\n                new VibrationPattern(Uri.parse(VibrationPattern.URI + \"/\" + id), mContext));\n            return getSelectedVibration();\n          }\n        };\n\n    LayoutInflater factory = LayoutInflater.from(mContext);\n    final View vibListView = factory.inflate(R.layout.vibration_picker_dialog, null);\n\n    return new AlertDialog.Builder(mContext)\n        .setTitle(mIsDel ? R.string.vibration_picker_del_title : R.string.vibration_picker_title)\n        .setIcon(mIsDel ? R.drawable.ic_dialog_alert : 0)\n        .setView(vibListView)\n        .setSingleChoiceItems(\n            adapter,\n            selectedID,\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int which) {\n                ((VibrationPattern) adapter.getItem(which)).play();\n              }\n            })\n        .setPositiveButton(\n            mIsDel ? R.string.delete : R.string.ok,\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int whichButton) {\n                if (mIsDel) {\n                  delVib(getSelectedVibration());\n                  adapter.notifyDataSetChanged();\n                } else {\n                  selectVib(getSelectedVibration());\n                }\n                stopAllVibrations();\n              }\n            })\n        .setNegativeButton(\n            R.string.cancel,\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int whichButton) {\n                stopAllVibrations();\n                sendCancel();\n              }\n            })\n        .create();\n  }\n"}, {"dataset": "inflate", "exampleID": 4746, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 127, "focalAPIEnd": 174, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [377, 462], "useEnd": [403, 487], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/hoangtran/mupdf/tree/master/android/src/com/artifex/mupdf/OutlineAdapter.java", "rawCode": "  public View getView(int position, View convertView, ViewGroup parent) {\n    View v;\n    if (convertView == null) {\n      v = mInflater.inflate(R.layout.outline_entry, null);\n    } else {\n      v = convertView;\n    }\n    int level = mItems[position].level;\n    if (level > 8) level = 8;\n    String space = \"\";\n    for (int i = 0; i < level; i++) space += \" \";\n    ((TextView) v.findViewById(R.id.title)).setText(space + mItems[position].title);\n    ((TextView) v.findViewById(R.id.page)).setText(String.valueOf(mItems[position].page + 1));\n    return v;\n  }\n"}, {"dataset": "inflate", "exampleID": 4747, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 105, "focalAPIEnd": 154, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Jules-/terraingis/tree/master/src/drag-sort-listview/src/com/mobeta/android/dslv/ResourceDragSortCursorAdapter.java", "rawCode": "  @Override\n  public View newDropDownView(Context context, Cursor cursor, ViewGroup parent) {\n    return mInflater.inflate(mDropDownLayout, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4748, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 191, "focalAPIEnd": 253, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.getContext()", "view.setTag(String)"], "useStart": [436, 591, 660, 736, 805, 1966, 2747], "useEnd": [466, 621, 690, 764, 838, 1983, 2766], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/viv/linphone-android/tree/master/src/org/linphone/HistorySimpleFragment.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      View view = null;\n      if (convertView != null) {\n        view = convertView;\n      } else {\n        view = mInflater.inflate(R.layout.history_cell_simple, parent, false);\n      }\n\n      final LinphoneCallLog log = mLogs.get(position);\n      long timestamp = log.getTimestamp();\n      final LinphoneAddress address;\n\n      TextView contact = (TextView) view.findViewById(R.id.sipUri);\n      contact.setSelected(true); // For automated horizontal scrolling of long texts\n\n      ImageView detail = (ImageView) view.findViewById(R.id.detail);\n      ImageView delete = (ImageView) view.findViewById(R.id.delete);\n      ImageView callDirection = (ImageView) view.findViewById(R.id.icon);\n\n      TextView separator = (TextView) view.findViewById(R.id.separator);\n      Calendar logTime = Calendar.getInstance();\n      logTime.setTimeInMillis(timestamp);\n      separator.setText(timestampToHumanDate(logTime));\n\n      if (position > 0) {\n        LinphoneCallLog previousLog = mLogs.get(position - 1);\n        long previousTimestamp = previousLog.getTimestamp();\n        Calendar previousLogTime = Calendar.getInstance();\n        previousLogTime.setTimeInMillis(previousTimestamp);\n\n        if (isSameDay(previousLogTime, logTime)) {\n          separator.setVisibility(View.GONE);\n        } else {\n          separator.setVisibility(View.VISIBLE);\n        }\n      } else {\n        separator.setVisibility(View.VISIBLE);\n      }\n\n      if (log.getDirection() == CallDirection.Incoming) {\n        address = log.getFrom();\n        if (log.getStatus() == CallStatus.Missed) {\n          callDirection.setImageBitmap(missedCall);\n        } else {\n          callDirection.setImageBitmap(incomingCall);\n        }\n      } else {\n        address = log.getTo();\n        callDirection.setImageBitmap(outgoingCall);\n      }\n\n      LinphoneUtils.findUriPictureOfContactAndSetDisplayName(\n          address, view.getContext().getContentResolver());\n      String displayName = address.getDisplayName();\n      String sipUri = address.asStringUriOnly();\n\n      if (displayName == null) {\n        if (getResources().getBoolean(R.bool.only_display_username_if_unknown)\n            && LinphoneUtils.isSipAddress(sipUri)) {\n          contact.setText(LinphoneUtils.getUsernameFromAddress(sipUri));\n        } else {\n          contact.setText(sipUri);\n        }\n      } else {\n        if (getResources().getBoolean(R.bool.only_display_username_if_unknown)\n            && LinphoneUtils.isSipAddress(address.getDisplayName())) {\n          contact.setText(LinphoneUtils.getUsernameFromAddress(address.getDisplayName()));\n        } else {\n          contact.setText(displayName);\n        }\n      }\n      view.setTag(sipUri);\n\n      if (isEditMode) {\n        delete.setVisibility(View.VISIBLE);\n        detail.setVisibility(View.GONE);\n      } else {\n        delete.setVisibility(View.GONE);\n        detail.setVisibility(View.VISIBLE);\n        detail.setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                if (LinphoneActivity.isInstanciated()) {\n                  LinphoneActivity.instance().displayHistoryDetail(address.asStringUriOnly(), log);\n                }\n              }\n            });\n      }\n\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4749, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [186], "initializationEnd": [235], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 249, "focalAPIEnd": 307, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [428, 515, 602], "useEnd": [477, 564, 649], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/COMU/homescreen/tree/master/Mehmet/TwitterApplication/src/org/comu/homescreen/TwitterApplication.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      View v = convertView;\n      if (v == null) {\n        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(org.comu.homescreen.R.layout.listelement, null);\n      }\n\n      UserRecord user = users.get(position);\n      if (user != null) {\n        TextView username = (TextView) v.findViewById(org.comu.homescreen.R.id.Username);\n        TextView tweet = (TextView) v.findViewById(org.comu.homescreen.R.id.UserText);\n        ImageView img = (ImageView) v.findViewById(org.comu.homescreen.R.id.avatar);\n\n        if (username != null) {\n          username.setText(user.username);\n        }\n\n        if (tweet != null) {\n          tweet.setText(\" \" + user.usertext);\n        }\n\n        if (img != null) {\n          img.setImageDrawable(createDrawableFromURL(user.str));\n        }\n      }\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4750, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 143, "focalAPIEnd": 220, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/packages_apps_Contacts/tree/master/src/com/android/contacts/detail/ContactDetailUpdatesFragment.java", "rawCode": "  @Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedState) {\n    mInflater = inflater;\n    return mInflater.inflate(R.layout.contact_detail_updates_fragment, container, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4751, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 152, "focalAPIEnd": 215, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setText(*)", "ViewGroup.addView(view)", "layoutInflater.inflate(int,ViewGroup,boolean)"], "useStart": [223, 301, 482], "useEnd": [293, 337, 561], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TrasUI/old_Settings/tree/master/src/com/android/settings/applications/RunningServiceDetails.java", "rawCode": "  void addServiceDetailsView(RunningState.ServiceItem si, RunningState.MergedItem mi) {\n    if (mNumServices == 0) {\n      mServicesHeader = (TextView) mInflater.inflate(R.layout.separator_label, mAllDetails, false);\n      mServicesHeader.setText(R.string.runningservicedetails_services_title);\n      mAllDetails.addView(mServicesHeader);\n    }\n    mNumServices++;\n\n    RunningState.BaseItem bi = si != null ? si : mi;\n\n    ActiveDetail detail = new ActiveDetail();\n    View root = mInflater.inflate(R.layout.running_service_details_service, mAllDetails, false);\n    mAllDetails.addView(root);\n    detail.mRootView = root;\n    detail.mServiceItem = si;\n    detail.mViewHolder = new RunningProcessesView.ViewHolder(root);\n    detail.mActiveItem = detail.mViewHolder.bind(mState, bi, mBuilder);\n\n    if (si != null && si.mRunningService.clientLabel != 0) {\n      detail.mManageIntent = mAm.getRunningServiceControlPanel(si.mRunningService.service);\n    }\n\n    TextView description = (TextView) root.findViewById(R.id.comp_description);\n    if (si != null && si.mServiceInfo.descriptionRes != 0) {\n      description.setText(\n          getActivity()\n              .getPackageManager()\n              .getText(\n                  si.mServiceInfo.packageName,\n                  si.mServiceInfo.descriptionRes,\n                  si.mServiceInfo.applicationInfo));\n    } else {\n      if (mi.mBackground) {\n        description.setText(R.string.background_process_stop_description);\n      } else if (detail.mManageIntent != null) {\n        try {\n          Resources clientr =\n              getActivity()\n                  .getPackageManager()\n                  .getResourcesForApplication(si.mRunningService.clientPackage);\n          String label = clientr.getString(si.mRunningService.clientLabel);\n          description.setText(getActivity().getString(R.string.service_manage_description, label));\n        } catch (PackageManager.NameNotFoundException e) {\n        }\n      } else {\n        description.setText(\n            getActivity()\n                .getText(\n                    si != null\n                        ? R.string.service_stop_description\n                        : R.string.heavy_weight_stop_description));\n      }\n    }\n\n    detail.mStopButton = (Button) root.findViewById(R.id.left_button);\n    detail.mStopButton.setOnClickListener(detail);\n    detail.mStopButton.setText(\n        getActivity()\n            .getText(\n                detail.mManageIntent != null ? R.string.service_manage : R.string.service_stop));\n\n    detail.mReportButton = (Button) root.findViewById(R.id.right_button);\n    detail.mReportButton.setOnClickListener(detail);\n    detail.mReportButton.setText(com.android.internal.R.string.report);\n    // check if error reporting is enabled in secure settings\n    int enabled =\n        Settings.Secure.getInt(\n            getActivity().getContentResolver(), Settings.Secure.SEND_ACTION_APP_ERROR, 0);\n    if (enabled != 0 && si != null) {\n      detail.mInstaller =\n          ApplicationErrorReport.getErrorReportReceiver(\n              getActivity(), si.mServiceInfo.packageName, si.mServiceInfo.applicationInfo.flags);\n      detail.mReportButton.setEnabled(detail.mInstaller != null);\n    } else {\n      detail.mReportButton.setEnabled(false);\n    }\n\n    mActiveDetails.add(detail);\n  }\n"}, {"dataset": "inflate", "exampleID": 4752, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [229], "initializationEnd": [262], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 330, "focalAPIEnd": 399, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.bind(*,*)"], "useStart": [571], "useEnd": [613], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cadavre/android_packages_apps_Mms/tree/master/src/com/android/mms/ui/DeliveryReportAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View view, ViewGroup viewGroup) {\n    DeliveryReportListItem listItem;\n    DeliveryReportItem item = this.getItem(position);\n\n    if (view == null) {\n      LayoutInflater factory = LayoutInflater.from(getContext());\n      listItem =\n          (DeliveryReportListItem)\n              factory.inflate(R.layout.delivery_report_list_item, viewGroup, false);\n    } else {\n      if (view instanceof DeliveryReportListItem) {\n        listItem = (DeliveryReportListItem) view;\n      } else {\n        return view;\n      }\n    }\n\n    listItem.bind(item.recipient, item.status);\n\n    return listItem;\n  }\n"}, {"dataset": "inflate", "exampleID": 4753, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [225], "initializationEnd": [274], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 288, "focalAPIEnd": 324, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)"], "useStart": [371], "useEnd": [403], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jakubkinst/Course-Manager/tree/master/cd/android_app_sources/src/cz/kinst/jakub/coursemanager/CourseList.java", "rawCode": "    @Override\n    public View getGroupView(\n        int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n      View v = convertView;\n      if (v == null) {\n        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(R.layout.group_row, null);\n      }\n      TextView textView = (TextView) v.findViewById(R.id.group_title);\n      if (groupPosition == 0) {\n        textView.setText(getText(R.string.teaching));\n      } else {\n        textView.setText(getText(R.string.studying));\n      }\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4754, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 175, "focalAPIEnd": 229, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["new ViewHolder(view)", "view.setTag(ViewHolder)", "view.getTag()"], "useStart": [252, 289, 370], "useEnd": [279, 319, 390], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/foxykeep/DataDroid/tree/master/DataDroidPoC/src/com/foxykeep/datadroidpoc/ui/crud/CrudSyncPhoneListActivity.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      ViewHolder viewHolder;\n\n      if (convertView == null) {\n        convertView = mInflater.inflate(R.layout.crud_phone_list_item, null);\n        viewHolder = new ViewHolder(convertView);\n        convertView.setTag(viewHolder);\n      } else {\n        viewHolder = (ViewHolder) convertView.getTag();\n      }\n\n      viewHolder.populateView(getItem(position));\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4755, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 216, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ChainsDD/Superuser/tree/master/src/com/actionbarsherlock/internal/view/menu/BaseMenuPresenter.java", "rawCode": "  /**\n   * Create a new item view that can be re-bound to other item data later.\n   *\n   * @return The new item view\n   */\n  public MenuView.ItemView createItemView(ViewGroup parent) {\n    return (MenuView.ItemView) mSystemInflater.inflate(mItemLayoutRes, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4756, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [422], "initializationEnd": [471], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 488, "focalAPIEnd": 536, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["setContentView(view)"], "useStart": [544], "useEnd": [561], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dmlloyd/atari800/tree/master/src/android/src/FileSelector.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    if (Integer.parseInt(Build.VERSION.SDK) >= Build.VERSION_CODES.HONEYCOMB)\n      _srchView = new SearchHelp();\n    else _srchView = new SearchNull();\n\n    ListView lv = getListView();\n    _pathsel = getIntent().getAction().equals(ACTION_OPEN_PATH);\n\n    if (_pathsel) {\n      LayoutInflater inf = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      View v = inf.inflate(R.layout.file_selector_footer, null);\n      setContentView(v);\n      findViewById(R.id.fsel_ok).setOnClickListener(this);\n      findViewById(R.id.fsel_cancel).setOnClickListener(this);\n    } else lv.setOnItemLongClickListener(this);\n\n    lv.setTextFilterEnabled(true);\n    lv.setFastScrollEnabled(true);\n\n    SharedPreferences prefs = getPreferences(Context.MODE_PRIVATE);\n    String oldpath =\n        _pathsel\n            ? (getIntent().getData() != null ? getIntent().getData().getPath() : null)\n            : prefs.getString(SAVED_PATH, null);\n    listDirectory(\n        (oldpath != null) ? new File(oldpath) : Environment.getExternalStorageDirectory(),\n        _pathsel ? 0 : prefs.getInt(SAVED_POS, 0),\n        getLastNonConfigurationInstance());\n  }\n"}, {"dataset": "inflate", "exampleID": 4757, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [154], "initializationEnd": [203], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 220, "focalAPIEnd": 268, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setBackgroundColor(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [284, 467, 543, 618, 700, 777], "useEnd": [341, 503, 579, 658, 738, 828], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/martinp/hist-bachelor-thesis/tree/master/android/src/main/java/no/kantega/android/afp/SimilarTransactionsActivity.java", "rawCode": "    @Override\n    public View getView(int position, View view, ViewGroup parent) {\n      if (view == null) {\n        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        view = vi.inflate(R.layout.similartransactionrow, null);\n      }\n      view.setBackgroundColor(colors[position % colors.length]);\n      Transaction transaction = items.get(position);\n      if (transaction != null) {\n        TextView tv_date = (TextView) view.findViewById(R.id.trow_tv_date);\n        TextView tv_text = (TextView) view.findViewById(R.id.trow_tv_text);\n        TextView tv_tag = (TextView) view.findViewById(R.id.trow_tv_category);\n        TextView tv_amount = (TextView) view.findViewById(R.id.trow_tv_amount);\n        CheckBox bCheck = (CheckBox) view.findViewById(R.id.checkbox_similartransaction);\n        bCheck.setChecked(transaction.isChecked());\n        tv_date.setText(null);\n        tv_text.setText(null);\n        tv_tag.setText(null);\n        tv_amount.setText(null);\n        if (transaction.getDate() != null) {\n          Date d = transaction.getDate();\n          tv_date.setText(FmtUtil.dateToString(\"yyyy-MM-dd\", d));\n        }\n        if (transaction.getText() != null) {\n          tv_text.setText(transaction.getText());\n        }\n        if (transaction.getTag() != null) {\n          tv_tag.setText(transaction.getTag().getName());\n        } else if (bCheck.isChecked()) {\n          if (t != null) {\n            tv_tag.setText(t.getTag().getName());\n          } else {\n            tv_tag.setText(suggestions.get(transaction.get_id()).getName());\n          }\n        } else {\n          tv_tag.setText(R.string.not_tagged);\n        }\n        if (transaction.getAmount() != 0) {\n          tv_amount.setText(FmtUtil.currencyWithoutPrefix(transaction.getAmount()));\n        }\n      }\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4758, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 218, "focalAPIEnd": 273, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [885, 958], "useEnd": [911, 978], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fraga/montransit/tree/master/MonTransit/src/org/montrealtransit/android/activity/BusTab.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      // MyLog.v(TAG, \"getView(%s)\", position);\n      ViewHolder holder;\n      if (convertView == null) {\n        convertView = this.layoutInflater.inflate(this.viewId, parent, false);\n        holder = new ViewHolder();\n        holder.stopCodeTv = (TextView) convertView.findViewById(R.id.stop_code);\n        holder.labelTv = (TextView) convertView.findViewById(R.id.label);\n        holder.lineNumberTv = (TextView) convertView.findViewById(R.id.line_number);\n        holder.lineDirectionTv = (TextView) convertView.findViewById(R.id.line_direction);\n        holder.favImg = (ImageView) convertView.findViewById(R.id.fav_img);\n        holder.distanceTv = (TextView) convertView.findViewById(R.id.distance);\n        holder.compassImg = (ImageView) convertView.findViewById(R.id.compass);\n        convertView.setTag(holder);\n      } else {\n        holder = (ViewHolder) convertView.getTag();\n      }\n      RouteTripStop routeTripStop = getItem(position);\n      if (routeTripStop != null) {\n        // bus stop code\n        holder.stopCodeTv.setText(routeTripStop.stop.code);\n        // bus stop place\n        holder.labelTv.setText(BusUtils.cleanBusStopPlace(routeTripStop.stop.name));\n        // bus stop line number\n        holder.lineNumberTv.setText(routeTripStop.route.shortName);\n        holder.lineNumberTv.setBackgroundColor(Utils.parseColor(routeTripStop.route.color));\n        holder.lineNumberTv.setTextColor(Utils.parseColor(routeTripStop.route.textColor));\n        // bus stop line direction\n        holder.lineDirectionTv.setText(\n            routeTripStop.trip.getHeading(this.context).toUpperCase(Locale.getDefault()));\n        // distance\n        if (!TextUtils.isEmpty(routeTripStop.getDistanceString())) {\n          holder.distanceTv.setText(routeTripStop.getDistanceString());\n          holder.distanceTv.setVisibility(View.VISIBLE);\n        } else {\n          holder.distanceTv.setVisibility(View.INVISIBLE);\n          holder.distanceTv.setText(null);\n        }\n        // favorite\n        if (BusTab.this.favUIDs != null && BusTab.this.favUIDs.contains(routeTripStop.getUID())) {\n          holder.favImg.setVisibility(View.VISIBLE);\n        } else {\n          holder.favImg.setVisibility(View.GONE);\n        }\n        // compass\n        if (location != null\n            && lastCompassInDegree != 0\n            && location.getAccuracy() <= routeTripStop.getDistance()) {\n          float compassRotation =\n              SensorUtils.getCompassRotationInDegree(\n                  location, routeTripStop, lastCompassInDegree, locationDeclination);\n          SupportFactory.get().rotateImageView(holder.compassImg, compassRotation, BusTab.this);\n          holder.compassImg.setVisibility(View.VISIBLE);\n        } else {\n          holder.compassImg.setVisibility(View.INVISIBLE);\n        }\n        // // closest bike station\n        // int index = -1;\n        // if (BikeTab.this.orderedStationsIds != null) {\n        // index = BikeTab.this.orderedStationsIds.indexOf(bikeStation.getTerminalName());\n        // }\n        // switch (index) {\n        // case 0:\n        // ((TextView)\n        // convertView.findViewById(R.id.station_name)).setTypeface(Typeface.DEFAULT_BOLD);\n        // distanceTv.setTypeface(Typeface.DEFAULT_BOLD);\n        // distanceTv.setTextColor(Utils.getTextColorPrimary(getContext()));\n        // holder.compassImg.setImageResource(R.drawable.heading_arrow_light);\n        // break;\n        // default:\n        // ((TextView) convertView.findViewById(R.id.station_name)).setTypeface(Typeface.DEFAULT);\n        // distanceTv.setTypeface(Typeface.DEFAULT);\n        // distanceTv.setTextColor(Utils.getTextColorSecondary(getContext()));\n        // holder.compassImg.setImageResource(R.drawable.heading_arrow);\n        // break;\n        // }\n      }\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4759, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [433], "initializationEnd": [462], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 486, "focalAPIEnd": 544, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["setView(view)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [794, 1385, 1457, 1527, 1599, 1688, 1778, 1869], "useEnd": [912, 1415, 1487, 1558, 1638, 1729, 1818, 1911], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/royale1223/Vibhinna/tree/master/src/com/binoy/vibhinna/NewDialogFragmentOld.java", "rawCode": "  @Override\n  public Dialog onCreateDialog(Bundle savedInstanceState) {\n    iconId = 1;\n    cacheSize = Constants.CACHE_SIZE;\n    dataSize = Constants.DATA_SIZE;\n    systemSize = Constants.SYSTEM_SIZE;\n\n    validName = true;\n\n    newName = getString(R.string.default_vfs_name);\n    new File(Constants.MULTI_BOOT_PATH + newName);\n    newvsdesc = getString(R.string.default_vfs_description);\n\n    LayoutInflater newVFSDialogInflater = LayoutInflater.from(mContext);\n    final View view = newVFSDialogInflater.inflate(R.layout.new_vs_dialog, null);\n    if (VibhinnaUtils.getMemColor(cacheSize, dataSize, systemSize) != Color.RED) {\n      validSize = true;\n    } else validSize = false;\n\n    if (mContext == null) {\n      Log.d(TAG, \"context is null\");\n    }\n    final AlertDialog dialog =\n        new AlertDialog.Builder(mContext)\n            .setTitle(getString(R.string.create_new_vfs))\n            .setView(view)\n            .setPositiveButton(getString(R.string.okay), onClickListener)\n            .setNegativeButton(\n                getString(R.string.cancel),\n                new DialogInterface.OnClickListener() {\n                  @Override\n                  public void onClick(DialogInterface dialog, int whichButton) {\n                    // Canceled.\n                  }\n                })\n            .show();\n\n    // declare widgets\n    final EditText evsname = (EditText) view.findViewById(R.id.vsname);\n    final EditText evsdesc = (EditText) view.findViewById(R.id.vsdesc);\n    final Spinner spinner = (Spinner) view.findViewById(R.id.spinner);\n    final TextView memory = (TextView) view.findViewById(R.id.icon_and_memory);\n    final EditText cacheSizePicker = (EditText) view.findViewById(R.id.cache_size_editer);\n    final EditText dataSizePicker = (EditText) view.findViewById(R.id.data_size_editer);\n    final EditText systemSizePicker = (EditText) view.findViewById(R.id.system_size_editer);\n\n    // set up widgets - evsdesc\n    evsdesc.setText(newvsdesc);\n    evsname.setText(newName);\n    memory.setText(\n        getString(\n            R.string.total_memory_warning,\n            VibhinnaUtils.getTotalSize(cacheSize, dataSize, systemSize)));\n    memory.setTextColor(VibhinnaUtils.getMemColor(cacheSize, dataSize, systemSize));\n    cacheSizePicker.setText(cacheSize + \"\");\n    dataSizePicker.setText(dataSize + \"\");\n    systemSizePicker.setText(systemSize + \"\");\n\n    // set up spinner\n    ArrayAdapter<CharSequence> adapter =\n        ArrayAdapter.createFromResource(\n            mContext, R.array.icon_array, android.R.layout.simple_spinner_item);\n    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n    spinner.setAdapter(adapter);\n    spinner.setSelection(iconId);\n    spinner.setAdapter(adapter);\n    spinner.setSelection(iconId);\n\n    // set up listeners - evsname\n    TextWatcher nameTextWatcher =\n        new TextWatcher() {\n\n          @Override\n          public void afterTextChanged(Editable s) {\n            String filtered_str = s.toString();\n            if (filtered_str.matches(\".*[\\\\s&/&*].*\")) {\n              filtered_str = filtered_str.replaceAll(\"[\\\\s&/&*]\", \"\");\n              s.clear();\n              s.append(filtered_str);\n              Toast.makeText(mContext, R.string.illegal_char, Toast.LENGTH_SHORT).show();\n            }\n            if (s.length() > 0) {\n              validName = true;\n            } else {\n              validName = false;\n            }\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(newDialogButtonState());\n            newName = filtered_str;\n          }\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n        };\n    evsname.addTextChangedListener(nameTextWatcher);\n\n    // add textwatcher to evsdesc\n    TextWatcher vsDescWatcher =\n        new TextWatcher() {\n\n          @Override\n          public void beforeTextChanged(\n              CharSequence paramCharSequence, int paramInt1, int paramInt2, int paramInt3) {}\n\n          @Override\n          public void onTextChanged(\n              CharSequence paramCharSequence, int paramInt1, int paramInt2, int paramInt3) {}\n\n          @Override\n          public void afterTextChanged(Editable paramEditable) {\n            newvsdesc = paramEditable.toString();\n          }\n        };\n    evsdesc.addTextChangedListener(vsDescWatcher);\n    // Listener for spinner\n    spinner.setOnItemSelectedListener(\n        new OnItemSelectedListener() {\n          @Override\n          public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n            iconId = arg2;\n            memory.setCompoundDrawablesWithIntrinsicBounds(0, VibhinnaUtils.getIconRes(arg2), 0, 0);\n          }\n\n          @Override\n          public void onNothingSelected(AdapterView<?> arg0) {}\n        });\n\n    // add textwatcher to cacheSizePicker\n    TextWatcher cacheSizeWatcher =\n        new TextWatcher() {\n\n          @Override\n          public void afterTextChanged(Editable s) {\n            if (s.length() < 1) {\n              cacheSize = 0;\n              nullData = true;\n            } else {\n              int newVal = Integer.parseInt(s.toString());\n              cacheSize = newVal;\n              nullData = false;\n            }\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(newDialogButtonState());\n            memory.setText(\n                getString(\n                    R.string.total_memory_warning,\n                    VibhinnaUtils.getTotalSize(cacheSize, dataSize, systemSize)));\n            memory.setTextColor(VibhinnaUtils.getMemColor(cacheSize, dataSize, systemSize));\n          }\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n        };\n    cacheSizePicker.addTextChangedListener(cacheSizeWatcher);\n\n    // add textwatcher to dataSizeWatcher\n    TextWatcher dataSizeWatcher =\n        new TextWatcher() {\n\n          @Override\n          public void afterTextChanged(Editable s) {\n            if (s.length() < 1) {\n              dataSize = 0;\n              nullData = true;\n            } else {\n              int newVal = Integer.parseInt(s.toString());\n              dataSize = newVal;\n              nullData = false;\n            }\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(newDialogButtonState());\n            memory.setText(\n                getString(\n                    R.string.total_memory_warning,\n                    VibhinnaUtils.getTotalSize(cacheSize, dataSize, systemSize)));\n            memory.setTextColor(VibhinnaUtils.getMemColor(cacheSize, dataSize, systemSize));\n          }\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n        };\n    dataSizePicker.addTextChangedListener(dataSizeWatcher);\n\n    // add textwatcher to systemSizeWatcher\n    TextWatcher systemSizeWatcher =\n        new TextWatcher() {\n\n          @Override\n          public void afterTextChanged(Editable s) {\n            if (s.length() < 1) {\n              systemSize = 0;\n              nullSystem = true;\n            } else {\n              int newVal = Integer.parseInt(s.toString());\n              systemSize = newVal;\n              nullSystem = false;\n            }\n            dialog.getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(newDialogButtonState());\n            memory.setText(\n                getString(\n                    R.string.total_memory_warning,\n                    VibhinnaUtils.getTotalSize(cacheSize, dataSize, systemSize)));\n            memory.setTextColor(VibhinnaUtils.getMemColor(cacheSize, dataSize, systemSize));\n          }\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n        };\n    systemSizePicker.addTextChangedListener(systemSizeWatcher);\n    return dialog;\n  }\n"}, {"dataset": "inflate", "exampleID": 4760, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [173], "initializationEnd": [222], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 236, "focalAPIEnd": 294, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [398, 465, 542], "useEnd": [423, 499, 578], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/duzy/CSipSimple/tree/master/src/com/csipsimple/ui/prefs/cupcake/MainPrefs.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n\n      View v = convertView;\n      if (v == null) {\n        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(R.layout.icon_preference_screen, parent, false);\n      }\n\n      PrefGroup pref_gp = adapter.getItem(position);\n      ImageView icon_view = (ImageView) v.findViewById(R.id.icon);\n\n      TextView title_view = (TextView) v.findViewById(android.R.id.title);\n      TextView summary_view = (TextView) v.findViewById(android.R.id.summary);\n      icon_view.setImageResource(pref_gp.icon);\n      title_view.setText(pref_gp.title);\n      summary_view.setText(pref_gp.summary);\n\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4761, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 201, "focalAPIEnd": 235, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [286, 362, 427, 491, 560], "useEnd": [326, 393, 456, 521, 595], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applicake/Beandroid/tree/master/Beanstalk Android Client/src/com/applicake/beanstalkclient/adapters/ReleasesAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    Release release = mReleases.get(position);\n\n    View view = convertView;\n\n    if (view == null) {\n      view = mInflater.inflate(mLayoutId, null);\n    }\n\n    TextView environmentName = (TextView) view.findViewById(R.id.environment_name);\n    TextView comment = (TextView) view.findViewById(R.id.comment);\n    TextView state = (TextView) view.findViewById(R.id.state);\n    TextView author = (TextView) view.findViewById(R.id.author);\n    TextView deployedAt = (TextView) view.findViewById(R.id.deployed_at);\n\n    environmentName.setText(release.getEnvironmentName());\n    comment.setText(release.getComment());\n    state.setText(release.getStateLabel());\n    author.setText(release.getAuthor());\n    deployedAt.setText(mDf.format(release.getDateToDisplay()));\n\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4762, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 100, "focalAPIEnd": 135, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["layoutInflater.inflate(int,ViewGroup)"], "useStart": [142], "useEnd": [177], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/core/tests/coretests/src/android/view/InflateTest.java", "rawCode": "  public void inflateCachedTest(int resourceId) {\n    // Make sure this layout is in the cache.\n    mInflater.inflate(resourceId, null);\n\n    mInflater.inflate(resourceId, null);\n  }\n"}, {"dataset": "inflate", "exampleID": 4763, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 179, "focalAPIEnd": 228, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "ViewGroup.addView(view)"], "useStart": [258, 330, 707], "useEnd": [299, 365, 732], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mrp1q7z/YumekaNow/tree/master/src/com/yojiokisoft/yumekanow/adapter/CardDetailAdapter.java", "rawCode": "  /** @see PagerAdapter#instantiateItem(ViewGroup, int) */\n  @Override\n  public Object instantiateItem(ViewGroup container, int position) {\n    FrameLayout layout = (FrameLayout) this.mInflter.inflate(R.layout.card_detail, null);\n\n    mTextView = (TextView) layout.findViewById(R.id.affirmationText);\n    mImageView = (ImageView) layout.findViewById(R.id.backImage);\n\n    // リストから取得\n    if (mCardDao != null) {\n      Integer cardId = mList.get(position);\n      try {\n        List<CardEntity> list = mCardDao.queryForEq(\"id\", cardId);\n        printCard(list.get(0));\n      } catch (SQLException e) {\n        MyUncaughtExceptionHandler.sendBugReport((Activity) mContext, e);\n      }\n    }\n\n    // コンテナに追加\n    container.addView(layout);\n\n    return layout;\n  }\n"}, {"dataset": "inflate", "exampleID": 4764, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 1720, "focalAPIEnd": 1770, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setBackgroundResource(*)", "view.findViewById(*)", "PullToRefreshListView.addFooterView(view)"], "useStart": [1776, 1853, 1900], "useEnd": [1826, 1894, 1930], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/HUSTDAVID/wuhan-dm/tree/master/src/src/com/wh/dm/activity/GirlPhotoActivity.java", "rawCode": "  private void initViews() {\n\n    // init header\n    // relPhotosHeader = (RelativeLayout) findViewById(R.id.rel_header3);\n    // txtPhotosHeader = (TextView) findViewById(R.id.txt_header3_title);\n    // relPhotosHeader.setBackgroundResource(R.drawable.topbar_black_bg);\n    // txtPhotosHeader.setText(getResources().getString(R.string.photo));\n\n    id = getIntent().getStringExtra(\"id\");\n\n    lvPhotos = (PullToRefreshListView) findViewById(R.id.lv_photos_all);\n    lvPhotos.setDivider(null);\n    wh_dmApp = (WH_DMApp) this.getApplication();\n    wh_dmApi = wh_dmApp.getWH_DMApi();\n    databaseImp1 = wh_dmApp.getDatabase();\n    adapter = new PhotoAdapter(this);\n\n    lvPhotos.setOnRefreshListener(\n        new OnRefreshListener() {\n\n          @Override\n          public void onRefresh() {\n\n            // Your code to refresh the list contents goes here\n\n            // Make sure you call listView.onRefreshComplete()\n            // when the loading is done. This can be done from here or any\n            // other place, like on a broadcast receive from your loading\n            // service or the onPostExecute of your AsyncTask.\n\n            // For the sake of this sample, the code will pause here to\n            // force a delay when invoking the refresh\n            lvPhotos.postDelayed(\n                new Runnable() {\n\n                  @Override\n                  public void run() {\n\n                    curPage = 1;\n                    FLAG_PAGE_UP = false;\n                    isAdapter = false;\n                    handler.sendEmptyMessage(MSG_GET_PHOTOS);\n                    lvPhotos.onRefreshComplete();\n                  }\n                },\n                1000);\n          }\n        });\n\n    footer = mInflater.inflate(R.layout.news_list_footer, null);\n    footer.setBackgroundResource(R.drawable.photos_bg);\n    btnFooter = (Button) footer.findViewById(R.id.btn_news_footer);\n    lvPhotos.addFooterView(footer);\n    btnFooter.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n\n            FLAG_PAGE_UP = true;\n            curPage++;\n            handler.sendEmptyMessage(MSG_GET_PHOTOS);\n          }\n        });\n\n    handler.sendEmptyMessage(MSG_GET_PHOTOS);\n  }\n"}, {"dataset": "inflate", "exampleID": 4765, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [364], "initializationEnd": [422], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 443, "focalAPIEnd": 497, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [613, 758], "useEnd": [656, 795], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Kailesh/Canteen-Management-Software-System--Witwatersrand/tree/master/AndroidApplication/src/com/witwatersrand/androidapplication/startmenu/StartMenuAdapter.java", "rawCode": "  /**\n   * Represents an activity for each option list item\n   *\n   * @see android.widget.ArrayAdapter#getView(int, android.view.View, android.view.ViewGroup)\n   */\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    Log.i(LOGGER_TAG, \"StartMenuAdapter -- getView()\");\n    LayoutInflater myInflater =\n        (LayoutInflater) _context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    rowRootView = myInflater.inflate(_LAYOUT_RESOURCE_ID, parent, false);\n    Log.i(LOGGER_TAG, \"StartMenuAdapter -- getView() --Inflator called\");\n\n    TextView optionNameTV = (TextView) rowRootView.findViewById(R.id.tvOptionName);\n    optionNameTV.setText(_myOptions[position].getOptionName());\n\n    ImageView iconIV = (ImageView) rowRootView.findViewById(R.id.ivIcon);\n    int resourceId =\n        _context\n            .getResources()\n            .getIdentifier(\n                _myOptions[position].getImageName(),\n                \"drawable\",\n                \"com.witwatersrand.androidapplication\");\n    iconIV.setImageResource(resourceId);\n\n    Log.i(LOGGER_TAG, \"StartMenuAdapter -- onListItemClick()\");\n\n    return rowRootView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4766, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [444], "initializationEnd": [469], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 489, "focalAPIEnd": 540, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "ActionBar.setCustomView(view)"], "useStart": [574, 715], "useEnd": [615, 752], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/29jitender/Mixpanel/tree/master/src/com/mixpanel/src/funnel/Funnel_display.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    ////////////////////////////////////////////////////\n    // Action bar\n    ActionBar mActionBar;\n    LayoutInflater mInflater;\n    View mCustomView;\n    TextView mTitleTextView;\n    mActionBar = getSupportActionBar();\n    mActionBar.setDisplayShowHomeEnabled(false);\n    mActionBar.setDisplayShowTitleEnabled(false);\n    mInflater = LayoutInflater.from(this);\n    mCustomView = mInflater.inflate(R.layout.funnel_final_menu, null);\n    mTitleTextView = (TextView) mCustomView.findViewById(R.id.title_text);\n    mTitleTextView.setText(Funnel_activity.funnel_name);\n    mTitleTextView.setTextSize(20);\n\n    mActionBar.setCustomView(mCustomView);\n    mActionBar.setDisplayShowCustomEnabled(true);\n    // mActionBar.setBackgroundDrawable(getResources().getDrawable(R.drawable.at_header_bg));\n    TextView ibItem1 = (TextView) findViewById(R.id.arrow);\n    ibItem1.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View view) {\n            finish();\n          }\n        });\n\n    /////////////////////////////////////////////\n\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n      // getActionBar().setDisplayHomeAsUpEnabled(true);\n      getSupportActionBar()\n          .setIcon(android.R.color.transparent); // to remove the icon from action bar\n\n      // this is for the color of title bar\n      ColorDrawable colorDrawable = new ColorDrawable();\n      int myColor = this.getResources().getColor(R.color.menu5);\n      colorDrawable.setColor(myColor);\n      android.app.ActionBar actionBar = getActionBar();\n      actionBar.setBackgroundDrawable(colorDrawable);\n    }\n\n    if (isNetworkOnline() == true) { // starting settings if internet is not working\n      internt_count = true;\n      iamcallin(); // calling the function to build everything\n\n    } else if (isNetworkOnline() == false) {\n      setContentView(R.layout.nointernet); // giving new layout to drawer\n      // setContentView(R.layout.nointernet);\n      internt_count = false;\n      Button button = (Button) findViewById(R.id.nointernet_refresh);\n\n      button.setOnClickListener(\n          new OnClickListener() {\n\n            @Override\n            public void onClick(View arg0) {\n\n              Intent myIntent = new Intent(Funnel_display.this, Funnel_display.class); // refreshing\n\n              startActivity(myIntent);\n              finish();\n            }\n          });\n    }\n  }\n"}, {"dataset": "inflate", "exampleID": 4767, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 59, "focalAPIEnd": 119, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)"], "useStart": [401], "useEnd": [412], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mnlk2-custom/android_packages_apps_Settings/tree/master/src/com/android/settings/DeviceAdminSettings.java", "rawCode": "    public View newView(ViewGroup parent) {\n      View v = mInflater.inflate(R.layout.device_admin_item, parent, false);\n      ViewHolder h = new ViewHolder();\n      h.icon = (ImageView) v.findViewById(R.id.icon);\n      h.name = (TextView) v.findViewById(R.id.name);\n      h.checkbox = (CheckBox) v.findViewById(R.id.checkbox);\n      h.description = (TextView) v.findViewById(R.id.description);\n      v.setTag(h);\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4768, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 137, "focalAPIEnd": 164, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.setLayoutParams(*)", "setContentView(view)"], "useStart": [191, 258, 326, 395, 654, 767], "useEnd": [226, 297, 363, 432, 760, 792], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/omg-insa/client/tree/master/PlanYourParty/src/eu/chitic/syp/gui/common/selector/QuickAction.java", "rawCode": "  /**\n   * Set root view.\n   *\n   * @param id Layout resource id\n   */\n  public void setRootViewId(int id) {\n    mRootView = (ViewGroup) mInflater.inflate(id, null);\n    mTrack = (ViewGroup) mRootView.findViewById(R.id.tracks);\n\n    mArrowDown = (ImageView) mRootView.findViewById(R.id.arrow_down);\n    mArrowUp = (ImageView) mRootView.findViewById(R.id.arrow_up);\n\n    mScroller = (ScrollView) mRootView.findViewById(R.id.scroller);\n\n    // This was previously defined on show() method, moved here to prevent\n    // force close that occured\n    // when tapping fastly on a view to show quickaction dialog.\n    // Thanx to zammbi (github.com/zammbi)\n    mRootView.setLayoutParams(\n        new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\n\n    setContentView(mRootView);\n  }\n"}, {"dataset": "inflate", "exampleID": 4769, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 238, "focalAPIEnd": 293, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [757, 826], "useEnd": [783, 846], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sdu-k-team/IC/tree/master/src/com/kernel/intelcurrent/adapter/UserFriendListAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    // TODO Auto-generated method stub\n    final ViewHolder holder;\n    if (convertView == null) {\n      holder = new ViewHolder();\n      convertView = mInflater.inflate(R.layout.user_friendslist_cell, null);\n      holder.user_layout = (LinearLayout) convertView.findViewById(R.id.user_list_cell_layout);\n      holder.user_name = (TextView) convertView.findViewById(R.id.user_list_cell_name);\n      holder.user_info = (TextView) convertView.findViewById(R.id.user_list_cell_info);\n      holder.user_is_friend = (TextView) convertView.findViewById(R.id.user_list_cell_btn);\n      holder.user_head = (UrlImageView) convertView.findViewById(R.id.user_list_cell_head);\n      convertView.setTag(holder);\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n      holder.user_head.reset();\n    }\n    User user = users.get(position);\n    holder.user_name.setText(user.nick + \"(\" + user.name + \")\");\n    holder.user_info.setText(user.location);\n    holder.user_is_friend.setText(\n        user.ismyidol ? R.string.user_follow_cancle : R.string.user_follow_add);\n    holder.user_layout.setOnClickListener(new OnBtnClickListener(user));\n    holder.user_is_friend.setOnClickListener(new OnBtnClickListener(user));\n    try {\n      holder.user_head.bindUrl(user.head, UrlImageView.PLAT_FORM_TENCENT, UrlImageView.LARGE_HEAD);\n    } catch (MalformedURLException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    } catch (IOException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4770, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [66], "initializationEnd": [91], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 116, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AlertDialog.Builder.setView(view)", "view.findViewById(*)"], "useStart": [283, 367], "useEnd": [322, 407], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jacobhanshaw/Sniper/tree/master/android/src/com/sniper/ActivitySettingsHome.java", "rawCode": "  public void ChangeUserName(View view) {\n    LayoutInflater li = LayoutInflater.from(this);\n    View promptsView = li.inflate(R.layout.input_text, null);\n\n    AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);\n\n    // set prompts.xml to alertdialog builder\n    alertDialogBuilder.setView(promptsView);\n\n    final EditText userInput = (EditText) promptsView.findViewById(R.id.inputText);\n\n    // set dialog message\n    alertDialogBuilder\n        .setCancelable(false)\n        .setPositiveButton(\n            \"OK\",\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int id) {\n                // get user input and set it to result\n                // edit text\n                String newText = userInput.getText().toString();\n                // userName.setText(userInput.getText());\n                ParseUser.getCurrentUser().setUsername(newText);\n                userName.setText(ParseUser.getCurrentUser().getUsername());\n                ParseUser.getCurrentUser().saveInBackground();\n              }\n            })\n        .setNegativeButton(\n            \"Cancel\",\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int id) {\n                dialog.cancel();\n              }\n            });\n\n    // create alert dialog\n    AlertDialog alertDialog = alertDialogBuilder.create();\n\n    // show it\n    alertDialog.show();\n  }\n"}, {"dataset": "inflate", "exampleID": 4771, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 452, "focalAPIEnd": 497, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setCompoundDrawablesWithIntrinsicBounds(*,*,*,*)", "view.setText(*)", "view.setTag(ShortcutInfo)", "view.setOnClickListener(*)"], "useStart": [504, 635, 669, 696], "useEnd": [629, 663, 690, 729], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/koush/ClockworkModLauncher/tree/master/src/com/koushikdutta/launcher2/Launcher.java", "rawCode": "  /**\n   * Creates a view representing a shortcut inflated from the specified resource.\n   *\n   * @param layoutResId The id of the XML layout used to create the shortcut.\n   * @param parent The group the shortcut belongs to.\n   * @param info The data structure describing the shortcut.\n   * @return A View inflated from layoutResId.\n   */\n  View createShortcut(int layoutResId, ViewGroup parent, ShortcutInfo info) {\n    TextView favorite = (TextView) mInflater.inflate(layoutResId, parent, false);\n\n    favorite.setCompoundDrawablesWithIntrinsicBounds(\n        null, new FastBitmapDrawable(info.getIcon(mIconCache)), null, null);\n    favorite.setText(info.title);\n    favorite.setTag(info);\n    favorite.setOnClickListener(this);\n\n    return favorite;\n  }\n"}, {"dataset": "inflate", "exampleID": 4772, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [92], "initializationEnd": [117], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 222, "focalAPIEnd": 278, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["LinearLayout.addView(view)"], "useStart": [284], "useEnd": [314], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/omg-insa/client/tree/master/PlanYourParty/src/eu/chitic/syp/gui/account/PersonalInfoActivity.java", "rawCode": "  private void initGraphicalInterface() {\n    // set layouts\n    LayoutInflater mInflater = LayoutInflater.from(this);\n    abstractView = (LinearLayout) findViewById(R.id.abstractLinearLayout);\n    mainView = (ScrollView) mInflater.inflate(R.layout.personal_info_activity, null);\n    abstractView.addView(mainView);\n    fullName = (TextView) findViewById(R.id.persoanl_fullname);\n    email = (TextView) findViewById(R.id.perosal_Email);\n    day = (TextView) findViewById(R.id.persoanl_days);\n    month = (TextView) findViewById(R.id.persoanl_months);\n    year = (TextView) findViewById(R.id.personal_years);\n    sendButton = (Button) findViewById(R.id.personal_info_send);\n    sexSpinner = (Spinner) findViewById(R.id.sex_spinner);\n    // Create an ArrayAdapter using the string array and a default spinner\n    // layout\n    ArrayAdapter<CharSequence> adapter =\n        ArrayAdapter.createFromResource(\n            this, R.array.sex_array, android.R.layout.simple_spinner_item);\n    // Specify the layout to use when the list of choices appears\n    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n    // Apply the adapter to the spinner\n    sexSpinner.setAdapter(adapter);\n    statusSpinner = (Spinner) findViewById(R.id.status_spinner);\n    // Create an ArrayAdapter using the string array and a default spinner\n    // layout\n    ArrayAdapter<CharSequence> adapter2 =\n        ArrayAdapter.createFromResource(\n            this, R.array.status_array, android.R.layout.simple_spinner_item);\n    // Specify the layout to use when the list of choices appears\n    adapter2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n    // Apply the adapter to the spinner\n    statusSpinner.setAdapter(adapter2);\n\n    Drawable background =\n        ((LinearLayout) findViewById(R.id.personal_info_backgorund)).getBackground();\n    background.setAlpha(95);\n\n    windowTitle = (TextView) findViewById(R.id.pageTitle);\n    windowTitle.setText(R.string.PersonalInfoTitle);\n\n    sendButton.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            if (day.getText().toString().equals(\"\")\n                || month.getText().toString().equals(\"\")\n                || year.getText().toString().equals(\"\")\n                || fullName.getText().toString().equals(\"\")\n                || email.getText().toString().equals(\"\")\n                || sexSpinner.getSelectedItemId() == 0\n                || statusSpinner.getSelectedItemId() == 0) {\n              Popups.showPopup(Constants.IncompleatData);\n              return;\n            }\n            if (AppTools.isEmailValid(email.getText().toString()) == false) {\n              Popups.showPopup(Constants.InvalidEmail);\n              return;\n            }\n            if (!checkDate()) return;\n            new PersonalInfoChangeTask().execute();\n          }\n        });\n  }\n"}, {"dataset": "inflate", "exampleID": 4773, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [115], "initializationEnd": [144], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 158, "focalAPIEnd": 204, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [285, 435, 528], "useEnd": [327, 478, 574], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/marred01/SchedU/tree/master/src/com/selagroup/schedu/adapters/WorkArrayAdapter.java", "rawCode": "  public View getView(int position, View row, ViewGroup parent) {\n    if (row == null) {\n      LayoutInflater li = LayoutInflater.from(mContext);\n      row = li.inflate(R.layout.adapter_work_select, null);\n    }\n    final Assignment workItem = mWorkList.get(position);\n    ((TextView) row.findViewById(R.id.work_adapter_tv_due))\n        .setText((new SimpleDateFormat(\"M/dd\")).format(workItem.getDueDate().getTime()));\n    ((TextView) row.findViewById(R.id.work_adapter_tv_desc)).setText(workItem.getName());\n    ((ImageButton) row.findViewById(R.id.work_adapter_btn_delete))\n        .setOnClickListener(\n            new OnClickListener() {\n              public void onClick(View v) {\n                mEditListener.onWorkDelete(workItem);\n              }\n            });\n    return row;\n  }\n"}, {"dataset": "inflate", "exampleID": 4774, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [180], "initializationEnd": [209], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 229, "focalAPIEnd": 292, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)"], "useStart": [335], "useEnd": [365], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DavidTPate/diablo3_builder/tree/master/d3_android/libs/ActionBarSherlock/samples/demos/src/com/actionbarsherlock/sample/demos/ActionProviders.java", "rawCode": "    /** {@inheritDoc} */\n    @Override\n    public View onCreateActionView() {\n      // Inflate the action view to be shown on the action bar.\n      LayoutInflater layoutInflater = LayoutInflater.from(mContext);\n      View view = layoutInflater.inflate(R.layout.settings_action_provider, null);\n      ImageButton button = (ImageButton) view.findViewById(R.id.button);\n      // Attach a click listener for launching the system settings.\n      button.setOnClickListener(\n          new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n              mContext.startActivity(sSettingsIntent);\n            }\n          });\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4775, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 176, "focalAPIEnd": 229, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(Alarm)", "setTitle(Alarm,view)", "setMessage(Alarm,view)", "setDelete(Alarm,view)", "setDistance(Alarm,view)"], "useStart": [286, 317, 350, 385, 419], "useEnd": [310, 344, 379, 413, 449], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chao-zhou/Lijiang/tree/master/src/com/utopia/lijiang/AlarmAdapter.java", "rawCode": "  private View getEditView(int position, View convertView, ViewGroup parent) {\n    if (convertView == null) {\n      Log.d(\"lijiang\", \"inflate a new view\");\n      convertView = layoutInflater.inflate(R.layout.alarm_edititem, null);\n    }\n\n    Alarm item = (Alarm) getItem(position);\n    convertView.setTag(item);\n\n    setTitle(item, convertView);\n    setMessage(item, convertView);\n    setDelete(item, convertView);\n    setDistance(item, convertView);\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4776, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [186], "initializationEnd": [257], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 269, "focalAPIEnd": 312, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [508, 575, 643], "useEnd": [540, 606, 678], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Develman/IliConnect/tree/master/IliConnect/src/com/android/iliConnect/TerminItemAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    View v = convertView;\n    if (v == null) {\n      LayoutInflater vi =\n          (LayoutInflater) MainActivity.instance.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      v = vi.inflate(R.layout.termin_list_item, null);\n    }\n\n    ModificationHandler handler = new ModificationHandler();\n    Notification notification = notifications.get(position);\n    if (notification != null) {\n      TextView date = (TextView) v.findViewById(R.id.terminDatum);\n      TextView name = (TextView) v.findViewById(R.id.terminName);\n      CheckBox marker = (CheckBox) v.findViewById(R.id.terminCheckbox);\n\n      if (date != null) {\n        date.setText(notification.getDate());\n      }\n\n      if (name != null) {\n        name.setText(notification.getTitle());\n      }\n\n      if (marker != null) {\n        marker.setOnCheckedChangeListener(null);\n        marker.setTag(notification.getRef_id());\n\n        if (handler.isNotificationMarked(notification.getRef_id())) {\n          marker.setChecked(true);\n        } else {\n          marker.setChecked(false);\n        }\n\n        marker.setOnCheckedChangeListener(termineFragment);\n      }\n    }\n\n    return v;\n  }\n"}, {"dataset": "inflate", "exampleID": 4777, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [684], "initializationEnd": [742], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 769, "focalAPIEnd": 820, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "layoutInflater.inflate(int,ViewGroup)"], "useStart": [916, 983], "useEnd": [975, 1038], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/embest-tech/rowboat-frameworks-base/tree/master/core/java/android/preference/Preference.java", "rawCode": "  /**\n   * Creates the View to be shown for this Preference in the {@link PreferenceActivity}. The default\n   * behavior is to inflate the main layout of this Preference (see {@link #setLayoutResource(int)}.\n   * If changing this behavior, please specify a {@link ViewGroup} with ID {@link\n   * android.R.id#widget_frame}.\n   *\n   * <p>Make sure to call through to the superclass's implementation.\n   *\n   * @param parent The parent that this View will eventually be attached to.\n   * @return The View that displays this Preference.\n   * @see #onBindView(View)\n   */\n  protected View onCreateView(ViewGroup parent) {\n    final LayoutInflater layoutInflater =\n        (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    final View layout = layoutInflater.inflate(mLayoutResId, parent, false);\n\n    if (mWidgetLayoutResId != 0) {\n      final ViewGroup widgetFrame =\n          (ViewGroup) layout.findViewById(com.android.internal.R.id.widget_frame);\n      layoutInflater.inflate(mWidgetLayoutResId, widgetFrame);\n    }\n\n    return layout;\n  }\n"}, {"dataset": "inflate", "exampleID": 4778, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [179], "initializationEnd": [212], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 284, "focalAPIEnd": 358, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.set(SearchBookContentsResult)"], "useStart": [595], "useEnd": [615], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Develman/IliConnect/tree/master/android/src/com/google/zxing/client/android/book/SearchBookContentsAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View view, ViewGroup viewGroup) {\n    SearchBookContentsListItem listItem;\n\n    if (view == null) {\n      LayoutInflater factory = LayoutInflater.from(getContext());\n      listItem =\n          (SearchBookContentsListItem)\n              factory.inflate(R.layout.search_book_contents_list_item, viewGroup, false);\n    } else {\n      if (view instanceof SearchBookContentsListItem) {\n        listItem = (SearchBookContentsListItem) view;\n      } else {\n        return view;\n      }\n    }\n\n    SearchBookContentsResult result = getItem(position);\n    listItem.set(result);\n    return listItem;\n  }\n"}, {"dataset": "inflate", "exampleID": 4779, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 196, "focalAPIEnd": 265, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [308, 393, 479], "useEnd": [351, 436, 521], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ninjanetworks/contacts/tree/master/src/com/android/contacts/detail/ContactDetailFragment.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      final View resultView =\n          (convertView != null)\n              ? convertView\n              : mInflater.inflate(R.layout.account_selector_list_item, parent, false);\n\n      final TextView text1 = (TextView) resultView.findViewById(android.R.id.text1);\n      final TextView text2 = (TextView) resultView.findViewById(android.R.id.text2);\n      final ImageView icon = (ImageView) resultView.findViewById(android.R.id.icon);\n\n      final AccountType accountType = mAccountTypes.get(position);\n\n      CharSequence action = accountType.getInviteContactActionLabel(mContext);\n      CharSequence label = accountType.getDisplayLabel(mContext);\n      if (TextUtils.isEmpty(action)) {\n        text1.setText(label);\n        text2.setVisibility(View.GONE);\n      } else {\n        text1.setText(action);\n        text2.setVisibility(View.VISIBLE);\n        text2.setText(label);\n      }\n      icon.setImageDrawable(accountType.getDisplayIcon(mContext));\n\n      return resultView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4780, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 732, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "LinearLayout.addView(view)"], "useStart": [862, 1020, 1119], "useEnd": [912, 1074, 1143], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/core/java/android/app/FragmentBreadCrumbs.java", "rawCode": "  void updateCrumbs() {\n    FragmentManager fm = mActivity.getFragmentManager();\n    int numEntries = fm.getBackStackEntryCount();\n    int numPreEntries = getPreEntryCount();\n    int numViews = mContainer.getChildCount();\n    for (int i = 0; i < numEntries + numPreEntries; i++) {\n      BackStackEntry bse =\n          i < numPreEntries ? getPreEntry(i) : fm.getBackStackEntryAt(i - numPreEntries);\n      if (i < numViews) {\n        View v = mContainer.getChildAt(i);\n        Object tag = v.getTag();\n        if (tag != bse) {\n          for (int j = i; j < numViews; j++) {\n            mContainer.removeViewAt(i);\n          }\n          numViews = i;\n        }\n      }\n      if (i >= numViews) {\n        final View item =\n            mInflater.inflate(com.android.internal.R.layout.fragment_bread_crumb_item, this, false);\n        final TextView text = (TextView) item.findViewById(com.android.internal.R.id.title);\n        text.setText(bse.getBreadCrumbTitle());\n        text.setTag(bse);\n        if (i == 0) {\n          item.findViewById(com.android.internal.R.id.left_icon).setVisibility(View.GONE);\n        }\n        mContainer.addView(item);\n        text.setOnClickListener(mOnClickListener);\n      }\n    }\n    int viewI = numEntries + numPreEntries;\n    numViews = mContainer.getChildCount();\n    while (numViews > viewI) {\n      mContainer.removeViewAt(numViews - 1);\n      numViews--;\n    }\n    // Adjust the visibility and availability of the bread crumbs and divider\n    for (int i = 0; i < numViews; i++) {\n      final View child = mContainer.getChildAt(i);\n      // Disable the last one\n      child.findViewById(com.android.internal.R.id.title).setEnabled(i < numViews - 1);\n      if (mMaxVisible > 0) {\n        // Make only the last mMaxVisible crumbs visible\n        child.setVisibility(i < numViews - mMaxVisible ? View.GONE : View.VISIBLE);\n        final View leftIcon = child.findViewById(com.android.internal.R.id.left_icon);\n        // Remove the divider for all but the last mMaxVisible - 1\n        leftIcon.setVisibility(i > numViews - mMaxVisible && i != 0 ? View.VISIBLE : View.GONE);\n      }\n    }\n  }\n"}, {"dataset": "inflate", "exampleID": 4781, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 156, "focalAPIEnd": 199, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [396, 469], "useEnd": [422, 489], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dirktrossen/AIRS/tree/master/src/com/airs/handlers/MoodButton_selector.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      ViewHolder holder;\n      if (convertView == null) {\n        convertView = mInflater.inflate(R.layout.moodentry, null);\n        holder = new ViewHolder();\n        holder.name = (TextView) convertView.findViewById(R.id.moodname);\n        holder.image = (ImageView) convertView.findViewById(R.id.moodimage);\n\n        convertView.setTag(holder);\n      } else {\n        holder = (ViewHolder) convertView.getTag();\n      }\n\n      holder.name.setText(ArrayList.get(position).name);\n      holder.image.setImageResource(ArrayList.get(position).resid);\n\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4782, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 123, "focalAPIEnd": 204, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/core/java/android/widget/ResourceCursorTreeAdapter.java", "rawCode": "  @Override\n  public View newChildView(Context context, Cursor cursor, boolean isLastChild, ViewGroup parent) {\n    return mInflater.inflate((isLastChild) ? mLastChildLayout : mChildLayout, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4783, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 282, "focalAPIEnd": 323, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/KeiferMiller/InkBar/tree/master/lib/JakeWharton-ActionBarSherlock-736ef08/library/src/android/support/v4/widget/ResourceCursorAdapter.java", "rawCode": "  /**\n   * Inflates view(s) from the specified XML file.\n   *\n   * @see android.widget.CursorAdapter#newView(android.content.Context, android.database.Cursor,\n   *     ViewGroup)\n   */\n  @Override\n  public View newView(Context context, Cursor cursor, ViewGroup parent) {\n    return mInflater.inflate(mLayout, parent, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4784, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 216, "focalAPIEnd": 261, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sstalin/AppBuilder/tree/master/AppBuilderSource/templates/Platform.Android/ExpandableListItemAdapter.java", "rawCode": "  @Override\n  public View getGroupView(\n      int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n    String title = titles[groupPosition];\n    if (convertView == null) {\n      convertView = mInflater.inflate(headerViewResourceId, null);\n    }\n    TextView tv = (TextView) convertView;\n    tv.setText(title);\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4785, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 131, "focalAPIEnd": 179, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kitkatandroid/JLS36G_base/tree/master/core/java/com/android/internal/view/menu/ListMenuPresenter.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      if (convertView == null) {\n        convertView = mInflater.inflate(mItemLayoutRes, parent, false);\n      }\n\n      MenuView.ItemView itemView = (MenuView.ItemView) convertView;\n      itemView.initialize(getItem(position), 0);\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4786, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [285], "initializationEnd": [343], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 397, "focalAPIEnd": 450, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [655, 724], "useEnd": [681, 744], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Team-CMPUT301F13T12/301-Project/tree/master/src/ualberta/g12/adventurecreator/views/StoryAuthorMapListAdapter.java", "rawCode": "  /** Returns the inflated view that will be displayed as a listview row.* */\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    ViewHolder holder = null;\n    Story ta = getItem(position);\n\n    LayoutInflater mInflater =\n        (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);\n\n    if (convertView == null) {\n      convertView = mInflater.inflate(R.layout.listview_story_list, null);\n      holder = new ViewHolder();\n      holder.title = (TextView) convertView.findViewById(R.id.list_story_title);\n      holder.author = (TextView) convertView.findViewById(R.id.list_story_author);\n      convertView.setTag(holder);\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    holder.title.setText(ta.getTitle());\n    holder.author.setText(ta.getAuthor());\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4787, "initialization": ["LayoutInflater layoutInflater = getContext()"], "initializationStart": [342], "initializationEnd": [359], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 431, "focalAPIEnd": 462, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)", "view.getTag()"], "useStart": [734, 804], "useEnd": [760, 824], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/payutc/pauline/tree/master/src/fr/utc/assos/payutc/adapters/IconAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    // Log.d(LOG_TAG, \"getView #\"+position+\" \"+convertView);\n    Item item = getItem(position);\n    ViewHolder holder;\n    if (convertView == null) { // if it's not recycled, initialize some attributes\n\n      LayoutInflater li =\n          (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = li.inflate(R.layout.icon, null);\n\n      holder = new ViewHolder();\n      holder.text = (TextView) convertView.findViewById(R.id.icon_text);\n      holder.icon = (ImageView) convertView.findViewById(R.id.icon_image);\n      holder.quantity = (TextView) convertView.findViewById(R.id.icon_quantity);\n\n      convertView.setTag(holder);\n\n    } else {\n      holder = (ViewHolder) convertView.getTag();\n    }\n\n    holder.text.setText(item.getName());\n    Bitmap img = item.getImg();\n    if (img == null) {\n      holder.icon.setImageResource(R.drawable.ic_launcher);\n    } else {\n      holder.icon.setImageBitmap(img);\n    }\n\n    int qte = item.getQuantity();\n    if (qte > 0) {\n      holder.quantity.setText(String.format(\"%d\", qte));\n      holder.quantity.setVisibility(View.VISIBLE);\n    } else {\n      holder.quantity.setVisibility(View.GONE);\n    }\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4788, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [433], "initializationEnd": [474], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 554, "focalAPIEnd": 625, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "AlertDialog.Builder.setView(view)"], "useStart": [668, 801], "useEnd": [713, 822], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Contacts/tree/master/src/com/android/contacts/editor/LabeledEditorView.java", "rawCode": "  /**\n   * Prepare dialog for entering a custom label. The input value is trimmed: white spaces before and\n   * after the input text is removed.\n   *\n   * <p>If the final value is empty, this change request is ignored; no empty text is allowed in any\n   * custom label.\n   */\n  private Dialog createCustomDialog() {\n    final AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\n    final LayoutInflater layoutInflater = LayoutInflater.from(builder.getContext());\n    builder.setTitle(R.string.customLabelPickerTitle);\n\n    final View view = layoutInflater.inflate(R.layout.contact_editor_label_name_dialog, null);\n    final EditText editText = (EditText) view.findViewById(R.id.custom_dialog_content);\n    editText.setInputType(INPUT_TYPE_CUSTOM);\n    editText.setSaveEnabled(true);\n\n    builder.setView(view);\n    editText.requestFocus();\n\n    builder.setPositiveButton(\n        android.R.string.ok,\n        new DialogInterface.OnClickListener() {\n          @Override\n          public void onClick(DialogInterface dialog, int which) {\n            final String customText = editText.getText().toString().trim();\n            if (ContactsUtils.isGraphic(customText)) {\n              final List<EditType> allTypes = EntityModifier.getValidTypes(mState, mKind, null);\n              mType = null;\n              for (EditType editType : allTypes) {\n                if (editType.customColumn != null) {\n                  mType = editType;\n                  break;\n                }\n              }\n              if (mType == null) return;\n\n              mEntry.put(mKind.typeColumn, mType.rawValue);\n              mEntry.put(mType.customColumn, customText);\n              rebuildLabel();\n              requestFocusForFirstEditField();\n              onLabelRebuilt();\n            }\n          }\n        });\n\n    builder.setNegativeButton(android.R.string.cancel, null);\n\n    final AlertDialog dialog = builder.create();\n    dialog.setOnShowListener(\n        new OnShowListener() {\n          @Override\n          public void onShow(DialogInterface dialogInterface) {\n            updateCustomDialogOkButtonState(dialog, editText);\n          }\n        });\n    editText.addTextChangedListener(\n        new TextWatcher() {\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void afterTextChanged(Editable s) {\n            updateCustomDialogOkButtonState(dialog, editText);\n          }\n        });\n    dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n\n    return dialog;\n  }\n"}, {"dataset": "inflate", "exampleID": 4789, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [181], "initializationEnd": [238], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 260, "focalAPIEnd": 317, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jfmyers9/ThePantry/tree/master/ThePantry/src/cs169/project/thepantry/BaseListViewAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertView, ViewGroup parent) {\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) context.getSystemService(context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.child_row_inventory, null);\n    }\n    IngredientChild item = getItem(position);\n    final ViewHolder childHolder;\n    childHolder = new ViewHolder((TextView) convertView.findViewById(R.id.textView));\n    childHolder.cb.setText(WordUtils.capitalizeFully(item.getName()));\n    childHolder.cb.setTag(item);\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4790, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 413, "focalAPIEnd": 473, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Contacts/tree/master/src/com/android/contacts/ui/QuickContactWindow.java", "rawCode": "  /**\n   * Obtain a new {@link CheckableImageView} for a new chiclet, either by recycling one from {@link\n   * #mActionPool}, or by inflating a new one. When finished, use {@link #releaseView(View)} to\n   * return back into the pool for later recycling.\n   */\n  private synchronized View obtainView() {\n    View view = mActionPool.poll();\n    if (view == null || QuickContactActivity.FORCE_CREATE) {\n      view = mInflater.inflate(R.layout.quickcontact_item, mTrack, false);\n    }\n    return view;\n  }\n"}, {"dataset": "inflate", "exampleID": 4791, "initialization": ["LayoutInflater layoutInflater = from(Context)"], "initializationStart": [123], "initializationEnd": [151], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 171, "focalAPIEnd": 234, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)"], "useStart": [362], "useEnd": [383], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Gris87/EGE/tree/master/src/com/gris/ege/lists/UserChooseListAdapter.java", "rawCode": "  @Override\n  public View newView(Context context, Cursor cursor, ViewGroup parent) {\n    LayoutInflater aLayoutInflater = LayoutInflater.from(context);\n\n    View aView = aLayoutInflater.inflate(R.layout.user_list_item, parent, false);\n\n    ViewHolder aHolder = new ViewHolder();\n    aHolder.mUserName = (TextView) aView.findViewById(R.id.userNameTextView);\n    aView.setTag(aHolder);\n\n    return aView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4792, "initialization": ["LayoutInflater layoutInflater = from(*)"], "initializationStart": [113], "initializationEnd": [146], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 171, "focalAPIEnd": 221, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.getHeight()", "addView(view,*)", "addView(view,*)", "view.setBackgroundColor(*)", "view.findViewById(*)", "view.setVisibility(*)"], "useStart": [242, 308, 468, 666, 773, 846], "useEnd": [268, 443, 633, 711, 811, 885], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cadavre/android_packages_apps_Mms/tree/master/src/com/android/mms/ui/SlideView.java", "rawCode": "  private void initAudioInfoView(String name) {\n    if (null == mAudioInfoView) {\n      LayoutInflater factory = LayoutInflater.from(getContext());\n      mAudioInfoView = factory.inflate(R.layout.playing_audio_info, null);\n      int height = mAudioInfoView.getHeight();\n      if (mConformanceMode) {\n        mViewPort.addView(\n            mAudioInfoView,\n            new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, AUDIO_INFO_HEIGHT));\n      } else {\n        addView(\n            mAudioInfoView,\n            new LayoutParams(\n                LayoutParams.MATCH_PARENT, AUDIO_INFO_HEIGHT, 0, getHeight() - AUDIO_INFO_HEIGHT));\n        if (DEBUG) {\n          mAudioInfoView.setBackgroundColor(0xFFFF0000);\n        }\n      }\n    }\n    TextView audioName = (TextView) mAudioInfoView.findViewById(R.id.name);\n    audioName.setText(name);\n    mAudioInfoView.setVisibility(View.GONE);\n  }\n"}, {"dataset": "inflate", "exampleID": 4793, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 57, "focalAPIEnd": 113, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Dustinmj/Froyo_Launcher2/tree/master/src/com/android/launcher2/LauncherAppWidgetHostView.java", "rawCode": "  @Override\n  protected View getErrorView() {\n    return mInflater.inflate(R.layout.appwidget_error, this, false);\n  }\n"}, {"dataset": "inflate", "exampleID": 4794, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 149, "focalAPIEnd": 218, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [385, 455], "useEnd": [410, 480], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tommy0823/packages_apps_MagicControl/tree/master/src/com/sourcery/magiccontrol/fragments/PowerWidget.java", "rawCode": "      public View getView(int position, View convertView, ViewGroup parent) {\n        final View v;\n        if (convertView == null) {\n          v = mInflater.inflate(R.layout.order_power_widget_button_list_item, null);\n        } else {\n          v = convertView;\n        }\n\n        PowerWidgetUtil.ButtonInfo button = mButtons.get(position);\n\n        final TextView name = (TextView) v.findViewById(R.id.name);\n        final ImageView icon = (ImageView) v.findViewById(R.id.icon);\n\n        name.setText(button.getTitleResId());\n\n        // assume no icon first\n        icon.setVisibility(View.GONE);\n\n        // attempt to load the icon for this button\n        if (mSystemUIResources != null) {\n          int resId = mSystemUIResources.getIdentifier(button.getIcon(), null, null);\n          if (resId > 0) {\n            try {\n              Drawable d = mSystemUIResources.getDrawable(resId);\n              icon.setVisibility(View.VISIBLE);\n              icon.setImageDrawable(d);\n            } catch (Exception e) {\n              Log.e(TAG, \"Error retrieving icon drawable\", e);\n            }\n          }\n        }\n\n        return v;\n      }\n"}, {"dataset": "inflate", "exampleID": 4795, "initialization": ["LayoutInflater layoutInflater = getContext()"], "initializationStart": [198], "initializationEnd": [210], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 274, "focalAPIEnd": 321, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "useStart": [451, 526, 601, 673, 739], "useEnd": [483, 557, 633, 701, 767], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arthare/wifilapper/tree/master/TestApp/src/com/artsoft/wifilapper/LandingLoadRace.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      View v = convertView;\n      if (v == null) {\n        LayoutInflater vi =\n            (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(R.layout.landingloadrace_item, null);\n      }\n      ListRaceData myobject = items.get(position);\n\n      if (myobject != null) {\n        TextView txtName = (TextView) v.findViewById(R.id.txtRaceName);\n        TextView txtLapTime = (TextView) v.findViewById(R.id.txtLapTime);\n        TextView txtLapCount = (TextView) v.findViewById(R.id.txtLapCount);\n        TextView txtDate = (TextView) v.findViewById(R.id.txtDate);\n        ImageView img = (ImageView) v.findViewById(R.id.imgRace);\n\n        txtName.setText(myobject.strRaceName);\n        txtLapTime.setText(\"Best Lap: \" + Utility.FormatSeconds(myobject.laptime));\n        txtLapCount.setText(\"Laps: \" + myobject.cLaps);\n        txtDate.setText(Utility.GetDateStringFromUnixTime(myobject.unixStartTimeSeconds * 1000));\n        img.setImageBitmap(m_imgFactory.GetImage(myobject.id, false));\n      }\n\n      return v;\n    }\n"}, {"dataset": "inflate", "exampleID": 4796, "initialization": ["LayoutInflater layoutInflater = getLayoutInflater()"], "initializationStart": [109], "initializationEnd": [128], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 232, "focalAPIEnd": 278, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setBackgroundResource(*)", "List<View>.add(view)"], "useStart": [286, 339], "useEnd": [331, 359], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/shaobin0604/misc/tree/master/QQ-Demo-1-SwitchView/src/com/genius/demo/ViewPageActivity.java", "rawCode": "  private void initViewPage() {\n    mListViews = new ArrayList<View>();\n    LayoutInflater mLayoutInflater = getLayoutInflater();\n\n    mViewCount = viewBackground.length;\n    for (int i = 0; i < mViewCount; i++) {\n      View view = mLayoutInflater.inflate(R.layout.layout, null);\n      view.setBackgroundResource(viewBackground[i]);\n      mListViews.add(view);\n    }\n\n    mPageAdapter = new ViewPageAdapter(mListViews);\n    mViewPager = (ViewPager) findViewById(R.id.viewpager);\n    mViewPager.setAdapter(mPageAdapter);\n    mViewPager.setOnPageChangeListener(this);\n  }\n"}, {"dataset": "inflate", "exampleID": 4797, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 283, "focalAPIEnd": 356, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setSingleAccount(*)", "view.setContactListFilter(ContactListFilter)", "view.bindView(AccountTypeManager)", "view.setTag(ContactListFilter)", "view.setActivated(*)"], "useStart": [372, 486, 527, 563, 590], "useEnd": [415, 519, 555, 582, 638], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/packages_apps_Contacts/tree/master/src/com/android/contacts/list/AccountFilterActivity.java", "rawCode": "    public View getView(int position, View convertView, ViewGroup parent) {\n      final ContactListFilterView view;\n      if (convertView != null) {\n        view = (ContactListFilterView) convertView;\n      } else {\n        view =\n            (ContactListFilterView)\n                mLayoutInflater.inflate(R.layout.contact_list_filter_item, parent, false);\n      }\n      view.setSingleAccount(mFilters.size() == 1);\n      final ContactListFilter filter = mFilters.get(position);\n      view.setContactListFilter(filter);\n      view.bindView(mAccountTypes);\n      view.setTag(filter);\n      view.setActivated(filter.equals(mCurrentFilter));\n      return view;\n    }\n"}, {"dataset": "inflate", "exampleID": 4798, "initialization": ["LayoutInflater layoutInflater = getSystemService(*)"], "initializationStart": [561], "initializationEnd": [619], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 641, "focalAPIEnd": 710, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.findViewById(*)", "view.findViewById(*)"], "useStart": [754, 1079], "useEnd": [799, 1124], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cesarvf90/ProyectoRH/tree/master/src/pe/edu/pucp/proyectorh/evaluacion360/Evaluacion360ExpandableAdapater.java", "rawCode": "  @Override\n  public View getChildView(\n      final int groupPosition,\n      final int childPosition,\n      boolean isLastChild,\n      View convertView,\n      ViewGroup parent) {\n    String texto = getChild(groupPosition, childPosition).evaluado.NombreCompleto;\n    String estado = \"Evaluar\";\n    if (getChild(groupPosition, childPosition).Estado.compareTo(\"Terminado\") == 0) {\n      estado = \"Evaluado\";\n    }\n    System.out.println(\"t=\" + texto + \" e=\" + estado);\n    if (convertView == null) {\n      LayoutInflater infalInflater =\n          (LayoutInflater) contexto.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n      convertView = infalInflater.inflate(R.layout.evaluacion_expandablelist_child, null);\n    }\n\n    TextView childTxt = (TextView) convertView.findViewById(R.id.evaluadoNombre);\n    childTxt.setLayoutParams(\n        new TableRow.LayoutParams(\n            android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n            android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n            85));\n    childTxt.setText(texto);\n\n    TextView childTxtEstado = (TextView) convertView.findViewById(R.id.evaluadoEstado);\n    childTxtEstado.setLayoutParams(\n        new TableRow.LayoutParams(\n            android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n            android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n            15));\n    childTxtEstado.setText(estado);\n    if (estado != null && estado.compareTo(\"Evaluar\") == 0) {\n      childTxtEstado.setOnClickListener(\n          new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n              FragmentTransaction ft = act.getSupportFragmentManager().beginTransaction();\n              Evaluar fragment = new Evaluar();\n              fragment.evaluado = getChild(groupPosition, childPosition);\n              ft.setCustomAnimations(android.R.anim.slide_in_left, android.R.anim.slide_out_right);\n              ft.replace(R.id.opcion_detail_container, fragment, \"detailFragment\")\n                  .addToBackStack(\"tag\")\n                  .commit();\n            }\n          });\n    }\n\n    return convertView;\n  }\n"}, {"dataset": "inflate", "exampleID": 4799, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root,attachToRoot)", "focalAPIStart": 72, "focalAPIEnd": 125, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setTag(ViewHolder)"], "useStart": [1009], "useEnd": [1035], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/platform_frameworks_base/tree/master/packages/SystemUI/src/com/android/systemui/recent/RecentsPanelView.java", "rawCode": "    public View createView(ViewGroup parent) {\n      View convertView = mInflater.inflate(mRecentItemLayoutId, parent, false);\n      ViewHolder holder = new ViewHolder();\n      holder.thumbnailView = convertView.findViewById(R.id.app_thumbnail);\n      holder.thumbnailViewImage = (ImageView) convertView.findViewById(R.id.app_thumbnail_image);\n      // If we set the default thumbnail now, we avoid an onLayout when we update\n      // the thumbnail later (if they both have the same dimensions)\n      if (mRecentTasksLoader != null) {\n        updateThumbnail(holder, mRecentTasksLoader.getDefaultThumbnail(), false, false);\n      }\n      holder.iconView = (ImageView) convertView.findViewById(R.id.app_icon);\n      if (mRecentTasksLoader != null) {\n        holder.iconView.setImageBitmap(mRecentTasksLoader.getDefaultIcon());\n      }\n      holder.labelView = (TextView) convertView.findViewById(R.id.app_label);\n      holder.descriptionView = (TextView) convertView.findViewById(R.id.app_description);\n\n      convertView.setTag(holder);\n      return convertView;\n    }\n"}, {"dataset": "inflate", "exampleID": 4800, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "view = layoutInflater.inflate(resource,root)", "focalAPIStart": 263, "focalAPIEnd": 304, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["view.setLayoutParams(*)", "view.setTag(ViewHolder)", "view.getTag()"], "useStart": [730, 803, 881], "useEnd": [795, 834, 902], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wangkenan/d9game/tree/master/src/me/key/appmarket/adapter/ClassifyAdapter.java", "rawCode": "  @Override\n  public View getView(int position, View convertvView, ViewGroup parent) {\n    final ViewHolder viewHolder;\n    final AppInfo sdappInfo;\n    Drawable mDrawable;\n    if (convertvView == null) {\n      viewHolder = new ViewHolder();\n      convertvView = lay.inflate(R.layout.item_classify, null);\n      viewHolder.icon = (ImageView) convertvView.findViewById(R.id.icon2);\n      viewHolder.name = (TextView) convertvView.findViewById(R.id.app_name2);\n      viewHolder.size = (TextView) convertvView.findViewById(R.id.appsize2);\n      viewHolder.tvdown = (TextView) convertvView.findViewById(R.id.tv_down2);\n      // viewHolder.progress_view = (ProgressView) convertvView\n      // .findViewById(R.id.progress_view2);\n      convertvView.setLayoutParams(new LayoutParams(width, height / 9));\n      convertvView.setTag(viewHolder);\n    } else {\n      viewHolder = (ViewHolder) convertvView.getTag();\n    }\n    sdappInfo = appInfos.get(position);\n    viewHolder.name.setText(sdappInfo.getAppName());\n    viewHolder.size.setText(ToolHelper.Kb2Mb(sdappInfo.getAppSize()));\n    ImageLoader.getInstance().displayImage(sdappInfo.getIconUrl(), viewHolder.icon, options);\n    ImageLoader.getInstance();\n    // setDownState(position, viewHolder);\n\n    return convertvView;\n  }\n"}]