[{"dataset": "editTextSetText", "exampleID": 1701, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.setVisibility(*)"], "configurationStart": [195], "configurationEnd": [228], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 304, "focalAPIEnd": 322, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/xiamike/parcupine/tree/master/PARQme/src/com/test/MainActivity.java", "rawCode": "  private void switchToParkingLayout() {\n    state = State.PARKING;\n    remainHours.setVisibility(View.GONE);\n    remainMins.setVisibility(View.GONE);\n    smallTime.setVisibility(View.GONE);\n    hours.setVisibility(View.VISIBLE);\n    minutes.setVisibility(View.VISIBLE);\n    if (rateObj == null) {\n      hours.setText(\"0\");\n      minutes.setText(\"0\");\n    } else {\n      updateDisplay(rateObj.getMinIncrement());\n    }\n    minusButton.setVisibility(View.VISIBLE);\n    colon.setVisibility(View.VISIBLE);\n    plusButton.setVisibility(View.VISIBLE);\n    priceHeader.setVisibility(View.VISIBLE);\n    price.setVisibility(View.VISIBLE);\n    timeHeader.setText(\"Parking Meter\");\n    priceHeader.setText(\"Total\");\n    leftButton.setText(\"Cancel\");\n    leftButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            rateObj = null;\n            totalTimeParked = 0;\n            // return to previous view\n            vf.showPrevious();\n            state = State.UNPARKED;\n          }\n        });\n    rightButton.setText(\"PARQ now\");\n    rightButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            park();\n          }\n        });\n    minutes.requestFocus();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1702, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 36, "focalAPIEnd": 63, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wanglu0919/chianwuxi_android/tree/master/chinaw/src/com/wuxi/app/fragment/homepage/mygoverinteractpeople/GoverInterPeoplePublicSuperviseFragment.java", "rawCode": "  public void resetEditInfo() {\n    sentUserName_et.setText(\"\");\n    tel_et.setText(\"\");\n    email_et.setText(\"\");\n    content_et.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1703, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [228], "initializationEnd": [271], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 277, "focalAPIEnd": 300, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ben7th/pin-2010/tree/master/android/mindpin/src/com/mindpin/widget/adapter/CollectionListAdapter.java", "rawCode": "  private void show_change_collection_name_dialog(\n      final int position, final String id, final String old_title) {\n    final View view = inflate(R.layout.change_collection_name_dialog, null);\n    EditText ctet = (EditText) view.findViewById(R.id.collection_title_et);\n    ctet.setText(old_title);\n    AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n    builder.setTitle(\"修改标题\");\n    builder.setView(view);\n    builder.setPositiveButton(\n        \"确定\",\n        new DialogInterface.OnClickListener() {\n          public void onClick(DialogInterface dialog, int which) {\n            EditText ctet = (EditText) view.findViewById(R.id.collection_title_et);\n            final String title = ctet.getText().toString();\n            if (title == null || \"\".equals(title)) {\n              BaseUtils.toast(\"请输入标题\");\n              return;\n            }\n\n            new MindpinAsyncTask<String, Void, Boolean>(activity, R.string.now_updating) {\n              @Override\n              public Boolean do_in_background(String... params) throws Exception {\n                String id_str = params[0];\n                int id1 = Integer.parseInt(id_str);\n                String title = params[1];\n                return HttpApi.change_collection_name(id1, title);\n              }\n\n              @Override\n              public void on_success(Boolean result) {\n                if (result) {\n                  BaseUtils.toast(\"操作成功\");\n                  change_collection_name(position, title);\n                } else {\n                  BaseUtils.toast(\"操作失败\");\n                }\n              }\n            }.execute(id, title);\n          }\n        });\n    builder.setNegativeButton(\n        \"取消\",\n        new DialogInterface.OnClickListener() {\n          public void onClick(DialogInterface dialog, int which) {}\n        });\n    builder.show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1704, "initialization": ["EditText editText = from(*)"], "initializationStart": [320], "initializationEnd": [353], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 769, "focalAPIEnd": 850, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.selectAll()", "new EditableValue(String,editText)", "editText.setText(String)", "editText.selectAll()", "new EditableValue(String,editText)"], "useStart": [858, 957, 1114, 1150, 1249], "useEnd": [875, 990, 1142, 1167, 1282], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mortenpi/ebookdroid/tree/master/src/org/ebookdroid/ui/viewer/dialogs/GoToPageDialog.java", "rawCode": "  @ActionMethod(ids = R.id.bookmark_add)\n  public void showAddBookmarkDlg(final ActionEx action) {\n    final Context context = getContext();\n    final View view = action.getParameter(IActionController.VIEW_PROPERTY);\n    final Bookmark bookmark = (Bookmark) view.getTag();\n\n    final EditText input =\n        (EditText) LayoutInflater.from(getContext()).inflate(R.layout.bookmark_edit, null);\n    final ActionDialogBuilder builder = new ActionDialogBuilder(getContext(), actions);\n    builder.setMessage(R.string.add_bookmark_name);\n    builder.setView(input);\n\n    if (bookmark == null) {\n      builder.setTitle(R.string.menu_add_bookmark);\n\n      final SeekBar seekbar = (SeekBar) findViewById(R.id.seekbar);\n      final int viewIndex = seekbar.getProgress();\n\n      input.setText(context.getString(R.string.text_page) + \" \" + (viewIndex + offset));\n      input.selectAll();\n\n      builder.setPositiveButton(\n          R.id.actions_addBookmark,\n          new EditableValue(\"input\", input),\n          new Constant(\"viewIndex\", viewIndex));\n    } else {\n      builder.setTitle(R.string.menu_edit_bookmark);\n\n      input.setText(bookmark.name);\n      input.selectAll();\n\n      builder.setPositiveButton(\n          R.id.actions_addBookmark,\n          new EditableValue(\"input\", input),\n          new Constant(\"bookmark\", bookmark));\n    }\n\n    builder.setNegativeButton().show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1705, "initialization": ["String text = new String(byte[],String)"], "initializationStart": [148], "initializationEnd": [174], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 184, "focalAPIEnd": 201, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JiangYouxin/vnotepad/tree/master/android/src/net/jiangyouxin/vnotepad/MainActivity.java", "rawCode": "  private void loadFile() {\n    byte[] buffer = FileUtility.readFile(this, FILENAME);\n    if (buffer.length > 0) {\n      try {\n        String res = new String(buffer, \"utf8\");\n        edit.setText(res);\n      } catch (UnsupportedEncodingException e) {\n      }\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1706, "initialization": ["EditText editText = findViewById(*)", "EditText editText = findViewById(*)"], "initializationStart": [196, 491], "initializationEnd": [227, 522], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [247], "configurationEnd": [265], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 528, "focalAPIEnd": 548, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ese-unibe-ch/ese2013-team8/tree/master/Code/ShoppingList/src/ch/unibe/ese/shopnote/activities/ViewRecipeActivity.java", "rawCode": "  /** Called when the user touches the add item button */\n  public void addItemEdit(View view) {\n    Intent intent = new Intent(this, CreateItemActivity.class);\n    EditText textName = (EditText) findViewById(R.id.editTextName);\n    String name = textName.getText().toString();\n    intent.putExtra(EXTRAS_ITEM_NAME, name);\n    intent.putExtra(EXTRAS_RECIPE_ID, recipe.getId());\n    this.startActivityForResult(intent, 1);\n\n    // remove text from field\n    textName = (AutoCompleteTextView) findViewById(R.id.editTextName);\n    textName.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1707, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [83], "configurationEnd": [104], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 123, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jschefter/UniversityChat/tree/master/University Chat Android Client/src/com/universitychat/androidclient/fragments/ChatRoom.java", "rawCode": "  public String getUserMsg() {\n    if (textViewChat != null) {\n      String temp = editMessage.getText().toString();\n      editMessage.setText(\"\");\n      return temp;\n    } else return \"null TextViewChat\";\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1708, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 90, "focalAPIEnd": 129, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setEnabled(boolean)", "editText.setText(String)", "editText.setEnabled(boolean)"], "useStart": [338, 437, 618], "useEnd": [372, 464, 652], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ananas-project/ananas-playground/tree/master/playground/droid-location-monitor/dlm-droid/src/ananas/app/droid_location_monitor/TripLogActivity.java", "rawCode": "  private void dataToUI() {\n    MyLogRec rec = this.mCurRec;\n    if (rec != null) {\n      this.mEditTitle.setText(rec.mTextTitle);\n      this.mEditContent.setText(rec.mTextContent);\n      this.mButtonDoIt.setText(\"Save\");\n      this.mTextTime.setText(this.timeToString(rec.mTimeCreate, \"-\", \" \", \":\"));\n      boolean enable = true;\n      this.mEditTitle.setEnabled(enable);\n      this.mEditContent.setEnabled(enable);\n    } else {\n      this.mEditTitle.setText(\"\");\n      this.mEditContent.setText(\"\");\n      this.mTextTime.setText(\"Trip Log\");\n      this.mButtonDoIt.setText(\"+\");\n      boolean enable = false;\n      this.mEditTitle.setEnabled(enable);\n      this.mEditContent.setEnabled(enable);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1709, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [87], "initializationEnd": [122], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [231], "configurationEnd": [251], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 465, "focalAPIEnd": 487, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/msi88/Popya/tree/master/Popya/src/at/fhv/popya/application/view/SendMessageListener.java", "rawCode": "  @Override\n  public void onClick(View button) {\n\n    EditText txtMessage = (EditText) _view.findViewById(R.id.txtMessage);\n\n    // read language from settings\n    Message<Object> msg =\n        new Message<Object>(Message.LANG_EN, txtMessage.getText().toString(), Settings.getUser());\n\n    try {\n      MessagingService.enqueueMessage(msg);\n    } catch (Exception e) {\n      Log.e(getClass().toString(), \"Error sending message.\", e);\n    }\n\n    // reset textbox\n    txtMessage.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1710, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 65, "focalAPIEnd": 91, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/maeberli/travelnotebook/tree/master/src/ch/hearc/devmobile/travelnotebook/GetAddressTask.java", "rawCode": "  @Override\n  protected void onPostExecute(String address) {\n    etAddress.setText(address);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1711, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [169], "initializationEnd": [199], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [290], "configurationEnd": [308], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 926, "focalAPIEnd": 946, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Liechtathlet/citr/tree/master/citr-app/src/main/java/ch/zhaw/mdp/lhb/citr/activities/GroupCreateActivity.java", "rawCode": "  /**\n   * Will be run, if the user wan't create an new group\n   *\n   * @param view\n   */\n  public void onAECreateGroup(View view) {\n\n    EditText editText = (EditText) findViewById(R.id.etGroupName);\n    RadioGroup radioGroup = (RadioGroup) findViewById(R.id.rgMode);\n\n    String msgStr = editText.getText().toString();\n    int radButtonId = radioGroup.getCheckedRadioButtonId();\n    View radioButton = radioGroup.findViewById(radButtonId);\n    int idx = radioGroup.indexOfChild(radioButton);\n\n    Log.d(TAG, \"Activity-Event: Create group with mode: \" + idx);\n\n    boolean isPublicGroup = false;\n    if (idx == 1) {\n      isPublicGroup = true;\n    }\n\n    if (msgStr != null && !msgStr.equals(\"\")) {\n      GroupDTO group = new GroupDTO();\n      group.setName(msgStr);\n      group.setPublicGroup(isPublicGroup);\n\n      ResponseObject<Boolean> resp = groupServices.createGroup(group);\n\n      if (resp.isSuccessfull()) {\n        editText.setText(\"\");\n      }\n\n      // TODO: Show error text\n\n      Toast.makeText(getApplicationContext(), resp.getDisplayMessage(), Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1712, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 318, "focalAPIEnd": 431, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/criseyes/crescendo/tree/master/CLIENT/src/com/kaist/crescendo/activity/PlanEditorActivity.java", "rawCode": "        @Override\n        public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\n          alarmTime.set(\n              alarmTime.get(Calendar.YEAR),\n              alarmTime.get(Calendar.MONTH),\n              alarmTime.get(Calendar.DAY_OF_MONTH),\n              hourOfDay,\n              minute);\n          alarmTimeValue.setText(\n              alarmTime.get(Calendar.HOUR_OF_DAY) + \":\" + alarmTime.get(Calendar.MINUTE));\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1713, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()", "editText.requestFocus()"], "configurationStart": [267, 340], "configurationEnd": [287, 365], "guardCondition": "!(text.equals(initval,)) && !(text.equals(name,))", "guardType": "IF {", "guardExpressionStart": 311, "guardExpressionEnd": 331, "guardBlockStart": 311, "guardBlockEnd": 485, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2004, "focalAPIEnd": 2026, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.requestFocus()"], "useStart": [2034], "useEnd": [2059], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dennischen/daily-money/tree/master/dailymoney/src/com/bottleworks/dailymoney/ui/AccountEditorActivity.java", "rawCode": "  private void doOk() {\n    // verify\n    if (Spinner.INVALID_POSITION == typeEditor.getSelectedItemPosition()) {\n      GUIs.shortToast(\n          this, i18n.string(R.string.cmsg_field_empty, i18n.string(R.string.clabel_type)));\n      return;\n    }\n    String name = nameEditor.getText().toString().trim();\n    if (\"\".equals(name)) {\n      nameEditor.requestFocus();\n      GUIs.alert(this, i18n.string(R.string.cmsg_field_empty, i18n.string(R.string.clabel_name)));\n      return;\n    }\n    String initval = initvalEditor.getText().toString();\n    if (\"\".equals(initval)) {\n      initvalEditor.requestFocus();\n      GUIs.alert(\n          this, i18n.string(R.string.cmsg_field_empty, i18n.string(R.string.label_initial_value)));\n      return;\n    }\n    String type = AccountType.getSupportedType()[typeEditor.getSelectedItemPosition()].getType();\n    // assign\n    workingAccount.setType(type);\n    workingAccount.setName(name);\n    workingAccount.setInitialValue(Formats.string2Double(initval));\n    workingAccount.setCashAccount(cashAccountEditor.isChecked());\n\n    IDataProvider idp = getContexts().getDataProvider();\n\n    Account namedAcc = idp.findAccount(type, name);\n    if (modeCreate) {\n      if (namedAcc != null) {\n        GUIs.alert(\n            this,\n            i18n.string(\n                R.string.msg_account_existed,\n                name,\n                AccountType.getDisplay(i18n, namedAcc.getType())));\n        return;\n      } else {\n        try {\n          idp.newAccount(workingAccount);\n          GUIs.shortToast(\n              this,\n              i18n.string(\n                  R.string.msg_account_created,\n                  name,\n                  AccountType.getDisplay(i18n, workingAccount.getType())));\n        } catch (DuplicateKeyException e) {\n          GUIs.alert(this, i18n.string(R.string.cmsg_error, e.getMessage()));\n          return;\n        }\n      }\n      setResult(RESULT_OK);\n      workingAccount = clone(workingAccount);\n      workingAccount.setName(\"\");\n      nameEditor.setText(\"\");\n      nameEditor.requestFocus();\n      counterCreate++;\n      okBtn.setText(i18n.string(R.string.cact_create) + \"(\" + counterCreate + \")\");\n      cancelBtn.setVisibility(Button.GONE);\n      closeBtn.setVisibility(Button.VISIBLE);\n\n    } else {\n      if (namedAcc != null && !namedAcc.getId().equals(account.getId())) {\n        GUIs.alert(\n            this,\n            i18n.string(\n                R.string.msg_account_existed,\n                name,\n                AccountType.getDisplay(i18n, namedAcc.getType())));\n        return;\n      } else {\n        idp.updateAccount(account.getId(), workingAccount);\n        GUIs.shortToast(\n            this,\n            i18n.string(\n                R.string.msg_account_updated,\n                name,\n                AccountType.getDisplay(i18n, workingAccount.getType())));\n      }\n\n      setResult(RESULT_OK);\n      finish();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1714, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 110, "focalAPIEnd": 130, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JCERTIFLab/m-domotique/tree/master/mdomotique-android/src/com/jcertif/mdomotique/ihm/ManagementRooms.java", "rawCode": "  protected void showAddForm() {\n\n    add.setVisibility(View.INVISIBLE);\n\n    action.setText(\"Ajouter\");\n\n    nameRoom.setText(\"\");\n\n    typeRoom.setSelection(0);\n\n    loading_img.setVisibility(View.VISIBLE);\n\n    new AsyncTask<String, Long, Bitmap>() {\n\n      protected void onPostExecute(Bitmap result) {\n        if (result != null) {\n          BitmapDrawable background = new BitmapDrawable(result);\n          img.setBackgroundDrawable(background);\n          loading_img.setVisibility(View.INVISIBLE);\n        }\n\n        result = null;\n        this.cancel(true);\n      }\n\n      protected Bitmap doInBackground(String... params) {\n        return mDomotiqueApplication.ImageOperations(\n            Parametres.getImgURL(mDomotiqueManager.getListRoomsCategories().get(0).getImg()));\n      }\n    }.execute(\"\");\n\n    Animation animation =\n        AnimationUtils.loadAnimation(ManagementRooms.this, R.anim.translate_right);\n    animation.reset();\n    add_room.clearAnimation();\n    add_room.startAnimation(animation);\n    add_room.setVisibility(View.VISIBLE);\n\n    animation = AnimationUtils.loadAnimation(ManagementRooms.this, R.anim.translate_left);\n    animation.reset();\n    list_rooms.clearAnimation();\n    list_rooms.startAnimation(animation);\n    list_rooms.setVisibility(View.GONE);\n\n    showForm = true;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1715, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 187, "focalAPIEnd": 211, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setText(String)"], "useStart": [265], "useEnd": [299], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sisbell/email/tree/master/tests/src/com/android/email/activity/setup/AccountSetupIncomingTests.java", "rawCode": "  /** Test for non-empty but non-OK server names */\n  @UiThreadTest\n  public void testBadServerVariants() {\n    getActivityAndFields();\n    assertTrue(mActivity.mNextButtonEnabled);\n\n    mServerView.setText(\" \");\n    assertFalse(mActivity.mNextButtonEnabled);\n\n    mServerView.setText(\"serv$er.com\");\n    assertFalse(mActivity.mNextButtonEnabled);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1716, "initialization": ["String text = Cursor.getString(int)"], "initializationStart": [819], "initializationEnd": [838], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 887, "focalAPIEnd": 919, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dayana7789/apprhc/tree/master/src/com/nahmens/rhcimax/adapters/AutocompleteEmpleadoCursorAdapter.java", "rawCode": "  /**\n   * Called by the AutoCompleteTextView field when a choice has been made by the user. Aqui\n   * actualizamos el valor del text edit escondido que almacena el id de la empresa.\n   *\n   * @param listView The ListView containing the choices that were displayed to the user.\n   * @param view The field representing the selected choice\n   * @param position The position of the choice within the list (0-based)\n   * @param id The id of the row that was chosen (as provided by the _id column in the cursor.)\n   */\n  @Override\n  public void onItemClick(AdapterView<?> listView, View view, int position, long id) {\n\n    // Get the cursor, positioned to the corresponding row in the result set\n    Cursor cursor = (Cursor) listView.getItemAtPosition(position);\n\n    // Obtenemos el id del empleado\n    String idEmpleado = cursor.getString(0);\n\n    // Update the parent class's TextView\n    etIdEmpleado.setText(idEmpleado);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1717, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [119], "initializationEnd": [165], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 348, "focalAPIEnd": 374, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dittaeva/vespucci/tree/master/src/de/blau/android/prefs/LoginDataPreference.java", "rawCode": "  @Override\n  protected void onBindDialogView(View view) {\n    super.onBindDialogView(view);\n    userEdit = (EditText) view.findViewById(R.id.loginedit_editUsername);\n    passwordEdit = (EditText) view.findViewById(R.id.loginedit_editPassword);\n    AdvancedPrefDatabase db = new AdvancedPrefDatabase(context);\n    API api = db.getCurrentAPI();\n    userEdit.setText(api.user);\n    passwordEdit.setText(api.pass);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1718, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 163, "focalAPIEnd": 198, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.getText()"], "useStart": [217], "useEnd": [236], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Team-CMPUT301F13T12/301-Project/tree/master/test-test/src/ualberta/g12/adventurecreator/test/ChoiceEditActivityTestCases.java", "rawCode": "  /** Tests to see if editText is correctly updated */\n  @UiThreadTest\n  public void testEditEditTextView() {\n    String myNewChoiceTitle = \"NEW CHOICE TEXT\";\n    myTitleET.setText(myNewChoiceTitle);\n    assertEquals(myTitleET.getText().toString(), myNewChoiceTitle);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1719, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [214], "initializationEnd": [242], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [266], "configurationEnd": [285], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1352, "focalAPIEnd": 1373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ritnorthstar/Minimap-Client/tree/master/Code/Minimap/src/main/java/com/northstar/minimap/MainActivity.java", "rawCode": "  public void launchSelectionActivity(View view) {\n    Globals state = (Globals) getApplicationContext();\n    Intent selectionIntent = new Intent(this, SelectionActivity.class);\n    EditText ipTextbox = (EditText) findViewById(R.id.server_ip);\n    String serverIP = ipTextbox.getText().toString();\n    String originalIP = serverIP;\n    if (!serverIP.startsWith(\"http://\")) {\n      serverIP = \"http://\" + serverIP;\n    }\n    String ipErrorMessage = \"no error!\";\n    state.log(serverIP);\n\n    try {\n      state.comm.setServerIP(new URL(serverIP));\n\n      SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);\n      SharedPreferences.Editor editor = sharedPref.edit();\n      editor.putString(SettingsActivity.KEY_PREF_IP, originalIP);\n      editor.commit();\n\n      Bundle bundle = new Bundle();\n      bundle.putString(IP_ERROR_MESSAGE, ipErrorMessage);\n      selectionIntent.putExtras(bundle);\n\n      startActivity(selectionIntent);\n    } catch (Exception e) {\n      // Incorrect IP address format\n      ipErrorMessage = e.getMessage();\n\n      TextView errorText = (TextView) findViewById(R.id.ip_error_text_view);\n      errorText.setText(\n          \"\\\"\"\n              + serverIP\n              + \"\\\" isn't a valid IP address.\\nIt should be something like \\\"10.0.2.2:9000\\\"\");\n      errorText.setTextColor(Color.WHITE);\n      ipTextbox.setText(\"\");\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1720, "initialization": ["String text = SharedPreferences.getString(String,String)", "EditText editText = findViewById(*)"], "initializationStart": [282, 352], "initializationEnd": [313, 395], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 402, "focalAPIEnd": 430, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JoshTsang/cnk-orderPad/tree/master/src/com/htb/cnk/LoginDlg.java", "rawCode": "  public void show() {\n    LayoutInflater factory = LayoutInflater.from(mActivity);\n    final View DialogView = factory.inflate(R.layout.setting_dialog, null);\n    SharedPreferences sharedPre = mActivity.getSharedPreferences(\"userInfo\", Context.MODE_PRIVATE);\n    String userName = sharedPre.getString(\"name\", \"\");\n    EditText userNameET = (EditText) DialogView.findViewById(R.id.edit_username);\n\n    userNameET.setText(userName);\n\n    AlertDialog dlg =\n        new AlertDialog.Builder(mActivity)\n            .setTitle(\"登录框\")\n            .setView(DialogView)\n            .setPositiveButton(\n                \"确定\",\n                new DialogInterface.OnClickListener() {\n\n                  @Override\n                  public void onClick(DialogInterface dialog, int which) {\n                    if (getUserNameAndPwd(DialogView) < 0) {\n                      Toast.makeText(mActivity, \"用户名密码不能为空\", Toast.LENGTH_SHORT).show();\n                    } else {\n                      new Thread() {\n                        public void run() {\n                          try {\n                            int ret = UserData.compare();\n                            userHandle.sendEmptyMessage(ret);\n                          } catch (Exception e) {\n                            userHandle.sendEmptyMessage(UserData.PWD_NETWORK_ERR);\n                            e.printStackTrace();\n                          }\n                        }\n                      }.start();\n                    }\n                  }\n                })\n            .setNegativeButton(\n                \"取消\",\n                new DialogInterface.OnClickListener() {\n\n                  @Override\n                  public void onClick(DialogInterface dialog, int which) {}\n                })\n            .setCancelable(false)\n            .create();\n    dlg.show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1721, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 310, "focalAPIEnd": 327, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rtyley/agit/tree/master/agit/src/main/java/com/madgag/agit/prompts/DialogPromptUIBehaviour.java", "rawCode": "  public void onPrepareDialog(int id, Dialog dialog) {\n    AlertDialog alertDialog = (AlertDialog) dialog;\n    switch (id) {\n      case YES_NO_DIALOG:\n        updateWithCurrentNotification(alertDialog);\n        break;\n      case STRING_ENTRY_DIALOG:\n        updateWithCurrentNotification(alertDialog);\n        input.setText(\"\");\n        break;\n      default:\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1722, "initialization": ["EditText editText = View.findViewById(int)"], "initializationStart": [106], "initializationEnd": [131], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 138, "focalAPIEnd": 160, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/serious198706/DFCarCheckerProject/tree/master/DFCarChecker/src/main/java/com/df/service/Helper.java", "rawCode": "  public static void setEditText(View view, int editId, String text) {\n    EditText editText = (EditText) view.findViewById(editId);\n\n    editText.setText(text);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1723, "initialization": ["EditText editText = findViewById(*)", "String text = getString(*)", "String text = getString(*)"], "initializationStart": [156, 307, 639], "initializationEnd": [183, 344, 676], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1334, "focalAPIEnd": 1365, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/remi/andrake/tree/master/examples/android/WikiNotes/src/com/google/android/wikinotes/WikiNoteEditor.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    setContentView(R.layout.wiki_note_edit);\n\n    mNoteEdit = (EditText) findViewById(R.id.noteEdit);\n\n    // Check to see if the icicle has body and title values to restore\n    String wikiNoteText = icicle == null ? null : icicle.getString(WikiNote.Notes.BODY);\n    String wikiNoteTitle = icicle == null ? null : icicle.getString(WikiNote.Notes.TITLE);\n\n    // If not, check to see if the extras bundle has these values passed in\n    if (wikiNoteTitle == null) {\n      Bundle extras = getIntent().getExtras();\n      wikiNoteText = extras == null ? null : extras.getString(WikiNote.Notes.BODY);\n      wikiNoteTitle = extras == null ? null : extras.getString(WikiNote.Notes.TITLE);\n    }\n\n    // If we have no title information, this is an invalid intent request\n    if (TextUtils.isEmpty(wikiNoteTitle)) {\n      // no note title - bail\n      setResult(RESULT_CANCELED);\n      finish();\n      return;\n    }\n\n    mWikiNoteTitle = wikiNoteTitle;\n\n    // but if the body is null, just set it to empty - first edit of this\n    // note\n    wikiNoteText = wikiNoteText == null ? \"\" : wikiNoteText;\n\n    // set the title so we know which note we are editing\n    setTitle(getString(R.string.wiki_editing, wikiNoteTitle));\n\n    // set the note body to edit\n    mNoteEdit.setText(wikiNoteText);\n\n    // set listeners for the confirm and cancel buttons\n    ((Button) findViewById(R.id.confirmButton))\n        .setOnClickListener(\n            new OnClickListener() {\n              public void onClick(View view) {\n                Intent i = new Intent();\n                i.putExtra(ACTIVITY_RESULT, mNoteEdit.getText().toString());\n                setResult(RESULT_OK, i);\n                finish();\n              }\n            });\n\n    ((Button) findViewById(R.id.cancelButton))\n        .setOnClickListener(\n            new OnClickListener() {\n              public void onClick(View view) {\n                setResult(RESULT_CANCELED);\n                finish();\n              }\n            });\n    if (!getSharedPreferences(Eula.PREFERENCES_EULA, Activity.MODE_PRIVATE)\n        .getBoolean(Eula.PREFERENCE_EULA_ACCEPTED, false)) {\n      Eula.showEula(this);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1724, "initialization": ["CharSequence text = getString(String,*)"], "initializationStart": [982], "initializationEnd": [1011], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text,type)", "focalAPIStart": 1029, "focalAPIEnd": 1110, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nebogeo/borrowed-scenery/tree/master/zizim/zizim-android/src/foam/zizim/android/AddIncident.java", "rawCode": "  /**\n   * Upon being resumed we can retrieve the current state. This allows us to update the state if it\n   * was changed at any time while paused.\n   */\n  @Override\n  protected void onResume() {\n    super.onResume();\n    BoskoiService.trackPageView(AddIncident.this, \"/AddIncident\");\n    SharedPreferences prefs = getPreferences(0);\n\n    // show/hide location button/map when selecting a new location\n    if (AddIncident.longitude != 0) {\n      // addLocation.setVisibility(View.GONE);\n      addLocation.setText(R.string.change_location);\n      mapView.setVisibility(View.VISIBLE);\n    } else {\n      mapView.setVisibility(View.GONE);\n      // addLocation.setVisibility(View.VISIBLE);\n      addLocation.setText(R.string.add_location);\n    }\n    // show and center a marker on the minimap\n    placeMarker((int) (AddIncident.latitude * 1.0E6), (int) (AddIncident.longitude * 1.0E6));\n    mapController.setCenter(this.getPoint(AddIncident.latitude, AddIncident.longitude));\n\n    if (prefs.getString(\"desc\", null) != null) {\n      incidentDesc.setText(prefs.getString(\"desc\", null), TextView.BufferType.EDITABLE);\n    }\n    this.updateDisplay();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1725, "initialization": ["String text = Intent.getExtras()"], "initializationStart": [195], "initializationEnd": [211], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(TextUtils.isEmpty(text,))", "guardType": "IF {", "guardExpressionStart": 239, "guardExpressionEnd": 269, "guardBlockStart": 239, "guardBlockEnd": 340, "focalAPI": " = editText.setText(text)", "focalAPIStart": 348, "focalAPIEnd": 371, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sunriver/projects/tree/master/android/eoecn/src/cn/eoe/app/ui/UserLoginActivity.java", "rawCode": "  @Override\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    // 当前只有一个返回值\n    if (resultCode == RESULT_OK && requestCode == GET_CODE) {\n      String result = data.getExtras().getString(\"result\");\n      if (TextUtils.isEmpty(result)) {\n        showShortToast(R.string.scan_retry);\n        return;\n      }\n\n      editKey.setText(result);\n      // TODO 可以直接执行绑定\n      loginBind();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1726, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 34, "focalAPIEnd": 57, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.getText()"], "useStart": [92], "useEnd": [111], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/core/java/android/webkit/FindActionModeCallback.java", "rawCode": "  void setText(String text) {\n    mEditText.setText(text);\n    Spannable span = (Spannable) mEditText.getText();\n    int length = span.length();\n    // Ideally, we would like to set the selection to the whole field,\n    // but this brings up the Text selection CAB, which dismisses this\n    // one.\n    Selection.setSelection(span, length, length);\n    // Necessary each time we set the text, so that this will watch\n    // changes to it.\n    span.setSpan(this, 0, length, Spannable.SPAN_INCLUSIVE_INCLUSIVE);\n    mMatchesFound = false;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1727, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [2711], "initializationEnd": [2733], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "editText.getText().length()==0&&text!=null&&text.length()>0", "guardType": "IF {", "guardExpressionStart": 2739, "guardExpressionEnd": 2812, "guardBlockStart": 2739, "guardBlockEnd": 2849, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2821, "focalAPIEnd": 2842, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/cgeo-original/tree/master/src/carnero/cgeo/original/cacheLog.java", "rawCode": "  public void init() {\n    if (geocode != null) {\n      app.setAction(geocode);\n    }\n\n    types.clear();\n\n    if (cache.type.equals(\"event\")\n        || cache.type.equals(\"mega\")\n        || cache.type.equals(\"cito\")\n        || cache.type.equals(\"lostfound\")) {\n      types.add(Base.LOG_WILL_ATTEND);\n      types.add(Base.LOG_NOTE);\n      types.add(Base.LOG_ATTENDED);\n      types.add(Base.LOG_NEEDS_ARCHIVE);\n    } else if (cache.type.equals(\"earth\")) {\n      types.add(Base.LOG_FOUND_IT);\n      types.add(Base.LOG_DIDNT_FIND_IT);\n      types.add(Base.LOG_NOTE);\n      types.add(Base.LOG_NEEDS_MAINTENANCE);\n      types.add(Base.LOG_NEEDS_ARCHIVE);\n    } else if (cache.type.equals(\"webcam\")) {\n      types.add(Base.LOG_WEBCAM_PHOTO_TAKEN);\n      types.add(Base.LOG_DIDNT_FIND_IT);\n      types.add(Base.LOG_NOTE);\n      types.add(Base.LOG_NEEDS_ARCHIVE);\n      types.add(Base.LOG_NEEDS_MAINTENANCE);\n    } else {\n      types.add(Base.LOG_FOUND_IT);\n      types.add(Base.LOG_DIDNT_FIND_IT);\n      types.add(Base.LOG_NOTE);\n      types.add(Base.LOG_NEEDS_ARCHIVE);\n      types.add(Base.LOG_NEEDS_MAINTENANCE);\n    }\n    if (cache.owner.equalsIgnoreCase(settings.getUsername()) == true) {\n      types.add(Base.LOG_OWNER_MAINTENANCE);\n      types.add(Base.LOG_TEMP_DISABLE_LISTING);\n      types.add(Base.LOG_ENABLE_LISTING);\n      types.add(Base.LOG_ARCHIVE);\n      types.remove(new Integer(Base.LOG_UPDATE_COORDINATES));\n      if (cache.type.equals(\"event\")\n          || cache.type.equals(\"mega\")\n          || cache.type.equals(\"cito\")\n          || cache.type.equals(\"lostfound\")) {\n        types.add(Base.LOG_ANNOUNCEMENT);\n      }\n    }\n\n    final CacheLog log = app.loadLogOffline(geocode);\n    if (log != null) {\n      typeSelected = log.type;\n      date.setTime(new Date(log.date));\n      text = log.log;\n    } else if (settings.getSignature() != null && settings.getSignature().length() > 0) {\n      addSignature(LOG_SIGNATURE);\n    }\n\n    if (types.contains(typeSelected) == false) {\n      if (alreadyFound == true) {\n        typeSelected = Base.LOG_NOTE;\n      } else {\n        typeSelected = types.get(0);\n      }\n      setType(typeSelected);\n    }\n\n    Button typeButton = (Button) findViewById(R.id.type);\n    registerForContextMenu(typeButton);\n    typeButton.setText(Base.logTypes2.get(typeSelected));\n    typeButton.setOnClickListener(\n        new View.OnClickListener() {\n\n          public void onClick(View view) {\n            openContextMenu(view);\n          }\n        });\n\n    Button dateButton = (Button) findViewById(R.id.date);\n    dateButton.setText(Base.dateOutShort.format(date.getTime()));\n    dateButton.setOnClickListener(new cgeovisitDateListener());\n\n    EditText logView = (EditText) findViewById(R.id.log);\n    if (logView.getText().length() == 0 && text != null && text.length() > 0) {\n      logView.setText(text);\n    }\n\n    if (post == null) {\n      post = (Button) findViewById(R.id.post);\n    }\n    if (viewstate == null || viewstate.length() == 0) {\n      post.setEnabled(false);\n      post.setOnTouchListener(null);\n      post.setOnClickListener(null);\n\n      loadData thread;\n      thread = new loadData(cacheid);\n      thread.start();\n    } else {\n      post.setEnabled(true);\n      post.setOnClickListener(new postListener());\n    }\n\n    if (save == null) {\n      save = (Button) findViewById(R.id.save);\n    }\n    save.setOnClickListener(new saveListener());\n\n    if (clear == null) {\n      clear = (Button) findViewById(R.id.clear);\n    }\n    clear.setOnClickListener(new clearListener());\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1728, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 179, "focalAPIEnd": 236, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/leethree/attentive-ui/tree/master/SuperMonkey/src/hk/hku/cs/srli/supermonkey/MonkeyActivity.java", "rawCode": "    @Override\n    public void handleDConnect(boolean connected) {\n      dToggle.setChecked(connected);\n      etToggle.setEnabled(false);\n      caliButton.setEnabled(false);\n      dStatus.setText(connected ? \"connected\" : \"disconnected\");\n      if (connected) {\n        // Report parameters to the daemon.\n        int port = Integer.parseInt(getPref().getString(SettingsActivity.KEY_PREF_M_PORT, \"\"));\n        if (port > 0) trackingCtrl.setParam(\"monkey_port\", Integer.toString(port));\n        DisplayMetrics dm = getScreenInfo();\n        trackingCtrl.setParam(\"display_width\", Integer.toString(dm.widthPixels));\n        trackingCtrl.setParam(\"display_height\", Integer.toString(dm.heightPixels));\n      }\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1729, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 241, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/android/platform_packages_apps_mms/tree/master/tests/src/com/android/mms/ui/SmsTest.java", "rawCode": "        public void run() {\n          // only on the first message will there be a recipients editor\n          if (mRecipientsEditor.getVisibility() == View.VISIBLE) {\n            mRecipientsEditor.setText(mRecipient);\n          }\n          mTextEditor.setText(mMessage);\n          ImageButton send = (ImageButton) mActivity.findViewById(R.id.send_button_sms);\n          send.performClick();\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1730, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 141, "focalAPIEnd": 158, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/tests/TileBenchmark/src/com/test/tilebenchmark/ProfileActivity.java", "rawCode": "    @Override\n    public void onPageStarted(WebView view, String url, Bitmap favicon) {\n      super.onPageStarted(view, url, favicon);\n      mUrl.setText(url);\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1731, "initialization": ["String text = getString(*,String)", "EditText editText = findViewById(*)"], "initializationStart": [748, 1049], "initializationEnd": [809, 1089], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "text!=null", "guardType": "IF {", "guardExpressionStart": 978, "guardExpressionEnd": 1005, "guardBlockStart": 978, "guardBlockEnd": 1140, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1097, "focalAPIEnd": 1133, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ltg-uic/hr-android-app/tree/master/src/ltg/heliotablet_android/view/LoginDialog.java", "rawCode": "  public static AlertDialog createLoginDialog(\n      Context context,\n      DialogInterface.OnClickListener positive,\n      DialogInterface.OnClickListener negative,\n      OnDismissListener dismissListener) {\n\n    LayoutInflater inflater =\n        (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n    AlertDialog.Builder builder = new AlertDialog.Builder(context);\n    builder.setTitle(context.getString(R.string.login_title));\n\n    builder.setPositiveButton(R.string.login_button, positive);\n    builder.setNegativeButton(R.string.cancel_button, negative);\n\n    SharedPreferences settings =\n        context.getSharedPreferences(context.getString(R.string.xmpp_prefs), context.MODE_PRIVATE);\n    String storedUserName = settings.getString(context.getString(R.string.user_name), \"\");\n    String storedPassword = settings.getString(context.getString(R.string.password), \"\");\n    View view = inflater.inflate(R.layout.authenticator_activity, null);\n    if (storedUserName != null) {\n      EditText userTextView = (EditText) view.findViewById(R.id.usernameTextView);\n      userTextView.setText(storedUserName);\n    }\n\n    if (storedPassword != null) {\n      EditText passwordTextView = (EditText) view.findViewById(R.id.passwordTextView);\n      passwordTextView.setText(storedPassword);\n    }\n    builder.setView(view);\n\n    AlertDialog alertDialog;\n\n    if (dismissListener != null) {\n      alertDialog = builder.create();\n      alertDialog.setOnDismissListener(dismissListener);\n    } else {\n      alertDialog = builder.create();\n    }\n    return alertDialog;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1732, "initialization": ["EditText editText = new EditText(*)"], "initializationStart": [2293], "initializationEnd": [2320], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2328, "focalAPIEnd": 2391, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AlertDialog.Builder.setView(editText)"], "useStart": [2399], "useEnd": [2419], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/InsomniaROM/packages_apps_ROMSettings/tree/master/src/com/aokp/romcontrol/fragments/UserInterface.java", "rawCode": "  @Override\n  public boolean onPreferenceTreeClick(\n      PreferenceScreen preferenceScreen, final Preference preference) {\n    if (preference == mAllow180Rotation || preference == mAllow270Rotation) {\n      boolean checked180 = ((TwoStatePreference) mAllow180Rotation).isChecked();\n      boolean checked270 = ((TwoStatePreference) mAllow270Rotation).isChecked();\n      int result;\n      if (checked180) {\n        if (checked270) result = (1 | 2 | 4 | 8);\n        else result = (1 | 2 | 4);\n      } else {\n        if (checked270) result = (1 | 2 | 8);\n        else result = (1 | 2);\n      }\n      Settings.System.putInt(\n          mContentResolver, Settings.System.ACCELEROMETER_ROTATION_ANGLES, result);\n      return true;\n    } else if (preference == mStatusBarNotifCount) {\n      Settings.System.putBoolean(\n          mContext.getContentResolver(),\n          Settings.System.STATUSBAR_NOTIF_COUNT,\n          ((CheckBoxPreference) preference).isChecked());\n      return true;\n    } else if (preference == mDisableBootAnimation) {\n      DisableBootAnimation();\n      return true;\n    } else if (preference == mHideExtras) {\n      // Settings.System.putBoolean(mContext.getContentResolver(),\n      // Settings.System.HIDE_EXTRAS_SYSTEM_BAR,\n      // ((CheckBoxPreference) preference).isChecked());\n    } else if (preference == mShowActionOverflow) {\n      boolean enabled = mShowActionOverflow.isChecked();\n      Settings.System.putBoolean(\n          getContentResolver(), Settings.System.UI_FORCE_OVERFLOW_BUTTON, enabled ? true : false);\n      // Show toast appropriately\n      if (enabled) {\n        Toast.makeText(getActivity(), R.string.show_overflow_toast_enable, Toast.LENGTH_LONG)\n            .show();\n      } else {\n        Toast.makeText(getActivity(), R.string.show_overflow_toast_disable, Toast.LENGTH_LONG)\n            .show();\n      }\n      return true;\n    } else if (preference == mCustomBootAnimation) {\n      openBootAnimationDialog();\n      return true;\n    } else if (preference == mCustomLabel) {\n      AlertDialog.Builder alert = new AlertDialog.Builder(getActivity());\n\n      alert.setTitle(R.string.custom_carrier_label_title);\n      alert.setMessage(R.string.custom_carrier_label_explain);\n\n      // Set an EditText view to get user input\n      final EditText input = new EditText(getActivity());\n      input.setText(mCustomLabelText != null ? mCustomLabelText : \"\");\n      alert.setView(input);\n\n      alert.setPositiveButton(\n          getResources().getString(R.string.ok),\n          new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int whichButton) {\n              String value = ((Spannable) input.getText()).toString();\n              Settings.System.putString(\n                  getActivity().getContentResolver(), Settings.System.CUSTOM_CARRIER_LABEL, value);\n              updateCustomLabelTextSummary();\n              Intent i = new Intent();\n              i.setAction(\"com.aokp.romcontrol.LABEL_CHANGED\");\n              mContext.sendBroadcast(i);\n            }\n          });\n      alert.setNegativeButton(\n          getResources().getString(R.string.cancel),\n          new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int whichButton) {\n              // Canceled.\n            }\n          });\n\n      alert.show();\n    } else if (preference == mVibrateOnExpand) {\n      Settings.System.putBoolean(\n          mContext.getContentResolver(),\n          Settings.System.VIBRATE_NOTIF_EXPAND,\n          ((CheckBoxPreference) preference).isChecked());\n      Helpers.restartSystemUI();\n      return true;\n    } else if (preference == mShowImeSwitcher) {\n      Settings.System.putBoolean(\n          getActivity().getContentResolver(),\n          Settings.System.SHOW_STATUSBAR_IME_SWITCHER,\n          isCheckBoxPrefernceChecked(preference));\n      return true;\n    } else if (preference == mStatusbarSliderPreference) {\n      Settings.System.putBoolean(\n          getActivity().getContentResolver(),\n          Settings.System.STATUSBAR_BRIGHTNESS_SLIDER,\n          isCheckBoxPrefernceChecked(preference));\n      return true;\n    } else if (preference == mShowWifiName) {\n      Settings.System.putInt(\n          getActivity().getContentResolver(),\n          Settings.System.NOTIFICATION_SHOW_WIFI_SSID,\n          mShowWifiName.isChecked() ? 1 : 0);\n      return true;\n    } else if (preference == mRecentGoog) {\n      boolean checked = ((TwoStatePreference) preference).isChecked();\n      Settings.System.putBoolean(mContentResolver, Settings.System.RECENT_GOOGLE_ASSIST, checked);\n      return true;\n    } else if (preference == mWakeUpWhenPluggedOrUnplugged) {\n      Settings.System.putBoolean(\n          getActivity().getContentResolver(),\n          Settings.System.WAKEUP_WHEN_PLUGGED_UNPLUGGED,\n          ((CheckBoxPreference) preference).isChecked());\n      return true;\n    } else if (preference.getKey().equals(\"transparency_dialog\")) {\n      // getFragmentManager().beginTransaction().add(new\n      // TransparencyDialog(), null).commit();\n      openTransparencyDialog();\n      return true;\n    } else if (preference == mUseAltResolver) {\n      Settings.System.putBoolean(\n          getActivity().getContentResolver(),\n          Settings.System.ACTIVITY_RESOLVER_USE_ALT,\n          ((CheckBoxPreference) preference).isChecked());\n      return true;\n    } else if (preference == mSeeThrough) {\n      Settings.System.putInt(\n          getActivity().getContentResolver(),\n          Settings.System.LOCKSCREEN_SEE_THROUGH,\n          mSeeThrough.isChecked() ? 1 : 0);\n    }\n\n    return super.onPreferenceTreeClick(preferenceScreen, preference);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1733, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [897], "initializationEnd": [932], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1864, "focalAPIEnd": 1892, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rogerhzh/linphone_XIA/tree/master/src/org/linphone/setup/WizardFragment.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View view = inflater.inflate(R.layout.setup_wizard, container, false);\n\n    username = (EditText) view.findViewById(R.id.setup_username);\n    ImageView usernameOkIV = (ImageView) view.findViewById(R.id.setup_username_ok);\n    addXMLRPCUsernameHandler(username, usernameOkIV);\n\n    password = (EditText) view.findViewById(R.id.setup_password);\n    passwordConfirm = (EditText) view.findViewById(R.id.setup_password_confirm);\n\n    ImageView passwordOkIV = (ImageView) view.findViewById(R.id.setup_password_ok);\n    addXMLRPCPasswordHandler(password, passwordOkIV);\n\n    ImageView passwordConfirmOkIV = (ImageView) view.findViewById(R.id.setup_confirm_password_ok);\n    addXMLRPCConfirmPasswordHandler(password, passwordConfirm, passwordConfirmOkIV);\n\n    email = (EditText) view.findViewById(R.id.setup_email);\n    ImageView emailOkIV = (ImageView) view.findViewById(R.id.setup_email_ok);\n    addXMLRPCEmailHandler(email, emailOkIV);\n\n    errorMessage = (TextView) view.findViewById(R.id.setup_error);\n\n    createAccount = (ImageView) view.findViewById(R.id.setup_create);\n    createAccount.setEnabled(false);\n    createAccount.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            createAccount(\n                username.getText().toString(),\n                password.getText().toString(),\n                email.getText().toString(),\n                false);\n          }\n        });\n\n    if (getResources().getBoolean(R.bool.pre_fill_email_in_wizard)) {\n      Account[] accounts = AccountManager.get(getActivity()).getAccountsByType(\"com.google\");\n\n      for (Account account : accounts) {\n        if (isEmailCorrect(account.name)) {\n          String possibleEmail = account.name;\n          email.setText(possibleEmail);\n          break;\n        }\n      }\n    }\n\n    return view;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1734, "initialization": ["EditText editText = new EditText(*)"], "initializationStart": [369], "initializationEnd": [387], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 393, "focalAPIEnd": 421, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AlertDialog.Builder.setView(editText)"], "useStart": [427], "useEnd": [452], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AxlJPN/android_battleship/tree/master/src/com/example/battleship/CommActivity.java", "rawCode": "  /** クライアント側接続画面表示 */\n  private void showSendDialog() {\n    AlertDialog.Builder builder = new AlertDialog.Builder(this);\n\n    builder.setIcon(R.drawable.ic_launcher);\n    builder.setTitle(\"Connection destination(Client)\");\n\n    builder.setMessage(\n        \"Please specify the connection destination.\\nYour IP is: \" + comm.getWifiInfo());\n    final EditText editView = new EditText(this);\n    editView.setText(\"192.168.\");\n    builder.setView(editView);\n\n    builder.setPositiveButton(\n        \"connect\",\n        new DialogInterface.OnClickListener() {\n\n          @Override\n          public void onClick(DialogInterface dialog, int which) {\n            // サーバー側に接続する\n            ConnectSend conSend = new ConnectSend(comm, _context, editView.getText().toString());\n            conSend.execute();\n\n            // doInBackgroundを終了させる\n            conSend.isCancelled();\n          }\n        });\n\n    builder.setNegativeButton(\n        \"cancel\",\n        new DialogInterface.OnClickListener() {\n\n          @Override\n          public void onClick(DialogInterface dialog, int which) {\n            // サーバー，クライアント選択画面にもどる\n            showSelectServerCliendDialog();\n          }\n        });\n\n    _sendDialog = builder.create();\n    _sendDialog.setCanceledOnTouchOutside(false);\n    _sendDialog.show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1735, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 97, "focalAPIEnd": 131, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thiendamvam/WhyQ/tree/master/Code/src/whyq/activity/NewWhyqActivity.java", "rawCode": "  private void initValue() {\n    // TODO Auto-generated method stub\n    if (boardDescRe != null) permDesc.setText(this.boardDescRe);\n    // btnShareFacebook.setEnabled(false);\n    // btnShareTwitter.setEnabled(false);\n    // btnShareKakao.setEnabled(false);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1736, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [234], "initializationEnd": [273], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 279, "focalAPIEnd": 322, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wkrupchenko/swe2/tree/master/ShopApp/src/de/shop/ui/artikel/ArtikelEdit.java", "rawCode": "  @Override\n  public void onViewCreated(View view, Bundle savedInstanceState) {\n    final TextView txtId = (TextView) view.findViewById(R.id.artikel_id);\n    txtId.setText(String.valueOf(artikel.id));\n\n    edtBezeichnung = (EditText) view.findViewById(R.id.bezeichnung_edt);\n    edtBezeichnung.setText(artikel.bezeichnung);\n\n    edtPreis = (EditText) view.findViewById(R.id.preis_edt);\n    edtPreis.setText(String.valueOf(artikel.preis));\n\n    tglErhaeltlich = (ToggleButton) view.findViewById(R.id.erhaeltlich_tgl);\n    tglErhaeltlich.setChecked(artikel.erhaeltlich);\n\n    edtArtikelgruppe = (EditText) view.findViewById(R.id.artikelgruppe_edt);\n    edtArtikelgruppe.setText(String.valueOf(artikel.artikelgruppeUri));\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1737, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [62], "configurationEnd": [86], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 753, "focalAPIEnd": 779, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/faux123/android_frameworks_base/tree/master/policy/src/com/android/internal/policy/impl/PasswordUnlockScreen.java", "rawCode": "  private void verifyPasswordAndUnlock() {\n    String entry = mPasswordEntry.getText().toString();\n    if (mLockPatternUtils.checkPassword(entry)) {\n      mCallback.keyguardDone(true);\n      mCallback.reportSuccessfulUnlockAttempt();\n    } else if (entry.length() > MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT) {\n      // to avoid accidental lockout, only count attempts that are long enough to be a\n      // real password. This may require some tweaking.\n      mCallback.reportFailedUnlockAttempt();\n      if (0\n          == (mUpdateMonitor.getFailedAttempts()\n              % LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT)) {\n        long deadline = mLockPatternUtils.setLockoutAttemptDeadline();\n        handleAttemptLockout(deadline);\n      }\n    }\n    mPasswordEntry.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1738, "initialization": ["String text = Bundle.getString(String)", "EditText editText = findViewById(*)"], "initializationStart": [382, 754], "initializationEnd": [413, 780], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2374, "focalAPIEnd": 2400, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Entomologist/entomologist/tree/master/mobile/Trac/src/org/entomologistproject/trac/Settings.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.settings);\n    getActionBar().setType(ActionBar.Type.Empty);\n    setTitle(\"Entomologist Settings\");\n    Bundle extras = getIntent().getExtras();\n    dbHelper = new DBHelper(this);\n    trackerRowId = extras.getLong(\"tracker_id\", -1);\n    trackerUrl = extras.getString(\"tracker_url\");\n    trackerUsername = extras.getString(\"tracker_username\");\n    trackerPassword = extras.getString(\"tracker_password\");\n    updateFrequency = extras.getLong(\"update_frequency\");\n    updateChecked = extras.getBoolean(\"update_checked\", false);\n    onlyOverWifi = extras.getBoolean(\"only_wifi\", true);\n\n    final EditText urlBox = (EditText) findViewById(R.id.urlEdit);\n    final EditText userBox = (EditText) findViewById(R.id.usernameEdit);\n    final EditText passBox = (EditText) findViewById(R.id.passwordEdit);\n    unitSpinner = (Spinner) findViewById(R.id.updateUnit);\n    String[] unitArray = {\"15 minutes\", \"30 minutes\", \"1 hour\", \"12 hours\", \"24 hours\"};\n    ArrayAdapter<String> spinnerArrayAdapter =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, unitArray);\n    unitSpinner.setAdapter(spinnerArrayAdapter);\n    if (updateFrequency == AlarmManager.INTERVAL_FIFTEEN_MINUTES) unitSpinner.setSelection(0);\n    else if (updateFrequency == AlarmManager.INTERVAL_HALF_HOUR) unitSpinner.setSelection(1);\n    else if (updateFrequency == AlarmManager.INTERVAL_HOUR) unitSpinner.setSelection(2);\n    else if (updateFrequency == AlarmManager.INTERVAL_HALF_DAY) unitSpinner.setSelection(3);\n    else if (updateFrequency == AlarmManager.INTERVAL_DAY) unitSpinner.setSelection(4);\n    else Log.e(\"Entomologist\", \"Couldn't find a match!\");\n    updatePos = unitSpinner.getSelectedItemPosition();\n\n    updateCheckBox = (CheckBox) findViewById(R.id.updateCheckbox);\n    wifiCheckBox = (CheckBox) findViewById(R.id.onlyOverWifiCheckbox);\n    updateCheckBox.setChecked(updateChecked);\n    wifiCheckBox.setChecked(onlyOverWifi);\n    unitSpinner.setEnabled(updateChecked);\n\n    updateCheckBox.setOnCheckedChangeListener(\n        new OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n            unitSpinner.setEnabled(isChecked);\n          }\n        });\n    urlBox.setText(trackerUrl);\n    userBox.setText(trackerUsername);\n    passBox.setText(trackerPassword);\n\n    Button saveButton = (Button) findViewById(R.id.settingsSaveButton);\n    saveButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            String url = urlBox.getText().toString();\n            String username = userBox.getText().toString();\n            String password = passBox.getText().toString();\n            if (!checkSettings(url, username, password)) return;\n\n            // If the URL is different, delete bugs and reload everything.\n            // If just the username or password are different, just verify\n            // that it's correct\n            if (!url.equals(trackerUrl)) {\n              TracBackend backend =\n                  new TracDetailsTask(getApplicationContext(), url, username, password, false);\n              backend.execute(\n                  new VersionHandler(\n                      ProgressDialog.show(\n                          Settings.this, \"\", \"Getting tracker information...\", true)));\n            } else if ((!username.equals(trackerUsername)) || (!password.equals(trackerPassword))) {\n              TracBackend backend =\n                  new TracDetailsTask(\n                      getApplicationContext(), trackerUrl, trackerUsername, trackerPassword, true);\n              backend.execute(\n                  new VersionHandler(\n                      ProgressDialog.show(\n                          Settings.this, \"\", \"Verifying username and password...\", true)));\n            } else if (updatesChanged()) {\n              // Log.v(\"Entomologist\", \"Updates Changed\");\n              Intent intent = getIntent();\n              intent.putExtra(\"tracker_changed\", false);\n              final Spinner unitSpinner = (Spinner) findViewById(R.id.updateUnit);\n              int unitPos = unitSpinner.getSelectedItemPosition();\n              if (unitPos == 0)\n                intent.putExtra(\"update_frequency\", AlarmManager.INTERVAL_FIFTEEN_MINUTES);\n              else if (unitPos == 1)\n                intent.putExtra(\"update_frequency\", AlarmManager.INTERVAL_HALF_HOUR);\n              else if (unitPos == 2)\n                intent.putExtra(\"update_frequency\", AlarmManager.INTERVAL_HOUR);\n              else if (unitPos == 3)\n                intent.putExtra(\"update_frequency\", AlarmManager.INTERVAL_HALF_DAY);\n              else if (unitPos == 4) intent.putExtra(\"update_frequency\", AlarmManager.INTERVAL_DAY);\n\n              intent.putExtra(\"update_checked\", updateCheckBox.isChecked());\n              intent.putExtra(\"only_wifi\", wifiCheckBox.isChecked());\n              setResult(Activity.RESULT_OK, intent);\n              finish();\n            } else {\n              // Nothing has changed, so assume they meant \"cancel\"\n              Intent i = getIntent();\n              setResult(Activity.RESULT_CANCELED, i);\n              finish();\n            }\n          }\n        });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1739, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 94, "focalAPIEnd": 118, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.isShown()"], "useStart": [367], "useEnd": [379], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/geoquest/Public-GQ-Player-Android--1/tree/master/GQ_Android/test/com/qeevee/gq/tests/mission/model/TextQuestionMissionPlainTextTests.java", "rawCode": "  @Test\n  public void myReplyOnCorrectShown() {\n    initTestMission(\"With_Hint_Replies\");\n    et.setText(\"Answer One\");\n    bt.performClick();\n    assertEquals(\n        \"My specific reply for correct answer should be shown\",\n        \"You have chosen the right answer.\",\n        tv.getText());\n    assertFalse(\"In reply on correct mode edit text should not be shown\", et.isShown());\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1740, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 249, "focalAPIEnd": 265, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/easilyBaffled/435/tree/master/WebGuitar/example-aut/adr-aut/ToDoManager/result/edu.towson.cosc451.nimbian.addtodo/class_mutants/JID_1/addtodo.java", "rawCode": "        public void onClick(android.view.View v) {\n          Rbutton1.setChecked(true);\n          Rbutton2.setChecked(false);\n          Rbutton3.setChecked(true);\n          Rbutton4.setChecked(false);\n          Rbutton5.setChecked(false);\n          edit.setText(\"\");\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1741, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [73], "initializationEnd": [107], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [130], "configurationEnd": [148], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 673, "focalAPIEnd": 693, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cangevine/STEAMnet/tree/master/android/src/org/friendscentral/steamnet/Activities/IdeaDetailActivity.java", "rawCode": "  public void submitComment(View v) {\n    EditText editText = (EditText) findViewById(R.id.CommentEditText);\n    String content = editText.getText().toString();\n    findViewById(R.id.DummyFocusCommentSection).requestFocus();\n\n    int userID = 0;\n    STEAMnetApplication sna = (STEAMnetApplication) getApplication();\n    if (!sna.getReadOnlyMode()) {\n      userID = Integer.valueOf(sna.getUserId());\n      String username = sna.getUsername();\n      ListView commentSection = (ListView) findViewById(R.id.CommentList);\n      CommentAdapter c = (CommentAdapter) commentSection.getAdapter();\n      new PostComment(id, 'I', content, userID, username, sna.getToken(), c);\n\n      editText.setText(\"\");\n    } else {\n      Toast.makeText(this, \"Please log in to submit a comment\", Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1742, "initialization": ["String text = instance()"], "initializationStart": [723], "initializationEnd": [750], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()", "editText.getText()"], "configurationStart": [348, 434], "configurationEnd": [365, 451], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 829, "focalAPIEnd": 851, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rogerhzh/linphone_XIA/tree/master/src/org/linphone/ChatFragment.java", "rawCode": "  public void changeDisplayedChat(String newSipUri, String displayName, String pictureUri) {\n    if (!message.getText().toString().equals(\"\") && LinphoneActivity.isInstanciated()) {\n      ChatStorage chatStorage = LinphoneActivity.instance().getChatStorage();\n      if (chatStorage.getDraft(sipUri) == null) {\n        chatStorage.saveDraft(sipUri, message.getText().toString());\n      } else {\n        chatStorage.updateDraft(sipUri, message.getText().toString());\n      }\n    } else if (LinphoneActivity.isInstanciated()) {\n      LinphoneActivity.instance().getChatStorage().deleteDraft(sipUri);\n    }\n\n    messagesFilterLimit = 0;\n    sipUri = newSipUri;\n    if (LinphoneActivity.isInstanciated()) {\n      String draft = LinphoneActivity.instance().getChatStorage().getDraft(sipUri);\n      if (draft == null) draft = \"\";\n      message.setText(draft);\n    }\n    displayChat(displayName, pictureUri);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1743, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 56, "focalAPIEnd": 94, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JohnMurray/smilcloud/tree/master/src/edu/nku/cs/csc440/team2/uploader/Uploader.java", "rawCode": "        @Override\n        public void run() {\n          Uploader.this.fileLocation.setText(\"\");\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1744, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 581, "focalAPIEnd": 605, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/krtek/urbo/tree/master/android/src/com/phonegap/plugins/childBrowser/ChildBrowser.java", "rawCode": "    /**\n     * Notify the host application that a page has started loading.\n     *\n     * @param view The webview initiating the callback.\n     * @param url The url of the page.\n     */\n    @Override\n    public void onPageStarted(WebView view, String url, Bitmap favicon) {\n      super.onPageStarted(view, url, favicon);\n      String newloc;\n      if (url.startsWith(\"http:\") || url.startsWith(\"https:\") || url.startsWith(\"file:\")) {\n        newloc = url;\n      } else {\n        newloc = \"http://\" + url;\n      }\n\n      if (!newloc.equals(edittext.getText().toString())) {\n        edittext.setText(newloc);\n      }\n\n      try {\n        JSONObject obj = new JSONObject();\n        obj.put(\"type\", LOCATION_CHANGED_EVENT);\n        obj.put(\"location\", url);\n\n        sendUpdate(obj, true);\n      } catch (JSONException e) {\n        Log.d(\"ChildBrowser\", \"This should never happen\");\n      }\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1745, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [75], "configurationEnd": [100], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 506, "focalAPIEnd": 533, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/LUEshi/Trace2Learn/tree/master/src/edu/upenn/cis350/Trace2Learn/TagActivity.java", "rawCode": "  public void onAddPrivateTagButtonClick(View view) {\n    Editable input = editPrivateText.getText();\n    String input2 = input.toString();\n    if (type == ItemType.CHARACTER) {\n      mDbHelper.updatePrivateTag(id, input2); // added it to db\n    } else if (type == ItemType.WORD) {\n      mDbHelper.updatePrivateWordTag(id, input2);\n    }\n    if (currentTags.get(0).contains(PRIVATE_PREFIX)) currentTags.remove(0);\n    currentTags.add(0, PRIVATE_PREFIX + input2);\n    arrAdapter.notifyDataSetChanged();\n    editPrivateText.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1746, "initialization": ["EditText editText = findViewById(*)", "String text = Intent.getExtras()"], "initializationStart": [949, 1710], "initializationEnd": [978, 1728], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.addTextChangedListener(TextWatcher)"], "configurationStart": [1539], "configurationEnd": [1585], "guardCondition": "text!=null", "guardType": "IF {", "guardExpressionStart": 1758, "guardExpressionEnd": 1777, "guardBlockStart": 1758, "guardBlockEnd": 1823, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1788, "focalAPIEnd": 1814, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chgenly/experiment/tree/master/OsmAnd/src/net/osmand/plus/activities/DownloadIndexActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    settings = ((OsmandApplication) getApplication()).getSettings();\n    if (downloadListIndexThread == null) {\n      downloadListIndexThread = new DownloadIndexListThread(this);\n    }\n    // recreation upon rotation is prevented in manifest file\n    CustomTitleBar titleBar =\n        new CustomTitleBar(\n            this, R.string.local_index_download, R.drawable.tab_download_screen_icon);\n    setContentView(R.layout.download_index);\n    titleBar.afterSetContentView();\n\n    downloadFileHelper = new DownloadFileHelper(this);\n    findViewById(R.id.DownloadButton)\n        .setOnClickListener(\n            new View.OnClickListener() {\n\n              @Override\n              public void onClick(View v) {\n                downloadFilesCheckFreeVersion();\n              }\n            });\n\n    updateLoadedFiles();\n\n    filterText = (EditText) findViewById(R.id.search_box);\n    textWatcher =\n        new TextWatcher() {\n          @Override\n          public void afterTextChanged(Editable s) {}\n\n          @Override\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          @Override\n          public void onTextChanged(CharSequence s, int start, int before, int count) {\n            DownloadIndexAdapter adapter = ((DownloadIndexAdapter) getExpandableListAdapter());\n            if (adapter != null) {\n              adapter.getFilter().filter(s);\n            }\n          }\n        };\n    filterText.addTextChangedListener(textWatcher);\n    final Intent intent = getIntent();\n    if (intent != null && intent.getExtras() != null) {\n      final String filter = intent.getExtras().getString(FILTER_KEY);\n      if (filter != null) {\n        filterText.setText(filter);\n      }\n    }\n\n    if (downloadListIndexThread.getCachedIndexFiles() != null\n        && downloadListIndexThread.isDownloadedFromInternet()) {\n      setListAdapter(new DownloadIndexAdapter(downloadListIndexThread.getCachedIndexFiles()));\n    } else {\n      downloadIndexList();\n    }\n    if (Version.isFreeVersion(this) && settings.checkFreeDownloadsNumberZero()) {\n      Builder msg = new AlertDialog.Builder(this);\n      msg.setTitle(R.string.free_version_title);\n      msg.setMessage(\n          getString(R.string.free_version_message, MAXIMUM_AVAILABLE_FREE_DOWNLOADS + \"\", \"\"));\n      msg.show();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1747, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 590, "focalAPIEnd": 625, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/t2health/T2-Mood-Tracker-Android/tree/master/MoodTracker/src/com/t2/vas/activity/editor/GroupActivity.java", "rawCode": "  @Override\n  public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n    Adapter adapter = listAdapter.getAdapterForItem(arg2);\n\n    boolean isGeneralAdapter = adapter == generalAdapter;\n    boolean isScaleAdapter = adapter == scaleAdapter;\n    boolean isMutable = group.immutable == 0;\n\n    if (isGeneralAdapter) {\n      @SuppressWarnings(\"unchecked\")\n      HashMap<String, Object> data = (HashMap<String, Object>) arg0.getItemAtPosition(arg2);\n      String itemId = (String) data.get(\"id\");\n\n      if (isMutable) {\n        if (itemId.equals(\"rename\")) {\n          renameEditText.setText(group.title);\n          renameDialog.show();\n          return;\n\n        } else if (itemId.equals(\"delete\")) {\n          deleteGroupDialog.show();\n          return;\n\n        } else if (itemId.equals(\"inverseData\")) {\n          CheckedTextView ctv = (CheckedTextView) arg1.findViewById(R.id.text1);\n          group.inverseResults = !ctv.isChecked();\n          group.save();\n\n          listAdapter.notifyDataSetChanged();\n          listAdapter.notifyDataSetInvalidated();\n          return;\n        }\n      } else {\n        if (itemId.equals(\"visible\")) {\n          CheckedTextView ctv = (CheckedTextView) arg1.findViewById(R.id.text1);\n          ArrayList<Long> hiddenGroupIds = SharedPref.getHiddenGroups(sharedPref);\n          if (ctv.isChecked()) {\n            hiddenGroupIds.add(group._id);\n          } else {\n            hiddenGroupIds.remove(group._id);\n          }\n          SharedPref.setHiddenGroups(sharedPref, hiddenGroupIds);\n\n          listAdapter.notifyDataSetChanged();\n          listAdapter.notifyDataSetInvalidated();\n          return;\n        } else {\n          Toast.makeText(this, R.string.group_immutable_message, Toast.LENGTH_LONG).show();\n        }\n      }\n\n    } else if (isScaleAdapter) {\n      if (isMutable) {\n        long id = listAdapter.getItemId(arg2);\n\n        editScaleId = id;\n        Scale scale = new Scale(dbAdapter);\n        scale._id = id;\n        scale.load();\n\n        editScaleId = id;\n        editMinLabel.setText(scale.min_label);\n        editMaxLabel.setText(scale.max_label);\n        editMinLabel.requestFocus();\n        editDialog.show();\n      } else {\n        Toast.makeText(this, R.string.group_immutable_message, Toast.LENGTH_LONG).show();\n      }\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1748, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [557], "initializationEnd": [586], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1763, "focalAPIEnd": 1791, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Q42/hue2/tree/master/hue2/src/main/java/nl/q42/huelimitededition/activities/LightActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    ActionBar ab = getActionBar();\n    ab.setDisplayHomeAsUpEnabled(true);\n    ab.setDisplayShowTitleEnabled(false);\n\n    // Light details\n    light = (Light) getIntent().getSerializableExtra(\"light\");\n    id = getIntent().getStringExtra(\"id\");\n    service = (HueService) getIntent().getSerializableExtra(\"service\");\n\n    // UI setup\n    setContentView(R.layout.activity_light);\n    setTitle(getString(R.string.light_edit));\n\n    nameView = (EditText) findViewById(R.id.light_name);\n    hueSlider = (HueSlider) findViewById(R.id.light_color_hue);\n    satBriSlider = (SatBriSlider) findViewById(R.id.light_color_sat_bri);\n    tempSlider = (TempSlider) findViewById(R.id.light_color_temp);\n\n    satBriSlider.setSliders(hueSlider, tempSlider);\n    hueSlider.setSliders(satBriSlider, tempSlider);\n    tempSlider.setSliders(hueSlider, satBriSlider);\n\n    presetColorView = (ColorButton) findViewById(R.id.light_preset_color);\n\n    // Set listeners for color slider interaction to record last used color mode (hue/sat or\n    // temperature)\n    // and to send preview requests\n    tempSlider.setOnTouchListener(getColorModeListener(\"ct\"));\n    hueSlider.setOnTouchListener(getColorModeListener(\"xy\"));\n    satBriSlider.setOnTouchListener(getColorModeListener(\"xy\"));\n\n    // Save preset button\n    findViewById(R.id.light_save_preset)\n        .setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                saveLight(true);\n                finish();\n              }\n            });\n\n    // Fill in current name/color in UI or restore previous\n    if (savedInstanceState == null) {\n      nameView.setText(light.name);\n\n      if (\"ct\".equals(light.state.colormode)) {\n        tempSlider.setTemp(light.state.ct);\n        tempSlider.setActive(true);\n        colorMode = \"ct\";\n      } else {\n        float hsv[] = new float[3];\n        Color.colorToHSV(Util.getRGBColor(light), hsv);\n        hueSlider.setHue(hsv[0]);\n        satBriSlider.setSaturation(hsv[1]);\n        satBriSlider.setBrightness(light.state.bri / 255.0f);\n        hueSlider.setActive(true);\n        satBriSlider.setActive(true);\n        colorMode = \"xy\";\n      }\n    }\n\n    updatePresetPreview();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1749, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "editText!=null", "guardType": "IF {", "guardExpressionStart": 440, "guardExpressionEnd": 467, "guardBlockStart": 440, "guardBlockEnd": 517, "focalAPI": " = editText.setText(text)", "focalAPIStart": 476, "focalAPIEnd": 510, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/emolinablas/CoretelProject/tree/master/libs externas/facebook/src/com/facebook/widget/PlacePickerFragment.java", "rawCode": "  /**\n   * Sets the search text (e.g., category, name) to search for. Either the location or the search\n   * text (or both) must be specified. If a search box is displayed, this will update its contents\n   * to the specified text.\n   *\n   * @param searchText the search text\n   */\n  public void setSearchText(String searchText) {\n    if (TextUtils.isEmpty(searchText)) {\n      searchText = null;\n    }\n    this.searchText = searchText;\n    if (this.searchBox != null) {\n      this.searchBox.setText(searchText);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1750, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [806], "initializationEnd": [843], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 913, "focalAPIEnd": 938, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lbaye/repo/tree/master/android/src/com/socmaps/widget/PeopleCirclePrefaranceItemView.java", "rawCode": "  /**\n   * The method is used to set & show some specified text.\n   *\n   * @param text As String which will be set on the text view.\n   * @param hint As String which will be used as hint.\n   * @see #callRenameCircleAPI\n   */\n\n  // TODO Auto-generated method stub\n  public void showTextInputDialog(final String text, String hint) {\n\n    // custom dialog\n    final Dialog dialog = new Dialog(context, R.style.CustomDialogTheme);\n    dialog.setContentView(R.layout.input_text_dialog_layout);\n\n    dialog.setOnDismissListener(\n        new OnDismissListener() {\n\n          @Override\n          public void onDismiss(DialogInterface dialog) {\n            // TODO Auto-generated method stub\n            Utility.hideKeyboard((Activity) context);\n          }\n        });\n\n    final EditText etInputText = (EditText) dialog.findViewById(R.id.etInputText);\n\n    if (text != null && !text.trim().equalsIgnoreCase(\"\")) {\n      etInputText.setText(text);\n    }\n\n    Button btnCancel = (Button) dialog.findViewById(R.id.btnCancel);\n    // if button is clicked, close the custom dialog\n    btnCancel.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            dialog.dismiss();\n          }\n        });\n\n    Button btnOk = (Button) dialog.findViewById(R.id.btnOk);\n    // if button is clicked, close the custom dialog\n    btnOk.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n\n            String inputText = etInputText.getText().toString().trim();\n\n            Log.w(\"showTextInputDialog into\", \"btnOk: \" + inputText);\n\n            if (!inputText.equalsIgnoreCase(\"\")) {\n\n              circleName = inputText;\n\n              callRenameCircleAPI();\n\n              dialog.dismiss();\n            } else {\n\n              Toast.makeText(context, \"Please input circle name\", 1000).show();\n            }\n          }\n        });\n\n    dialog.show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1751, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 358, "focalAPIEnd": 402, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/duzy/CSipSimple/tree/master/src/com/csipsimple/ui/filters/EditFilter.java", "rawCode": "  private void fillLayout() {\n    // Set action\n    actionSpinner.setSelection(Filter.getPositionForAction(filter.action));\n    RegExpRepresentation repr = filter.getRepresentationForMatcher();\n    // Set matcher - selection must be done first since raise on item change listener\n    matcherSpinner.setSelection(Filter.getPositionForMatcher(repr.type));\n    matchesTextEditor.setText(repr.fieldContent);\n    // Set replace\n    repr = filter.getRepresentationForReplace();\n    replaceSpinner.setSelection(Filter.getPositionForReplace(repr.type));\n    replaceTextEditor.setText(repr.fieldContent);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1752, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.requestFocus()"], "configurationStart": [69], "configurationEnd": [94], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 100, "focalAPIEnd": 122, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pingpongboss/Blind.ly-Messenger/tree/master/src/edu/berkeley/cs169/activity/RecipientInputActivity.java", "rawCode": "  @Override\n  protected void onResume() {\n    super.onResume();\n\n    filterText.requestFocus();\n    filterText.setText(\"\");\n\n    firstVolDown = true;\n    String alert = getResources().getString(R.string.recipient_input_shortcode);\n    app.vibrate(alert);\n\n    String greeting = getResources().getString(R.string.recipient_input_tts);\n    app.speak(greeting);\n\n    AndroidUtils.blankScreen(this);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1753, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.setInputType(int)"], "configurationStart": [521], "configurationEnd": [588], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 594, "focalAPIEnd": 671, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/specialforest/apv/tree/master/pdfview/src/cx/hell/android/pdfview/OpenFileActivity.java", "rawCode": "  /** Called from menu when user want to go to specific page. */\n  private void showGotoPageDialog() {\n    final Dialog d = new Dialog(this);\n    d.setTitle(R.string.goto_page_dialog_title);\n    LinearLayout contents = new LinearLayout(this);\n    contents.setOrientation(LinearLayout.VERTICAL);\n    TextView label = new TextView(this);\n    final int pagecount = this.pdfPagesProvider.getPageCount();\n    label.setText(\"Page number from \" + 1 + \" to \" + pagecount);\n    this.pageNumberInputField = new EditText(this);\n    this.pageNumberInputField.setInputType(InputType.TYPE_CLASS_NUMBER);\n    this.pageNumberInputField.setText(\"\" + (this.pagesView.getCurrentPage() + 1));\n    Button goButton = new Button(this);\n    goButton.setText(R.string.goto_page_go_button);\n    goButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            int pageNumber = -1;\n            try {\n              pageNumber =\n                  Integer.parseInt(OpenFileActivity.this.pageNumberInputField.getText().toString())\n                      - 1;\n            } catch (NumberFormatException e) {\n              /* ignore */\n            }\n            d.dismiss();\n            if (pageNumber >= 0 && pageNumber < pagecount) {\n              OpenFileActivity.this.gotoPage(pageNumber);\n\n            } else {\n              OpenFileActivity.this.errorMessage(\"Invalid page number\");\n            }\n          }\n        });\n    Button page1Button = new Button(this);\n    page1Button.setText(getResources().getString(R.string.page) + \" 1\");\n    page1Button.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            d.dismiss();\n            OpenFileActivity.this.gotoPage(0);\n          }\n        });\n    Button lastPageButton = new Button(this);\n    lastPageButton.setText(getResources().getString(R.string.page) + \" \" + pagecount);\n    lastPageButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            d.dismiss();\n            OpenFileActivity.this.gotoPage(pagecount - 1);\n          }\n        });\n    LinearLayout.LayoutParams params =\n        new LinearLayout.LayoutParams(\n            LinearLayout.LayoutParams.FILL_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);\n    params.leftMargin = 5;\n    params.rightMargin = 5;\n    params.bottomMargin = 2;\n    params.topMargin = 2;\n    contents.addView(label, params);\n    contents.addView(pageNumberInputField, params);\n    contents.addView(goButton, params);\n    contents.addView(page1Button, params);\n    contents.addView(lastPageButton, params);\n    d.setContentView(contents);\n    d.show();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1754, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [331], "configurationEnd": [353], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 595, "focalAPIEnd": 619, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/darklord777/ProyectoCargaAcademica/tree/master/cargaAcademicaEISI/src/sv/ues/fia/cargaacademicaeisi/ActividadAcademicaActualizarActivity.java", "rawCode": "  public void ActualizarActAcademica(View v) {\n    if (!edtActNomAct.getText().toString().trim().equals(\"\")) {\n      Actividad_Academica ActA = new Actividad_Academica();\n      ActA.setIdactacad(spnActIdActAcad.getSelectedItem().toString());\n      ActA.setIdmodalidad(edtidModActA.getText().toString());\n      ActA.setNom_act_acad(edtActNomAct.getText().toString());\n      ActA.setCargo(edtActCargo.getText().toString());\n      helper.abrir();\n      String estado = helper.actualizar(ActA);\n      helper.cerrar();\n      Toast.makeText(this, estado, Toast.LENGTH_LONG).show();\n    } else {\n      edtActNomAct.setText(\"\");\n      edtidModActA.setText(\"\");\n      edtActCargo.setText(\"\");\n      Toast.makeText(this, \"Debe llenarse todos los campos\", Toast.LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1755, "initialization": ["EditText editText = new EditText(Context)"], "initializationStart": [103], "initializationEnd": [124], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 130, "focalAPIEnd": 197, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.getText()"], "useStart": [219], "useEnd": [234], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Rking788/UMaine-iOS-Android/tree/master/UMaine/src/org/umece/android/umaine/Course.java", "rawCode": "  public void createSpannable(Context context) {\n    if (context == null) return;\n    EditText newet = new EditText(context);\n    newet.setText(getDep() + \" \" + getCoursenum() + \" - \" + getTitle());\n    Spannable str = newet.getText();\n\n    if (color != null) {\n      str.setSpan(\n          new ForegroundColorSpan(color.getColor()),\n          0,\n          str.length(),\n          Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n    }\n\n    spannable = str;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1756, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [519], "initializationEnd": [541], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "text!=null&&text.length()>0", "guardType": "IF {", "guardExpressionStart": 549, "guardExpressionEnd": 587, "guardBlockStart": 549, "guardBlockEnd": 672, "focalAPI": " = editText.setText(text)", "focalAPIStart": 598, "focalAPIEnd": 619, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setText(String)"], "useStart": [644], "useEnd": [663], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/cgeo-original/tree/master/src/carnero/cgeo/original/cacheLog.java", "rawCode": "    public void onClick(View arg0) {\n      app.clearLogOffline(geocode);\n\n      if (alreadyFound == true) {\n        typeSelected = Base.LOG_NOTE;\n      } else {\n        typeSelected = types.get(0);\n      }\n      date.setTime(new Date());\n      text = null;\n\n      setType(typeSelected);\n\n      Button dateButton = (Button) findViewById(R.id.date);\n      dateButton.setText(Base.dateOutShort.format(date.getTime()));\n      dateButton.setOnClickListener(new cgeovisitDateListener());\n\n      EditText logView = (EditText) findViewById(R.id.log);\n      if (text != null && text.length() > 0) {\n        logView.setText(text);\n      } else {\n        logView.setText(\"\");\n      }\n\n      if (clear == null) {\n        clear = (Button) findViewById(R.id.clear);\n      }\n      clear.setOnClickListener(new clearListener());\n\n      warning.showToast(res.getString(R.string.info_log_cleared));\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1757, "initialization": ["EditText editText = createMock(*)"], "initializationStart": [253], "initializationEnd": [289], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 296, "focalAPIEnd": 315, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.getText()", "new EditCache(editText,EditText,EditText,EditText)"], "useStart": [502, 850], "useEnd": [514, 894], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sng/gb/tree/master/branches/robertlipe/GeoBeagleTest/test/com/google/code/geobeagle/ui/EditCacheActivityDelegateTest.java", "rawCode": "  @Test\n  public void GeocacheViewGetAndSetTest() {\n    EditText id = PowerMock.createMock(EditText.class);\n    EditText name = PowerMock.createMock(EditText.class);\n    EditText latitude = PowerMock.createMock(EditText.class);\n    EditText longitude = PowerMock.createMock(EditText.class);\n\n    id.setText(\"GC123\");\n    name.setText(\"a cache\");\n    latitude.setText(\"37 30.000\");\n    longitude.setText(\"-122 24.000\");\n    EasyMock.expect(latitude.requestFocus()).andReturn(true);\n\n    EasyMock.expect(id.getText()).andReturn(new StubEditable(\"GC123\"));\n    EasyMock.expect(name.getText()).andReturn(new StubEditable(\"a cache\"));\n    EasyMock.expect(latitude.getText()).andReturn(new StubEditable(\"37 15.50\"));\n    EasyMock.expect(longitude.getText()).andReturn(new StubEditable(\"-122 30.000\"));\n\n    PowerMock.replayAll();\n    EditCache editCache = new EditCache(id, name, latitude, longitude);\n    Geocache geocache = new Geocache(\"GC123\", \"a cache\", 37.5, -122.4, Source.GPX, null);\n    editCache.set(geocache);\n    geocache = editCache.get();\n    assertEquals(\"GC123\", geocache.getId().toString());\n    assertEquals(\"a cache\", geocache.getName().toString());\n    assertEquals(37.25833, geocache.getLatitude(), 0.00001);\n    assertEquals(-122.5, geocache.getLongitude(), 0.0001);\n    PowerMock.verifyAll();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1758, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [541], "initializationEnd": [565], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 627, "focalAPIEnd": 648, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JCERTIFLab/m-domotique/tree/master/mdomotique-android/src/com/jcertif/mdomotique/ihm/Authentification.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.authentification);\n\n    titleTimer = new Timer();\n    mHandler = new Handler();\n\n    mDomotiqueManager = MDomotiqueManager.getInstance();\n\n    connecter = (LinearLayout) findViewById(R.id.connecter);\n    quitter = (LinearLayout) findViewById(R.id.quitter);\n    loading = (LinearLayout) findViewById(R.id.loading);\n    content = (LinearLayout) findViewById(R.id.authentification_menu);\n\n    login = (EditText) findViewById(R.id.login);\n    password = (EditText) findViewById(R.id.password);\n\n    login.setText(\"root\");\n    password.setText(\"root\");\n\n    isSelected = false;\n\n    connecter.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            if (!isSelected) {\n              isSelected = true;\n              enableConnecter();\n            }\n          }\n        });\n\n    quitter.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            if (!isSelected) {\n              isSelected = true;\n              enableQuitter();\n            }\n          }\n        });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1759, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 168, "focalAPIEnd": 189, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gaeeyo/Tuboroidon/tree/master/Tuboroid/src/info/narazaki/android/tuboroid/activity/base/SearchableListActivity.java", "rawCode": "  private void onCanceledSearchBar() {\n    EditText edit_text = getSearchEditView();\n    if (edit_text.getText().length() == 0) {\n      showSearchBar(false);\n    }\n    edit_text.setText(\"\");\n    updateFilter(null);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1760, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [296], "initializationEnd": [325], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.setWidth(int)"], "configurationStart": [331], "configurationEnd": [347], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 353, "focalAPIEnd": 379, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rillian/webrtc/tree/master/webrtc/voice_engine/test/android/android_test/src/org/webrtc/voiceengine/test/AndroidTest.java", "rawCode": "  /** Called when the activity is first created. */\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    TextView tv = (TextView) findViewById(R.id.TextView01);\n    tv.setText(\"\");\n\n    final EditText ed = (EditText) findViewById(R.id.EditText01);\n    ed.setWidth(200);\n    ed.setText(_destinationIP);\n\n    final Button buttonStart = (Button) findViewById(R.id.Button01);\n    buttonStart.setWidth(200);\n    if (_runAutotest) {\n      buttonStart.setText(\"Run test\");\n    } else {\n      buttonStart.setText(\"Start Call\");\n    }\n    // button.layout(50, 50, 100, 40);\n    buttonStart.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View v) {\n\n            if (_runAutotest) {\n              startAutoTest();\n            } else {\n              if (_isCallActive) {\n\n                if (stopCall() != -1) {\n                  _isCallActive = false;\n                  buttonStart.setText(\"Start Call\");\n                }\n              } else {\n\n                _destinationIP = ed.getText().toString();\n                if (startCall() != -1) {\n                  _isCallActive = true;\n                  buttonStart.setText(\"Stop Call\");\n                }\n              }\n            }\n\n            // displayTextFromFile();\n            // recordAudioToFile();\n            // if(!_playFromFile)\n            // {\n            // recAudioInThread();\n            // }\n            // playAudioInThread();\n          }\n        });\n\n    final Button buttonStop = (Button) findViewById(R.id.Button02);\n    buttonStop.setWidth(200);\n    buttonStop.setText(\"Close app\");\n    buttonStop.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View v) {\n\n            if (!_runAutotest) {\n              ShutdownVoE();\n            }\n\n            // This call terminates and should close the activity\n            finish();\n\n            // playAudioFromFile();\n            // if(!_playFromFile)\n            // {\n            // stopRecAudio();\n            // }\n            // stopPlayAudio();\n          }\n        });\n\n    String ap1[] = {\"EC off\", \"AECM\"};\n    final ArrayAdapter<String> adapterAp1 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, ap1);\n    String ap2[] = {\"NS off\", \"NS low\", \"NS moderate\", \"NS high\", \"NS very high\"};\n    final ArrayAdapter<String> adapterAp2 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, ap2);\n    String ap3[] = {\"AGC off\", \"AGC adaptive\", \"AGC fixed\"};\n    final ArrayAdapter<String> adapterAp3 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, ap3);\n    String ap4[] = {\"VAD off\", \"VAD conventional\", \"VAD high rate\", \"VAD mid rate\", \"VAD low rate\"};\n    final ArrayAdapter<String> adapterAp4 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, ap4);\n    String codecs[] = {\"iSAC\", \"PCMU\", \"PCMA\", \"iLBC\"};\n    final ArrayAdapter<String> adapterCodecs =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, codecs);\n\n    final Spinner spinnerSettings1 = (Spinner) findViewById(R.id.Spinner01);\n    final Spinner spinnerSettings2 = (Spinner) findViewById(R.id.Spinner02);\n    spinnerSettings1.setMinimumWidth(200);\n    String settings[] = {\n      \"Codec\",\n      \"Echo Control\",\n      \"Noise Suppression\",\n      \"Automatic Gain Control\",\n      \"Voice Activity Detection\"\n    };\n    ArrayAdapter<String> adapterSettings1 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, settings);\n    spinnerSettings1.setAdapter(adapterSettings1);\n    spinnerSettings1.setOnItemSelectedListener(\n        new AdapterView.OnItemSelectedListener() {\n          public void onItemSelected(AdapterView adapterView, View view, int position, long id) {\n\n            _settingMenu = position;\n            _settingSet = false;\n            if (position == 0) {\n              spinnerSettings2.setAdapter(adapterCodecs);\n              spinnerSettings2.setSelection(_codecIndex);\n            }\n            if (position == 1) {\n              spinnerSettings2.setAdapter(adapterAp1);\n              spinnerSettings2.setSelection(_ecIndex);\n            }\n            if (position == 2) {\n              spinnerSettings2.setAdapter(adapterAp2);\n              spinnerSettings2.setSelection(_nsIndex);\n            }\n            if (position == 3) {\n              spinnerSettings2.setAdapter(adapterAp3);\n              spinnerSettings2.setSelection(_agcIndex);\n            }\n            if (position == 4) {\n              spinnerSettings2.setAdapter(adapterAp4);\n              spinnerSettings2.setSelection(_vadIndex);\n            }\n          }\n\n          public void onNothingSelected(AdapterView adapterView) {\n            WebrtcLog(\"No setting1 selected\");\n          }\n        });\n\n    spinnerSettings2.setMinimumWidth(200);\n    ArrayAdapter<String> adapterSettings2 =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, codecs);\n    spinnerSettings2.setAdapter(adapterSettings2);\n    spinnerSettings2.setOnItemSelectedListener(\n        new AdapterView.OnItemSelectedListener() {\n          public void onItemSelected(AdapterView adapterView, View view, int position, long id) {\n\n            // avoid unintentional setting\n            if (_settingSet == false) {\n              _settingSet = true;\n              return;\n            }\n\n            // Change volume\n            if (_settingMenu == 0) {\n              WebrtcLog(\"Selected audio \" + position);\n              setAudioProperties(position);\n              spinnerSettings2.setSelection(_audioIndex);\n            }\n\n            // Change codec\n            if (_settingMenu == 1) {\n              _codecIndex = position;\n              WebrtcLog(\"Selected codec \" + position);\n              if (0 != SetSendCodec(_channel, _codecIndex)) {\n                WebrtcLog(\"VoE set send codec failed\");\n              }\n            }\n\n            // Change EC\n            if (_settingMenu == 2) {\n              boolean enable = true;\n              int ECmode = 5; // AECM\n              int AESmode = 0;\n\n              _ecIndex = position;\n              WebrtcLog(\"Selected EC \" + position);\n\n              if (position == 0) {\n                enable = false;\n              }\n              if (position > 1) {\n                ECmode = 4; // AES\n                AESmode = position - 1;\n              }\n\n              if (0 != SetECStatus(enable, ECmode)) {\n                WebrtcLog(\"VoE set EC status failed\");\n              }\n            }\n\n            // Change NS\n            if (_settingMenu == 3) {\n              boolean enable = true;\n\n              _nsIndex = position;\n              WebrtcLog(\"Selected NS \" + position);\n\n              if (position == 0) {\n                enable = false;\n              }\n              if (0 != SetNSStatus(enable, position + 2)) {\n                WebrtcLog(\"VoE set NS status failed\");\n              }\n            }\n\n            // Change AGC\n            if (_settingMenu == 4) {\n              boolean enable = true;\n\n              _agcIndex = position;\n              WebrtcLog(\"Selected AGC \" + position);\n\n              if (position == 0) {\n                enable = false;\n                position = 1; // default\n              }\n              if (0 != SetAGCStatus(enable, position + 2)) {\n                WebrtcLog(\"VoE set AGC status failed\");\n              }\n            }\n\n            // Change VAD\n            if (_settingMenu == 5) {\n              boolean enable = true;\n\n              _vadIndex = position;\n              WebrtcLog(\"Selected VAD \" + position);\n\n              if (position == 0) {\n                enable = false;\n                position++;\n              }\n              if (0 != SetVADStatus(_channel, enable, position - 1)) {\n                WebrtcLog(\"VoE set VAD status failed\");\n              }\n            }\n          }\n\n          public void onNothingSelected(AdapterView adapterView) {}\n        });\n\n    // Setup VoiceEngine\n    if (!_runAutotest && !useNativeThread) SetupVoE();\n\n    // Suggest to use the voice call audio stream for hardware volume\n    // controls\n    setVolumeControlStream(AudioManager.STREAM_VOICE_CALL);\n\n    // Get max Android volume and adjust default volume to map exactly to an\n    // Android level\n    AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);\n    _maxVolume = am.getStreamMaxVolume(AudioManager.STREAM_VOICE_CALL);\n    if (_maxVolume <= 0) {\n      WebrtcLog(\"Could not get max volume!\");\n    } else {\n      int androidVolumeLevel = (_volumeLevel * _maxVolume) / 255;\n      _volumeLevel = (androidVolumeLevel * 255) / _maxVolume;\n    }\n\n    WebrtcLog(\"Started Webrtc Android Test\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1761, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [188], "initializationEnd": [220], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 285, "focalAPIEnd": 319, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dzo/packages_apps_mms/tree/master/apptests/src/com/android/mms/tests/SmsSendIntentTestActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.sms_send_intent_test);\n\n    mRecipient = (EditText) findViewById(R.id.sms_recipient);\n    mMessage = (EditText) findViewById(R.id.sms_content);\n\n    mRecipient.setText(\"650-278-2055\"); // use this to prime a number\n\n    Button sendButton = (Button) findViewById(R.id.sms_send_message);\n    sendButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            sendMessage(1, 1);\n          }\n        });\n\n    Button sendMultiButton = (Button) findViewById(R.id.sms_send_multi_message);\n    sendMultiButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            sendMessage(5, 1);\n          }\n        });\n\n    Button sendLongButton = (Button) findViewById(R.id.sms_send_long_message);\n    sendLongButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            sendMessage(1, 10);\n          }\n        });\n\n    Button primeButton = (Button) findViewById(R.id.sms_prime_message);\n    primeButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            mMessage.setText(R.string.sms_long_message);\n          }\n        });\n\n    Button notificationsButton = (Button) findViewById(R.id.turn_off_notification_message);\n    notificationsButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            Intent intent = new Intent(\"com.android.mms.intent.action.MESSAGING_APP_NOTIFICATIONS\");\n            startActivityForResult(intent, NOTIFICATIONS_REQUEST_CODE);\n          }\n        });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1762, "initialization": ["String text = formatNumber(int)"], "initializationStart": [602], "initializationEnd": [622], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 754, "focalAPIEnd": 778, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wuggi/softwareengineering/tree/master/numpicker/src/net/simonvt/numberpicker/NumberPicker.java", "rawCode": "  /**\n   * Updates the view of this NumberPicker. If displayValues were specified in the string\n   * corresponding to the index specified by the current value will be returned. Otherwise, the\n   * formatter specified in {@link #setFormatter} will be used to format the number.\n   *\n   * @return Whether the text was updated.\n   */\n  private boolean updateInputTextView() {\n    /*\n     * If we don't have displayed values then use the current number else\n     * find the correct value in the displayed values for the current\n     * number.\n     */\n    String text =\n        (mDisplayedValues == null) ? formatNumber(mValue) : mDisplayedValues[mValue - mMinValue];\n    if (!TextUtils.isEmpty(text) && !text.equals(mInputText.getText().toString())) {\n      mInputText.setText(text);\n      return true;\n    }\n\n    return false;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1763, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 590, "focalAPIEnd": 655, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setOnClickListener(View.OnClickListener)", "editText.setOnTouchListener(OnTouchListener)", "editText.setTextColor(int)"], "useStart": [661, 708, 755], "useEnd": [702, 749, 796], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/yfli/aSM-clone/tree/master/src/com/athena/asm/fragment/PostListFragment.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    m_inflater = inflater;\n    View postListView = inflater.inflate(R.layout.post_list, null);\n\n    aSMApplication application = (aSMApplication) getActivity().getApplication();\n    m_viewModel = application.getPostListViewModel();\n    m_viewModel.registerViewModelChangeObserver(this);\n\n    this.m_screenHeight = getActivity().getWindowManager().getDefaultDisplay().getHeight();\n\n    m_pageNoEditText = (EditText) postListView.findViewById(R.id.edittext_page_no);\n    m_pageNoEditText.setText(m_viewModel.getCurrentPageNumber() + \"\");\n    m_pageNoEditText.setOnClickListener(this);\n    m_pageNoEditText.setOnTouchListener(this);\n    m_pageNoEditText.setTextColor(Color.GRAY);\n\n    m_firstButton = (Button) postListView.findViewById(R.id.btn_first_page);\n    m_firstButton.setOnClickListener(this);\n    m_lastButton = (Button) postListView.findViewById(R.id.btn_last_page);\n    m_lastButton.setOnClickListener(this);\n    m_preButton = (Button) postListView.findViewById(R.id.btn_pre_page);\n    m_preButton.setOnClickListener(this);\n    m_goButton = (Button) postListView.findViewById(R.id.btn_go_page);\n    m_goButton.setOnClickListener(this);\n    m_goButton.setText(R.string.go_and_last_page);\n    m_nextButton = (Button) postListView.findViewById(R.id.btn_next_page);\n    m_nextButton.setOnClickListener(this);\n\n    m_listView = (ListView) postListView.findViewById(R.id.post_list);\n\n    m_viewModel.setBoardType(getActivity().getIntent().getIntExtra(StringUtility.BOARD_TYPE, 0));\n    m_viewModel.setIsToRefreshBoard(false);\n\n    m_GestureDetector = new GestureDetector(this);\n\n    return postListView;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1764, "initialization": ["EditText editText = new EditText(*)"], "initializationStart": [3120], "initializationEnd": [3142], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["text.substring(int)"], "configurationStart": [1386], "configurationEnd": [1411], "guardCondition": "text!=null && !(text!=null&&text.equals(\"gap_callbackServer:\",)) && !(text!=null&&text.equals(\"gap_init:\",)) && !(text!=null&&text.equals(\"gap_poll:\",)) && !(text!=null&&text.length()>3&&text.substring(0,4,).equals(\"gap:\",))", "guardType": "IF {", "guardExpressionStart": 1172, "guardExpressionEnd": 1312, "guardBlockStart": 1172, "guardBlockEnd": 3913, "focalAPI": " = editText.setText(text)", "focalAPIStart": 3190, "focalAPIEnd": 3217, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AlertDialog.Builder.setView(editText)"], "useStart": [3237], "useEnd": [3255], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/flow5/sdk/tree/master/android/f5framework/com/phonegap/DroidGap.java", "rawCode": "    /**\n     * Tell the client to display a prompt dialog to the user. If the client returns true, WebView\n     * will assume that the client will handle the prompt dialog and call the appropriate\n     * JsPromptResult method.\n     *\n     * <p>Since we are hacking prompts for our own purposes, we should not be using them for this\n     * purpose, perhaps we should hack console.log to do this instead!\n     *\n     * @param view\n     * @param url\n     * @param message\n     * @param defaultValue\n     * @param result\n     */\n    @Override\n    public boolean onJsPrompt(\n        WebView view, String url, String message, String defaultValue, JsPromptResult result) {\n\n      // Security check to make sure any requests are coming from the page initially\n      // loaded in webview and not another loaded in an iframe.\n      boolean reqOk = false;\n      if (url.startsWith(\"file://\")\n          || url.indexOf(this.ctx.baseUrl) == 0\n          || isUrlWhiteListed(url)) {\n        reqOk = true;\n      }\n\n      // Calling PluginManager.exec() to call a native service using\n      // prompt(this.stringify(args), \"gap:\"+this.stringify([service, action, callbackId, true]));\n      if (reqOk\n          && defaultValue != null\n          && defaultValue.length() > 3\n          && defaultValue.substring(0, 4).equals(\"gap:\")) {\n        JSONArray array;\n        try {\n          array = new JSONArray(defaultValue.substring(4));\n          String service = array.getString(0);\n          String action = array.getString(1);\n          String callbackId = array.getString(2);\n          boolean async = array.getBoolean(3);\n          String r = pluginManager.exec(service, action, callbackId, message, async);\n          result.confirm(r);\n        } catch (JSONException e) {\n          e.printStackTrace();\n        }\n      }\n\n      // Polling for JavaScript messages\n      else if (reqOk && defaultValue != null && defaultValue.equals(\"gap_poll:\")) {\n        String r = callbackServer.getJavascript();\n        result.confirm(r);\n      }\n\n      // Calling into CallbackServer\n      else if (reqOk && defaultValue != null && defaultValue.equals(\"gap_callbackServer:\")) {\n        String r = \"\";\n        if (message.equals(\"usePolling\")) {\n          r = \"\" + callbackServer.usePolling();\n        } else if (message.equals(\"restartServer\")) {\n          callbackServer.restartServer();\n        } else if (message.equals(\"getPort\")) {\n          r = Integer.toString(callbackServer.getPort());\n        } else if (message.equals(\"getToken\")) {\n          r = callbackServer.getToken();\n        }\n        result.confirm(r);\n      }\n\n      // PhoneGap JS has initialized, so show webview\n      // (This solves white flash seen when rendering HTML)\n      else if (reqOk && defaultValue != null && defaultValue.equals(\"gap_init:\")) {\n        appView.setVisibility(View.VISIBLE);\n        ctx.spinnerStop();\n        result.confirm(\"OK\");\n      }\n\n      // Show dialog\n      else {\n        final JsPromptResult res = result;\n        AlertDialog.Builder dlg = new AlertDialog.Builder(this.ctx);\n        dlg.setMessage(message);\n        final EditText input = new EditText(this.ctx);\n        if (defaultValue != null) {\n          input.setText(defaultValue);\n        }\n        dlg.setView(input);\n        dlg.setCancelable(false);\n        dlg.setPositiveButton(\n            android.R.string.ok,\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int which) {\n                String usertext = input.getText().toString();\n                res.confirm(usertext);\n              }\n            });\n        dlg.setNegativeButton(\n            android.R.string.cancel,\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int which) {\n                res.cancel();\n              }\n            });\n        dlg.create();\n        dlg.show();\n      }\n      return true;\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1765, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [172], "initializationEnd": [215], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 459, "focalAPIEnd": 514, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.requestFocus()", "editText.selectAll()"], "useStart": [520, 560], "useEnd": [554, 591], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Grupp1/Raddargruppen/tree/master/Raddargruppen/src/raddar/views/EditContactView.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.edit_contact);\n    editContactEditText = (EditText) this.findViewById(R.id.editContactEditText);\n    editContactButton = (Button) this.findViewById(R.id.editContactButton);\n    editContactButton.setOnClickListener(this);\n    cancelButton = (Button) this.findViewById(R.id.editContactCancel);\n    cancelButton.setOnClickListener(this);\n    editContactEditText.setText(ContactListView.nameChoice);\n    editContactEditText.requestFocus();\n    editContactEditText.selectAll();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1766, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [300], "initializationEnd": [339], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 345, "focalAPIEnd": 369, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CommanderAlchemy/SmartPark/tree/master/SmartParkAndroid/src/com/smartpark/activities/LoginActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_login);\n\n    Ref.activeActivity = this;\n\n    // Set up the login form.\n    // mEmail = getIntent().getStringExtra(EXTRA_EMAIL);\n    ssNbrView = (EditText) findViewById(R.id.socialSecurityNumber);\n    ssNbrView.setText(ssNbr);\n\n    passwordView = (EditText) findViewById(R.id.password);\n    passwordView.setOnEditorActionListener(\n        new TextView.OnEditorActionListener() {\n          @Override\n          public boolean onEditorAction(TextView textView, int id, KeyEvent keyEvent) {\n            if (id == R.id.login || id == EditorInfo.IME_NULL) {\n              attemptLogin();\n              return true;\n            }\n            return false;\n          }\n        });\n\n    loginFormView = findViewById(R.id.login_form);\n    loginStatusView = findViewById(R.id.login_status);\n    loginStatusMessageView = (TextView) findViewById(R.id.login_status_message);\n\n    findViewById(R.id.sign_in_button)\n        .setOnClickListener(\n            new View.OnClickListener() {\n              @Override\n              public void onClick(View view) {\n                attemptLogin();\n              }\n            });\n    loginSettings = getSharedPreferences(\"MainPreference\", MODE_PRIVATE);\n    edit = loginSettings.edit();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1767, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 43, "focalAPIEnd": 68, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Termchai/Pos_by_RTT_KU/tree/master/Pos/src/com/gui_tab_catalog/pos/Product_AddItem.java", "rawCode": "  @Override\n  public void onResume() {\n    checkEditText.setText(\"\");\n    super.onResume();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1768, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1430, "focalAPIEnd": 1452, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wanglu0919/chianwuxi_android/tree/master/chinaw/src/com/wuxi/app/activity/homepage/goversaloon/GoverSaloonDetailQZActivity.java", "rawCode": "  @Override\n  public void onClick(View v) {\n    switch (v.getId()) {\n      case R.id.tv_ssmc_name:\n        if (tl_tb_detail.getVisibility() == TableLayout.VISIBLE) {\n          tl_tb_detail.setVisibility(TableLayout.GONE);\n          tv_ssmc_name.setCompoundDrawablesWithIntrinsicBounds(\n              null, null, getResources().getDrawable(R.drawable.gover_item_detail_expa_down), null);\n          // drawableRight\n        } else if (tl_tb_detail.getVisibility() == TableLayout.GONE) {\n          tl_tb_detail.setVisibility(TableLayout.VISIBLE);\n\n          tv_ssmc_name.setCompoundDrawablesWithIntrinsicBounds(\n              null, null, getResources().getDrawable(R.drawable.gover_item_detail_expa_up), null);\n        }\n\n        break;\n      case R.id.btn_zxzx: // 在线咨询\n        if (ll_zxnr.getVisibility() == LinearLayout.GONE) {\n          if (loginDialog.checkLogin()) {\n            ll_zxnr.setVisibility(LinearLayout.VISIBLE);\n          } else {\n            loginDialog.showDialog();\n          }\n\n        } else if (ll_zxnr.getVisibility() == LinearLayout.VISIBLE) {\n          ll_zxnr.setVisibility(LinearLayout.GONE);\n        }\n        break;\n      case R.id.btn_ask_submit: // 在线咨询提交\n        if (et_content.getText().toString().equals(\"\")) {\n          Toast.makeText(this, \"请输入您要提交的内容\", Toast.LENGTH_SHORT).show();\n          return;\n        }\n        commitAsk();\n        break;\n      case R.id.btn_ask_reset: // 在线提交重置\n        et_content.setText(\"\");\n        break;\n      case R.id.iv_lc:\n        if (this.bitmap != null) {\n          Intent intent = new Intent(this, ImageViewScaleActivity.class);\n          intent.putExtra(ImageViewScaleActivity.BITMAP_KEY, bitmap);\n\n          MainTabActivity.instance.addView(intent);\n        }\n        break;\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1769, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 478, "focalAPIEnd": 506, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cookyt/DiceRoller/tree/master/src/com/group5/diceroller/EditSetActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.creator);\n    dice = new ArrayList<Dice>();\n\n    set_position = getIntent().getIntExtra(SetChooserFragment.kIntentItemPosition, -1);\n    Log.i(kTag, \"Position: \" + set_position);\n    if (set_position == -1) finish();\n\n    set = DiceRollerState.getState().diceSets().get(set_position);\n\n    set_name = (EditText) findViewById(R.id.name_text);\n    set_name.setText(set.name());\n\n    modifier = (EditText) findViewById(R.id.modifier);\n    modifier.setText(\"\" + set.modifier);\n\n    for (Dice d : set) dice.add(new Dice(d));\n\n    save_button = (Button) findViewById(R.id.save_button);\n    save_button.setOnClickListener(new SaveClickListener());\n\n    cancel_button = (Button) findViewById(R.id.cancel_button);\n    cancel_button.setOnClickListener(new CancelClickListener());\n\n    delete_button = (Button) findViewById(R.id.delete_button);\n    delete_button.setOnClickListener(new DeleteClickListener());\n\n    Button add_dice = new Button(this);\n    add_dice.setText(\"add\");\n    add_dice.setOnClickListener(new AddDiceClickListener());\n\n    ListView dice_list_view = (ListView) findViewById(R.id.dice_list);\n    dice_list_view.addFooterView(add_dice, null, true);\n\n    dice_adapter = new DiceListAdapter(this, dice);\n    dice_list_view.setAdapter(dice_adapter);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1770, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [261], "initializationEnd": [304], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2959, "focalAPIEnd": 2998, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Nemisis/Sms2HoneyComb/tree/master/src/com/asa/texttotab/tablet/RegisterActivityTab.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.register_activity_tablet);\n\n    registerButton = (Button) findViewById(R.id.register_button_tablet);\n    emailField = (EditText) findViewById(R.id.register_email_field_tab);\n    usernameField = (EditText) findViewById(R.id.register_username_field_tab);\n    passwordField = (EditText) findViewById(R.id.register_password_field_tab);\n\n    prefs = this.getSharedPreferences(Preferences.PREFS_NAME, Context.MODE_PRIVATE);\n    editor = prefs.edit();\n\n    registerButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View view) {\n            String emailText = emailField.getText().toString().trim();\n            String usernameText = usernameField.getText().toString().trim();\n            String passwordText = passwordField.getText().toString().trim();\n            validRegistration = true;\n            mContext = RegisterActivityTab.this;\n\n            // Check if email has whitespace\n            if (Util.containsWhiteSpace(emailText) && validRegistration) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_email);\n            }\n\n            // Check if username has whitespace\n            if (Util.containsWhiteSpace(usernameText) && validRegistration) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_username_whitespace);\n            }\n\n            // Check if email is entered\n            if (emailText.length() == 0 && validRegistration) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_email_none_entered);\n            }\n\n            // Check if username is entered\n            if (usernameText.length() == 0 && validRegistration) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_username_none_entered);\n            }\n\n            // Check if password is entered\n            if (passwordText.length() == 0 && validRegistration) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_password_none_entered);\n            }\n\n            // Check if email is a valid email\n            if (!LoginUtil.isValidEmail(emailText)) {\n              validRegistration = false;\n              LoginUtil.displayLoginToast(mContext, R.string.invalid_email);\n            }\n\n            if (validRegistration) {\n              registrationProgress =\n                  ProgressDialog.show(\n                      mContext,\n                      \"\",\n                      getResources().getString(R.string.dialog_register_message),\n                      true);\n              registerUser(emailText, usernameText, passwordText);\n            }\n          }\n        });\n\n    if (Preferences.DEBUG) {\n      emailField.setText(\"test.@testing.com\");\n      usernameField.setText(\"TestName\");\n      passwordField.setText(\"12345\");\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1771, "initialization": ["EditText editText = new EditText(*)", "EditText editText = new EditText(*)"], "initializationStart": [771, 1851], "initializationEnd": [800, 1880], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2138, "focalAPIEnd": 2175, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["StyledDialog.Builder.setView(editText,boolean,boolean)"], "useStart": [2263], "useEnd": [2310], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/socialpercon/anki/tree/master/src/com/ichi2/anki/DeckPicker.java", "rawCode": "  /** Handles item selections */\n  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    Resources res = getResources();\n\n    switch (item.getItemId()) {\n      case MENU_HELP:\n        showDialog(DIALOG_SELECT_HELP);\n        return true;\n\n      case MENU_SYNC:\n        sync();\n        return true;\n\n      case MENU_ADD_NOTE:\n        addNote();\n        return true;\n\n      case MENU_STATISTICS:\n        showDialog(DIALOG_SELECT_STATISTICS_TYPE);\n        return true;\n\n      case MENU_CARDBROWSER:\n        openCardBrowser();\n        return true;\n\n      case MENU_CREATE_DECK:\n        StyledDialog.Builder builder2 = new StyledDialog.Builder(DeckPicker.this);\n        builder2.setTitle(res.getString(R.string.new_deck));\n\n        mDialogEditText = (EditText) new EditText(DeckPicker.this);\n        // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });\n        builder2.setView(mDialogEditText, false, false);\n        builder2.setPositiveButton(\n            res.getString(R.string.create),\n            new DialogInterface.OnClickListener() {\n\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                String deckName =\n                    mDialogEditText.getText().toString().replaceAll(\"[\\'\\\"\\\\n\\\\r\\\\[\\\\]\\\\(\\\\)]\", \"\");\n                Log.i(AnkiDroidApp.TAG, \"Creating deck: \" + deckName);\n                AnkiDroidApp.getCol().getDecks().id(deckName, true);\n                loadCounts();\n              }\n            });\n        builder2.setNegativeButton(res.getString(R.string.cancel), null);\n        builder2.create().show();\n        return true;\n\n      case MENU_CREATE_DYNAMIC_DECK:\n        StyledDialog.Builder builder3 = new StyledDialog.Builder(DeckPicker.this);\n        builder3.setTitle(res.getString(R.string.new_deck));\n\n        mDialogEditText = (EditText) new EditText(DeckPicker.this);\n        ArrayList<String> names = AnkiDroidApp.getCol().getDecks().allNames();\n        int n = 1;\n        String cramDeckName = \"Cram 1\";\n        while (names.contains(cramDeckName)) {\n          n++;\n          cramDeckName = \"Cram \" + n;\n        }\n        mDialogEditText.setText(cramDeckName);\n        // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });\n        builder3.setView(mDialogEditText, false, false);\n        builder3.setPositiveButton(\n            res.getString(R.string.create),\n            new DialogInterface.OnClickListener() {\n\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                long id =\n                    AnkiDroidApp.getCol().getDecks().newDyn(mDialogEditText.getText().toString());\n                openStudyOptions(id, new Bundle());\n              }\n            });\n        builder3.setNegativeButton(res.getString(R.string.cancel), null);\n        builder3.create().show();\n        return true;\n\n      case MENU_ABOUT:\n        startActivity(new Intent(DeckPicker.this, Info.class));\n        if (AnkiDroidApp.SDK_VERSION > 4) {\n          ActivityTransitionAnimation.slide(DeckPicker.this, ActivityTransitionAnimation.RIGHT);\n        }\n        return true;\n\n      case MENU_ADD_SHARED_DECK:\n        if (AnkiDroidApp.getCol() != null) {\n          SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(getBaseContext());\n          String hkey = preferences.getString(\"hkey\", \"\");\n          if (hkey.length() == 0) {\n            showDialog(DIALOG_USER_NOT_LOGGED_IN_ADD_SHARED_DECK);\n          } else {\n            addSharedDeck();\n          }\n        }\n        return true;\n\n      case MENU_IMPORT:\n        showDialog(DIALOG_IMPORT_HINT);\n        return true;\n\n      case MENU_PREFERENCES:\n        startActivityForResult(new Intent(DeckPicker.this, Preferences.class), PREFERENCES_UPDATE);\n        return true;\n\n      case MENU_FEEDBACK:\n        Intent i = new Intent(DeckPicker.this, Feedback.class);\n        i.putExtra(\"request\", REPORT_FEEDBACK);\n        startActivityForResult(i, REPORT_FEEDBACK);\n        if (AnkiDroidApp.SDK_VERSION > 4) {\n          ActivityTransitionAnimation.slide(this, ActivityTransitionAnimation.RIGHT);\n        }\n        return true;\n\n      case CHECK_DATABASE:\n        integrityCheck();\n        return true;\n\n      case StudyOptionsActivity.MENU_ROTATE:\n        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {\n          this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n        } else {\n          this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n        }\n        return true;\n\n      case StudyOptionsActivity.MENU_NIGHT:\n        SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(this);\n        if (preferences.getBoolean(\"invertedColors\", false)) {\n          preferences.edit().putBoolean(\"invertedColors\", false).commit();\n          item.setIcon(R.drawable.ic_menu_night);\n        } else {\n          preferences.edit().putBoolean(\"invertedColors\", true).commit();\n          item.setIcon(R.drawable.ic_menu_night_checked);\n        }\n        return true;\n\n      case MENU_REUPGRADE:\n        restartUpgradeProcess();\n        return true;\n\n      default:\n        return super.onOptionsItemSelected(item);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1772, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [434], "initializationEnd": [466], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 472, "focalAPIEnd": 511, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pankajc-optimus/android-lib/tree/master/FacebookIntegration/Code/FaceBookApp/src/com/optimus/mobile/GraphInterfaceDialog.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    mHandler = new Handler();\n\n    setContentView(R.layout.graph_api);\n    LayoutParams params = getWindow().getAttributes();\n    params.width = LayoutParams.FILL_PARENT;\n    params.height = LayoutParams.FILL_PARENT;\n    getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);\n\n    mObjectId = (EditText) findViewById(R.id.etGraphObject);\n    mObjectId.setText(Constants.REQUEST_ME);\n    mGraphOutput = (TextView) findViewById(R.id.tvOutput);\n    mSubmitButton = (Button) findViewById(R.id.btnExecuteQuery);\n\n    mSubmitButton.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            ((InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE))\n                .hideSoftInputFromWindow(mObjectId.getWindowToken(), 0);\n            dialog =\n                ProgressDialog.show(\n                    GraphInterfaceDialog.this.activity, \"\", \"Loading Graph Response..\", true, true);\n            Utility.executeGraphAPIRequest(\n                mAsyncRunner, mObjectId.getText().toString(), \"1\", new GraphRequestListener());\n          }\n        });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1773, "initialization": ["EditText editText = findViewById(*)", "String text = getString(*,*)"], "initializationStart": [2102, 2179], "initializationEnd": [2145, 2237], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2247, "focalAPIEnd": 2279, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mattadams/gcmobile/tree/master/src/org/odk/collect/android/activities/FormDownloadList.java", "rawCode": "  @Override\n  protected Dialog onCreateDialog(int id) {\n    switch (id) {\n      case PROGRESS_DIALOG:\n        mProgressDialog = new ProgressDialog(this);\n        DialogInterface.OnClickListener loadingButtonListener =\n            new DialogInterface.OnClickListener() {\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                dialog.dismiss();\n                // we use the same progress dialog for both\n                // so whatever isn't null is running\n                if (mDownloadFormListTask != null) {\n                  mDownloadFormListTask.setDownloaderListener(null);\n                  mDownloadFormListTask.cancel(true);\n                }\n                if (mDownloadFormsTask != null) {\n                  mDownloadFormsTask.cancel(true);\n                  mDownloadFormsTask.setDownloaderListener(null);\n                }\n              }\n            };\n        mProgressDialog.setTitle(getString(R.string.downloading_data));\n        mProgressDialog.setMessage(mAlertMsg);\n        mProgressDialog.setIcon(android.R.drawable.ic_dialog_info);\n        mProgressDialog.setIndeterminate(true);\n        mProgressDialog.setCancelable(false);\n        mProgressDialog.setButton(getString(R.string.cancel), loadingButtonListener);\n        return mProgressDialog;\n      case AUTH_DIALOG:\n        AlertDialog.Builder b = new AlertDialog.Builder(this);\n\n        LayoutInflater factory = LayoutInflater.from(this);\n        final View dialogView = factory.inflate(R.layout.server_auth_dialog, null);\n\n        // Get the server, username, and password from the settings\n        SharedPreferences settings =\n            PreferenceManager.getDefaultSharedPreferences(getBaseContext());\n        String server =\n            settings.getString(\n                PreferencesActivity.KEY_SERVER_URL, getString(R.string.default_server_url));\n\n        final String url =\n            server + settings.getString(PreferencesActivity.KEY_FORMLIST_URL, \"/formList\");\n        Log.i(t, \"Trying to get formList from: \" + url);\n\n        EditText username = (EditText) dialogView.findViewById(R.id.username_edit);\n        String storedUsername = settings.getString(PreferencesActivity.KEY_USERNAME, null);\n        username.setText(storedUsername);\n\n        EditText password = (EditText) dialogView.findViewById(R.id.password_edit);\n        String storedPassword = settings.getString(PreferencesActivity.KEY_PASSWORD, null);\n        password.setText(storedPassword);\n\n        b.setTitle(getString(R.string.server_requires_auth));\n        b.setMessage(getString(R.string.server_auth_credentials, url));\n        b.setView(dialogView);\n        b.setPositiveButton(\n            getString(R.string.ok),\n            new DialogInterface.OnClickListener() {\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                EditText username = (EditText) dialogView.findViewById(R.id.username_edit);\n                EditText password = (EditText) dialogView.findViewById(R.id.password_edit);\n\n                Uri u = Uri.parse(url);\n\n                WebUtils.addCredentials(\n                    username.getText().toString(), password.getText().toString(), u.getHost());\n\n                downloadFormList();\n              }\n            });\n        b.setNegativeButton(\n            getString(R.string.cancel),\n            new DialogInterface.OnClickListener() {\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                finish();\n              }\n            });\n\n        b.setCancelable(false);\n        mAlertShowing = false;\n        return b.create();\n    }\n    return null;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1774, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [314], "initializationEnd": [348], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 354, "focalAPIEnd": 390, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mnlk2-custom/android_packages_apps_Settings/tree/master/src/com/android/settings/UserDictionarySettings.java", "rawCode": "  @Override\n  protected void onPrepareDialog(int id, Dialog d) {\n    AlertDialog dialog = (AlertDialog) d;\n    d.setTitle(\n        mDialogEditingWord != null\n            ? R.string.user_dict_settings_edit_dialog_title\n            : R.string.user_dict_settings_add_dialog_title);\n    EditText editText = (EditText) dialog.findViewById(R.id.edittext);\n    editText.setText(mDialogEditingWord);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1775, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 105, "focalAPIEnd": 131, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ggc-itec/ggc-connect/tree/master/src/edu/ggc/it/directory/DirectoryActivity.java", "rawCode": "    @Override\n    public void onClick(View v) {\n      if (v.getId() == R.id.clearSearchButton) {\n        firstNameField.setText(\"\");\n        lastNameField.setText(\"\");\n      } else if (v.getId() == R.id.saveSearchButton) {\n        filterEmptySearchFields();\n      } else if (v.getId() == R.id.SearchDirectoryButton) {\n        searchName();\n      }\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1776, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [385], "initializationEnd": [423], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["editText.getText()"], "configurationStart": [450], "configurationEnd": [464], "guardCondition": "inputName.trim().equals(text,)", "guardType": "IF {", "guardExpressionStart": 582, "guardExpressionEnd": 619, "guardBlockStart": 582, "guardBlockEnd": 1467, "focalAPI": " = editText.setText(text)", "focalAPIStart": 685, "focalAPIEnd": 706, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setHint(String)", "editText.setHintTextColor(int)"], "useStart": [754, 805], "useEnd": [795, 837], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Rofflarn/Gym-app/tree/master/src/com/Grupp01/gymapp/View/Exercise/ListExerciseActivity.java", "rawCode": "  /**\n   * Listens to the add and cancel button in the dialog\n   *\n   * @param view the view that is clicked\n   */\n  @Override\n  public void onClick(View view) {\n    if (view == ((Button) dialog.findViewById(R.id.add_Button))) {\n      // takes the text from exercise name textfield and puts it to AddExercise intent\n      // if the string is not empty\n      EditText name = (EditText) dialog.findViewById(R.id.exerciseName);\n      String inputName = name.getText().toString().trim();\n      // IF the input is only blank signs, show a hint to the user\n      // to input a name\n      if (inputName.trim().equals(NO_NAME)) {\n        // Clear the input to be able to display hints\n        name.setText(NO_NAME);\n\n        // Show the hint to the user\n        name.setHint(R.string.enter_correct_name);\n        name.setHintTextColor(Color.RED);\n      }\n\n      // Correct name entered, write to database\n      else {\n        // Create a db handler object\n        ListExerciseDbHandler dbHandler = new ListExerciseDbHandler(this);\n        dbHandler.open();\n\n        // Write the new exercise to the database and get the ID in return\n        int id = dbHandler.addExercise(inputName);\n\n        // Open the edit exercise activity and send the new id as intent\n        Intent intentAddExercise = new Intent(this, EditExerciseActivity.class);\n        intentAddExercise.putExtra(EXTRA_EXERCISE_NAME, id);\n        dialog.dismiss();\n        startActivity(intentAddExercise);\n      }\n    }\n\n    // The user pressed Cancel, dismiss dialog\n    else if (view == ((Button) dialog.findViewById(R.id.cancel_Button))) {\n      dialog.dismiss();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1777, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 384, "focalAPIEnd": 415, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Email/tree/master/tests/src/com/android/email/activity/setup/AccountSetupOutgoingTests.java", "rawCode": "  /**\n   * Check password field for a given password. Should be called in UI thread. Confirms that the\n   * password has not been trimmed.\n   *\n   * @param password the password to test with\n   * @param expectNext true if expected that this password will enable the \"next\" button\n   */\n  private void checkPassword(String password, boolean expectNext) throws URISyntaxException {\n    mPasswordView.setText(password);\n    if (expectNext) {\n      assertTrue(mActivity.mNextButtonEnabled);\n    } else {\n      assertFalse(mActivity.mNextButtonEnabled);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1778, "initialization": ["String text = ConfiguracionVortexComm.getHostDelServidor()"], "initializationStart": [255], "initializationEnd": [289], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 295, "focalAPIEnd": 332, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kfgodel/vortex/tree/master/android/VortexComm/src/net/gaia/vortex/comm/ConfigurationActivity.java", "rawCode": "  /**\n   * Intenta cargar los valores actuales para cada uno de los campos desde la configuración\n   *\n   * @param configuracion2\n   */\n  private void cargarValoresDesdeLaConfiguracion(ConfiguracionVortexComm configuracion) {\n    String hostDelServidor = configuracion.getHostDelServidor();\n    this.hostTxt.setText(hostDelServidor);\n\n    String nombreDeUsuario = configuracion.getNombreDeUsuario();\n    this.userTxt.setText(nombreDeUsuario);\n\n    Integer puertoDelServidor = configuracion.getNumeroDePuerto();\n    this.portTxt.setText(String.valueOf(puertoDelServidor));\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1779, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 106, "focalAPIEnd": 126, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Gmote/Gmote/tree/master/gmoteclient/src/org/gmote/client/android/WebBrowser.java", "rawCode": "        @Override\n        public void onPageStarted(WebView view, String url, Bitmap favicon) {\n          urlView.setText(url);\n          goButton.setVisibility(View.GONE);\n          progressView.setVisibility(View.VISIBLE);\n          super.onPageStarted(view, url, favicon);\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1780, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 2533, "focalAPIEnd": 2557, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iametza/Ihesi/tree/master/platforms/android/src/org/apache/cordova/inappbrowser/InAppBrowser.java", "rawCode": "    /**\n     * Notify the host application that a page has started loading.\n     *\n     * @param view The webview initiating the callback.\n     * @param url The url of the page.\n     */\n    @Override\n    public void onPageStarted(WebView view, String url, Bitmap favicon) {\n      super.onPageStarted(view, url, favicon);\n      String newloc = \"\";\n      if (url.startsWith(\"http:\") || url.startsWith(\"https:\") || url.startsWith(\"file:\")) {\n        newloc = url;\n      }\n      // If dialing phone (tel:5551212)\n      else if (url.startsWith(WebView.SCHEME_TEL)) {\n        try {\n          Intent intent = new Intent(Intent.ACTION_DIAL);\n          intent.setData(Uri.parse(url));\n          cordova.getActivity().startActivity(intent);\n        } catch (android.content.ActivityNotFoundException e) {\n          LOG.e(LOG_TAG, \"Error dialing \" + url + \": \" + e.toString());\n        }\n      } else if (url.startsWith(\"geo:\")\n          || url.startsWith(WebView.SCHEME_MAILTO)\n          || url.startsWith(\"market:\")) {\n        try {\n          Intent intent = new Intent(Intent.ACTION_VIEW);\n          intent.setData(Uri.parse(url));\n          cordova.getActivity().startActivity(intent);\n        } catch (android.content.ActivityNotFoundException e) {\n          LOG.e(LOG_TAG, \"Error with \" + url + \": \" + e.toString());\n        }\n      }\n      // If sms:5551212?body=This is the message\n      else if (url.startsWith(\"sms:\")) {\n        try {\n          Intent intent = new Intent(Intent.ACTION_VIEW);\n\n          // Get address\n          String address = null;\n          int parmIndex = url.indexOf('?');\n          if (parmIndex == -1) {\n            address = url.substring(4);\n          } else {\n            address = url.substring(4, parmIndex);\n\n            // If body, then set sms body\n            Uri uri = Uri.parse(url);\n            String query = uri.getQuery();\n            if (query != null) {\n              if (query.startsWith(\"body=\")) {\n                intent.putExtra(\"sms_body\", query.substring(5));\n              }\n            }\n          }\n          intent.setData(Uri.parse(\"sms:\" + address));\n          intent.putExtra(\"address\", address);\n          intent.setType(\"vnd.android-dir/mms-sms\");\n          cordova.getActivity().startActivity(intent);\n        } catch (android.content.ActivityNotFoundException e) {\n          LOG.e(LOG_TAG, \"Error sending sms \" + url + \":\" + e.toString());\n        }\n      } else {\n        newloc = \"http://\" + url;\n      }\n\n      if (!newloc.equals(edittext.getText().toString())) {\n        edittext.setText(newloc);\n      }\n\n      try {\n        JSONObject obj = new JSONObject();\n        obj.put(\"type\", LOAD_START_EVENT);\n        obj.put(\"url\", newloc);\n\n        sendUpdate(obj, true);\n      } catch (JSONException ex) {\n        Log.d(LOG_TAG, \"Should never happen\");\n      }\n    }\n"}, {"dataset": "editTextSetText", "exampleID": 1781, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1144, "focalAPIEnd": 1164, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.requestFocus()", "showSoftInput(editText,int)"], "useStart": [1183, 1224], "useEnd": [1206, 1333], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/HUSTDAVID/wuhan-dm/tree/master/src/src/com/wh/dm/activity/NewsMoreReplyActivity.java", "rawCode": "        @Override\n        public void handleMessage(android.os.Message msg) {\n\n          switch (msg.what) {\n            case MSG_GET_COMMENT:\n              if (getCommentTask != null) {\n                getCommentTask.cancel(true);\n                getCommentTask = null;\n              }\n              getCommentTask = new GetCommentTask();\n              getCommentTask.execute(id);\n              break;\n            case MSG_PUSH_TOP:\n              Bundle bundle = msg.getData();\n              PushTopTask pushTopTask = new PushTopTask();\n              pushTopTask.execute(bundle.getString(\"fid\"));\n\n              break;\n            case MSG_REPLY:\n              Bundle bundle1 = msg.getData();\n              isReply = bundle1.getBoolean(\"isReply\");\n              if (isReply) {\n\n                ReplyTask replyTask = new ReplyTask();\n                replyTask.execute(fid);\n                isReview = true;\n\n              } else {\n                fid = bundle1.getString(\"fid\");\n                isReview = false;\n                bottomLayout1.setVisibility(View.GONE);\n                bottomLayout2.setVisibility(View.VISIBLE);\n                edtReply.setText(\"\");\n\n                edtReply.requestFocus();\n                ((InputMethodManager) getSystemService(INPUT_METHOD_SERVICE))\n                    .showSoftInput(edtReply, 0);\n              }\n\n              break;\n            case MSG_REVIEW:\n              String str = getFcontent();\n              if (!TextUtil.isEmpty(getFcontent())) {\n                ReviewTask reviewTask = new ReviewTask();\n                reviewTask.execute(getFcontent());\n              } else {\n                NotificationUtil.showShortToast(\n                    getString(R.string.review_null), NewsMoreReplyActivity.this);\n              }\n              break;\n            case MSF_ADD_FAV:\n              if (addFavTask != null) {\n                addFavTask.cancel(true);\n                addFavTask = null;\n              }\n              addFavTask = new AddFavTask();\n              addFavTask.execute(id);\n              break;\n          }\n        };\n"}, {"dataset": "editTextSetText", "exampleID": 1782, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 135, "focalAPIEnd": 157, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setVisibility(*)"], "useStart": [163], "useEnd": [201], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arlyxiao/spanish_talk_android/tree/master/src/com/example/spanishtalk/ContactActivity.java", "rawCode": "  public void clearPhoneNumber(View view) {\n    vContactTitle.setVisibility(View.GONE);\n    progressBar.setVisibility(View.GONE);\n\n    vSearchBtn.setText(\"\");\n    vSearchBtn.setVisibility(View.VISIBLE);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1783, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 187, "focalAPIEnd": 211, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setText(String)"], "useStart": [265], "useEnd": [299], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sisbell/email/tree/master/tests/src/com/android/email/activity/setup/AccountSetupOutgoingTests.java", "rawCode": "  /** Test for non-empty but non-OK server names */\n  @UiThreadTest\n  public void testBadServerVariants() {\n    getActivityAndFields();\n    assertTrue(mActivity.mNextButtonEnabled);\n\n    mServerView.setText(\" \");\n    assertFalse(mActivity.mNextButtonEnabled);\n\n    mServerView.setText(\"serv$er.com\");\n    assertFalse(mActivity.mNextButtonEnabled);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1784, "initialization": ["String text = getStringExtra(*)", "EditText editText = findViewById(*)"], "initializationStart": [57, 134], "initializationEnd": [97, 172], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 178, "focalAPIEnd": 199, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DerekV/Bookie-Android/tree/master/src/main/java/us/bmark/android/NewBookmarkActivity.java", "rawCode": "  private void handleSendText(Intent intent) {\n    url = intent.getStringExtra(Intent.EXTRA_TEXT);\n    EditText uriField = (EditText) findViewById(R.id.newBookmarkUrlField);\n    uriField.setText(url);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1785, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 83, "focalAPIEnd": 105, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pingpongboss/Blind.ly-Messenger/tree/master/src/edu/berkeley/cs169/activity/RecipientInputActivity.java", "rawCode": "  public void onAdapterEmpty() {\n    app.output(\"No matches. Starting over.\");\n    filterText.setText(\"\");\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1786, "initialization": ["EditText editText = new EditText(*)"], "initializationStart": [176], "initializationEnd": [194], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 282, "focalAPIEnd": 410, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/tests/HwAccelerationTest/src/com/android/test/hwui/SimplePathsActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    FrameLayout layout = new FrameLayout(this);\n    EditText text = new EditText(this);\n    layout.addView(text, new FrameLayout.LayoutParams(600, 350, Gravity.CENTER));\n    text.setText(\n        \"This is an example of an EditText widget \\n\"\n            + \"using simple paths to create the selection.\");\n    // text.setSelection(0, text.getText().length());\n\n    setContentView(layout);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1787, "initialization": ["String text = SharedPreferences.getString(String,String)", "EditText editText = findViewById(*)"], "initializationStart": [283, 394], "initializationEnd": [332, 419], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 425, "focalAPIEnd": 453, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/galievruslan/mss-android/tree/master/mss/src/com/mss/application/LoginActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_login);\n\n    SharedPreferences sharedPreferences =\n        PreferenceManager.getDefaultSharedPreferences(getBaseContext());\n    mServer = sharedPreferences.getString(\"server_address\", \"\");\n\n    // Set up the login form.\n    mServerView = (EditText) findViewById(R.id.server);\n    mServerView.setText(mServer);\n\n    mLoginView = (EditText) findViewById(R.id.login);\n    mLoginView.setText(mLogin);\n\n    mPasswordView = (EditText) findViewById(R.id.password);\n    mPasswordView.setOnEditorActionListener(\n        new TextView.OnEditorActionListener() {\n          public boolean onEditorAction(TextView textView, int id, KeyEvent keyEvent) {\n            if (id == R.id.login || id == EditorInfo.IME_NULL) {\n              attemptLogin();\n              return true;\n            }\n            return false;\n          }\n        });\n\n    mLoginFormView = findViewById(R.id.login_form);\n    mLoginStatusView = findViewById(R.id.login_status);\n    mLoginStatusMessageView = (TextView) findViewById(R.id.login_status_message);\n\n    findViewById(R.id.sign_in_button)\n        .setOnClickListener(\n            new View.OnClickListener() {\n              public void onClick(View view) {\n                attemptLogin();\n              }\n            });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1788, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 647, "focalAPIEnd": 667, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gakshay/edakia_android/tree/master/src/com/gakshay/android/edakia/ChangePassword.java", "rawCode": "        public void handleMessage(Message msg) {\n          super.handleMessage(msg);\n          progressDialog.dismiss();\n          // initialize error text value to null.\n          TextView text = (TextView) findViewById(R.id.Error);\n          text.setText(null);\n\n          ((ImageView) findViewById(R.id.errImgMobile)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgOldPwd)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgNewPwd)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgNewPwdAgn)).setVisibility(ImageView.INVISIBLE);\n\n          oldPwd.setText(null);\n          newPwd.setText(null);\n          newPwdAgain.setText(null);\n\n          Intent homeIntent = new Intent(getApplicationContext(), Edakia.class);\n          homeIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n          homeIntent.putExtra(\"showResultDialogBox\", \"true\");\n          homeIntent.putExtra(\"transactionType\", \"chngPwd\");\n\n          if (\"Exception\".equalsIgnoreCase(chngPwdResp)) {\n            text.setText(getString(R.string.errorDialogMsg));\n\n            homeIntent.putExtra(\"isError\", \"true\");\n            homeIntent.putExtra(\"errorMessageText\", getString(R.string.errorDialogMsg));\n\n          } else if (chngPwdResp != null && chngPwdResp.contains(\"error\")) {\n            homeIntent.putExtra(\"isError\", \"true\");\n            homeIntent.putExtra(\n                \"errorMessageText\",\n                ActivitiesHelper.fetchValuesFromReponse(chngPwdResp).get(\"error\"));\n          } else {\n            homeIntent.putExtra(\"isError\", \"false\");\n          }\n\n          startActivity(homeIntent);\n          finish();\n        }\n"}, {"dataset": "editTextSetText", "exampleID": 1789, "initialization": ["EditText editText = new EditText(*)"], "initializationStart": [1023], "initializationEnd": [1050], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1058, "focalAPIEnd": 1112, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AlertDialog.Builder.setView(editText)"], "useStart": [1120], "useEnd": [1136], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teamgummy/packages_apps_Settings/tree/master/src/com/android/settings/SystemUITweaksNS.java", "rawCode": "  public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {\n    boolean value;\n    if (preference == mHideAlarm) {\n      value = mHideAlarm.isChecked();\n      Settings.System.putInt(getContentResolver(), Settings.System.HIDE_ALARM, value ? 1 : 0);\n      return true;\n    } else if (preference == mBattText) {\n      value = mBattText.isChecked();\n      Settings.System.putInt(getContentResolver(), Settings.System.BATTERY_TEXT, value ? 1 : 0);\n      updateBatteryTextToggle(value);\n      return true;\n    } else if (preference == mBattBar) {\n      value = mBattBar.isChecked();\n      Settings.System.putInt(\n          getContentResolver(), Settings.System.STATUSBAR_BATTERY_BAR, value ? 1 : 0);\n      updateBatteryBarToggle(value);\n      return true;\n    } else if (preference == mCarrier) {\n      AlertDialog.Builder ad = new AlertDialog.Builder(getActivity());\n      ad.setTitle(\"Custom Carrier Text\");\n      ad.setMessage(\"Enter new carrier text here\");\n      final EditText text = new EditText(getActivity());\n      text.setText(mCarrierText != null ? mCarrierText : \"\");\n      ad.setView(text);\n      ad.setPositiveButton(\n          \"Ok\",\n          new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int whichButton) {\n              String value = ((Spannable) text.getText()).toString();\n              Settings.System.putString(\n                  getActivity().getContentResolver(), Settings.System.CUSTOM_CARRIER_TEXT, value);\n              updateCarrierText();\n            }\n          });\n      ad.setNegativeButton(\n          \"Cancel\",\n          new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialog, int whichButton) {}\n          });\n      ad.show();\n    }\n    return false;\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1790, "initialization": ["EditText editText = findViewById(*)", "String text = getString(*,String)"], "initializationStart": [749, 814], "initializationEnd": [782, 846], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "text!=\"\"", "guardType": "IF {", "guardExpressionStart": 852, "guardExpressionEnd": 879, "guardBlockStart": 852, "guardBlockEnd": 920, "focalAPI": " = editText.setText(text)", "focalAPIStart": 880, "focalAPIEnd": 919, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nhvtgd/MITBAY/tree/master/src/com/login/LogIn.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_log_in);\n    // set navigating icon\n    ActionBar actionBar = getActionBar();\n    actionBar.setHomeButtonEnabled(true);\n    // Animation\n    makeAnimation();\n    // SharedPreferences\n    settings = getSharedPreferences(SETTING, 0);\n    prefEditor = settings.edit();\n    errorMessage = (TextView) findViewById(R.id.signInErrorMassage);\n    // Parse Initialization\n    Parse.initialize(\n        this,\n        \"2TGrIyvNfLwNy3kM8OnZLAQGtSW2f6cR3k9oxHak\",\n        \"Y8xlSKdSilJBepTNIJqthpbJ9KeppDWCdNUQdYFX\");\n    // Check Remember the last password\n    // Email Address\n    EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n    String previousUserName = settings.getString(USERNAME, \"\");\n    if (previousUserName != \"\") usernameField.setText(previousUserName);\n    // Password\n    EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n    String previousPassword = settings.getString(PASSWORD, \"\");\n    if (previousPassword != \"\") passwordField.setText(previousPassword);\n    // Confirm Button\n    confirm = (Button) findViewById(R.id.signInConfirmButton);\n    confirm.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            if (System.currentTimeMillis() - timeClick < 1000) return;\n            else timeClick = System.currentTimeMillis();\n            ((TextView) findViewById(R.id.signInErrorMassage)).setText(\"\");\n            // Email Address\n            EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n            username = usernameField.getText().toString();\n            // Password\n            EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n            password = passwordField.getText().toString();\n            // Update\n            isValidLogIn(username, password);\n          }\n        });\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1791, "initialization": ["EditText editText = new EditText(*)", "String text = File.getName()", "String text = toString()", "String text = File.getName()"], "initializationStart": [3447, 3538, 3594, 3761], "initializationEnd": [3465, 3560, 3742, 3783], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 3794, "focalAPIEnd": 3818, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Mikuz/Boarder/tree/master/src/fi/mikuz/boarder/gui/FileExplorer.java", "rawCode": "  @Override\n  protected void onListItemClick(ListView l, View v, int position, long id) {\n\n    final File selectedFile = new File(mPath.get(position));\n\n    if (selectedFile.isDirectory()) {\n      if (selectedFile.canRead()) getDir(mPath.get(position));\n      else {\n        Toast msg = Toast.makeText(this, \"Can't read \" + selectedFile.getName(), Toast.LENGTH_LONG);\n        msg.show();\n      }\n    } else {\n      final String action = getIntent().getExtras().getString(FileExplorer.EXTRA_ACTION_KEY);\n\n      if (action.equals(FileExplorer.ACTION_SELECT_BACKGROUND_FILE)) {\n        try {\n          new Canvas().drawBitmap(ImageDrawing.decodeFile(null, selectedFile), 0, 0, null);\n\n          Bundle bundle = new Bundle();\n          bundle.putString(\n              FileExplorer.ACTION_SELECT_BACKGROUND_FILE,\n              selectedFile.getAbsoluteFile().toString());\n\n          Intent intent = new Intent();\n          intent.putExtras(bundle);\n\n          setResult(RESULT_OK, intent);\n          finish();\n        } catch (NullPointerException e) {\n          Toast msg =\n              Toast.makeText(this, \"Can't draw \" + selectedFile.getName(), Toast.LENGTH_LONG);\n          msg.show();\n        }\n\n      } else if (action.equals(FileExplorer.ACTION_SELECT_SOUND_IMAGE_FILE)) {\n        try {\n          new Canvas().drawBitmap(ImageDrawing.decodeFile(null, selectedFile), 0, 0, null);\n\n          Bundle bundle = new Bundle();\n          bundle.putString(\n              FileExplorer.ACTION_SELECT_SOUND_IMAGE_FILE,\n              selectedFile.getAbsoluteFile().toString());\n\n          Intent intent = new Intent();\n          intent.putExtras(bundle);\n\n          setResult(RESULT_OK, intent);\n          finish();\n        } catch (NullPointerException e) {\n          Toast msg =\n              Toast.makeText(this, \"Can't draw \" + selectedFile.getName(), Toast.LENGTH_LONG);\n          msg.show();\n        }\n\n      } else if (action.equals(FileExplorer.ACTION_SELECT_SOUND_ACTIVE_IMAGE_FILE)) {\n        try {\n          new Canvas()\n              .drawBitmap(BitmapFactory.decodeFile(selectedFile.getAbsolutePath()), 0, 0, null);\n\n          Bundle bundle = new Bundle();\n          bundle.putString(\n              FileExplorer.ACTION_SELECT_SOUND_ACTIVE_IMAGE_FILE,\n              selectedFile.getAbsoluteFile().toString());\n\n          Intent intent = new Intent();\n          intent.putExtras(bundle);\n\n          setResult(RESULT_OK, intent);\n          finish();\n        } catch (NullPointerException e) {\n          Toast msg =\n              Toast.makeText(this, \"Can't draw \" + selectedFile.getName(), Toast.LENGTH_LONG);\n          msg.show();\n        }\n\n      } else if (action.equals(FileExplorer.ACTION_CHANGE_SOUND_PATH)) {\n        Bundle bundle = new Bundle();\n        bundle.putString(\n            FileExplorer.ACTION_CHANGE_SOUND_PATH, selectedFile.getAbsoluteFile().toString());\n\n        Intent intent = new Intent();\n        intent.putExtras(bundle);\n\n        setResult(RESULT_OK, intent);\n        finish();\n\n      } else {\n\n        AlertDialog.Builder alert = new AlertDialog.Builder(this);\n\n        alert.setTitle(\"Set name for sound\");\n\n        if (selectedFile.getAbsolutePath().toString().equals(SoundboardMenu.mPauseSoundFilePath)) {\n          alert.setMessage(\"Pauses or resumes playing sounds when activated.\");\n        } else {\n          alert.setMessage(selectedFile.getAbsolutePath().toString());\n        }\n\n        final EditText input = new EditText(this);\n        alert.setView(input);\n\n        String inputText =\n            (selectedFile.getName().contains(\".\"))\n                ? selectedFile\n                    .getName()\n                    .subSequence(0, selectedFile.getName().indexOf(\".\"))\n                    .toString()\n                : selectedFile.getName();\n\n        input.setText(inputText);\n\n        alert.setPositiveButton(\n            \"Ok\",\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int whichButton) {\n\n                Bundle bundle = new Bundle();\n\n                if (action.equals(FileExplorer.ACTION_ADD_GRAPHICAL_SOUND)) {\n                  GraphicalSound sound = new GraphicalSound();\n                  sound.setName(input.getText().toString());\n                  sound.setPath(selectedFile.getAbsoluteFile());\n                  sound.setNameFrameX(50);\n                  sound.setNameFrameY(50);\n                  Bitmap image = BitmapFactory.decodeResource(getResources(), R.drawable.sound);\n                  sound.setImageWidthHeight(\n                      getApplicationContext(), image.getHeight(), image.getHeight());\n\n                  XStream xstream = XStreamUtil.graphicalBoardXStream();\n                  bundle.putString(FileExplorer.ACTION_ADD_GRAPHICAL_SOUND, xstream.toXML(sound));\n                }\n\n                Intent intent = new Intent();\n                intent.putExtras(bundle);\n\n                setResult(RESULT_OK, intent);\n                finish();\n              }\n            });\n\n        alert.setNegativeButton(\n            \"Cancel\",\n            new DialogInterface.OnClickListener() {\n              public void onClick(DialogInterface dialog, int whichButton) {}\n            });\n\n        alert.show();\n      }\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1792, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 800, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setText(String)", "editText.setText(String)", "editText.setText(String)", "editText.setText(String)", "editText.setText(String)"], "useStart": [906, 1012, 1118, 1224, 1331], "useEnd": [924, 1030, 1136, 1242, 1349], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jonathanws/WavyLeaf_android/tree/master/src/com/towson/wavyleaf/Sighting.java", "rawCode": "  public void onToggle(View view) {\n\n    // loop through all children in radiogroup. In this case, two lin layouts\n    for (int i = 0; i < rg.getChildCount(); i++) {\n      View child = rg.getChildAt(i);\n\n      // if child is lin layout (we already know all children are lin layouts)\n      if (child instanceof LinearLayout) {\n\n        // then loop through three toggles\n        for (int j = 0; j < ((ViewGroup) child).getChildCount(); j++) {\n          final ToggleButton tog = (ToggleButton) ((ViewGroup) child).getChildAt(j);\n\n          // have only one togglebutton selected at one time\n          if (tog != view) tog.setChecked(false);\n        }\n      }\n    }\n\n    // Determine text to set to textview\n    switch (view.getId()) {\n      case R.id.bu_1:\n        tvper_summary.setText(\"0%\");\n        etarea.setText(\"0\");\n        break;\n      case R.id.bu_2:\n        tvper_summary.setText(\"1-10%\");\n        etarea.setText(\"\");\n        break;\n      case R.id.bu_3:\n        tvper_summary.setText(\"10-25%\");\n        etarea.setText(\"\");\n        break;\n      case R.id.bu_4:\n        tvper_summary.setText(\"25-50%\");\n        etarea.setText(\"\");\n        break;\n      case R.id.bu_5:\n        tvper_summary.setText(\"50-75%\");\n        etarea.setText(\"\");\n        break;\n      case R.id.bu_6:\n        tvper_summary.setText(\"75-100%\");\n        etarea.setText(\"\");\n        break;\n      default:\n        tvper_summary.setText(\"\");\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1793, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 43, "focalAPIEnd": 66, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sharenav/sharenav/tree/master/src/net/sharenav/sharenav/ui/TextEditField.java", "rawCode": "  public void setString(String text) {\n    textField.setText(text);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1794, "initialization": ["EditText editText = findViewById(*)", "String text = getStringExtra(*)"], "initializationStart": [730, 793], "initializationEnd": [764, 848], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "text!=null&&text.length()>0", "guardType": "IF {", "guardExpressionStart": 854, "guardExpressionEnd": 908, "guardBlockStart": 854, "guardBlockEnd": 1021, "focalAPI": " = editText.setText(text)", "focalAPIStart": 979, "focalAPIEnd": 1014, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setOnKeyListener(View.OnKeyListener)"], "useStart": [1026], "useEnd": [1069], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ax003d/sichu_android/tree/master/submodules/android/src/com/google/zxing/client/android/book/SearchBookContentsActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    // Make sure that expired cookies are removed on launch.\n    CookieSyncManager.createInstance(this);\n    CookieManager.getInstance().removeExpiredCookie();\n\n    Intent intent = getIntent();\n    if (intent == null || !intent.getAction().equals(Intents.SearchBookContents.ACTION)) {\n      finish();\n      return;\n    }\n\n    isbn = intent.getStringExtra(Intents.SearchBookContents.ISBN);\n    if (LocaleManager.isBookSearchUrl(isbn)) {\n      setTitle(getString(R.string.sbc_name));\n    } else {\n      setTitle(getString(R.string.sbc_name) + \": ISBN \" + isbn);\n    }\n\n    setContentView(R.layout.search_book_contents);\n    queryTextView = (EditText) findViewById(R.id.query_text_view);\n\n    String initialQuery = intent.getStringExtra(Intents.SearchBookContents.QUERY);\n    if (initialQuery != null && initialQuery.length() > 0) {\n      // Populate the search box but don't trigger the search\n      queryTextView.setText(initialQuery);\n    }\n    queryTextView.setOnKeyListener(keyListener);\n\n    queryButton = (Button) findViewById(R.id.query_button);\n    queryButton.setOnClickListener(buttonListener);\n\n    resultListView = (ListView) findViewById(R.id.result_list_view);\n    LayoutInflater factory = LayoutInflater.from(this);\n    headerView =\n        (TextView) factory.inflate(R.layout.search_book_contents_header, resultListView, false);\n    resultListView.addHeaderView(headerView);\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1795, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 93, "focalAPIEnd": 116, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/embest-tech/rowboat-frameworks-base/tree/master/core/java/android/widget/AbsListView.java", "rawCode": "  /** Clear the text filter. */\n  public void clearTextFilter() {\n    if (mFiltered) {\n      mTextFilter.setText(\"\");\n      mFiltered = false;\n      if (mPopup != null && mPopup.isShowing()) {\n        dismissPopup();\n      }\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1796, "initialization": ["String text = ProfileModel.getProfileName()"], "initializationStart": [66], "initializationEnd": [90], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 156, "focalAPIEnd": 183, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vogtp/android-CPU-tuner/tree/master/src/ch/amana/android/cputuner/view/activity/ProfileEditor.java", "rawCode": "  @Override\n  public void updateView() {\n    String profileName = profile.getProfileName();\n    if (!ProfileModel.NO_VALUE_STR.equals(profileName)) {\n      etName.setText(profileName);\n    }\n    cpuFrequencyChooser.setMaxCpuFreq(profile.getMaxFreq());\n    cpuFrequencyChooser.setMinCpuFreq(profile.getMinFreq());\n    spWifi.setSelection(profile.getWifiState());\n    spGps.setSelection(profile.getGpsState());\n    spBluetooth.setSelection(profile.getBluetoothState());\n    spMobileData3G.setSelection(profile.getMobiledata3GState());\n    spMobileDataConnection.setSelection(profile.getMobiledataConnectionState());\n    spSync.setSelection(profile.getBackgroundSyncState());\n    spAirplaneMode.setSelection(profile.getAirplainemodeState());\n\n    GovernorConfig governorConfig = GovernorConfigHelper.getGovernorConfig(profile.getGov());\n    if (governorConfig.hasNewLabelCpuFreqMax()) {\n      labelCpuFreqMax.setText(governorConfig.getNewLabelCpuFreqMax(this));\n    } else {\n      labelCpuFreqMax.setText(R.string.labelMax);\n    }\n    if (governorConfig.hasMinFrequency()) {\n      trMinFreq.setVisibility(View.VISIBLE);\n    } else {\n      trMinFreq.setVisibility(View.GONE);\n    }\n    if (governorConfig.hasMaxFrequency()) {\n      trMaxFreq.setVisibility(View.VISIBLE);\n    } else {\n      trMaxFreq.setVisibility(View.GONE);\n    }\n\n    if (SettingsStorage.getInstance().isAllowManualServiceChanges()) {\n      tvWarningManualServiceChanges.setVisibility(View.VISIBLE);\n      tvWarningManualServiceChanges.setText(R.string.msg_warning_manual_service_switches);\n      tvWarningManualServiceChanges.setTextColor(Color.YELLOW);\n    } else {\n      tvWarningManualServiceChanges.setVisibility(View.GONE);\n    }\n    if (!SettingsStorage.getInstance().isSwitchWifiOnConnectedNetwork()) {\n      tvWarningWifiConnected.setVisibility(View.VISIBLE);\n      tvWarningWifiConnected.setText(R.string.msg_warning_not_switch_wifi_connected);\n      tvWarningWifiConnected.setTextColor(Color.YELLOW);\n    } else {\n      tvWarningWifiConnected.setVisibility(View.GONE);\n    }\n    governorFragment.updateView();\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1797, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["printStackTrace()"], "tryExpressionStart": 83, "tryExpressionEnd": 87, "tryBlockStart": 83, "tryBlockEnd": 1892, "catchExpressionStart": 1806, "catchExpressionEnd": 1826, "catchBlockStart": 1806, "catchBlockEnd": 1892, "exceptionHandlingCallStart": [1866], "exceptionHandlingCallEnd": [1885], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 1697, "focalAPIEnd": 1741, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thiendamvam/WhyQ/tree/master/Code/src/whyq/activity/WhyqShareActivity.java", "rawCode": "  public void onActivityResult(int requestCode, int resultCode, Intent data) {\n    try {\n\n      Log.d(\"onActivityResult Join\", \"onActivityResult \" + requestCode);\n      if (session != null\n          && session.onActivityResult(this, requestCode, resultCode, data)\n          && pendingRequest\n          && this.session.getState().isOpened()) {\n\n        Log.d(\"onActivityResult\", \"isSend \" + isSend);\n        if (isSend) {\n          shareWhyq(session.getAccessToken());\n        } else {\n          if (isComment) {\n            exePostFacebook(session.getAccessToken());\n          } else {\n            if (isTag) {\n              showTagDialog(session.getAccessToken());\n            } else {\n              exePostFacebook(session.getAccessToken());\n            }\n          }\n        }\n\n      } else if (resultCode == RESULT_OK) {\n        if (requestCode == GET_IMAGE) {\n          avatarPath = data.getStringExtra(\"path\");\n          Log.d(\"onActivityResult Join\", \"\" + avatarPath);\n          if (avatarPath != null) {\n            File imgFile = new File(avatarPath);\n            if (imgFile.exists()) {\n              // btnCaptureImage.setImageURI(Uri.fromFile(imgFile));\n\n              UrlImageViewHelper.setUrlDrawable(btnCaptureImage, avatarPath);\n            }\n          }\n        } else if (requestCode == TAG_FRIENDS) {\n          TransferData tfdata = (TransferData) data.getSerializableExtra(\"data\");\n          if (tfdata != null) {\n            facebookIdTag = convertData(tfdata.getData());\n            facebookNameTag = convertFBNameData(tfdata.getData());\n            tagsList = convertDataToFBIDArray(tfdata.getData());\n          }\n          // shareWhyq(session.getAccessToken());\n          etMessage.setText(\"With \" + facebookNameTag);\n        }\n        ImageActivity.imagePath = \"\";\n      }\n\n    } catch (Exception e) {\n      // TODO: handle exception\n      e.printStackTrace();\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1798, "initialization": ["EditText editText = getEditText()"], "initializationStart": [290], "initializationEnd": [303], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "editText!=null", "guardType": "IF {", "guardExpressionStart": 474, "guardExpressionEnd": 495, "guardBlockStart": 474, "guardBlockEnd": 1062, "focalAPI": " = editText.setText(text)", "focalAPIStart": 820, "focalAPIEnd": 850, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editText.setMovementMethod(*)", "editText.setKeyListener(KeyListener)", "editText.setOnFocusChangeListener(View.OnFocusChangeListener)"], "useStart": [858, 930, 994], "useEnd": [922, 986, 1055], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamSourcery/packages_apps_Phone/tree/master/src/com/android/phone/EditPhoneNumberPreference.java", "rawCode": "  @Override\n  protected void onBindDialogView(View view) {\n    // default the button clicked to be the cancel button.\n    mButtonClicked = DialogInterface.BUTTON_NEGATIVE;\n\n    super.onBindDialogView(view);\n\n    // get the edittext component within the number field\n    EditText editText = getEditText();\n    // get the contact pick button within the number field\n    mContactPickButton = (ImageButton) view.findViewById(R.id.select_contact);\n\n    // setup number entry\n    if (editText != null) {\n      // see if there is a means to get a default number,\n      // and set it accordingly.\n      if (mGetDefaultNumberListener != null) {\n        String defaultNumber = mGetDefaultNumberListener.onGetDefaultNumber(this);\n        if (defaultNumber != null) {\n          mPhoneNumber = defaultNumber;\n        }\n      }\n      editText.setText(mPhoneNumber);\n      editText.setMovementMethod(ArrowKeyMovementMethod.getInstance());\n      editText.setKeyListener(DialerKeyListener.getInstance());\n      editText.setOnFocusChangeListener(mDialogFocusChangeListener);\n    }\n\n    // set contact picker\n    if (mContactPickButton != null) {\n      mContactPickButton.setOnClickListener(\n          new View.OnClickListener() {\n            public void onClick(View v) {\n              if (mParentActivity != null) {\n                mParentActivity.startActivityForResult(mContactListIntent, mPrefId);\n              }\n            }\n          });\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1799, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [194], "initializationEnd": [228], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = editText.setText(text)", "focalAPIStart": 236, "focalAPIEnd": 267, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MinionApp/minion/tree/master/MinionApp/src/uw/cse403/minion/BasicInfoActivity.java", "rawCode": "  /** Loads all of the basic information for the current character from the database. */\n  public void loadData() {\n    if (!baseInfo.isNew) {\n      // Name\n      EditText charName = (EditText) findViewById(R.id.char_name_enter);\n      charName.setText(baseInfo.name);\n\n      // Alignment\n      Spinner alignments = (Spinner) findViewById(R.id.alignment_spinner);\n      ArrayAdapter<CharSequence> myAdap =\n          ArrayAdapter.createFromResource(\n              this, R.array.alignment_array, R.layout.multiline_spinner_dropdown_item);\n      alignments.setAdapter(myAdap);\n      int spinnerPosition = myAdap.getPosition(baseInfo.alignment);\n      // set the default according to value\n      alignments.setSelection(spinnerPosition);\n\n      // Level\n      EditText levelEnter = (EditText) findViewById(R.id.char_level_enter);\n      levelEnter.setText(\"\" + baseInfo.level);\n\n      // Deity\n      EditText deityEnter = (EditText) findViewById(R.id.deity_enter);\n      deityEnter.setText(baseInfo.deity);\n\n      // Homeland\n      EditText homelandEnter = (EditText) findViewById(R.id.homeland_enter);\n      homelandEnter.setText(baseInfo.homeLand);\n\n      // Race\n      EditText raceEnter = (EditText) findViewById(R.id.race_enter);\n      raceEnter.setText(baseInfo.race);\n\n      // Size\n      Spinner sizes = (Spinner) findViewById(R.id.size_spinner);\n      ArrayAdapter<CharSequence> myAdap2 =\n          ArrayAdapter.createFromResource(\n              this, R.array.size_array, R.layout.multiline_spinner_dropdown_item);\n      sizes.setAdapter(myAdap2);\n      int spinnerPosition2 = myAdap2.getPosition(baseInfo.size);\n      // set the default according to value\n      sizes.setSelection(spinnerPosition2);\n\n      // Gender\n      EditText genderEnter = (EditText) findViewById(R.id.gender_enter);\n      genderEnter.setText(baseInfo.gender);\n\n      // Age\n      EditText ageEnter = (EditText) findViewById(R.id.age_enter);\n      ageEnter.setText(\"\" + baseInfo.age);\n\n      // Height\n      EditText heightEnter = (EditText) findViewById(R.id.height_enter);\n      heightEnter.setText(\"\" + baseInfo.height);\n\n      // Weight\n      EditText weightEnter = (EditText) findViewById(R.id.weight_enter);\n      weightEnter.setText(\"\" + baseInfo.weight);\n\n      // Hair\n      EditText hairEnter = (EditText) findViewById(R.id.hair_enter);\n      hairEnter.setText(baseInfo.hair);\n\n      // Eyes\n      EditText eyesEnter = (EditText) findViewById(R.id.eyes_enter);\n      eyesEnter.setText(baseInfo.eyes);\n    }\n  }\n"}, {"dataset": "editTextSetText", "exampleID": 1800, "initialization": ["EditText editText = findViewById(*)"], "initializationStart": [515], "initializationEnd": [564], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "editText!=null", "guardType": "IF {", "guardExpressionStart": 746, "guardExpressionEnd": 764, "guardBlockStart": 746, "guardBlockEnd": 822, "focalAPI": " = editText.setText(text)", "focalAPIStart": 777, "focalAPIEnd": 811, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/COMU/homescreen/tree/master/Mehmet/TwitterApplication/src/org/comu/homescreen/TwitterApplication.java", "rawCode": "    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n      View v = convertView;\n      if (v == null) {\n        LayoutInflater vi = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        v = vi.inflate(org.comu.homescreen.R.layout.listelement, null);\n      }\n\n      UserRecord user = users.get(position);\n      if (user != null) {\n        TextView username = (TextView) v.findViewById(org.comu.homescreen.R.id.Username);\n        TextView tweet = (TextView) v.findViewById(org.comu.homescreen.R.id.UserText);\n        ImageView img = (ImageView) v.findViewById(org.comu.homescreen.R.id.avatar);\n\n        if (username != null) {\n          username.setText(user.username);\n        }\n\n        if (tweet != null) {\n          tweet.setText(\" \" + user.usertext);\n        }\n\n        if (img != null) {\n          img.setImageDrawable(createDrawableFromURL(user.str));\n        }\n      }\n      return v;\n    }\n"}]