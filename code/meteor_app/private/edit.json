[{"dataset": "edit", "exampleID": 7301, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["Editor.getMessage()", "toString()", "e(String,*)"], "tryExpressionStart": 661, "tryExpressionEnd": 665, "tryBlockStart": 661, "tryBlockEnd": 2000, "catchExpressionStart": 1923, "catchExpressionEnd": 1943, "catchBlockStart": 1923, "catchBlockEnd": 2000, "exceptionHandlingCallStart": [1967, 1967, 1951], "exceptionHandlingCallEnd": [1981, 1992, 1993], "configuration": ["sharedPreferences.getString(String,String)"], "configurationStart": [1731], "configurationEnd": [1761], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 1786, "focalAPIEnd": 1795, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)", "editor.commit()", "editor.getMessage()"], "useStart": [1809, 1874, 1967], "useEnd": [1860, 1884, 1981], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/yukkigogo/cyberhoodwatch/tree/master/src/com/sociam/android/message/MessageUpAsyncTask.java", "rawCode": "  @Override\n  protected Integer doInBackground(String... params) {\n\n    String user_id = params[0];\n    String user_id_code = params[1];\n    String lat = params[2];\n    String lon = params[3];\n    String date_time = params[4];\n    // Log.e(\"sociam\", \"result??\" + date_time);\n    String message = params[5];\n    String tags = params[6];\n\n    HttpClient client = new DefaultHttpClient();\n    HttpPost hpost = new HttpPost(\"http://sociamvm-yi1g09.ecs.soton.ac.uk/messageupandroid.php\");\n\n    ResponseHandler<String> responseHandler = new BasicResponseHandler();\n    MultipartEntity multipartEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);\n\n    try {\n      multipartEntity.addPart(\"user_id\", new StringBody(user_id));\n      multipartEntity.addPart(\"id_code\", new StringBody(user_id_code));\n      multipartEntity.addPart(\"lat\", new StringBody(lat));\n      multipartEntity.addPart(\"lon\", new StringBody(lon));\n      multipartEntity.addPart(\"date\", new StringBody(date_time));\n      multipartEntity.addPart(\"message\", new StringBody(message));\n      if (tags != \"\") multipartEntity.addPart(\"tags\", new StringBody(tags));\n\n      hpost.setEntity(multipartEntity);\n      String response = client.execute(hpost, responseHandler);\n      Log.v(\"sociam\", \"message response \" + response);\n\n      String[] str = response.split(\"\\n\");\n\n      String match = \"message_id\";\n\n      Pattern p = Pattern.compile(match);\n      for (int i = 0; i < str.length; i++) {\n        // Log.e(\"sociam\",str[i]);\n        Matcher m = p.matcher(str[i]);\n        if (m.find()) {\n          String[] str2 = str[i].split(\",\");\n\n          if (str2[1].equals(\"false\")) {\n            postSuccess = false;\n\n          } else {\n\n            String past_msg = sp.getString(\"message_id\", \"\");\n            Editor e = sp.edit();\n            e.putString(\"message_id\", past_msg + \",\" + str2[1]);\n            e.commit();\n          }\n        }\n      }\n\n    } catch (Exception e) {\n      Log.e(\"sociam\", e.getMessage().toString());\n    }\n\n    return 0;\n  }\n"}, {"dataset": "edit", "exampleID": 7302, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [2618], "initializationEnd": [2693], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 2789, "focalAPIEnd": 2813, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [2789], "useEnd": [2821], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fumingshih/mytracks/tree/master/MyTracksTest/src/com/google/android/apps/mytracks/services/TrackRecordingServiceTest.java", "rawCode": "  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    /*\n     * Create a mock context that uses a mock content resolver and a renaming\n     * delegating context.\n     */\n    MockContentResolver mockContentResolver = new MockContentResolver();\n    RenamingDelegatingContext renamingDelegatingContext =\n        new RenamingDelegatingContext(getContext(), getContext(), \"test.\");\n    context = new MockContext(mockContentResolver, renamingDelegatingContext);\n\n    // Set up the mock content resolver\n    MyTracksProvider myTracksProvider = new MyTracksProvider();\n    myTracksProvider.attachInfo(context, null);\n    mockContentResolver.addProvider(MyTracksProviderUtils.AUTHORITY, myTracksProvider);\n\n    MockContentProvider settingsProvider =\n        new MockContentProvider(context) {\n          @Override\n          public Bundle call(String method, String arg, Bundle extras) {\n            return null;\n          }\n\n          @Override\n          public Cursor query(\n              Uri uri,\n              String[] projection,\n              String selection,\n              String[] selectionArgs,\n              String sortOrder) {\n            return null;\n          }\n        };\n    mockContentResolver.addProvider(Settings.AUTHORITY, settingsProvider);\n\n    MockContentProvider googleSettingsProvider =\n        new MockContentProvider(context) {\n          @Override\n          public Bundle call(String method, String arg, Bundle extras) {\n            return null;\n          }\n\n          @Override\n          public Cursor query(\n              Uri uri,\n              String[] projection,\n              String selection,\n              String[] selectionArgs,\n              String sortOrder) {\n            MockCursor mockCursor =\n                new MockCursor() {\n                  @Override\n                  public int getCount() {\n                    return 1;\n                  }\n\n                  @Override\n                  public boolean moveToNext() {\n                    return true;\n                  }\n\n                  @Override\n                  public String getString(int columnIndex) {\n                    return MyTracksLocationManager.USE_LOCATION_FOR_SERVICES_ON;\n                  }\n\n                  @Override\n                  public void close() {}\n                };\n            return mockCursor;\n          }\n        };\n    mockContentResolver.addProvider(\"com.google.settings\", googleSettingsProvider);\n\n    // Set the context\n    setContext(context);\n\n    providerUtils = MyTracksProviderUtils.Factory.get(context);\n\n    SharedPreferences sharedPreferences =\n        context.getSharedPreferences(Constants.SETTINGS_NAME, Context.MODE_PRIVATE);\n    // Let's use default values.\n    ApiAdapterFactory.getApiAdapter().applyPreferenceChanges(sharedPreferences.edit().clear());\n\n    // Disable auto resume by default.\n    updateAutoResumePrefs(PreferencesUtils.AUTO_RESUME_TRACK_CURRENT_RETRY_DEFAULT, 0);\n    // No recording track.\n    PreferencesUtils.setLong(\n        context, R.string.recording_track_id_key, PreferencesUtils.RECORDING_TRACK_ID_DEFAULT);\n  }\n"}, {"dataset": "edit", "exampleID": 7303, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 144, "focalAPIEnd": 157, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [144], "useEnd": [197], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/KeiferMiller/InkBar/tree/master/src/com/keifermiller/inkbar/preferences/FontSizeDialogPreference.java", "rawCode": "  @Override\n  protected void onDialogClosed(boolean positiveResult) {\n    super.onDialogClosed(positiveResult);\n    if (positiveResult) {\n      mPrefs.edit().putInt(\"preferenceFontSize\", mFontSize).commit();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7304, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [78], "initializationEnd": [126], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 143, "focalAPIEnd": 152, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)", "editor.commit()"], "useStart": [158, 226], "useEnd": [220, 236], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jordan-thoms/2Degrees-Toolbox/tree/master/Toolbox/src/biz/shadowservices/DegreesToolbox/WidgetInstance.java", "rawCode": "  public void setTextColor(Context c, int color) {\n    SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(c);\n    Editor e = sp.edit();\n    e.putInt(\"widgetSettings[\" + widgetId + \"][textColor]\", color);\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7305, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 375, "focalAPIEnd": 393, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)", "editor.putString(*,*)", "editor.Editor.commit()"], "useStart": [399, 484, 584], "useEnd": [478, 578, 604], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/britzl/androidutils/tree/master/androidutils-lib/src/com/loopj/android/http/PersistentCookieStore.java", "rawCode": "  @Override\n  public void addCookie(Cookie cookie) {\n    String name = cookie.getName() + cookie.getDomain();\n\n    // Save cookie into local store, or remove if expired\n    if (!cookie.isExpired(new Date())) {\n      cookies.put(name, cookie);\n    } else {\n      cookies.remove(name);\n    }\n\n    // Save cookie into persistent store\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n    prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(\",\", cookies.keySet()));\n    prefsWriter.putString(COOKIE_NAME_PREFIX + name, encodeCookie(new SerializableCookie(cookie)));\n    prefsWriter.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7306, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 320, "focalAPIEnd": 332, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)", "editor.putString(String,String)"], "useStart": [320, 320], "useEnd": [360, 392], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sefirot/androidStuff/tree/master/BerichtsheftApp/src/com/applang/components/DataConfiguration.java", "rawCode": "  public void save() {\n    Uri uri = getUri();\n    String database = mContext.getDatabasePath(uri);\n    if (notNullOrEmpty(tableName)) {\n      uri = dbTable(uri, tableName);\n      if (mProjectionModel != null) uri = projectionToUri(uri);\n    }\n    String uriString = uri != null ? Uri.decode(uri.toString()) : null;\n    prefs.edit().putString(\"uri\", uriString).putString(\"database\", database).commit();\n    diag_println(DIAG_OFF, \"saved uri, database\", uriString, database);\n  }\n"}, {"dataset": "edit", "exampleID": 7307, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [188], "initializationEnd": [242], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 287, "focalAPIEnd": 305, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.clear()", "editor.Editor.commit()"], "useStart": [311, 336], "useEnd": [330, 356], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AfzalivE/MI-Chat/tree/master/android-app/src/main/java/com/afzaln/mi_chat/utils/PrefUtils.java", "rawCode": "  /**\n   * Removes all preferences from SharedPreferences\n   *\n   * @param context the context\n   */\n  public static void clearPrefs(Context context) {\n    SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);\n    SharedPreferences.Editor prefsEditor = sharedPrefs.edit();\n    prefsEditor.clear();\n    prefsEditor.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7308, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 50, "focalAPIEnd": 72, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)", "editor.remove(String)", "editor.remove(String)"], "useStart": [50, 50, 50], "useEnd": [109, 145, 181], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/droidjunk_packages_apps_Contacts/tree/master/src/com/android/contacts/editor/ContactEditorUtils.java", "rawCode": "  @NeededForTesting\n  void cleanupForTest() {\n    mPrefs\n        .edit()\n        .remove(KEY_DEFAULT_ACCOUNT)\n        .remove(KEY_KNOWN_ACCOUNTS)\n        .remove(KEY_ANYTHING_SAVED)\n        .apply();\n  }\n"}, {"dataset": "edit", "exampleID": 7309, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 122, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["expect(editor)", "new ActivitySaver(sharedPreferences)"], "useStart": [106, 415], "useEnd": [147, 451], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sng/gb/tree/master/trunk/GeoBeagleTest/test/com/google/code/geobeagle/activity/ActivitySaverTest.java", "rawCode": "  @Test\n  public void saveGeocache() {\n    Geocache geocache = PowerMock.createMock(Geocache.class);\n\n    EasyMock.expect(sharedPreferences.edit()).andReturn(editor);\n    EasyMock.expect(editor.putString(ActivitySaver.LAST_ACTIVITY, ActivityType.CACHE_LIST.name()))\n        .andReturn(editor);\n    geocache.writeToPrefs(editor);\n    EasyMock.expect(editor.commit()).andReturn(true);\n\n    PowerMock.replayAll();\n    new ActivitySaver(sharedPreferences).save(ActivityType.CACHE_LIST, geocache);\n    PowerMock.verifyAll();\n  }\n"}, {"dataset": "edit", "exampleID": 7310, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [245], "initializationEnd": [311], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 504, "focalAPIEnd": 516, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)", "editor.Editor.commit()"], "useStart": [524, 595], "useEnd": [587, 615], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mitchtech/android-context/tree/master/src/edu/fsu/cs/contextprovider/ContextExpandableListActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    PreferenceManager.setDefaultValues(\n        this, ContextConstants.CONTEXT_PREFS, MODE_WORLD_READABLE, R.xml.prefs, false);\n    prefs = getSharedPreferences(ContextConstants.CONTEXT_PREFS, MODE_PRIVATE);\n\n    getPrefs();\n\n    if (!prefs.contains(ContextConstants.PREFS_FIRST_RUN)) {\n      Toast.makeText(this, \"First Run\", Toast.LENGTH_LONG).show();\n      SharedPreferences.Editor prefsEditor = prefs.edit();\n      prefsEditor.putBoolean(ContextConstants.PREFS_FIRST_RUN, false);\n      prefsEditor.commit();\n\n      // startup the primary context service (if just installed)\n      startService(new Intent(this, ContextService.class));\n\n      AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\n      Intent intent =\n          new Intent(getBaseContext(), edu.fsu.cs.contextprovider.wakeup.WakeupAlarmReceiver.class);\n      PendingIntent pi = PendingIntent.getBroadcast(getBaseContext(), 0, intent, 0);\n      manager.setRepeating(\n          AlarmManager.ELAPSED_REALTIME_WAKEUP,\n          SystemClock.elapsedRealtime() + 10000,\n          accuracyPopupPeriod * 1000,\n          pi);\n    }\n\n    tts = new TextToSpeech(this, this);\n\n    running = true;\n\n    if (clip == null) {\n      clip = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);\n    }\n\n    /* Start ContextProviderService */\n    bindService(new Intent(this, ContextProviderService.class), conn, Context.BIND_AUTO_CREATE);\n\n    if (locationEnabled) {\n      refreshLocation();\n    }\n\n    if (movementEnabled) {\n      refreshMovement();\n    }\n\n    if (weatherEnabled) {\n      refreshWeather();\n    }\n\n    if (systemEnabled) {\n      refreshSystem();\n    }\n\n    if (socialEnabled) {\n      refreshSocial();\n    }\n    if (derivedEnabled) {\n      refreshDerived();\n    }\n\n    mAdapter =\n        new SimpleExpandableListAdapter(\n            this,\n            groupData,\n            android.R.layout.simple_expandable_list_item_1,\n            new String[] {NAME, VALUE},\n            new int[] {android.R.id.text1, android.R.id.text2},\n            childData,\n            android.R.layout.simple_expandable_list_item_2,\n            new String[] {NAME, VALUE},\n            new int[] {android.R.id.text1, android.R.id.text2});\n\n    setListAdapter(mAdapter);\n\n    Handler handler = new Handler();\n    handler.postDelayed(\n        new Runnable() {\n          public void run() {\n            refresh();\n          }\n        },\n        1000);\n  }\n"}, {"dataset": "edit", "exampleID": 7311, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [104], "initializationEnd": [154], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 275, "focalAPIEnd": 293, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)", "editor.commit()"], "useStart": [299, 358], "useEnd": [352, 378], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/freshdocs/cmsandroid/tree/master/src/com/zia/freshdocs/preference/CMISPreferencesManager.java", "rawCode": "  public void storeFavorites(Context ctx, Set<NodeRef> favorites) {\n    SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(ctx);\n    byte[] enc = Base64.encodeBase64(SerializationUtils.serialize((Serializable) favorites));\n    Editor prefsEditor = sharedPrefs.edit();\n    prefsEditor.putString(FAVORITES_KEY, new String(enc));\n    prefsEditor.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7312, "initialization": ["SharedPreferences sharedPreferences = getPreferences(*)"], "initializationStart": [290], "initializationEnd": [318], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 456, "focalAPIEnd": 468, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [456], "useEnd": [508], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zenotech/zViz/tree/master/Apps/Android/Kiwi/src/com/kitware/KiwiViewer/KiwiViewerActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle bundle) {\n    super.onCreate(bundle);\n\n    handleUriFromIntent(getIntent().getData());\n\n    this.setContentView(R.layout.kiwivieweractivity);\n\n    mView = (KiwiGLSurfaceView) this.findViewById(R.id.glSurfaceView);\n\n    SharedPreferences prefs = getPreferences(MODE_PRIVATE);\n    String versionStr = getString(R.string.version_string);\n\n    if (!versionStr.equals(prefs.getString(\"version_string\", \"\"))) {\n      prefs.edit().putString(\"version_string\", versionStr).commit();\n      showWelcomeDialog();\n    } else {\n      maybeLoadDefaultDataset();\n    }\n\n    mLoadButton = (ImageButton) this.findViewById(R.id.loadDataButton);\n    mInfoButton = (ImageButton) this.findViewById(R.id.infoButton);\n    mResetViewButton = (ImageButton) this.findViewById(R.id.resetButton);\n\n    mLoadButton.setOnClickListener(\n        new Button.OnClickListener() {\n          public void onClick(View v) {\n            Intent datasetTableIntent = new Intent();\n            datasetTableIntent.setClass(KiwiViewerActivity.this, DatasetListActivity.class);\n            initBuiltinDatasetNames();\n            datasetTableIntent.putExtra(\n                \"com.kitware.KiwiViewer.bundle.DatasetList\", mBuiltinDatasetNames);\n            startActivityForResult(datasetTableIntent, DATASETTABLE_REQUEST_CODE);\n          }\n        });\n\n    mInfoButton.setOnClickListener(\n        new Button.OnClickListener() {\n          public void onClick(View v) {\n\n            Intent infoIntent = new Intent();\n            infoIntent.setClass(KiwiViewerActivity.this, InfoActivity.class);\n            startActivity(infoIntent);\n          }\n        });\n\n    mResetViewButton.setOnClickListener(\n        new Button.OnClickListener() {\n          public void onClick(View v) {\n            mView.resetCamera();\n          }\n        });\n  }\n"}, {"dataset": "edit", "exampleID": 7313, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [223], "initializationEnd": [274], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getBoolean(String,boolean)"], "configurationStart": [305], "configurationEnd": [351], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 465, "focalAPIEnd": 483, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [465], "useEnd": [519], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wangkenan/d9game/tree/master/src/me/key/appmarket/MyFragmengManager.java", "rawCode": "  @Override\n  public void onCreate(Bundle arg0) {\n    super.onCreate(arg0);\n    setContentView(R.layout.main_bottom);\n    setBehindContentView(R.layout.slide_menu);\n\n    // 第一次启动创建桌面快捷方式\n    SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n    boolean isFirstLuncher = preferences.getBoolean(\"isFirstLuncher\", true);\n    if (isFirstLuncher) {\n      ShortcutUtil.createShortCut(this, R.drawable.d9_logo, R.string.app_name);\n      preferences.edit().putBoolean(\"isFirstLuncher\", false).commit();\n    }\n\n    SharedPreferences sp = getSharedPreferences(\"cleandb\", MODE_PRIVATE);\n    boolean cleanDb = sp.getBoolean(\"db\", false);\n    if (!cleanDb) {\n      cleanDatabases(this);\n      Editor edit = sp.edit();\n      edit.putBoolean(\"db\", true);\n      edit.commit();\n    }\n    MarketApplication.getInstance().getAppLication().add(this);\n    startService(new Intent(this, DownloadService.class));\n    appRankInfos = MarketApplication.getInstance().getRankappinfos();\n    appHomeInfos_temp = MarketApplication.getInstance().getHomeAppInfos();\n    db = FinalDb.create(this);\n    findgame = (ImageView) findViewById(R.id.findgame);\n    findApp = (RelativeLayout) findViewById(R.id.rl_findapp_main_bottom);\n    localgame = (TextView) findViewById(R.id.localgame);\n    localgame.setTextColor(getResources().getColor(R.color.focus));\n\n    btnSearch = (ImageView) findViewById(R.id.iv_search_slide_menu);\n\n    findgameTv = (TextView) findViewById(R.id.tv_mainbottom_findgame);\n    rankTv = (TextView) findViewById(R.id.tv_mainbottom_rank);\n    rankgame = (ImageView) findViewById(R.id.rankgame);\n    rankApp = (RelativeLayout) findViewById(R.id.rl_rankapp_main_bottom);\n    inflater = LayoutInflater.from(this);\n    errorview = findViewById(R.id.errorview);\n    btnRefsh = errorview.findViewById(R.id.btn_Refsh);\n    btnRefsh.setOnClickListener(this);\n    localApp = (FrameLayout) findViewById(R.id.fl_localapp_main_bottom);\n    findApp.setOnClickListener(this);\n    rankApp.setOnClickListener(this);\n    localApp.setOnClickListener(this);\n    fm = getSupportFragmentManager();\n    // 获取sd卡地址\n    root = LocalUtils.getRoot(this);\n    fragmentTransaction = getSupportFragmentManager().beginTransaction();\n    findGame_normal = getResources().getDrawable(R.drawable.findgame);\n    findGame_focue = getResources().getDrawable(R.drawable.findgame_focus);\n    local_focue = getResources().getDrawable(R.drawable.localgame_fouce);\n    local_normal = getResources().getDrawable(R.drawable.local);\n    manager_focue = getResources().getDrawable(R.drawable.rank_selected);\n    manager_normal = getResources().getDrawable(R.drawable.rank);\n    localgame.setCompoundDrawablesWithIntrinsicBounds(null, local_focue, null, null);\n    // 预加载内容\n    new AsyncTask<Void, Void, Void>() {\n\n      @Override\n      protected Void doInBackground(Void... params) {\n        Long current = System.currentTimeMillis();\n        /*\n         * String str = ToolHelper.donwLoadToString(Global.GAME_MAIN_URL\n         * + Global.RANK_PAGE); if (str.isEmpty()) { appRankInfos = new\n         * ArrayList<AppInfo>(); } else { ParseRankJson(str); }\n         *\n         * String str2 =\n         * ToolHelper.donwLoadToString(Global.GAME_MAIN_URL +\n         * Global.HOME_PAGE); if (str2.isEmpty()) { appHomeInfos_temp =\n         * new ArrayList<AppInfo>(); } else { ParseHomeJson(str2); }\n         */\n        // if(!firstinstall) {\n        appManaInfos_temp = AppUtils.getUserApps(MyFragmengManager.this, 4000);\n\n        // Editor edit = sp.edit();\n        // edit.putBoolean(\"firstinstall\", true);\n        // for(AppInfo appInfo : appManaInfos_temp) {\n        // InstallAppInfo installAppInfo = new InstallAppInfo(appInfo);\n        // LogUtils.d(\"Local\", installAppInfo.getIdx()+\"idx\");\n        // db.save(installAppInfo);\n        // }\n        // edit.commit();\n        /*\n         * } else { List<InstallAppInfo> installAppInfos =\n         * db.findAll(InstallAppInfo.class); LogUtils.d(\"Local\",\n         * installAppInfos.get(0).getAppName()+\"installAppInfossize\");\n         * appManaInfos_temp = new ArrayList<AppInfo>();\n         * for(InstallAppInfo installAppInfo :installAppInfos) {\n         * LogUtils.d(\"Local\", installAppInfo.getIdx()+\"appInfoidx\");\n         * AppInfo appInfo = new AppInfo(installAppInfo); String\n         * packageName = appInfo.getPackageName(); PackageManager pm =\n         * getPackageManager(); ApplicationInfo info; try { info =\n         * pm.getApplicationInfo(packageName, 0);\n         * appInfo.setAppIcon(info.loadIcon(pm)); } catch\n         * (NameNotFoundException e) { // TODO Auto-generated catch\n         * block e.printStackTrace(); }\n         *\n         * appManaInfos_temp.add(appInfo); } }\n         */\n        List<AppInfo> mAppInfos_temp = new ArrayList<AppInfo>();\n        List<PackageInfo> packages = getPackageManager().getInstalledPackages(0);\n        Long currentMapp = System.currentTimeMillis();\n        mAppInfos_temp =\n            LocalUtils.readLocalGame(MyFragmengManager.this, root + \"d9dir/\", packages);\n        Long currentMappnow = System.currentTimeMillis();\n        LogUtils.d(\"Local\", (currentMappnow - currentMapp) + \"currentMappnow - currentMapp\");\n        LogUtils.d(\"Local\", \"mAppInfos_tempmAppInfos_temp\" + mAppInfos_temp.size());\n        mAppInfos.addAll(mAppInfos_temp);\n        ArrayList<AppInfo> userApps = AppUtils.getUserApps(MyFragmengManager.this, 4000);\n        apknamelist = AppUtils.getInstallAppPackage(MyFragmengManager.this);\n        if (apknamelist == null) {\n          appManagerUpdateInfos_t = new ArrayList<AppInfo>();\n        } else {\n          String str3 =\n              ToolHelper.donwLoadToString(\n                  Global.MAIN_URL + Global.UPGRADEVERSION + \"?apknamelist=\" + apknamelist);\n          ParseUpdateJson(str3);\n        }\n\n        if (userApps == null) {\n          appManagerUpdateInfos = new ArrayList<AppInfo>();\n        } else {\n          appManagerUpdateInfos_t = AppUtils.getCanUpadateApp(userApps, appManagerUpdateInfos_t);\n          appManagerUpdateInfos.clear();\n          appManagerUpdateInfos.addAll(appManagerUpdateInfos_t);\n        }\n\n        List<AppInfo> down_temp = new ArrayList<AppInfo>();\n        down_temp = db.findAll(AppInfo.class);\n        downApplist.clear();\n        downApplist.addAll(down_temp);\n        Collections.reverse(downApplist);\n\n        String str4 =\n            ToolHelper.donwLoadToString(Global.MAIN_URL + Global.APP_CATEGORY + \"?type=\" + 2);\n        LogUtils.d(\"Local\", \"runCategoryData\" + str4);\n        if (str4.isEmpty()) {\n          gcategoryInfoList_temp = null;\n          LogUtils.d(\"Local\", \"runCategoryData\" + str4 + \"str4\");\n\n        } else {\n          ParseCategoryJson(str4);\n        }\n        Long now = System.currentTimeMillis();\n        loadLocaltopList();\n        Long bannertime = System.currentTimeMillis();\n        LogUtils.d(\"Local\", (bannertime - now) + \"nownownownow\");\n\n        String banner = ToolHelper.donwLoadToString(Global.GAME_MAIN_URL + \"/recommednBanner.php\");\n        Long bannertimenow = System.currentTimeMillis();\n        LogUtils.d(\"Local\", bannertimenow - bannertime + \"bannertimenow\");\n        if (banner.isEmpty()) {\n          // TODO\n        } else {\n          ParseBanner(banner);\n        }\n        return null;\n      }\n\n      private void ParseBanner(String bannerstr) {\n        JSONArray jsonArray;\n        banners.clear();\n        try {\n          jsonArray = new JSONArray(bannerstr);\n          int len = jsonArray.length();\n          for (int i = 0; i < len; i++) {\n            JSONObject jsonObject = jsonArray.getJSONObject(i);\n            String picurl = jsonObject.getString(\"picurl\");\n            String appid = jsonObject.getString(\"appid\");\n            Banner banner = new Banner();\n            banner.setAppid(appid);\n            banner.setPicurl(picurl);\n            banners.add(banner);\n          }\n        } catch (JSONException e) {\n          e.printStackTrace();\n        }\n      }\n\n      protected void onPostExecute(Void result) {\n        MarketApplication.getInstance().setmAppInfos(mAppInfos);\n        MarketApplication.getInstance().setAppManaInfos_temp(appManaInfos_temp);\n        MarketApplication.getInstance().setDownApplist(downApplist);\n        MarketApplication.getInstance().setRankAppInfos(appRankInfos);\n        MarketApplication.getInstance().setAppManagerUpdateInfos(appManagerUpdateInfos);\n        MarketApplication.getInstance().setHomeAppInfos(appHomeInfos_temp);\n        MarketApplication.getInstance().setBanners(banners);\n        lf = new LocalGameFragment();\n        mf = new MainActivityFragment();\n        ft = fm.beginTransaction();\n        f1 = new RankFragment();\n        // 把对应的view对象区域替换成f1\n        // ft.replace(R.id.tabcontent, lf);\n        ft.add(R.id.tabcontent, mf);\n        ft.add(R.id.tabcontent, f1);\n        ft.add(R.id.tabcontent, lf);\n        ft.show(lf);\n        ft.commitAllowingStateLoss();\n        myHandler.sendEmptyMessage(INMAIN);\n        if (appHomeInfos_temp != null && appRankInfos != null) {\n          for (AppInfo ai : appHomeInfos_temp) {\n            dsb = new DownStateBroadcast();\n            IntentFilter filter = new IntentFilter();\n            String fileName = DownloadService.CreatFileName(ai.getAppName()).getAbsolutePath();\n            filter.addAction(fileName + \"down\");\n            registerReceiver(dsb, filter);\n          }\n          for (AppInfo ai : appRankInfos) {\n            dsbRank = new DownStateBroadcastRank();\n            IntentFilter filter = new IntentFilter();\n            String fileName = DownloadService.CreatFileName(ai.getAppName()).getAbsolutePath();\n            filter.addAction(fileName + \"down\");\n            registerReceiver(dsbRank, filter);\n          }\n        }\n\n        final MenuFragment menuFragment = new MenuFragment();\n        fragmentTransaction.replace(R.id.slide_content, menuFragment);\n        // fragmentTransaction.replace(R.id.content, new\n        // ContentFragment());\n        fragmentTransaction.commitAllowingStateLoss();\n\n        LogUtils.d(\"Main\", \"我已经被加载了哟\");\n        lv = (ListView) findViewById(R.id.category_lv);\n        lv.setDividerHeight(0);\n        LogUtils.d(\"Main\", lv + \"\");\n        /*\n         * ImageButton search_btn = (ImageButton)\n         * findViewById(R.id.search_btn);\n         * search_btn.setOnClickListener(new OnClickListener() {\n         *\n         * @Override public void onClick(View v) { menu.toggle(); } });\n         */\n        MyInstalledReceiver installedReceiver = new MyInstalledReceiver();\n        IntentFilter filter = new IntentFilter();\n\n        filter.addAction(\"android.intent.action.PACKAGE_ADDED\");\n        filter.addDataScheme(\"package\");\n        registerReceiver(installedReceiver, filter);\n        LogUtils.d(\"Main1\", menuCategoryAdapter + \"\");\n        menu = getSlidingMenu();\n        menu.setMode(SlidingMenu.LEFT);\n        menu.setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);\n        /*\n         * menu.setShadowWidthRes(R.dimen.shadow_width);\n         * menu.setShadowDrawable(R.drawable.shadow);\n         */\n        menu.setBehindOffsetRes(R.dimen.slidingmenu_offset);\n        menu.setFadeDegree(0.35f);\n        menu.setOnCloseListener(\n            new OnCloseListener() {\n\n              @Override\n              public void onClose() {\n                LogUtils.d(\"Main\", \"close\");\n              }\n            });\n        menu.setOnOpenedListener(\n            new OnOpenedListener() {\n\n              @Override\n              public void onOpened() {\n                LogUtils.d(\"Main\", \"open\");\n                /*\n                 * Intent intent = new Intent();\n                 * intent.setAction(\"open.menu\"); sendBroadcast(intent);\n                 */\n              }\n            });\n\n        final EditText etSearcher = (EditText) findViewById(R.id.et_search);\n        /*\n         * etSearcher.setOnTouchListener(new OnTouchListener(){\n         *\n         * @Override public boolean onTouch(View arg0, MotionEvent arg1)\n         * { etSearcher.setHint(\"\"); return false; }\n         *\n         * });\n         */\n        btnSearch.setOnClickListener(\n            new OnClickListener() {\n\n              @Override\n              public void onClick(View v) {\n                Intent intent = new Intent();\n                intent.putExtra(\"Search\", etSearcher.getText().toString());\n                intent.setClass(MyFragmengManager.this, SearchActivity.class);\n                startActivity(intent);\n                LogUtils.d(\"MAIN\", \"动画前\");\n                MyFragmengManager.this.overridePendingTransition(\n                    R.anim.left_anim, R.anim.right_anim);\n                LogUtils.d(\"MAIN\", \"动画后\");\n                etSearcher.setText(null);\n              }\n            });\n        etSearcher.setOnFocusChangeListener(\n            new View.OnFocusChangeListener() {\n\n              @Override\n              public void onFocusChange(View v, boolean hasFocus) {\n                // TODO Auto-generated method stub\n                if (hasFocus) {\n                  etSearcher.setHint(\"\");\n                } else {\n                  etSearcher.setHint(\"搜索\");\n                  // 关闭软件盘\n                  InputMethodManager imm =\n                      (InputMethodManager)\n                          MyFragmengManager.this.getSystemService(Context.INPUT_METHOD_SERVICE);\n                  imm.hideSoftInputFromWindow(etSearcher.getWindowToken(), 0);\n                }\n              }\n            });\n\n        etSearcher.addTextChangedListener(\n            new TextWatcher() {\n              private CharSequence temp;\n              private int selectionStart;\n              private int selectionEnd;\n\n              @Override\n              public void afterTextChanged(Editable s) {\n                // TODO Auto-generated method stub\n                int number = s.length();\n                if (number == 0) {\n                  etSearcher.setHint(\"搜索\");\n                }\n              }\n\n              @Override\n              public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n                // TODO Auto-generated method stub\n\n              }\n\n              @Override\n              public void onTextChanged(CharSequence s, int start, int count, int after) {\n                // TODO Auto-generated method stub\n                temp = s;\n              }\n            });\n        etSearcher.setOnEditorActionListener(\n            new OnEditorActionListener() {\n\n              @Override\n              public boolean onEditorAction(TextView tv, int antionId, KeyEvent event) {\n                // TODO Auto-generated method stub\n                Intent intent = new Intent();\n                intent.putExtra(\"Search\", etSearcher.getText().toString());\n                intent.setClass(MyFragmengManager.this, SearchActivity.class);\n                startActivity(intent);\n                LogUtils.d(\"MAIN\", \"动画前\");\n                MyFragmengManager.this.overridePendingTransition(\n                    R.anim.left_anim, R.anim.right_anim);\n                LogUtils.d(\"MAIN\", \"动画后\");\n                etSearcher.setText(null);\n                // etSearcher.setHint(\"搜索\");\n                return false;\n              }\n            });\n        /*\n         * LinearLayout etSeacher = (LinearLayout)\n         * findViewById(R.id.menu_search);\n         * etSeacher.setOnClickListener(new OnClickListener() {\n         *\n         * @Override public void onClick(View v) { Intent intent = new\n         * Intent(); intent.setClass(MyFragmengManager.this,\n         * SearchActivity.class); startActivity(intent);\n         * LogUtils.d(\"MAIN\", \"动画前\");\n         * MyFragmengManager.this.overridePendingTransition(\n         * R.anim.left_anim, R.anim.right_anim); LogUtils.d(\"MAIN\",\n         * \"动画后\"); } });\n         */\n        if (gcategoryInfoList_temp == null) {\n          errorview.setVisibility(View.VISIBLE);\n        } else {\n          menuCategoryAdapter =\n              new MenuCategoryAdapter(MyFragmengManager.this, gcategoryInfoList_temp, lv);\n\n          lv.setAdapter(menuCategoryAdapter);\n\n          // lv.getChildAt(0).setBackgroundColor(getResources().getColor(R.color.classiv_cloor));\n          // lv.getChildAt(0).findViewById(R.id.click_menu).setVisibility(View.VISIBLE);\n          LogUtils.d(\"Main\", lv.getChildCount() + \"\");\n\n          lv.setOnItemClickListener(\n              new OnItemClickListener() {\n\n                @Override\n                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n\n                  menuFragment.updata(position);\n                  view.setBackgroundResource(R.drawable.slidingmenu_left_background_focus);\n                  for (int i = 0; i < lv.getChildCount(); i++) {\n                    if (i == position) {\n                      continue;\n                    }\n                    LogUtils.d(\"Main\", i + \"\");\n                    lv.getChildAt(i).setBackgroundResource(R.drawable.slidingmenu_left_background);\n                  }\n                }\n              });\n        }\n      };\n    }.execute();\n  }\n"}, {"dataset": "edit", "exampleID": 7314, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 94, "focalAPIEnd": 118, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.clear()", "editor.Editor.commit()"], "useStart": [124, 155], "useEnd": [149, 181], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ajhalbleib/aicg/tree/master/appinventor/components/src/com/google/appinventor/components/runtime/TinyDB.java", "rawCode": "  @Override\n  public void onDelete() {\n    final SharedPreferences.Editor sharedPrefsEditor = sharedPreferences.edit();\n    sharedPrefsEditor.clear();\n    sharedPrefsEditor.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7315, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 67, "focalAPIEnd": 92, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [67], "useEnd": [143], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mtwebster/IEmail/tree/master/src/com/mwebster/iemail/Preferences.java", "rawCode": "  public void setOneTimeInitializationProgress(int progress) {\n    mSharedPreferences.edit().putInt(ONE_TIME_INITIALIZATION_PROGRESS, progress).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7316, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [193], "initializationEnd": [244], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 302, "focalAPIEnd": 310, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)", "sharedPreferences.edit()", "editor.putString(String,*)", "sharedPreferences.edit()", "editor.putString(String,*)", "sharedPreferences.edit()", "editor.putString(String,*)", "sharedPreferences.edit()", "editor.putString(String,*)"], "useStart": [302, 357, 357, 413, 413, 468, 468, 525, 525], "useEnd": [342, 365, 398, 421, 453, 476, 510, 533, 569], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CMUCognisense/Cognisense/tree/master/Android-Apps/DoorBell/src/com/example/doorbell/DoorBellConfigurationService.java", "rawCode": "  public void locationReceived(Object triggerData, Object srcServiceId) {\n\n    String[] location;\n    Log.d(TAG, \"Location that is received \" + (String) triggerData);\n    SharedPreferences p = PreferenceManager.getDefaultSharedPreferences(this);\n    location = ((String) triggerData).split(\"\\\\+\");\n    p.edit().putString(\"uhome\", location[0]).commit();\n    p.edit().putString(\"ufloor\", location[1]).commit();\n    p.edit().putString(\"uroom\", location[2]).commit();\n    p.edit().putString(\"uinRoom\", location[3]).commit();\n    p.edit().putString(\"ufavorite\", location[4]).commit();\n    configurationMatch();\n  }\n"}, {"dataset": "edit", "exampleID": 7317, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [93], "initializationEnd": [147], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getString(String,String)"], "configurationStart": [171], "configurationEnd": [210], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 293, "focalAPIEnd": 310, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [293], "useEnd": [343], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/monaca/monaca-framework-android/tree/master/MonacaUtils/src/mobi/monaca/utils/MonacaDevice.java", "rawCode": "  private static String getIDUsingUUID(Context context) {\n    SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(context);\n    String deviceId = sharedPref.getString(\"device_id\", null);\n    if (deviceId == null) {\n      deviceId = UUID.randomUUID().toString();\n      sharedPref.edit().putString(\"device_id\", deviceId).commit();\n    }\n    return deviceId;\n  }\n"}, {"dataset": "edit", "exampleID": 7318, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getStringSet(String,Set<String>)"], "configurationStart": [261], "configurationEnd": [319], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 361, "focalAPIEnd": 373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(*)", "editor.Editor.remove(String)", "editor.Editor.apply()"], "useStart": [467, 526, 558], "useEnd": [513, 552, 568], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_DeskClock/tree/master/src/com/android/deskclock/Alarms.java", "rawCode": "  private static void clearAllSnoozePreferences(\n      final Context context, final SharedPreferences prefs) {\n    NotificationManager nm =\n        (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n    final Set<String> snoozedIds = prefs.getStringSet(PREF_SNOOZE_IDS, new HashSet<String>());\n    final SharedPreferences.Editor ed = prefs.edit();\n    for (String snoozeId : snoozedIds) {\n      nm.cancel(Integer.parseInt(snoozeId));\n      ed.remove(getAlarmPrefSnoozeTimeKey(snoozeId));\n    }\n\n    ed.remove(PREF_SNOOZE_IDS);\n    ed.apply();\n  }\n"}, {"dataset": "edit", "exampleID": 7319, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 327, "focalAPIEnd": 339, "followUpCheck": "editor != null", "checkType": "IF", "followUpCheckExpressionStart": 2021, "followUpCheckExpressionEnd": 2045, "followUpCheckBlockStart": 2021, "followUpCheckBlockEnd": 2132, "use": ["editor.putBoolean(String,boolean)", "editor.putBoolean(String,boolean)", "editor.putBoolean(String,boolean)", "editor.commit()", "editor.putBoolean(String,boolean)"], "useStart": [349, 400, 465, 525, 2060], "useEnd": [390, 455, 515, 545, 2119], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zeitkunst/FluidNexusAndroid/tree/master/src/net/fluidnexus/FluidNexusAndroid/MainActivity.java", "rawCode": "  @Override\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n\n    switch (requestCode) {\n      case (ACTIVITY_VIEW_MESSAGE):\n        fillListView(VIEW_MODE);\n        break;\n      case (ACTIVITY_WELCOME_ACTIVITY):\n        prefsEditor = prefs.edit();\n        prefsEditor.putBoolean(\"FirstRun\", false);\n        prefsEditor.putBoolean(\"bluetoothBondedOnlyFlag\", true);\n        prefsEditor.putBoolean(\"sendBlacklistPref\", false);\n        prefsEditor.commit();\n\n        firstRun = false;\n\n        // AlertDialog passphraseDialog = passphraseDialog();\n        // passphraseDialog.show();\n\n        break;\n      case (ACTIVITY_ADD_OUTGOING):\n        try {\n          // Send message to service to note that a new message has been created\n          Message msg = Message.obtain(null, MSG_NEW_MESSAGE_CREATED);\n          networkService.send(msg);\n        } catch (RemoteException e) {\n          // Here, the service has crashed even before we were able to connect\n        }\n\n        fillListView(VIEW_MODE);\n        break;\n      case (REQUEST_DISCOVERABLE_RESULT):\n        // Do something on request discoverable result\n        String s = \"\";\n        if (resultCode < 0) {\n          s = getString(R.string.toast_discoverable_notok);\n        } else {\n          s = getString(R.string.toast_discoverable_ok, resultCode);\n        }\n        Toast.makeText(this, s, Toast.LENGTH_SHORT).show();\n        break;\n      case (ACTIVITY_PREFERENCES):\n        break;\n      case (REQUEST_ENABLE_BT):\n        if (resultCode == ListActivity.RESULT_OK) {\n          toast = Toast.makeText(this, R.string.toast_bluetooth_request_ok, Toast.LENGTH_LONG);\n          toast.show();\n          // setup services here\n        } else {\n          log.warn(\"Bluetooth not enabled\");\n          Toast.makeText(this, R.string.toast_bluetooth_request_notok, Toast.LENGTH_SHORT).show();\n          askedBluetooth = true;\n          enableBluetoothServicePref = false;\n          if (prefsEditor != null) {\n            prefsEditor.putBoolean(\"enableBluetoothServicePref\", false);\n          }\n        }\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7320, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 130, "focalAPIEnd": 148, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(*)", "editor.putString(String,*)", "editor.Editor.commit()"], "useStart": [470, 666, 757], "useEnd": [515, 745, 777], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rfaisal/personal/tree/master/__before_june_19_2013/src/com/loopj/android/http/PersistentCookieStore.java", "rawCode": "  @Override\n  public boolean clearExpired(Date date) {\n    boolean clearedAny = false;\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n\n    for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {\n      String name = entry.getKey();\n      Cookie cookie = entry.getValue();\n      if (cookie.isExpired(date)) {\n        // Clear cookies from local store\n        cookies.remove(name);\n\n        // Clear cookies from persistent store\n        prefsWriter.remove(COOKIE_NAME_PREFIX + name);\n\n        // We've cleared at least one\n        clearedAny = true;\n      }\n    }\n\n    // Update names in persistent store\n    if (clearedAny) {\n      prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(\",\", cookies.keySet()));\n    }\n    prefsWriter.commit();\n\n    return clearedAny;\n  }\n"}, {"dataset": "edit", "exampleID": 7321, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [666], "initializationEnd": [717], "hasTryCatch": 1, "exceptionType": "PackageManager.NameNotFoundException", "exceptionHandlingCall": ["w(String,*)"], "tryExpressionStart": 301, "tryExpressionEnd": 305, "tryBlockStart": 301, "tryBlockEnd": 1470, "catchExpressionStart": 1395, "catchExpressionEnd": 1442, "catchBlockStart": 1395, "catchBlockEnd": 1470, "exceptionHandlingCallStart": [1450], "exceptionHandlingCallEnd": [1463], "configuration": ["sharedPreferences.getInt(String,int)"], "configurationStart": [743], "configurationEnd": [802], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 854, "focalAPIEnd": 866, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(*,int)"], "useStart": [854], "useEnd": [933], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/monaca/monaca-framework-android/tree/master/BarcodeScannerLibrary/src/com/google/zxing/client/android/CaptureActivity.java", "rawCode": "  /**\n   * We want the help screen to be shown automatically the first time a new version of the app is\n   * run. The easiest way to do this is to check android:versionCode from the manifest, and compare\n   * it to a value stored as a preference.\n   */\n  private boolean showHelpOnFirstLaunch() {\n    try {\n      PackageInfo info = getPackageManager().getPackageInfo(PACKAGE_NAME, 0);\n      int currentVersion = info.versionCode;\n      // Since we're paying to talk to the PackageManager anyway, it makes sense to cache the app\n      // version name here for display in the about box later.\n      this.versionName = info.versionName;\n      SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);\n      int lastVersion = prefs.getInt(PreferencesActivity.KEY_HELP_VERSION_SHOWN, 0);\n      if (currentVersion > lastVersion) {\n        prefs.edit().putInt(PreferencesActivity.KEY_HELP_VERSION_SHOWN, currentVersion).commit();\n        Intent intent = new Intent(this, HelpActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);\n        // Show the default page on a clean install, and the what's new page on an upgrade.\n        String page = lastVersion == 0 ? HelpActivity.DEFAULT_PAGE : HelpActivity.WHATS_NEW_PAGE;\n        intent.putExtra(HelpActivity.REQUESTED_PAGE_KEY, page);\n        startActivity(intent);\n        return true;\n      }\n    } catch (PackageManager.NameNotFoundException e) {\n      Log.w(TAG, e);\n    }\n    return false;\n  }\n"}, {"dataset": "edit", "exampleID": 7322, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [168], "initializationEnd": [228], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences.getBoolean(PREFERENCE_AUTO_CREATENOW,false,)", "guardType": "IF {", "guardExpressionStart": 236, "guardExpressionEnd": 297, "guardBlockStart": 236, "guardBlockEnd": 411, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 330, "focalAPIEnd": 348, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [330], "useEnd": [393], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/stevegaron/Synodroid/tree/master/src/com/bigpupdev/synodroid/ui/DownloadPreferenceActivity.java", "rawCode": "  @Override\n  public void onWindowFocusChanged(boolean hasFocus) {\n    super.onWindowFocusChanged(hasFocus);\n\n    if (hasFocus) {\n      SharedPreferences preferences = getSharedPreferences(PREFERENCE_AUTO, Activity.MODE_PRIVATE);\n      if (preferences.getBoolean(PREFERENCE_AUTO_CREATENOW, false)) {\n        autoCreate();\n        preferences.edit().putBoolean(PREFERENCE_AUTO_CREATENOW, false).commit();\n      }\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7323, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 77, "focalAPIEnd": 92, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)", "editor.commit()"], "useStart": [98, 133], "useEnd": [127, 143], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/oskarwaglund/project-pineapple/tree/master/Pineapple/src/com/pineapple/valentine/MenuPanel.java", "rawCode": "  public void setUserName(String name) {\n    userName = name;\n    Editor e = settings.edit();\n    e.putString(\"userName\", name);\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7324, "initialization": ["SharedPreferences sharedPreferences = getProperties(Context)"], "initializationStart": [96], "initializationEnd": [114], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 131, "focalAPIEnd": 143, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.commit()"], "useStart": [183], "useEnd": [193], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/snooplsm/njtransit/tree/master/scheduler/src/com/njtransit/Root.java", "rawCode": "  public static void saveScheduleEndDate(Context ctx, long end) {\n    SharedPreferences prefs = getProperties(ctx);\n    Editor e = prefs.edit().putLong(\"schedule-end-date\", end);\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7325, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [134], "initializationEnd": [186], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences.getBoolean(\"firstrun\",true,)", "guardType": "IF {", "guardExpressionStart": 193, "guardExpressionEnd": 232, "guardBlockStart": 193, "guardBlockEnd": 344, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 242, "focalAPIEnd": 254, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [242], "useEnd": [284], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TheLastCrusade/SoundStream/tree/master/SoundStream/src/com/thelastcrusade/soundstream/CoreActivity.java", "rawCode": "  @Override\n  protected void onResume() {\n    // TODO Auto-generated method stub\n    super.onResume();\n\n    SharedPreferences prefs = getSharedPreferences(getPackageName(), MODE_PRIVATE);\n\n    if (prefs.getBoolean(\"firstrun\", true)) {\n\n      prefs.edit().putBoolean(\"firstrun\", false).commit();\n\n      new InstructionsDialog(this).show();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7326, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [84], "initializationEnd": [134], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 140, "focalAPIEnd": 148, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [140], "useEnd": [156], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RudolfWeeber/eyes-free/tree/master/trunk/archived/WebVox/src/com/marvin/webvox/BrowserSettings.java", "rawCode": "  /*package*/ void resetDefaultPreferences(Context ctx) {\n    SharedPreferences p = PreferenceManager.getDefaultSharedPreferences(ctx);\n    p.edit().clear().commit();\n    PreferenceManager.setDefaultValues(ctx, R.xml.browser_preferences, true);\n    // reset homeUrl\n    setHomePage(ctx, getFactoryResetHomeUrl(ctx));\n    // reset appcache max size\n    appCacheMaxSize = webStorageSizeManager.getAppCacheMaxSize();\n  }\n"}, {"dataset": "edit", "exampleID": 7327, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [110], "initializationEnd": [175], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 181, "focalAPIEnd": 193, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,*)", "sharedPreferences.edit()", "editor.putInt(String,int)", "sharedPreferences.edit()", "editor.putBoolean(String,*)", "sharedPreferences.edit()", "editor.putInt(String,*)", "sharedPreferences.edit()", "editor.putInt(String,int)", "sharedPreferences.edit()", "editor.putInt(String,*)", "sharedPreferences.edit()", "editor.putInt(String,int)"], "useStart": [181, 266, 266, 339, 339, 433, 433, 520, 520, 595, 595, 676, 676], "useEnd": [251, 278, 324, 351, 418, 445, 505, 532, 580, 607, 661, 688, 742], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lutzer/mobile_computing/tree/master/Ausloeser/src/com/ausloeser/screens/TimelapseActivity.java", "rawCode": "  @Override\n  public void onPause() {\n    super.onPause();\n\n    // savesettings\n    SharedPreferences prefs = this.getSharedPreferences(\"com.ausloeser.app\", this.MODE_PRIVATE);\n    prefs.edit().putInt(\"TimelapseExposure\", sliderExposure.getProgress()).commit();\n    prefs.edit().putInt(\"TimelapseExposureTime\", exposureTime).commit();\n    prefs.edit().putBoolean(\"TimelapseExposureChecked\", buttonExposure.isChecked()).commit();\n    prefs.edit().putInt(\"TimelapseIntervall\", sliderIntervall.getProgress()).commit();\n    prefs.edit().putInt(\"TimelapseIntervallTime\", intervallTime).commit();\n    prefs.edit().putInt(\"TimelapseNumber\", sliderNumber.getProgress()).commit();\n    prefs.edit().putInt(\"TimelapseNumberOfPictures\", numberOfPictures).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7328, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 99, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putString(String,String)", "editor.putInt(String,*)", "editor.Editor.commit()"], "useStart": [130, 189, 392], "useEnd": [171, 338, 402], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void saveRegistrationId(String regId, Context context) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putString(\"GCM_REGISTRATION_ID\", regId);\n    try {\n      e.putInt(\n          \"LAST_GCM_REGISTERED_APP_VERSION\",\n          context.getPackageManager().getPackageInfo(context.getPackageName(), 0).versionCode);\n    } catch (NameNotFoundException e1) {\n\n    }\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7329, "initialization": ["SharedPreferences sharedPreferences = getContext()"], "initializationStart": [75], "initializationEnd": [87], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 143, "focalAPIEnd": 152, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [143], "useEnd": [160], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kontinuity/aosp-email-ex/tree/master/common/tests/src/com/android/common/OperationSchedulerTest.java", "rawCode": "  private SharedPreferences getFreshStorage() {\n    SharedPreferences sp = getContext().getSharedPreferences(\"OperationSchedulerTest\", 0);\n    sp.edit().clear().commit();\n    return sp;\n  }\n"}, {"dataset": "edit", "exampleID": 7330, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 208, "focalAPIEnd": 220, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)", "sharedPreferences.edit()", "editor.putString(String,String)"], "useStart": [208, 549, 549], "useEnd": [254, 561, 595], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wwyz/DotaSpark/tree/master/gg/src/com/examples/gg/loadMore/LoadMore_Twitch.java", "rawCode": "  private void openPlayer(\n      int selectedPosition, Context mContext, int videoPostion, boolean isSave) {\n    switch (selectedPosition) {\n      case 0:\n        // save pref\n        if (isSave) {\n          prefs.edit().putString(\"preferredPlayer\", \"0\").commit();\n        }\n        // Using new video player\n        Intent i = new Intent(mContext, VideoBuffer.class);\n        i.putExtra(\"video\", videolist.get(videoPostion).getVideoId());\n        startActivity(i);\n        break;\n\n      case 1:\n        // save pref\n        if (isSave) {\n          prefs.edit().putString(\"preferredPlayer\", \"1\").commit();\n        }\n\n        // Using old player\n        if (check()) {\n          Intent intent1 = new Intent(mContext, TwitchPlayer.class);\n          intent1.putExtra(\"video\", videolist.get(videoPostion).getVideoId());\n          startActivity(intent1);\n\n        } else {\n          Intent intent2 = new Intent(mContext, FlashInstallerActivity.class);\n          startActivity(intent2);\n        }\n        break;\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7331, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [140], "initializationEnd": [212], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["e(String,String,SharedPreferences.Editor)"], "tryExpressionStart": 504, "tryExpressionEnd": 508, "tryBlockStart": 504, "tryBlockEnd": 1383, "catchExpressionStart": 1204, "catchExpressionEnd": 1224, "catchBlockStart": 1204, "catchBlockEnd": 1295, "exceptionHandlingCallStart": [1234], "exceptionHandlingCallEnd": [1286], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 944, "focalAPIEnd": 968, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putString(String,String)", "editor.Editor.commit()", "e(String,String,editor)"], "useStart": [1110, 1162, 1234], "useEnd": [1134, 1172, 1286], "hasFinally": 1, "cleanUpCall": ["Cursor.close()"], "finallyExpressionStart": 1296, "finallyExpressionEnd": 1304, "finallyBlockStart": 1296, "finallyBlockEnd": 1383, "cleanUpCallStart": [1329], "cleanUpCallEnd": [1338], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/media/java/android/mtp/MtpDatabase.java", "rawCode": "  private void initDeviceProperties(Context context) {\n    final String devicePropertiesName = \"device-properties\";\n    mDeviceProperties = context.getSharedPreferences(devicePropertiesName, Context.MODE_PRIVATE);\n    File databaseFile = context.getDatabasePath(devicePropertiesName);\n\n    if (databaseFile.exists()) {\n      // for backward compatibility - read device properties from sqlite database\n      // and migrate them to shared prefs\n      SQLiteDatabase db = null;\n      Cursor c = null;\n      try {\n        db = context.openOrCreateDatabase(\"device-properties\", Context.MODE_PRIVATE, null);\n        if (db != null) {\n          c =\n              db.query(\n                  \"properties\",\n                  new String[] {\"_id\", \"code\", \"value\"},\n                  null,\n                  null,\n                  null,\n                  null,\n                  null);\n          if (c != null) {\n            SharedPreferences.Editor e = mDeviceProperties.edit();\n            while (c.moveToNext()) {\n              String name = c.getString(1);\n              String value = c.getString(2);\n              e.putString(name, value);\n            }\n            e.commit();\n          }\n        }\n      } catch (Exception e) {\n        Log.e(TAG, \"failed to migrate device properties\", e);\n      } finally {\n        if (c != null) c.close();\n        if (db != null) db.close();\n      }\n      databaseFile.delete();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7332, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 28, "focalAPIEnd": 53, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [28], "useEnd": [61], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Dustinmj/Froyo_Email/tree/master/src/com/android/email/Preferences.java", "rawCode": "  public void clear() {\n    mSharedPreferences.edit().clear().commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7333, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 212, "focalAPIEnd": 226, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putLong(String,long)"], "useStart": [212], "useEnd": [254], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ddnbrowser/Diva.NetBrowser/tree/master/src/net/diva/browser/DownloadRankingService.java", "rawCode": "    void reserveInternal(long time, int delay) {\n      PendingIntent operation = DdNBrowserReceiver.downloadRankingOperation(m_context);\n      m_alarm.set(AlarmManager.RTC_WAKEUP, time + delay, operation);\n      m_prefs.edit().putLong(RESERVE_TIME, time).commit();\n    }\n"}, {"dataset": "edit", "exampleID": 7334, "initialization": ["SharedPreferences sharedPreferences = getActivity()"], "initializationStart": [356], "initializationEnd": [369], "hasTryCatch": 1, "exceptionType": "JSONException", "exceptionHandlingCall": ["printStackTrace()"], "tryExpressionStart": 408, "tryExpressionEnd": 412, "tryBlockStart": 408, "tryBlockEnd": 1876, "catchExpressionStart": 1818, "catchExpressionEnd": 1842, "catchBlockStart": 1818, "catchBlockEnd": 1876, "exceptionHandlingCallStart": [1850], "exceptionHandlingCallEnd": [1869], "configuration": ["sharedPreferences.getString(String,String)", "sharedPreferences.getLong(String,int)"], "configurationStart": [434, 494], "configurationEnd": [472, 526], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 611, "focalAPIEnd": 629, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putLong(String,*)"], "useStart": [611], "useEnd": [674], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/victoryckl/android-demos/tree/master/TextReader/TextReader/src/com/svo/laohan/fragment/Rank.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    root = inflater.inflate(R.layout.rank, null);\n    gridView = (GridView) root.findViewById(R.id.grid);\n    progressBar = (ProgressBar) root.findViewById(R.id.progresBar);\n    gridView.setOnItemClickListener(this);\n    preferences = getActivity().getSharedPreferences(\"weitu\", 0);\n    try {\n      String json = preferences.getString(\"rank_json\", \"\");\n      long weekMs = preferences.getLong(\"weekMs\", 0);\n      if (TextUtils.isEmpty(json) || Util.currentWeekInMills() > weekMs) {\n        preferences.edit().putLong(\"weekMs\", Util.currentWeekInMills()).commit();\n        HttpUtil.get(\n            \"http://2.dubinwei.duapp.com/Rank?flag=res\",\n            null,\n            new JsonHttpResponseHandler() {\n              @Override\n              public void onStart() {\n                super.onStart();\n                progressBar.setVisibility(View.VISIBLE);\n              }\n\n              @Override\n              public void onSuccess(JSONArray arg0) {\n                super.onSuccess(arg0);\n                rankJson = arg0;\n                preferences.edit().putString(\"rank_json\", arg0.toString()).commit();\n                gridView.setAdapter(new MyAdapter(arg0));\n                if (progressBar != null) {\n                  progressBar.setVisibility(View.GONE);\n                }\n              }\n\n              @Override\n              public void onFailure(Throwable arg0) {\n                if (progressBar != null) {\n                  progressBar.setVisibility(View.GONE);\n                }\n              }\n            });\n      } else {\n        rankJson = new JSONArray(json);\n        gridView.setAdapter(new MyAdapter(rankJson));\n        progressBar.setVisibility(View.GONE);\n      }\n    } catch (JSONException e) {\n      e.printStackTrace();\n    }\n    return root;\n  }\n"}, {"dataset": "edit", "exampleID": 7335, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,int)"], "initializationStart": [116], "initializationEnd": [171], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 287, "focalAPIEnd": 299, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putInt(String,int)", "editor.Editor.putLong(String,long)", "editor.Editor.commit()"], "useStart": [307, 344, 386], "useEnd": [336, 378, 397], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/scottferg/android-desktop-clock/tree/master/src/com/android/deskclock/Alarms.java", "rawCode": "  static void saveSnoozeAlert(final Context context, final int id, final long time) {\n    SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);\n    if (id == -1) {\n      clearSnoozePreference(context, prefs);\n    } else {\n      SharedPreferences.Editor ed = prefs.edit();\n      ed.putInt(PREF_SNOOZE_ID, id);\n      ed.putLong(PREF_SNOOZE_TIME, time);\n      ed.commit();\n    }\n    // Set the next alert after updating the snooze.\n    setNextAlert(context);\n  }\n"}, {"dataset": "edit", "exampleID": 7336, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 138, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [138], "useEnd": [193], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/higepon/Lovamimi-For-Android/tree/master/libs/facebook-android-sdk-3.6.0/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java", "rawCode": "    private void setSelectedSlotNumber(int slot) {\n      // Store the selected slot number for when the app is closed and restarted\n      settings.edit().putInt(SETTINGS_CURRENT_SLOT_KEY, slot).commit();\n      selectedSlotNumber = slot;\n    }\n"}, {"dataset": "edit", "exampleID": 7337, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,int)"], "initializationStart": [61], "initializationEnd": [105], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getInt(String,int)"], "configurationStart": [120], "configurationEnd": [144], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 186, "focalAPIEnd": 198, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)", "sharedPreferences.edit()", "editor.putInt(String,*)"], "useStart": [186, 245, 245], "useEnd": [230, 257, 281], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ll-KS-ll/Schedule/tree/master/Schema/src/com/schema/bro/LessonActivity.java", "rawCode": "  public void createLesson() {\n    SharedPreferences prefs = getSharedPreferences(Schedule.PREFS_NAME, 0);\n    int ID = prefs.getInt(\"count\", 0);\n    String data = getInputData(ID);\n    prefs.edit().putString(\"lesson_\" + ID, data).commit();\n    prefs.edit().putInt(\"count\", ID + 1).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7338, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [569], "initializationEnd": [629], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 684, "focalAPIEnd": 704, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["sharedPreferences.getString(String,String)"], "useStart": [861], "useEnd": [907], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sniderzero/UTPRO/tree/master/UltitrackPro/src/com/appsmarttech/ut90/Days_Fragment.java", "rawCode": "  @Override\n  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    // Inflate the layout for this fragment\n    View vDays = inflater.inflate(R.layout.days_fragment, container, false);\n    // setting actionbar details\n    actionBar = getSherlockActivity().getSupportActionBar();\n    actionBar.setDisplayUseLogoEnabled(true);\n    actionBar.setDisplayShowTitleEnabled(true);\n    actionBar.setDisplayShowHomeEnabled(true);\n    actionBar.setDisplayHomeAsUpEnabled(true);\n\n    // open preferences\n    spPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());\n\n    // declare preference editor\n    ePreferences = spPreferences.edit();\n\n    // boolean for tracking the presence of the cab\n    bActionPresent = false;\n\n    // grabbing the active program from preferences\n    sActiveProgram = spPreferences.getString(\"kActiveProgram\", \"1\");\n\n    // converting it to Integer\n    iActiveProgram = Integer.valueOf(sActiveProgram);\n\n    // assigning listview to listview widget\n    lvDays = (ListView) vDays.findViewById(R.id.lvDays);\n\n    // telling it that it has an actionbar\n    setHasOptionsMenu(true);\n\n    // declaring intents\n    inExerDetails = new Intent(getActivity(), ExerDetail_Activity.class);\n\n    // opening database\n    db = (new DBHelper_activity(getActivity()));\n\n    // getting the name of the program based on the program id in preferences\n    pActiveProgram = db.getProgram(iActiveProgram);\n\n    // setting activity title based on selected program\n    getActivity().setTitle(pActiveProgram.getName());\n\n    // building list of days based on program ID\n    Days = db.getAllProgramDays(iActiveProgram);\n\n    // building the onclick listener for the lvPrograms Listview\n    lvDaysListener =\n        new OnItemClickListener() {\n\n          @Override\n          public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n            if (bActionPresent) { // if the action bar is up, just update the selected day\n              // grabbing the selected item from lvPrograms\n              dSelected = (Day) (lvDays.getItemAtPosition(position));\n              mActionMode.setTitle(dSelected.getName());\n            } else {\n              // grabbing the selected day object\n              dSelected = (Day) (lvDays.getItemAtPosition(position));\n              // putting the dayID of the selected day in a bundle to send to the next activity\n              inExerDetails.putExtra(\"DAY_ID\", dSelected.getDayID());\n              inExerDetails.putExtra(\"ROW_ID\", dSelected.getID());\n              // launching the exercise details activity\n              startActivity(inExerDetails);\n            }\n          }\n        };\n    // building the long onclick listener for the lvPrograms listview\n\n    lvDaysLongListener =\n        new OnItemLongClickListener() {\n\n          @Override\n          public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n            // grabbing the selected item from lvPrograms\n            dSelected = (Day) (lvDays.getItemAtPosition(position));\n            // grabbing dayname to update the action bar with\n            sDayName = dSelected.getName();\n            // launching the contextual action bar\n            mActionMode = getSherlockActivity().startActionMode(new mActionModeCallback());\n            return true;\n          }\n        };\n\n    // setting up days adapter\n    lvDaysAdapter = new DayArrayAdapter(getActivity(), Days);\n\n    // setting click listener, long click listener, and adapter to the listview\n    lvDays.setOnItemClickListener(lvDaysListener);\n    lvDays.setOnItemLongClickListener(lvDaysLongListener);\n    lvDays.setAdapter(lvDaysAdapter);\n    // scrolling to first exercise\n    lvDays.setSelection(db.getNextDay(iActiveProgram) - 2);\n\n    return vDays;\n  }\n"}, {"dataset": "edit", "exampleID": 7339, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [238], "initializationEnd": [292], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["myUid()", "getSharedPreferences(String,*)"], "tryExpressionStart": 212, "tryExpressionEnd": 216, "tryBlockStart": 212, "tryBlockEnd": 552, "catchExpressionStart": 358, "catchExpressionEnd": 378, "catchBlockStart": 358, "catchBlockEnd": 552, "exceptionHandlingCallStart": [421, 484], "exceptionHandlingCallEnd": [447, 545], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(sharedPreferences!=null)", "guardType": "IF {", "guardExpressionStart": 115, "guardExpressionEnd": 139, "guardBlockStart": 115, "guardBlockEnd": 159, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 322, "focalAPIEnd": 340, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.commit()"], "useStart": [322], "useEnd": [349], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/todoroo/astrid/tree/master/api/src/com/todoroo/andlib/utility/Preferences.java", "rawCode": "  /** Get preferences object from the context */\n  public static SharedPreferences getPrefs(Context context) {\n    if (preferences != null) return preferences;\n\n    context = context.getApplicationContext();\n    try {\n      preferences = PreferenceManager.getDefaultSharedPreferences(context);\n\n      // try writing\n      preferences.edit().commit();\n\n    } catch (Exception e) {\n      String alternate = \"preferences\" + android.os.Process.myUid(); // $NON-NLS-1$\n      preferences = context.getSharedPreferences(alternate, Context.MODE_PRIVATE);\n    }\n\n    return preferences;\n  }\n"}, {"dataset": "edit", "exampleID": 7340, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 117, "focalAPIEnd": 128, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)"], "useStart": [117], "useEnd": [188], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Skylark95/Amazon-App-Notifier/tree/master/app/src/test/java/com/skylark95/amazonfreenotify/notification/AppDataNotificationTest.java", "rawCode": "  @Test\n  public void doesNotCallDescriptionIfICSAndPrefFalse() {\n    buildFreeAppNotificationWithMockAppData();\n    pref.edit().putBoolean(Preferences.PREF_EXPANDABLE_NOTIFICATION, false).commit();\n    setSdkInt(Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1);\n    freeAppNotification.buildNotification();\n    verify(mockAppData, never()).getAppDescription();\n  }\n"}, {"dataset": "edit", "exampleID": 7341, "initialization": ["SharedPreferences sharedPreferences = getSharedPrefs(*)"], "initializationStart": [337], "initializationEnd": [409], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences.contains(\"createTutorial\",)&&sharedPreferences.getBoolean(\"createTutorial\",false,)", "guardType": "IF {", "guardExpressionStart": 1584, "guardExpressionEnd": 1666, "guardBlockStart": 1584, "guardBlockEnd": 1865, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 1677, "focalAPIEnd": 1689, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)"], "useStart": [1677], "useEnd": [1714], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/socialpercon/anki/tree/master/src/com/ichi2/async/DeckTask.java", "rawCode": "  private TaskData doInBackgroundOpenCollection(TaskData... params) {\n    Log.i(AnkiDroidApp.TAG, \"doInBackgroundOpenCollection\");\n    long time = Utils.intNow(1000);\n    Resources res = AnkiDroidApp.getInstance().getBaseContext().getResources();\n    String collectionFile = params[0].getString();\n\n    SharedPreferences prefs =\n        AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());\n\n    // see, if a collection is still opened\n    Collection oldCol = AnkiDroidApp.getCol();\n\n    Collection col = null;\n\n    publishProgress(new TaskData(res.getString(R.string.open_collection)));\n\n    if (!(AnkiDroidApp.colIsOpen() && oldCol.getPath().equals(collectionFile))) {\n\n      // do a safety backup if last backup is too old --> addresses\n      // android's delete db bug\n      if (BackupManager.safetyBackupNeeded(collectionFile)) {\n        publishProgress(new TaskData(res.getString(R.string.backup_collection)));\n        BackupManager.performBackup(collectionFile);\n      }\n      publishProgress(new TaskData(res.getString(R.string.open_collection)));\n\n      // load collection\n      try {\n        col = AnkiDroidApp.openCollection(collectionFile);\n      } catch (RuntimeException e) {\n        BackupManager.restoreCollectionIfMissing(collectionFile);\n        Log.e(\n            AnkiDroidApp.TAG,\n            \"doInBackgroundOpenCollection - RuntimeException on opening collection: \" + e);\n        AnkiDroidApp.saveExceptionReportFile(e, \"doInBackgroundOpenCollection\");\n        return new TaskData(false);\n      }\n      // create tutorial deck if needed\n      if (prefs.contains(\"createTutorial\") && prefs.getBoolean(\"createTutorial\", false)) {\n        prefs.edit().remove(\"createTutorial\").commit();\n        publishProgress(new TaskData(res.getString(R.string.tutorial_load)));\n        doInBackgroundLoadTutorial(new TaskData(col));\n      }\n    } else {\n      Log.i(AnkiDroidApp.TAG, \"doInBackgroundOpenCollection: collection still open - reusing it\");\n      col = oldCol;\n    }\n    Object[] counts = null;\n    DeckTask.TaskData result = doInBackgroundLoadDeckCounts(new TaskData(col));\n    if (result != null) {\n      counts = result.getObjArray();\n    }\n    if (prefs.getBoolean(\"splashScreen\", false)) {\n      long millies = Utils.intNow(1000) - time;\n      if (millies < 1000) {\n        try {\n          Thread.sleep(1200 - millies);\n        } catch (InterruptedException e) {\n        }\n      }\n    }\n    return new TaskData(col, counts);\n  }\n"}, {"dataset": "edit", "exampleID": 7342, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 787, "focalAPIEnd": 808, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [787], "useEnd": [840], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CommanderAlchemy/SmartPark/tree/master/SmartParkAndroid/src/com/smartpark/activities/MainActivity.java", "rawCode": "  /** On ActionMenu Select Do something when that get selected in the ActionMenu */\n  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    if (D) Log.i(TAG, \"++ onOptionsItemSelected ++\");\n\n    if (D) {\n      Log.d(\n          TAG,\n          \"Item: \"\n              + item.toString()\n              + \"\\nID: \"\n              + item.getItemId()\n              + \"\\nIntent: \"\n              + item.getIntent());\n    }\n\n    switch (item.getItemId()) {\n      case 0:\n        Toast.makeText(this, \"Login\", Toast.LENGTH_SHORT).show();\n\n        startActivityForResult(\n            new Intent(this, LoginActivity.class).putExtra(\"CancelAllowed\", true), REQUEST_LOGIN);\n        return true;\n\n      case 1:\n        Toast.makeText(this, \"Logged out\", Toast.LENGTH_SHORT).show();\n        mainPreference.edit().putBoolean(\"loginState\", false).apply();\n        Intent intent = new Intent(getBaseContext(), BackOperationService.class);\n        intent.putExtra(\"Restart\", true);\n        startService(intent);\n        return true;\n\n      case 2:\n        Toast.makeText(this, \"Terminating Service\", Toast.LENGTH_SHORT).show();\n        stopService(new Intent(getBaseContext(), BackOperationService.class));\n        finish();\n        return true;\n\n        // default:\n        // Toast.makeText(this, \"You clicked on Settings\",\n        // Toast.LENGTH_SHORT)\n        // .show();\n        // startActivity(new Intent(this, SettingsActivity.class));\n    }\n    return false;\n  }\n"}, {"dataset": "edit", "exampleID": 7343, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 92, "focalAPIEnd": 104, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [92], "useEnd": [112], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/maplesyrup/maple-android/tree/master/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java", "rawCode": "  /** Clears out all token information stored in this cache. */\n  public void clear() {\n    cache.edit().clear().commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7344, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 178, "focalAPIEnd": 187, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)", "editor.putString(String,*)", "editor.putString(String,*)", "editor.putBoolean(String,boolean)", "editor.putString(String,String)", "editor.putString(String,String)", "editor.commit()"], "useStart": [216, 255, 321, 403, 443, 481, 527], "useEnd": [247, 313, 382, 435, 473, 515, 540], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/SummerAndroid/Summer/tree/master/Summer-Android/src/summer/android/Login.java", "rawCode": "  /** 保存用户信息 */\n  private void SaveUserData(boolean isChecked) {\n    // 载入配置文件\n    // SharedPreferences sp = getSharedPreferences(PREFS_NAME, 0);\n    // 写入配置文件\n    Editor spEd = sp.edit();\n    if (isChecked) {\n      spEd.putBoolean(\"isSave\", true);\n      spEd.putString(\"userName\", loginname.getText().toString());\n      spEd.putString(\"userPassword\", password.getText().toString());\n    } else {\n      spEd.putBoolean(\"isSave\", false);\n      spEd.putString(\"userName\", \"\");\n      spEd.putString(\"userPassword\", \"\");\n    }\n    spEd.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7345, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 92, "focalAPIEnd": 104, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [92], "useEnd": [112], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/facebook-android-sdk-master/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java", "rawCode": "  /** Clears out all token information stored in this cache. */\n  public void clear() {\n    cache.edit().clear().commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7346, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Activity)"], "initializationStart": [110], "initializationEnd": [165], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 386, "focalAPIEnd": 404, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(*,String)"], "useStart": [386], "useEnd": [459], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/shangrz/noticeUEFA/tree/master/src/com/shang/noticeuefa/util/HostSetter.java", "rawCode": "  public void setHost() {\n    MobclickAgent.updateOnlineConfig(activity);\n    SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(activity);\n    String host =\n        MobclickAgent.getConfigParams(activity, activity.getString(R.string.umeng_host_key));\n    MobclickAgent.updateOnlineConfig(activity, \"host\");\n    if (host != null && host.length() > 0) {\n      preferences.edit().putString(activity.getString(R.string.key_host), host).commit();\n      this.host = host;\n    } else {\n      this.host = preferences.getString(activity.getString(R.string.key_host), \"64.30.136.126\");\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7347, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [288], "initializationEnd": [365], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 555, "focalAPIEnd": 563, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,*)", "editor.putString(String,*)", "editor.Editor.commit()"], "useStart": [633, 672, 893], "useEnd": [666, 715, 903], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/Spinner/src/com/android/example/spinner/SpinnerActivity.java", "rawCode": "  /**\n   * Write the application's current state to a properties repository.\n   *\n   * @param c - The Activity's Context\n   */\n  public boolean writeInstanceState(Context c) {\n\n    /*\n     * Get the SharedPreferences object for this application\n     */\n\n    SharedPreferences p =\n        c.getSharedPreferences(SpinnerActivity.PREFERENCES_FILE, MODE_WORLD_READABLE);\n\n    /*\n     * Get the editor for this object. The editor interface abstracts the implementation of\n     * updating the SharedPreferences object.\n     */\n\n    SharedPreferences.Editor e = p.edit();\n\n    /*\n     * Write the keys and values to the Editor\n     */\n\n    e.putInt(POSITION_KEY, this.mPos);\n    e.putString(SELECTION_KEY, this.mSelection);\n\n    /*\n     * Commit the changes. Return the result of the commit. The commit fails if Android\n     * failed to commit the changes to persistent storage.\n     */\n\n    return (e.commit());\n  }\n"}, {"dataset": "edit", "exampleID": 7348, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [-1195], "initializationEnd": [-1131], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": -968, "focalAPIEnd": -959, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(*,String)", "editor.Editor.commit()", "sharedPreferences.edit()", "editor.putString(*,*)", "editor.Editor.commit()"], "useStart": [377, 416, 702, 724, 775], "useEnd": [406, 426, 711, 763, 785], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mconf/sipdroid/tree/master/src/org/sipdroid/codecs/Codecs.java", "rawCode": "  public static void check() {\n    HashMap<String, String> old = new HashMap<String, String>(codecs.size());\n\n    for (Codec c : codecs) {\n      c.update();\n      old.put(c.name(), c.getValue());\n      if (!c.isLoaded()) {\n        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(Receiver.mContext);\n        SharedPreferences.Editor e = sp.edit();\n\n        e.putString(c.key(), \"never\");\n        e.commit();\n      }\n    }\n\n    for (Codec c : codecs)\n      if (!old.get(c.name()).equals(\"never\")) {\n        c.init();\n        if (c.isLoaded()) {\n          SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(Receiver.mContext);\n          SharedPreferences.Editor e = sp.edit();\n\n          e.putString(c.key(), old.get(c.name()));\n          e.commit();\n          c.init();\n        } else c.fail();\n      }\n  }\n"}, {"dataset": "edit", "exampleID": 7349, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [802], "initializationEnd": [866], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences!=null", "guardType": "IF {", "guardExpressionStart": 874, "guardExpressionEnd": 898, "guardBlockStart": 874, "guardBlockEnd": 2010, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 1137, "focalAPIEnd": 1155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)", "editor.putString(String,String)", "editor.commit()"], "useStart": [1588, 1793, 1873], "useEnd": [1621, 1826, 1883], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vipersaudio/viper4android_fx/tree/master/android_2.3/src/com/vipercn/viper4android_v2/activity/Utils.java", "rawCode": "  public static boolean LoadProfile(\n      String szProfileName, String szProfileDir, String szPreferenceName, Context ctx) {\n    try {\n      File fProfileDirHandle = new File(szProfileDir);\n      ArrayList<String> szProfileFileList = new ArrayList<String>();\n      GetFileNameList(fProfileDirHandle, \".prf\", szProfileFileList);\n      String szProfileFileName = \"\";\n      for (int idx = 0; idx < szProfileFileList.size(); idx++) {\n        String szFileName = szProfileDir + szProfileFileList.get(idx);\n        String szName = GetProfileName(szFileName);\n        if (szProfileName.trim().equalsIgnoreCase(szName.trim())) {\n          szProfileFileName = szFileName;\n          break;\n        }\n      }\n      if (szProfileFileName.equals(\"\")) return false;\n\n      SharedPreferences preferences =\n          ctx.getSharedPreferences(szPreferenceName, Context.MODE_PRIVATE);\n      if (preferences != null) {\n        FileInputStream fisInput = new FileInputStream(szProfileFileName);\n        InputStreamReader isrInput = new InputStreamReader(fisInput, \"UTF-8\");\n        BufferedReader brInput = new BufferedReader(isrInput);\n        Editor e = preferences.edit();\n        while (true) {\n          String szLine = brInput.readLine();\n          if (szLine == null) break;\n          if (szLine.startsWith(\"#\")) continue;\n\n          String szChunks[] = szLine.split(\"=\");\n          if (szChunks.length != 3) continue;\n          if (szChunks[1].trim().equalsIgnoreCase(\"boolean\")) {\n            String szParameter = szChunks[0];\n            boolean bValue = Boolean.valueOf(szChunks[2]);\n            e.putBoolean(szParameter, bValue);\n          } else if (szChunks[1].trim().equalsIgnoreCase(\"string\")) {\n            String szParameter = szChunks[0];\n            String szValue = szChunks[2];\n            e.putString(szParameter, szValue);\n          } else continue;\n        }\n        e.commit();\n        brInput.close();\n        isrInput.close();\n        fisInput.close();\n\n        return true;\n      } else return false;\n    } catch (Exception e) {\n      return false;\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7350, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [105], "initializationEnd": [171], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 207, "focalAPIEnd": 219, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putString(String,String)", "editor.Editor.commit()"], "useStart": [225, 273], "useEnd": [267, 284], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/turbo-lover/tagil/tree/master/NewsTagil/src/main/java/ru/news/tagil/utility/myPreferencesWorker.java", "rawCode": "  public void set_login(String login) {\n    ContextWrapper cw = new ContextWrapper(context);\n    sPref = cw.getSharedPreferences(preference_location, Context.MODE_PRIVATE);\n    SharedPreferences.Editor ed = sPref.edit();\n    ed.putString(preference_user_login, login);\n    ed.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7351, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 395, "focalAPIEnd": 417, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [395], "useEnd": [466], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nowlauncher/now-launcher/tree/master/NowLauncher/src/com/nowlauncher/nowlauncher/MainActivity.java", "rawCode": "  private void removeHome(int position) {\n    home_app1_list.remove(position);\n    applicationsHomeAdapter.notifyDataSetChanged();\n    String newStringPreference = \"\";\n    for (int i = 0; i < home_app1_list.size(); i++) {\n      AppInfo appInfo = home_app1_list.get(i);\n      newStringPreference =\n          newStringPreference + appInfo.packagename + \"&\" + appInfo.packageclass + \"|\";\n    }\n    home_preference.edit().putString(\"home_app1_list\", newStringPreference).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7352, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Context)"], "initializationStart": [96], "initializationEnd": [150], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getInt(String,int)"], "configurationStart": [187], "configurationEnd": [223], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 304, "focalAPIEnd": 315, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [304], "useEnd": [347], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Mms/tree/master/src/com/android/mms/util/CacheManager.java", "rawCode": "  private static void removeOldFilesIfNecessary(Context context) {\n    SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(context);\n    int n = 0;\n    try {\n      n = pref.getInt(KEY_CACHE_UP_TO_DATE, 0);\n    } catch (Throwable t) {\n      // ignore.\n    }\n    if (n != 0) return;\n    pref.edit().putInt(KEY_CACHE_UP_TO_DATE, 1).commit();\n\n    clear(context);\n  }\n"}, {"dataset": "edit", "exampleID": 7353, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 36, "focalAPIEnd": 45, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/craining/android-ringforyou/tree/master/src/com/zgy/ringforu/util/PreferenceUtil.java", "rawCode": "  public Editor edit() {\n    return sp.edit();\n  }\n"}, {"dataset": "edit", "exampleID": 7354, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [128], "initializationEnd": [215], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 252, "focalAPIEnd": 261, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)", "editor.Editor.commit()"], "useStart": [267, 335], "useEnd": [329, 347], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/piusvelte/wapdroid-pro/tree/master/src/com/piusvelte/wapdroid/WapdroidUI.java", "rawCode": "  @Override\n  public void onResume() {\n    super.onResume();\n    SharedPreferences sp =\n        (SharedPreferences)\n            getSharedPreferences(getString(R.string.key_preferences), WapdroidService.MODE_PRIVATE);\n    SharedPreferences.Editor spe = sp.edit();\n    spe.putBoolean(getString(R.string.key_manual_override), false);\n    spe.commit();\n    if (sp.getBoolean(getString(R.string.key_manageWifi), false))\n      startService(new Intent(this, WapdroidService.class));\n    else {\n      AlertDialog.Builder dialog = new AlertDialog.Builder(this);\n      dialog.setMessage(R.string.service_info);\n      dialog.setNegativeButton(android.R.string.cancel, this);\n      dialog.show();\n    }\n    bindService(new Intent(this, WapdroidService.class), this, BIND_AUTO_CREATE);\n  }\n"}, {"dataset": "edit", "exampleID": 7355, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [300], "initializationEnd": [367], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 384, "focalAPIEnd": 396, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)", "editor.commit()"], "useStart": [402, 439], "useEnd": [433, 449], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/digitalica/skydivekompasroos/tree/master/app/src/nl/digitalica/skydivekompasroos/Skr.java", "rawCode": "  /**\n   * * Saves an (integer) preference to the global prefs var.\n   *\n   * @param preferenceName the name of the preference\n   * @param value the (new) value of the preference\n   */\n  public static void savePreference(Context ctx, String preferenceName, int value) {\n    SharedPreferences prefs = ctx.getSharedPreferences(Skr.KOMPASROOSPREFS, Context.MODE_PRIVATE);\n    Editor e = prefs.edit();\n    e.putInt(preferenceName, value);\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7356, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 72, "focalAPIEnd": 85, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putBoolean(String,boolean)", "editor.Editor.putBoolean(String,boolean)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.putBoolean(String,*)", "editor.Editor.commit()"], "useStart": [92, 153, 223, 273, 319, 376, 423, 478, 535, 597, 666, 730, 794], "useEnd": [147, 217, 267, 313, 370, 416, 472, 529, 591, 660, 724, 787, 805], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vujazzman/android-vanderbilt-dining/tree/master/src/edu/vanderbilt/vuphone/android/dining/Main.java", "rawCode": "  private void commitUserSettings() {\n    SharedPreferences.Editor ed = mprefs.edit();\n\n    ed.putBoolean(PREF_SETTINGS_MODIFIED, settingsModified);\n    ed.putBoolean(PREF_SORT_SETTINGS_MODIFIED, sortSettingsModified);\n    ed.putBoolean(PREF_FAVORITE, checkedSort[0]);\n    ed.putBoolean(PREF_OPEN, checkedSort[1]);\n    ed.putBoolean(PREF_TIME_TILL_CLOSE, checkedSort[2]);\n    ed.putBoolean(PREF_NEAR, checkedSort[3]);\n\n    ed.putBoolean(PREF_FAV_ICON, ra.getShowFavIcon());\n    ed.putBoolean(PREF_GRAY_CLOSED, ra.getGrayClosed());\n    ed.putBoolean(PREF_SHOW_DISTANCE, ra.getShowDistances());\n    ed.putBoolean(PREF_SHOW_PLACE_TYPE, ra.getShowRestaurantType());\n    ed.putBoolean(PREF_HIDE_OFF_CAMPUS, ra.getHideOffCampus());\n    ed.putBoolean(PREF_HIDE_OFF_CARD, ra.getHideOffTheCard());\n\n    ed.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7357, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [628], "initializationEnd": [679], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 719, "focalAPIEnd": 730, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(*,*)", "editor.Editor.commit()"], "useStart": [740, 799], "useEnd": [789, 810], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onyx-intl/orion-viewer/tree/master/orion-viewer/src/universe/constellation/orion/viewer/prefs/OrionTapActivity.java", "rawCode": "  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (resultCode == Activity.RESULT_OK) {\n      if (active_view != null) {\n        TextView view =\n            (TextView) active_view.findViewById(isLong ? R.id.longClick : R.id.shortClick);\n        int code = data.getIntExtra(\"code\", 0);\n        Action action = Action.getAction(code);\n        myCode[index][isLong ? 1 : 0] = action.getCode();\n        view.setText(getResources().getString(action.getName()));\n\n        int i = index / 3;\n        int j = index % 3;\n        Common.d(index + \" \" + i + \" \" + j);\n        SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);\n        SharedPreferences.Editor ed = pref.edit();\n        ed.putInt(getKey(i, j, isLong), action.getCode());\n        ed.commit();\n      }\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7358, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 418, "focalAPIEnd": 439, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,*)"], "useStart": [418], "useEnd": [530], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/droidjunk_packages_apps_Contacts/tree/master/src/com/android/contacts/list/ContactListFilter.java", "rawCode": "  /**\n   * Store the given {@link ContactListFilter} to preferences. If the requested filter is of type\n   * {@link #FILTER_TYPE_SINGLE_CONTACT} then do not save it to preferences because it is a\n   * temporary state.\n   */\n  public static void storeToPreferences(SharedPreferences prefs, ContactListFilter filter) {\n    if (filter != null && filter.filterType == FILTER_TYPE_SINGLE_CONTACT) {\n      return;\n    }\n    prefs\n        .edit()\n        .putInt(KEY_FILTER_TYPE, filter == null ? FILTER_TYPE_DEFAULT : filter.filterType)\n        .putString(KEY_ACCOUNT_NAME, filter == null ? null : filter.accountName)\n        .putString(KEY_ACCOUNT_TYPE, filter == null ? null : filter.accountType)\n        .putString(KEY_DATA_SET, filter == null ? null : filter.dataSet)\n        .apply();\n  }\n"}, {"dataset": "edit", "exampleID": 7359, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 50, "focalAPIEnd": 74, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [50], "useEnd": [108], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chgenly/experiment/tree/master/OsmAnd/src/net/osmand/plus/OsmandSettings.java", "rawCode": "  public void setLastKnownMapZoom(int zoom) {\n    globalPreferences.edit().putInt(LAST_KNOWN_MAP_ZOOM, zoom).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7360, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 92, "focalAPIEnd": 104, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.clear()"], "useStart": [92], "useEnd": [112], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JackWoot/CSC2015/tree/master/FacebookSDK/src/com/facebook/SharedPreferencesTokenCachingStrategy.java", "rawCode": "  /** Clears out all token information stored in this cache. */\n  public void clear() {\n    cache.edit().clear().commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7361, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 182, "focalAPIEnd": 200, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(*)", "editor.Editor.remove(String)", "editor.Editor.commit()"], "useStart": [251, 308, 351], "useEnd": [296, 345, 371], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/oyatsukai/openkit-android-beta/tree/master/OpenKitSDK/src/io/openkit/asynchttp/PersistentCookieStore.java", "rawCode": "  @Override\n  public void clear() {\n    // Clear cookies from local store\n    cookies.clear();\n\n    // Clear cookies from persistent store\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n    for (String name : cookies.keySet()) {\n      prefsWriter.remove(COOKIE_NAME_PREFIX + name);\n    }\n    prefsWriter.remove(COOKIE_NAME_STORE);\n    prefsWriter.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7362, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 50, "focalAPIEnd": 79, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [50], "useEnd": [101], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/priyaaank/bloodtorrent/tree/master/droid/b/src/com/barefoot/bloodtorrent/plugins/AppPreferences.java", "rawCode": "  public void add(String key, String value) {\n    applicationPreferences.edit().putString(key, value).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7363, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences!=null", "guardType": "IF {", "guardExpressionStart": 91, "guardExpressionEnd": 136, "guardBlockStart": 91, "guardBlockEnd": 203, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 152, "focalAPIEnd": 164, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [152], "useEnd": [187], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OSAStudio/newshub/tree/master/src/com/osastudio/newshub/library/PreferenceManager.java", "rawCode": "  public boolean setBooleanValue(SharedPreferences prefs, String key, boolean value) {\n    if (prefs != null && !TextUtils.isEmpty(key)) {\n      return prefs.edit().putBoolean(key, value).commit();\n    }\n    return false;\n  }\n"}, {"dataset": "edit", "exampleID": 7364, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [96], "initializationEnd": [187], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getString(String,String)"], "configurationStart": [209], "configurationEnd": [276], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 356, "focalAPIEnd": 374, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(*,String)"], "useStart": [356], "useEnd": [432], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/foxykeep/DataDroid/tree/master/DataDroidPoC/src/com/foxykeep/datadroidpoc/util/UserManager.java", "rawCode": "  public static String getUserId(Context context) {\n    SharedPreferences sharedPrefs =\n        context.getSharedPreferences(SharedPrefsConfig.SHARED_PREFS_FILENAME, Context.MODE_PRIVATE);\n    String userId = sharedPrefs.getString(SharedPrefsConfig.SHARED_PREFS_USER_ID, null);\n\n    if (userId == null) {\n      userId = UUID.randomUUID().toString();\n      sharedPrefs.edit().putString(SharedPrefsConfig.SHARED_PREFS_USER_ID, userId).commit();\n    }\n\n    return userId;\n  }\n"}, {"dataset": "edit", "exampleID": 7365, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 119, "focalAPIEnd": 143, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [119], "useEnd": [174], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/comsince/myappweixin/tree/master/musicPlayer/src/com/comsince/knowledge/preferences/MusicPreference.java", "rawCode": "  /**\n   * @param context\n   * @param lrc_color\n   */\n  public void savaLrcColor(Context context, int lrc_color) {\n    sharedPreferences.edit().putInt(\"lrc_color\", lrc_color).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7366, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [249], "initializationEnd": [321], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 1228, "focalAPIEnd": 1246, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)"], "useStart": [1228], "useEnd": [1297], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/helianbobo/FlipDroid/tree/master/girl/src/com/goal98/girl/activity/WeiPaiWebViewClient.java", "rawCode": "  public void onPageFinished(WebView view, String url) {\n    //// System.out.println(\"url\"+url);\n    if (url.indexOf(\"oauth_verifier\") != -1) {\n      sourceDB = new SourceDB(activity);\n      accountDB = new AccountDB(activity);\n\n      preferences = PreferenceManager.getDefaultSharedPreferences(activity.getBaseContext());\n      FlipdroidApplications application = (FlipdroidApplications) activity.getApplication();\n      final OAuth oauth = application.getOauth();\n      if (oauth != null) {\n        UserInfo user = oauth.GetAccessToken(url);\n        if (user != null) {\n\n          // try {\n          // if(!sourceDB.isMySinaWeiboAccountExist())\n          // sourceDB.insert(TikaConstants.TYPE_MY_SINA_WEIBO,\n          // activity.getString(R.string.my_timeline), Constants.SOURCE_HOME,\n          // activity.getString(R.string.my_timeline_desc), null,\"mysina\",\n          // \"http://www.sinaimg.cn/blog/developer/wiki/48x48.png\");\n          // } catch (Exception e) {\n          // Log.w(TAG, e.getMessage(), e);\n          // }\n          accountDB.insertOrUpdateOAuth(\n              user.getUserId(),\n              user.getToken(),\n              user.getTokenSecret(),\n              TikaConstants.TYPE_MY_SINA_WEIBO);\n          preferences.edit().putString(SINA_ACCOUNT_PREF_KEY, user.getUserId()).commit();\n\n          // activity.startActivity(new Intent(activity, IndexActivity.class));\n\n          activity.finish();\n        }\n      }\n      activity.finish();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7367, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [1037], "initializationEnd": [1118], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getLong(String,int)"], "configurationStart": [1351], "configurationEnd": [1412], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 2656, "focalAPIEnd": 2675, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putLong(*,long)"], "useStart": [2656], "useEnd": [2737], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mozilla-services/android-sync/tree/master/src/main/java/org/mozilla/gecko/sync/config/ConfigurationMigrator.java", "rawCode": "  /**\n   * Migrate, if necessary, existing prefs to a certain version.\n   *\n   * <p>Stores current prefs version in Android shared prefs with root \"sync.prefs.version\", which\n   * corresponds to the file \"sync.prefs.version.xml\".\n   *\n   * @param desiredVersion version to finish it.\n   * @param context\n   * @param accountManager\n   * @param account\n   * @param product\n   * @param username\n   * @param serverURL\n   * @param profile\n   * @throws Exception\n   */\n  public static void ensurePrefsAreVersion(\n      final long desiredVersion,\n      final Context context,\n      final AccountManager accountManager,\n      final Account account,\n      final String product,\n      final String username,\n      final String serverURL,\n      final String profile)\n      throws Exception {\n    if (desiredVersion < 0 || desiredVersion > SyncConfiguration.CURRENT_PREFS_VERSION) {\n      throw new IllegalArgumentException(\n          \"Cannot migrate to unknown version \" + desiredVersion + \".\");\n    }\n\n    SharedPreferences versionPrefs =\n        context.getSharedPreferences(\"sync.prefs.version\", Utils.SHARED_PREFERENCES_MODE);\n\n    // We default to 0 since clients getting this code for the first time will\n    // not have \"sync.prefs.version.xml\" *at all*, and upgrading when all old\n    // data is missing is expected to be safe.\n    long currentVersion = versionPrefs.getLong(SyncConfiguration.PREF_PREFS_VERSION, 0);\n    if (currentVersion == desiredVersion) {\n      Logger.info(\n          LOG_TAG,\n          \"Current version (\" + currentVersion + \") is desired version; no need to migrate.\");\n      return;\n    }\n\n    if (currentVersion < 0 || currentVersion > SyncConfiguration.CURRENT_PREFS_VERSION) {\n      throw new IllegalStateException(\n          \"Cannot migrate from unknown version \" + currentVersion + \".\");\n    }\n\n    // Now we're down to either version 0 or version 1.\n    if (currentVersion == 0 && desiredVersion == 1) {\n      Logger.info(LOG_TAG, \"Upgrading from version 0 to version 1.\");\n      upgrade0to1(context, accountManager, account, product, username, serverURL, profile);\n    } else if (currentVersion == 1 && desiredVersion == 0) {\n      Logger.info(LOG_TAG, \"Upgrading from version 0 to version 1.\");\n      upgrade0to1(context, accountManager, account, product, username, serverURL, profile);\n    } else {\n      Logger.warn(\n          LOG_TAG,\n          \"Don't know how to migrate from version \"\n              + currentVersion\n              + \" to \"\n              + desiredVersion\n              + \".\");\n    }\n\n    Logger.info(\n        LOG_TAG, \"Migrated from version \" + currentVersion + \" to version \" + desiredVersion + \".\");\n    versionPrefs.edit().putLong(SyncConfiguration.PREF_PREFS_VERSION, desiredVersion).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7368, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 63, "focalAPIEnd": 76, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)"], "useStart": [63], "useEnd": [104], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Contacts/tree/master/src/com/android/contacts/editor/ContactEditorUtils.java", "rawCode": "  @NeededForTesting\n  void removeDefaultAccountForTest() {\n    mPrefs.edit().remove(KEY_DEFAULT_ACCOUNT).apply();\n  }\n"}, {"dataset": "edit", "exampleID": 7369, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 65, "focalAPIEnd": 111, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)", "editor.remove(String)", "editor.commit()"], "useStart": [117, 149, 185], "useEnd": [143, 179, 196], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/aiQon/crowdshare/tree/master/src/org/servalproject/ServalBatPhoneApplication.java", "rawCode": "  public void resetNumber() throws IOException {\n    Editor ed = ServalBatPhoneApplication.this.settings.edit();\n    ed.remove(\"primaryNumber\");\n    ed.remove(\"primarySubscriber\");\n    ed.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7370, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 90, "focalAPIEnd": 107, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [90], "useEnd": [151], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/t2health/T2-Mood-Tracker-Android/tree/master/MoodTracker/src/com/t2/vas/SharedPref.java", "rawCode": "  public static void setNotifyGroups(SharedPreferences sharedPref, boolean enabled) {\n    sharedPref.edit().putBoolean(\"notify_unused_groups\", enabled).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7371, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 69, "focalAPIEnd": 88, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,Boolean)"], "useStart": [69], "useEnd": [132], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cens/ohmagePhone/tree/master/src/org/ohmage/UserPreferencesHelper.java", "rawCode": "  public boolean setIsSingleCampaignMode(Boolean value) {\n    return mPreferences.edit().putBoolean(KEY_SINGLE_CAMPAIGN_MODE, value).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7372, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 311, "focalAPIEnd": 335, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [311], "useEnd": [377], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mlegenhausen/mdcf/tree/master/MobileDataCollector/src/de/uniluebeck/itm/mdc/service/PluginService.java", "rawCode": "  private void checkFirstLaunch() {\n    boolean isFirstLaunch = true; // sharedPreferences.getBoolean(FIRST_LAUNCH_PREFERECE, true);\n    if (isFirstLaunch) {\n      Log.i(TAG, \"Sending first launch broadcast to find previous installed plugins.\");\n      sendBroadcast(new Intent(PluginIntent.PLUGIN_FIND));\n      sharedPreferences.edit().putBoolean(FIRST_LAUNCH_PREFERECE, false).commit();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7373, "initialization": ["SharedPreferences sharedPreferences = getPrefs()"], "initializationStart": [148], "initializationEnd": [158], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 201, "focalAPIEnd": 213, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)", "sharedPreferences.edit()", "editor.putBoolean(String,boolean)"], "useStart": [201, 372, 372], "useEnd": [250, 384, 417], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/android_packages_apps_settings/tree/master/src/com/android/settings/bluetooth/DockService.java", "rawCode": "  private boolean msgTypeDisableBluetooth(int startId) {\n    if (DEBUG) {\n      Log.d(TAG, \"BT DISABLE\");\n    }\n    final SharedPreferences prefs = getPrefs();\n    if (mLocalAdapter.disable()) {\n      prefs.edit().remove(KEY_DISABLE_BT_WHEN_UNDOCKED).apply();\n      return false;\n    } else {\n      // disable() returned an error. Persist a flag to disable BT later\n      prefs.edit().putBoolean(KEY_DISABLE_BT, true).apply();\n      mPendingTurnOffStartId = startId;\n      if (DEBUG) {\n        Log.d(TAG, \"disable failed. try again later \" + startId);\n      }\n      return true;\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7374, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 129, "focalAPIEnd": 141, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(*,String)", "sharedPreferences.getString(String,String)"], "useStart": [129, 194], "useEnd": [166, 224], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mortenpi/ebookdroid/tree/master/src/org/emdev/common/settings/base/StringPreferenceDefinition.java", "rawCode": "  public String getPreferenceValue(final SharedPreferences prefs, final String defValue) {\n    if (!prefs.contains(key)) {\n      prefs.edit().putString(key, defValue).commit();\n    }\n    return prefs.getString(key, defValue);\n  }\n"}, {"dataset": "edit", "exampleID": 7375, "initialization": ["SharedPreferences sharedPreferences = getSharedPrefs(*)", "SharedPreferences sharedPreferences = getSharedPrefs(*)"], "initializationStart": [3259, 4666], "initializationEnd": [3304, 4699], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getString(String,String)"], "configurationStart": [3330], "configurationEnd": [3363], "guardCondition": "sharedPreferences.getBoolean(\"invertedColors\",false,)", "guardType": "IF {", "guardExpressionStart": 4709, "guardExpressionEnd": 4761, "guardBlockStart": 4709, "guardBlockEnd": 5047, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 4774, "focalAPIEnd": 4792, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)", "sharedPreferences.edit()", "editor.putBoolean(String,boolean)"], "useStart": [4774, 4916, 4916], "useEnd": [4828, 4934, 4969], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/socialpercon/anki/tree/master/src/com/ichi2/anki/DeckPicker.java", "rawCode": "  /** Handles item selections */\n  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    Resources res = getResources();\n\n    switch (item.getItemId()) {\n      case MENU_HELP:\n        showDialog(DIALOG_SELECT_HELP);\n        return true;\n\n      case MENU_SYNC:\n        sync();\n        return true;\n\n      case MENU_ADD_NOTE:\n        addNote();\n        return true;\n\n      case MENU_STATISTICS:\n        showDialog(DIALOG_SELECT_STATISTICS_TYPE);\n        return true;\n\n      case MENU_CARDBROWSER:\n        openCardBrowser();\n        return true;\n\n      case MENU_CREATE_DECK:\n        StyledDialog.Builder builder2 = new StyledDialog.Builder(DeckPicker.this);\n        builder2.setTitle(res.getString(R.string.new_deck));\n\n        mDialogEditText = (EditText) new EditText(DeckPicker.this);\n        // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });\n        builder2.setView(mDialogEditText, false, false);\n        builder2.setPositiveButton(\n            res.getString(R.string.create),\n            new DialogInterface.OnClickListener() {\n\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                String deckName =\n                    mDialogEditText.getText().toString().replaceAll(\"[\\'\\\"\\\\n\\\\r\\\\[\\\\]\\\\(\\\\)]\", \"\");\n                Log.i(AnkiDroidApp.TAG, \"Creating deck: \" + deckName);\n                AnkiDroidApp.getCol().getDecks().id(deckName, true);\n                loadCounts();\n              }\n            });\n        builder2.setNegativeButton(res.getString(R.string.cancel), null);\n        builder2.create().show();\n        return true;\n\n      case MENU_CREATE_DYNAMIC_DECK:\n        StyledDialog.Builder builder3 = new StyledDialog.Builder(DeckPicker.this);\n        builder3.setTitle(res.getString(R.string.new_deck));\n\n        mDialogEditText = (EditText) new EditText(DeckPicker.this);\n        ArrayList<String> names = AnkiDroidApp.getCol().getDecks().allNames();\n        int n = 1;\n        String cramDeckName = \"Cram 1\";\n        while (names.contains(cramDeckName)) {\n          n++;\n          cramDeckName = \"Cram \" + n;\n        }\n        mDialogEditText.setText(cramDeckName);\n        // mDialogEditText.setFilters(new InputFilter[] { mDeckNameFilter });\n        builder3.setView(mDialogEditText, false, false);\n        builder3.setPositiveButton(\n            res.getString(R.string.create),\n            new DialogInterface.OnClickListener() {\n\n              @Override\n              public void onClick(DialogInterface dialog, int which) {\n                long id =\n                    AnkiDroidApp.getCol().getDecks().newDyn(mDialogEditText.getText().toString());\n                openStudyOptions(id, new Bundle());\n              }\n            });\n        builder3.setNegativeButton(res.getString(R.string.cancel), null);\n        builder3.create().show();\n        return true;\n\n      case MENU_ABOUT:\n        startActivity(new Intent(DeckPicker.this, Info.class));\n        if (AnkiDroidApp.SDK_VERSION > 4) {\n          ActivityTransitionAnimation.slide(DeckPicker.this, ActivityTransitionAnimation.RIGHT);\n        }\n        return true;\n\n      case MENU_ADD_SHARED_DECK:\n        if (AnkiDroidApp.getCol() != null) {\n          SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(getBaseContext());\n          String hkey = preferences.getString(\"hkey\", \"\");\n          if (hkey.length() == 0) {\n            showDialog(DIALOG_USER_NOT_LOGGED_IN_ADD_SHARED_DECK);\n          } else {\n            addSharedDeck();\n          }\n        }\n        return true;\n\n      case MENU_IMPORT:\n        showDialog(DIALOG_IMPORT_HINT);\n        return true;\n\n      case MENU_PREFERENCES:\n        startActivityForResult(new Intent(DeckPicker.this, Preferences.class), PREFERENCES_UPDATE);\n        return true;\n\n      case MENU_FEEDBACK:\n        Intent i = new Intent(DeckPicker.this, Feedback.class);\n        i.putExtra(\"request\", REPORT_FEEDBACK);\n        startActivityForResult(i, REPORT_FEEDBACK);\n        if (AnkiDroidApp.SDK_VERSION > 4) {\n          ActivityTransitionAnimation.slide(this, ActivityTransitionAnimation.RIGHT);\n        }\n        return true;\n\n      case CHECK_DATABASE:\n        integrityCheck();\n        return true;\n\n      case StudyOptionsActivity.MENU_ROTATE:\n        if (getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {\n          this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n        } else {\n          this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n        }\n        return true;\n\n      case StudyOptionsActivity.MENU_NIGHT:\n        SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(this);\n        if (preferences.getBoolean(\"invertedColors\", false)) {\n          preferences.edit().putBoolean(\"invertedColors\", false).commit();\n          item.setIcon(R.drawable.ic_menu_night);\n        } else {\n          preferences.edit().putBoolean(\"invertedColors\", true).commit();\n          item.setIcon(R.drawable.ic_menu_night_checked);\n        }\n        return true;\n\n      case MENU_REUPGRADE:\n        restartUpgradeProcess();\n        return true;\n\n      default:\n        return super.onOptionsItemSelected(item);\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7376, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 55, "focalAPIEnd": 80, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)"], "useStart": [55], "useEnd": [131], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Email/tree/master/src/com/android/email/Preferences.java", "rawCode": "  public void setDefaultAccount(Account account) {\n    mSharedPreferences.edit().putString(DEFAULT_ACCOUNT_UUID, account.getUuid()).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7377, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,int)"], "initializationStart": [251], "initializationEnd": [308], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 363, "focalAPIEnd": 381, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)", "editor.putString(*,String)", "editor.putString(*,String)", "editor.putString(*,String)", "editor.putString(*,String)", "editor.Editor.commit()"], "useStart": [391, 467, 535, 602, 672, 784], "useEnd": [457, 525, 592, 662, 736, 810], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tinrap/SiQuoia/tree/master/src/com/sjsu/siquoia/SiQuoiaHomeActivity.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    Intent intent;\n    switch (item.getItemId()) {\n        // user wants to log out\n      case R.id.action_logout:\n        // update user info\n        SharedPreferences preferences = getSharedPreferences(SiQuoiaHomeActivity.SIQUOIA_PREF, 0);\n        SharedPreferences.Editor perferenceUpdater = preferences.edit();\n        perferenceUpdater.putBoolean(SiQuoiaHomeActivity.LOGGED_IN, false);\n        perferenceUpdater.putString(SiQuoiaHomeActivity.EMAIL, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.QUIZ, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.ANSWERS, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.PACKET_TYPE, \"\");\n\n        // commit preference changes\n        perferenceUpdater.commit();\n\n        // finish this activity and take user to login screen\n        intent = new Intent();\n        intent.setClass(SiQuoiaHomeActivity.this, SiQuoiaLoginActivity.class);\n        startActivity(intent);\n        finish();\n        break;\n\n        // user is redeeming a code\n      case R.id.action_redeem:\n        showRedeemCodeAlert();\n        break;\n\n      case R.id.action_user_profile:\n        intent = new Intent();\n        intent.putExtra(USER, user);\n        intent.setClass(SiQuoiaHomeActivity.this, UserProfileActivity.class);\n        startActivity(intent);\n        break;\n\n      default:\n        break;\n    }\n    return false;\n  }\n"}, {"dataset": "edit", "exampleID": 7378, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [339], "initializationEnd": [402], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(sharedPreferences.getBoolean(Settings.TRIP_ENABLED_KEY,false,)==false) && sharedPreferences.getBoolean(Settings.TRIP_ENABLED_KEY,false,)==true", "guardType": "IF {", "guardExpressionStart": 65, "guardExpressionEnd": 89, "guardBlockStart": 65, "guardBlockEnd": 1801, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 849, "focalAPIEnd": 858, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)"], "useStart": [849], "useEnd": [903], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jonathanws/WavyLeaf_android/tree/master/src/com/towson/wavyleaf/Main.java", "rawCode": "  @Deprecated\n  @Override\n  public void onClick(View view) {\n    if (view == this.bu_new) {\n      // start searching for location\n      findUsersLocation();\n\n      Intent newSightingIntent = new Intent(this, Sighting.class);\n      this.startActivity(newSightingIntent);\n\n    } else if (view == this.bu_trip) {\n      SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getBaseContext());\n\n      if (sp.getBoolean(Settings.TRIP_ENABLED_KEY, false)\n          == false) { // if user wants to start a new trip\n        showDialog(ONSTART);\n\n        // start searching for location\n        findUsersLocation();\n\n        // 6 hour reminder service\n        startService(new Intent(Main.this, ReminderService.class));\n      } else if (sp.getBoolean(Settings.TRIP_ENABLED_KEY, false)\n          == true) { // If trip already in session\n        sp.edit().putBoolean(Settings.TRIP_ENABLED_KEY, false).commit(); // Turn it off\n        tripSelection.setText(\"- - -\");\n        determineButtonDrawable();\n\n        // stop searching for location\n        stopSearchingForLocation();\n\n        // Cancel any existing trip notifications in system bar, since trip is now finished\n        nm = ((NotificationManager) getSystemService(NOTIFICATION_SERVICE));\n        nm.cancel(Main.notifTripID);\n\n        // TODO I really don't think this code should be here\n        // 6 hour reminder service\n        // stopService(new Intent(Main.this, ReminderService.class));\n\n        // Trip notification service\n        Intent alarmIntent = new Intent(this, AlarmReceiver.class);\n        PendingIntent sender = PendingIntent.getBroadcast(this, 1, alarmIntent, 0);\n\n        am = (AlarmManager) getSystemService(ALARM_SERVICE);\n        am.cancel(sender);\n\n        // if (ctd != null)\n        // ctd.cancel();\n      }\n    } // else if (view == this.bu_upload) {\n    // Intent pushIntent = new Intent(this, UploadActivity.class);\n    // this.startActivity(pushIntent);\n    // }\n  }\n"}, {"dataset": "edit", "exampleID": 7379, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(Activity)"], "initializationStart": [123], "initializationEnd": [178], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(sharedPreferences.getBoolean(PreferencesActivity.KEY_NOT_OUR_RESULTS_SHOWN,false,))", "guardType": "IF {", "guardExpressionStart": 184, "guardExpressionEnd": 259, "guardBlockStart": 184, "guardBlockEnd": 710, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 399, "focalAPIEnd": 411, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)"], "useStart": [399], "useEnd": [475], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/telgniw/BukuDroid/tree/master/Mobile/ZXing/src/com/google/zxing/client/android/result/ResultHandler.java", "rawCode": "  protected void showNotOurResults(int index, AlertDialog.OnClickListener proceedListener) {\n    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(activity);\n    if (prefs.getBoolean(PreferencesActivity.KEY_NOT_OUR_RESULTS_SHOWN, false)) {\n      // already seen it, just proceed\n      proceedListener.onClick(null, index);\n    } else {\n      // note the user has seen it\n      prefs.edit().putBoolean(PreferencesActivity.KEY_NOT_OUR_RESULTS_SHOWN, true).commit();\n      AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n      builder.setMessage(R.string.msg_not_our_results);\n      builder.setPositiveButton(R.string.button_ok, proceedListener);\n      builder.show();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7380, "initialization": ["SharedPreferences sharedPreferences = getActivity()"], "initializationStart": [267], "initializationEnd": [280], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getBoolean(String,boolean)"], "configurationStart": [368], "configurationEnd": [445], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 484, "focalAPIEnd": 502, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [484], "useEnd": [567], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DroidJunk/android_packages_apps_settings/tree/master/src/com/android/settings/AccessibilitySettings.java", "rawCode": "  private void offerInstallAccessibilitySerivceOnce() {\n    // There is always one preference - if no services it is just a message.\n    if (mServicesCategory.getPreference(0) != mNoServicesMessagePreference) {\n      return;\n    }\n    SharedPreferences preferences = getActivity().getPreferences(Context.MODE_PRIVATE);\n    final boolean offerInstallService =\n        !preferences.getBoolean(KEY_INSTALL_ACCESSIBILITY_SERVICE_OFFERED_ONCE, false);\n    if (offerInstallService) {\n      preferences.edit().putBoolean(KEY_INSTALL_ACCESSIBILITY_SERVICE_OFFERED_ONCE, true).commit();\n      // Notify user that they do not have any accessibility\n      // services installed and direct them to Market to get TalkBack.\n      showDialog(DIALOG_ID_NO_ACCESSIBILITY_SERVICES);\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7381, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "sharedPreferences!=null", "guardType": "IF {", "guardExpressionStart": 120, "guardExpressionEnd": 151, "guardBlockStart": 120, "guardBlockEnd": 230, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 160, "focalAPIEnd": 185, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [160], "useEnd": [214], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mobilis/mobilis/tree/master/MXA/src/de/tudresden/inf/rn/mobilis/mxa/MXAController.java", "rawCode": "  /**\n   * Sets the XMPP host address (mandatory).\n   *\n   * @param host\n   */\n  public void setHost(String host) {\n    if (mSharedPreferences != null) {\n      mSharedPreferences.edit().putString(\"pref_host\", host).commit();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7382, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 57, "focalAPIEnd": 82, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [57], "useEnd": [122], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Email/tree/master/src/com/android/email/Preferences.java", "rawCode": "  public void setEnableDebugLogging(boolean value) {\n    mSharedPreferences.edit().putBoolean(ENABLE_DEBUG_LOGGING, value).apply();\n  }\n"}, {"dataset": "edit", "exampleID": 7383, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(String,*)"], "initializationStart": [97], "initializationEnd": [160], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 173, "focalAPIEnd": 185, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [173], "useEnd": [221], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/adamz667/packages_apps_ROMControl/tree/master/src/com/aokp/romcontrol/util/WeatherPrefs.java", "rawCode": "  public static boolean setCustomLocation(Context c, String loc) {\n    SharedPreferences prefs = c.getSharedPreferences(PREF_NAME, Context.MODE_WORLD_WRITEABLE);\n    return prefs.edit().putString(KEY_CUSTOM_LOCATION, loc).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7384, "initialization": ["SharedPreferences sharedPreferences = Context.getSharedPreferences(String,int)"], "initializationStart": [81], "initializationEnd": [128], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 134, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)"], "useStart": [134], "useEnd": [182], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OSLL/geo2tag/tree/master/services/gds/android-client/src/ru/spb/osll/GDS/preferences/Settings.java", "rawCode": "  public void setDescription(String description) {\n    SharedPreferences prefs = m_context.getSharedPreferences(GDS_SETTINGS, 0);\n    prefs.edit().putString(DESCRIPTION, description).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7385, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 90, "focalAPIEnd": 101, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(*,boolean)"], "useStart": [90], "useEnd": [170], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Skylark95/Amazon-App-Notifier/tree/master/app/src/test/java/com/skylark95/amazonfreenotify/settings/SettingsUtilsTest.java", "rawCode": "  @Test\n  public void canGetDaysDisplayValueOnlyMonday() {\n    allDaysChecked(false);\n    pref.edit().putBoolean(PrefNotificationDays.PREF_NOTIFICATION_DAYS_MONDAY, true).commit();\n    String expected = DayOfWeek.MONDAY.getAbbrName();\n    String actual = SettingsUtils.getDaysDisplayValue(context);\n    assertEquals(expected, actual);\n  }\n"}, {"dataset": "edit", "exampleID": 7386, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 88, "focalAPIEnd": 113, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putFloat(String,float)", "editor.Editor.commit()"], "useStart": [119, 172], "useEnd": [166, 182], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setMapWebcamMarkerFontSize(float size) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putFloat(\"MAP_WEBCAM_MARKER_FONT_SIZE\", size);\n    e.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7387, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 248, "focalAPIEnd": 267, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,*)"], "useStart": [248], "useEnd": [316], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/i09158knct/c6t-proto/tree/master/src/jp/knct/di/c6t/communication/DebugSharedPreferencesClient.java", "rawCode": "  @Override\n  public void saveRoute(Route route) {\n    List<Route> routes = getRoutes(getMyUserData());\n    routes.add(route);\n    JSONArray routesArray = new JSONArray();\n\n    for (Route r : routes) {\n      routesArray.put(r.toJSON());\n    }\n\n    mPreferences.edit().putString(KEY_MY_ROUTES, routesArray.toString()).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7388, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,int)"], "initializationStart": [342], "initializationEnd": [374], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 393, "focalAPIEnd": 408, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["sharedPreferences.getString(String,String)", "sharedPreferences.getString(String,String)"], "useStart": [814, 1042], "useEnd": [846, 1074], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nhvtgd/MITBAY/tree/master/src/com/login/LogIn.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_log_in);\n    // set navigating icon\n    ActionBar actionBar = getActionBar();\n    actionBar.setHomeButtonEnabled(true);\n    // Animation\n    makeAnimation();\n    // SharedPreferences\n    settings = getSharedPreferences(SETTING, 0);\n    prefEditor = settings.edit();\n    errorMessage = (TextView) findViewById(R.id.signInErrorMassage);\n    // Parse Initialization\n    Parse.initialize(\n        this,\n        \"2TGrIyvNfLwNy3kM8OnZLAQGtSW2f6cR3k9oxHak\",\n        \"Y8xlSKdSilJBepTNIJqthpbJ9KeppDWCdNUQdYFX\");\n    // Check Remember the last password\n    // Email Address\n    EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n    String previousUserName = settings.getString(USERNAME, \"\");\n    if (previousUserName != \"\") usernameField.setText(previousUserName);\n    // Password\n    EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n    String previousPassword = settings.getString(PASSWORD, \"\");\n    if (previousPassword != \"\") passwordField.setText(previousPassword);\n    // Confirm Button\n    confirm = (Button) findViewById(R.id.signInConfirmButton);\n    confirm.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            if (System.currentTimeMillis() - timeClick < 1000) return;\n            else timeClick = System.currentTimeMillis();\n            ((TextView) findViewById(R.id.signInErrorMassage)).setText(\"\");\n            // Email Address\n            EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n            username = usernameField.getText().toString();\n            // Password\n            EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n            password = passwordField.getText().toString();\n            // Update\n            isValidLogIn(username, password);\n          }\n        });\n  }\n"}, {"dataset": "edit", "exampleID": 7389, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [84], "initializationEnd": [135], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 141, "focalAPIEnd": 152, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(String,String)", "editor.putString(String,String)"], "useStart": [141, 141], "useEnd": [176, 208], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/unidevel/android/tree/master/WhereAreYou/src/com/unidevel/whereareyou/LogonActivity.java", "rawCode": "  public void saveUser(String user, String password) {\n    SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);\n    pref.edit().putString(\"user\", user).putString(\"password\", password).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7390, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [94], "initializationEnd": [176], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 194, "focalAPIEnd": 202, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putLong(String,long)", "editor.commit()"], "useStart": [208, 237], "useEnd": [231, 248], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/stubma/WiEngine/tree/master/src/com/wiyun/engine/utils/PrefUtil.java", "rawCode": "  public static void setLongPref(String name, long value) {\n    SharedPreferences p =\n        PreferenceManager.getDefaultSharedPreferences(Director.getInstance().getContext());\n    Editor ed = p.edit();\n    ed.putLong(name, value);\n    ed.commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7391, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 88, "focalAPIEnd": 101, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)"], "useStart": [88], "useEnd": [126], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gaeeyo/garaponMate/tree/master/src/jp/syoboi/android/garaponmate/Prefs.java", "rawCode": "  public static void setStartPage(int page) {\n    if (getStartPage(-1) != page) {\n      sPrefs.edit().putInt(START_PAGE, page).commit();\n    }\n  }\n"}, {"dataset": "edit", "exampleID": 7392, "initialization": ["SharedPreferences sharedPreferences = getDefaultSharedPreferences(*)"], "initializationStart": [280], "initializationEnd": [331], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getInt(String,int)"], "configurationStart": [359], "configurationEnd": [404], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 646, "focalAPIEnd": 664, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(*,int)"], "useStart": [646], "useEnd": [711], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rowanseymour/refract/tree/master/src/com/ijuru/refract/activity/ExplorerActivity.java", "rawCode": "  /** @see android.app.Activity#onPostCreate(android.os.Bundle) */\n  @Override\n  protected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\n\n    // Get version from preferences and version from package\n    SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n    int settingsVersion = preferences.getInt(Constants.PREF_VERSION, 0);\n    int packageVersion = ((RefractApplication) getApplication()).getVersionCode();\n\n    // If this version has not been run before, display help\n    if (settingsVersion < packageVersion) onMenuHelp();\n\n    // Update preferences version\n    preferences.edit().putInt(Constants.PREF_VERSION, packageVersion).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7393, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 51, "focalAPIEnd": 64, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(String)"], "useStart": [51], "useEnd": [76], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Proyecto-UTN-2012/Proyecto-UTN-2012/tree/master/integrar-t-android/src/main/java/org/utn/proyecto/helpful/integrart/integrar_t_android/services/DataStorageServiceImpl.java", "rawCode": "  @Override\n  public void delete(String key) {\n    helper.edit().remove(key);\n  }\n"}, {"dataset": "edit", "exampleID": 7394, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [148], "initializationEnd": [199], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 242, "focalAPIEnd": 259, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["sharedPreferences.getInt(String,int)", "editor.putInt(*,*)", "sharedPreferences.getInt(String,int)", "editor.putInt(*,*)", "sharedPreferences.getString(String,String)", "editor.putString(*,*)", "sharedPreferences.getInt(String,int)", "editor.putInt(*,*)", "editor.Editor.commit()"], "useStart": [345, 307, 433, 393, 526, 484, 639, 581, 694], "useEnd": [386, 387, 477, 478, 574, 575, 686, 687, 712], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jwlawson/Nof1/tree/master/Nof1/src/org/nof1trial/nof1/services/Scheduler.java", "rawCode": "  private void reschedule(int mins) {\n    // Work out when next to set the alarm, set it and save in preferences\n    SharedPreferences schedPrefs = getSharedPreferences(Keys.SCHED_NAME, MODE_PRIVATE);\n    SharedPreferences.Editor schedEdit = schedPrefs.edit();\n\n    // Roll back settings in preferences\n    schedEdit.putInt(Keys.SCHED_NEXT_DAY, schedPrefs.getInt(Keys.SCHED_LAST_DAY, 1));\n    schedEdit.putInt(Keys.SCHED_CUR_PERIOD, schedPrefs.getInt(Keys.SCHED_LAST_PERIOD, 1));\n    schedEdit.putString(Keys.SCHED_NEXT_DATE, schedPrefs.getString(Keys.SCHED_LAST_DATE, null));\n    schedEdit.putInt(\n        Keys.SCHED_NEXT_CUMULATIVE_DAY, schedPrefs.getInt(Keys.SCHED_CUMULATIVE_DAY, 1));\n\n    schedEdit.commit();\n    backup();\n\n    // Get calendar for this time + mins\n    Calendar cal = Calendar.getInstance();\n    cal.add(Calendar.MINUTE, mins);\n\n    // Finally, use the new values to set an alarm\n    Intent intent = new Intent(Scheduler.this, AlarmReceiver.class);\n    intent.putExtra(Keys.INTENT_ALARM, true);\n    setAlarm(intent, cal);\n  }\n"}, {"dataset": "edit", "exampleID": 7395, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.getString(String,String)", "sharedPreferences.getString(String,String)"], "configurationStart": [201, 269], "configurationEnd": [234, 302], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 539, "focalAPIEnd": 551, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putInt(String,int)", "editor.Editor.commit()"], "useStart": [561, 605], "useEnd": [595, 623], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/cgeo-original/tree/master/src/carnero/cgeo/original/libs/Settings.java", "rawCode": "  public HashMap<String, String> getLogin() {\n    final HashMap<String, String> login = new HashMap<String, String>();\n\n    if (username == null || password == null) {\n      final String preUsername = prefs.getString(\"username\", null);\n      final String prePassword = prefs.getString(\"password\", null);\n\n      if (initialized == 0 && (preUsername == null || prePassword == null)) {\n        Intent initIntent = new Intent(context, init.class);\n        context.startActivity(initIntent);\n\n        final SharedPreferences.Editor prefsEdit = prefs.edit();\n        prefsEdit.putInt(\"initialized\", 1);\n        prefsEdit.commit();\n\n        initialized = 1;\n\n        return null;\n      } else if (initialized == 1 && (preUsername == null || prePassword == null)) {\n        return null;\n      }\n\n      login.put(\"username\", preUsername);\n      login.put(\"password\", prePassword);\n\n      username = preUsername;\n      password = prePassword;\n    } else {\n      login.put(\"username\", username);\n      login.put(\"password\", password);\n    }\n\n    return login;\n  }\n"}, {"dataset": "edit", "exampleID": 7396, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 65, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putString(*,String)"], "useStart": [65], "useEnd": [128], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jerrymannel/ISawABird/tree/master/ISawABird/src/com/isawabird/Utils.java", "rawCode": "  public static String setCurrentUsername(String username) {\n    prefs.edit().putString(Consts.CURRENT_USER_ANONYMOUS, username).apply();\n    return username;\n  }\n"}, {"dataset": "edit", "exampleID": 7397, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 95, "focalAPIEnd": 114, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.Editor.putString(String,String)"], "useStart": [190], "useEnd": [229], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MaChristmann/mobile-trial/tree/master/library/src/org/mobiletrial/license/PreferenceObfuscator.java", "rawCode": "  public void putString(String key, String value) {\n    if (mEditor == null) {\n      mEditor = mPreferences.edit();\n    }\n    String obfuscatedValue = mObfuscator.obfuscate(value, key);\n    mEditor.putString(key, obfuscatedValue);\n  }\n"}, {"dataset": "edit", "exampleID": 7398, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 64, "focalAPIEnd": 89, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putBoolean(String,boolean)"], "useStart": [64], "useEnd": [137], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Email/tree/master/src/com/android/email/Preferences.java", "rawCode": "  public void setEnableExchangeFileLogging(boolean value) {\n    mSharedPreferences.edit().putBoolean(ENABLE_EXCHANGE_FILE_LOGGING, value).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7399, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 44, "focalAPIEnd": 62, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.remove(*)"], "useStart": [44], "useEnd": [81], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/benetech/martus-android/tree/master/martus-android/src/org/martus/android/SecurePreferences.java", "rawCode": "  public void removeValue(String key) {\n    preferences.edit().remove(toKey(key)).commit();\n  }\n"}, {"dataset": "edit", "exampleID": 7400, "initialization": ["SharedPreferences sharedPreferences = getSharedPreferences(*,*)"], "initializationStart": [106], "initializationEnd": [182], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.edit()", "focalAPIStart": 200, "focalAPIEnd": 212, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["editor.putInt(String,int)", "apply(editor)"], "useStart": [218, 246], "useEnd": [240, 279], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/packages-apps-Music/tree/master/src/com/android/music/MusicUtils.java", "rawCode": "  static void setIntPref(Context context, String name, int value) {\n    SharedPreferences prefs =\n        context.getSharedPreferences(context.getPackageName(), Context.MODE_PRIVATE);\n    Editor ed = prefs.edit();\n    ed.putInt(name, value);\n    SharedPreferencesCompat.apply(ed);\n  }\n"}]