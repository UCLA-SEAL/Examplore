[{"dataset": "makeText", "exampleID": 9501, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 94, "focalAPIEnd": 168, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [178], "useEnd": [190], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pocorall/scaloid-apidemos/tree/master/src/main/java/com/example/android/apis/view/GameControllerInput.java", "rawCode": "    public void onItemClick(int position) {\n      if (mState != null) {\n        Toast toast = Toast.makeText(mContext, mState.getDevice().toString(), Toast.LENGTH_LONG);\n        toast.show();\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9502, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1347, "focalAPIEnd": 1433, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1347], "useEnd": [1455], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gumartinm/JavaForFun/tree/master/Android/Testing/Test3/src/de/android/test3/NextActivity.java", "rawCode": "        public void onServiceConnected(ComponentName className, IBinder service) {\n          // This is called when the connection with the service has been\n          // established, giving us the service object we can use to\n          // interact with the service. We are communicating with our\n          // service through an IDL interface, so get a client-side\n          // representation of that from the raw service object.\n          mService = new Messenger(service);\n          mCallbackText.setText(\"Attached.\");\n\n          // We want to monitor the service for as long as we are\n          // connected to it.\n          try {\n            Message msg = Message.obtain(null, TestService.MSG_REGISTER_CLIENT);\n            msg.replyTo = mMessenger;\n            mService.send(msg);\n\n            // Give it some value as an example.\n            msg = Message.obtain(null, TestService.MSG_SET_VALUE, this.hashCode(), 0);\n            mService.send(msg);\n          } catch (RemoteException e) {\n            // In this case the service has crashed before we could even\n            // do anything with it; we can count on soon being\n            // disconnected (and then reconnected if it can be restarted)\n            // so there is no need to do anything here.\n          }\n\n          // As part of the sample, tell the user what happened.\n          Toast.makeText(NextActivity.this, R.string.remote_service_started, Toast.LENGTH_SHORT)\n              .show();\n        }\n"}, {"dataset": "makeText", "exampleID": 9503, "initialization": ["Context context = getActivity()"], "initializationStart": [193], "initializationEnd": [206], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 253, "focalAPIEnd": 333, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [253], "useEnd": [340], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/alyssialui/NCMS/tree/master/COMP3900/CaptureActivity/src/com/google/zxing/client/android/result/WifiResultHandler.java", "rawCode": "  @Override\n  public void handleButtonPress(int index) {\n    if (index == 0) {\n      WifiParsedResult wifiResult = (WifiParsedResult) getResult();\n      WifiManager wifiManager = (WifiManager) getActivity().getSystemService(Context.WIFI_SERVICE);\n      Toast.makeText(getActivity(), R.string.wifi_changing_network, Toast.LENGTH_LONG).show();\n      taskExec.execute(new WifiConfigManager(wifiManager), wifiResult);\n      parent.restartPreviewAfterDelay(0L);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9504, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 473, "focalAPIEnd": 546, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [473], "useEnd": [553], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mitmel/flipr-android/tree/master/src/edu/mit/mobile/android/livingpostcards/CameraActivity.java", "rawCode": "  @Override\n  protected void onResume() {\n    super.onResume();\n\n    mLocator.requestLocationUpdates(mLocationListener);\n    mImageCache.registerOnImageLoadListener(this);\n\n    mCamera = getCameraInstance();\n\n    if (mCamera != null) {\n      mPreview = new CameraPreview(this, mCamera);\n      mPreview.setForceAspectRatio((float) 640 / 480);\n      mPreviewHolder.addView(mPreview);\n      mPreview.setOnPreviewStartedListener(mOnPreviewStartedListener);\n\n    } else {\n      Toast.makeText(this, R.string.err_initializing_camera, Toast.LENGTH_LONG).show();\n      setResult(RESULT_CANCELED);\n      finish();\n    }\n\n    setOnionSkinVisible(mOnionskinToggle.getLevel());\n  }\n"}, {"dataset": "makeText", "exampleID": 9505, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 367, "focalAPIEnd": 455, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [367, 719], "useEnd": [477, 806], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/platform_packages_apps_Settings/tree/master/src/com/android/settings/CredentialStorage.java", "rawCode": "    @Override\n    public void onDismiss(DialogInterface dialog) {\n      if (mUnlockConfirmed) {\n        mUnlockConfirmed = false;\n        mError.setVisibility(View.VISIBLE);\n        mKeyStore.unlock(mOldPassword.getText().toString());\n        int error = mKeyStore.getLastError();\n        if (error == KeyStore.NO_ERROR) {\n          mRetriesRemaining = -1;\n          Toast.makeText(CredentialStorage.this, R.string.credentials_enabled, Toast.LENGTH_SHORT)\n              .show();\n          // aha, now we are unlocked, switch to key guard.\n          // we'll end up back in onResume to install\n          ensureKeyGuard();\n        } else if (error == KeyStore.UNINITIALIZED) {\n          mRetriesRemaining = -1;\n          Toast.makeText(CredentialStorage.this, R.string.credentials_erased, Toast.LENGTH_SHORT)\n              .show();\n          // we are reset, we can now set new password with key guard\n          handleUnlockOrInstall();\n        } else if (error >= KeyStore.WRONG_PASSWORD) {\n          // we need to try again\n          mRetriesRemaining = error - KeyStore.WRONG_PASSWORD + 1;\n          handleUnlockOrInstall();\n        }\n        return;\n      }\n      finish();\n    }\n"}, {"dataset": "makeText", "exampleID": 9506, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 95, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [95, 227], "useEnd": [202, 318], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iceandfire/android_packages_apps_Settings/tree/master/src/com/android/settings/CredentialStorage.java", "rawCode": "    @Override\n    protected void onPostExecute(Boolean success) {\n      if (success) {\n        Toast.makeText(CredentialStorage.this, R.string.credentials_erased, Toast.LENGTH_SHORT)\n            .show();\n      } else {\n        Toast.makeText(CredentialStorage.this, R.string.credentials_not_erased, Toast.LENGTH_SHORT)\n            .show();\n      }\n      finish();\n    }\n"}, {"dataset": "makeText", "exampleID": 9507, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 164, "focalAPIEnd": 234, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [164], "useEnd": [241], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onelight-studio/onebike-android/tree/master/src/OneBike/OneBike/src/main/java/com/onelightstudio/onebike/MainActivity.java", "rawCode": "  private void fillAddressFieldWithCurrentLocation(int field) {\n    Location userLocation = locationClient.getLastLocation();\n    if (userLocation == null) {\n      Toast.makeText(this, R.string.location_unavailable, Toast.LENGTH_LONG).show();\n    } else {\n      if (field == FIELD_DEPARTURE) {\n        fillAddressFieldCallRequest(\n            userLocation, departureField, departureLocationButton, departureLocationProgress);\n      } else {\n        fillAddressFieldCallRequest(\n            userLocation, arrivalField, arrivalLocationButton, arrivalLocationProgress);\n      }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9508, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1262, "focalAPIEnd": 1350, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)"], "useStart": [1262, 1433, 1589, 1847], "useEnd": [1372, 1515, 1756, 2013], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/faux123/android_packages_apps_Email/tree/master/src/com/android/email/activity/MessageView.java", "rawCode": "    @Override\n    public void handleMessage(android.os.Message msg) {\n      switch (msg.what) {\n        case MSG_PROGRESS:\n          setProgressBarIndeterminateVisibility(msg.arg1 != 0);\n          break;\n        case MSG_ATTACHMENT_PROGRESS:\n          boolean progress = (msg.arg1 != 0);\n          if (progress) {\n            mProgressDialog.setMessage(\n                getString(R.string.message_view_fetching_attachment_progress, mLoadAttachmentName));\n            mProgressDialog.show();\n          } else {\n            mProgressDialog.dismiss();\n          }\n          setProgressBarIndeterminateVisibility(progress);\n          break;\n        case MSG_LOAD_CONTENT_URI:\n          String uriString = (String) msg.obj;\n          if (mMessageContentView != null) {\n            mMessageContentView.loadUrl(uriString);\n          }\n          break;\n        case MSG_SET_ATTACHMENTS_ENABLED:\n          for (int i = 0, count = mAttachments.getChildCount(); i < count; i++) {\n            AttachmentInfo attachment = (AttachmentInfo) mAttachments.getChildAt(i).getTag();\n            attachment.viewButton.setEnabled(msg.arg1 == 1);\n            attachment.downloadButton.setEnabled(msg.arg1 == 1);\n          }\n          break;\n        case MSG_LOAD_BODY_ERROR:\n          Toast.makeText(MessageView.this, R.string.error_loading_message_body, Toast.LENGTH_LONG)\n              .show();\n          break;\n        case MSG_NETWORK_ERROR:\n          Toast.makeText(MessageView.this, R.string.status_network_error, Toast.LENGTH_LONG).show();\n          break;\n        case MSG_FETCHING_ATTACHMENT:\n          Toast.makeText(\n                  MessageView.this,\n                  getString(R.string.message_view_fetching_attachment_toast),\n                  Toast.LENGTH_SHORT)\n              .show();\n          break;\n        case MSG_VIEW_ATTACHMENT_ERROR:\n          Toast.makeText(\n                  MessageView.this,\n                  getString(R.string.message_view_display_attachment_toast),\n                  Toast.LENGTH_SHORT)\n              .show();\n          break;\n        case MSG_UPDATE_ATTACHMENT_ICON:\n          ((AttachmentInfo) mAttachments.getChildAt(msg.arg1).getTag())\n              .iconView.setImageBitmap((Bitmap) msg.obj);\n          break;\n        case MSG_FINISH_LOAD_ATTACHMENT:\n          long attachmentId = (Long) msg.obj;\n          doFinishLoadAttachment(attachmentId);\n          break;\n        default:\n          super.handleMessage(msg);\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9509, "initialization": ["int resId = toString()"], "initializationStart": [875], "initializationEnd": [899], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 985, "focalAPIEnd": 1041, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(Context,*,*)", "toast.show()"], "useStart": [985, 1113, 1113], "useEnd": [1048, 1169, 1176], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/YGLiu/RunMyWay/tree/master/src/com/example/weather/utils/YahooWeather4a/WOEIDUtils.java", "rawCode": "  private String queryYahooWeather(Context context, String queryString) {\n    Log.d(\"tag\", \"QueryYahooWeather\");\n    String qResult = \"\";\n    // queryString = Uri.encode(queryString);\n\n    HttpClient httpClient = new DefaultHttpClient();\n\n    // return Uri.encode(queryString);\n\n    HttpGet httpGet = new HttpGet(queryString);\n\n    try {\n      HttpEntity httpEntity = httpClient.execute(httpGet).getEntity();\n\n      if (httpEntity != null) {\n        InputStream inputStream = httpEntity.getContent();\n        Reader in = new InputStreamReader(inputStream);\n        BufferedReader bufferedreader = new BufferedReader(in);\n        StringBuilder stringBuilder = new StringBuilder();\n\n        String stringReadLine = null;\n\n        while ((stringReadLine = bufferedreader.readLine()) != null) {\n          stringBuilder.append(stringReadLine + \"\\n\");\n        }\n\n        qResult = stringBuilder.toString();\n      }\n\n    } catch (ClientProtocolException e) {\n      e.printStackTrace();\n      Toast.makeText(context, e.toString(), Toast.LENGTH_LONG).show();\n    } catch (IOException e) {\n      e.printStackTrace();\n      Toast.makeText(context, e.toString(), Toast.LENGTH_LONG).show();\n    }\n\n    return qResult;\n  }\n"}, {"dataset": "makeText", "exampleID": 9510, "initialization": ["CharSequence text = getResources()"], "initializationStart": [160], "initializationEnd": [183], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.getResources()"], "configurationStart": [160], "configurationEnd": [183], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 224, "focalAPIEnd": 282, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [224], "useEnd": [289], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/heyongjian/joy_launcher/tree/master/src/com/joy/launcher2/joyfolder/JoyFolder.java", "rawCode": "  @Override\n  public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n    if (!Util.hasSdcard()) {\n      CharSequence errorStrings = mContext.getResources().getText(R.string.insert_sd_card);\n      Toast.makeText(mContext, errorStrings, Toast.LENGTH_SHORT).show();\n      return;\n    }\n    Map<String, Object> curMap = (Map<String, Object>) gridView.getAdapter().getItem(position);\n    final int natureId = (Integer) curMap.get(\"id\");\n    DownloadInfo dInfo = DownLoadDBHelper.getInstances().get(natureId);\n    if (dInfo != null) {\n      boolean isCompleted = DownloadManager.getInstances().isCompleted(natureId);\n      if (isCompleted) {\n        final DownloadInfo dinfo = DownLoadDBHelper.getInstances().get(natureId);\n        String localname = dinfo.getLocalname();\n        Util.installAPK(Constants.DOWNLOAD_APK_DIR, localname, true);\n        return;\n      }\n      boolean isDowmloading = DownloadManager.getInstances().getDowmloadingTask(natureId) != null;\n      if (isDowmloading) {\n        return;\n      }\n    } else if (dInfo == null) {\n      dInfo = new DownloadInfo();\n      dInfo.setId(natureId);\n      dInfo.setFilename((String) curMap.get(\"name\"));\n      dInfo.setLocalname((String) curMap.get(\"name\"));\n      dInfo.setUrl((String) curMap.get(\"url\"));\n      dInfo.setCompletesize(0);\n      dInfo.setFilesize((Integer) curMap.get(\"size\"));\n      DownLoadDBHelper.getInstances().insert(dInfo);\n    }\n\n    startDownLoadApk((JoyIconView) view, dInfo);\n  }\n"}, {"dataset": "makeText", "exampleID": 9511, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1413, "focalAPIEnd": 1502, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1413], "useEnd": [1520], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jonasberglund/skrubb_DAT255/tree/master/H-sektionen/src/se/chalmers_h/h_sektionen/FaultreportActivity.java", "rawCode": "  /**\n   * Starts an e-mail client with all fields filled in. Message is taken from the view, subject is\n   * in a string and receiver is decided by a checkbox status.\n   *\n   * @param view the view to get the message from.\n   */\n  public void sendFaultreportEmail(View view) {\n    Intent intent = new Intent(Intent.ACTION_SENDTO);\n    intent.setType(\"text/plain\");\n\n    EditText editText =\n        (EditText) findViewById(R.id.faultreport_edit_message); // fetch the text from the view\n    String message = editText.getText().toString();\n\n    intent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.faultreport_subject));\n    intent.putExtra(Intent.EXTRA_TEXT, message);\n\n    CheckBox checkBox = (CheckBox) findViewById(R.id.checkBox1);\n    if (checkBox.isChecked()) {\n      intent.setData(\n          Uri.parse(\n              \"mailto:\"\n                  + getString(\n                      R.string.faultreport_dataEmail))); // set the address to the data center.\n    } else {\n      intent.setData(\n          Uri.parse(\n              \"mailto:\"\n                  + getString(\n                      R.string\n                          .faultreport_buildingEmail))); // set the address to the building center.\n    }\n\n    try {\n      startActivity(intent);\n    } catch (\n        android.content.ActivityNotFoundException\n            ex) { // if no email clients on the phone, post a toast to let the user know.\n      Toast.makeText(FaultreportActivity.this, R.string.noEmailClientFound, Toast.LENGTH_SHORT)\n          .show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9512, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 519, "focalAPIEnd": 592, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [519], "useEnd": [599], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Contacts/tree/master/src/com/android/contacts/ui/EditContactActivity.java", "rawCode": "  /** Sends a newly acquired photo to Gallery for cropping */\n  protected void doCropPhoto(File f) {\n    try {\n\n      // Add the image to the media store\n      MediaScannerConnection.scanFile(\n          this, new String[] {f.getAbsolutePath()}, new String[] {null}, null);\n\n      // Launch gallery to crop the photo\n      final Intent intent = getCropImageIntent(Uri.fromFile(f));\n      startActivityForResult(intent, PHOTO_PICKED_WITH_DATA);\n    } catch (Exception e) {\n      Log.e(TAG, \"Cannot crop image\", e);\n      Toast.makeText(this, R.string.photoPickerNotFoundText, Toast.LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9513, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1809, "focalAPIEnd": 1871, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1809], "useEnd": [1878], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/packages-apps-Browser/tree/master/src/com/android/browser/BrowserBookmarksPage.java", "rawCode": "  @Override\n  public boolean onContextItemSelected(MenuItem item) {\n    // It is possible that the view has been canceled when we get to\n    // this point as back has a higher priority\n    if (mCanceled) {\n      return true;\n    }\n    AdapterView.AdapterContextMenuInfo i = (AdapterView.AdapterContextMenuInfo) item.getMenuInfo();\n    // If we have no menu info, we can't tell which item was selected.\n    if (i == null) {\n      return true;\n    }\n\n    switch (item.getItemId()) {\n      case R.id.new_context_menu_id:\n        saveCurrentPage();\n        break;\n      case R.id.open_context_menu_id:\n        loadUrl(i.position);\n        break;\n      case R.id.edit_context_menu_id:\n        editBookmark(i.position);\n        break;\n      case R.id.shortcut_context_menu_id:\n        final Intent send = createShortcutIntent(i.position);\n        send.setAction(INSTALL_SHORTCUT);\n        sendBroadcast(send);\n        break;\n      case R.id.delete_context_menu_id:\n        if (mMostVisited) {\n          Browser.deleteFromHistory(getContentResolver(), getUrl(i.position));\n          refreshList();\n        } else {\n          displayRemoveBookmarkDialog(i.position);\n        }\n        break;\n      case R.id.new_window_context_menu_id:\n        openInNewWindow(i.position);\n        break;\n      case R.id.share_link_context_menu_id:\n        BrowserActivity.sharePage(\n            BrowserBookmarksPage.this,\n            mBookmarksAdapter.getTitle(i.position),\n            getUrl(i.position),\n            getFavicon(i.position),\n            mBookmarksAdapter.getScreenshot(i.position));\n        break;\n      case R.id.copy_url_context_menu_id:\n        copy(getUrl(i.position));\n        break;\n      case R.id.homepage_context_menu_id:\n        BrowserSettings.getInstance().setHomePage(this, getUrl(i.position));\n        Toast.makeText(this, R.string.homepage_set, Toast.LENGTH_LONG).show();\n        break;\n        // Only for the Most visited page\n      case R.id.save_to_bookmarks_menu_id:\n        boolean isBookmark;\n        String name;\n        String url;\n        if (mViewMode == BookmarkViewMode.GRID) {\n          isBookmark = mBookmarksAdapter.getIsBookmark(i.position);\n          name = mBookmarksAdapter.getTitle(i.position);\n          url = mBookmarksAdapter.getUrl(i.position);\n        } else {\n          HistoryItem historyItem = ((HistoryItem) i.targetView);\n          isBookmark = historyItem.isBookmark();\n          name = historyItem.getName();\n          url = historyItem.getUrl();\n        }\n        // If the site is bookmarked, the item becomes remove from\n        // bookmarks.\n        if (isBookmark) {\n          Bookmarks.removeFromBookmarks(this, getContentResolver(), url, name);\n        } else {\n          Browser.saveBookmark(this, name, url);\n        }\n        break;\n      default:\n        return super.onContextItemSelected(item);\n    }\n    return true;\n  }\n"}, {"dataset": "makeText", "exampleID": 9514, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 208, "focalAPIEnd": 281, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [208], "useEnd": [288], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/brunsky/WS171-development/tree/master/samples/ApiDemos/src/com/example/android/apis/app/AlarmService_Service.java", "rawCode": "  @Override\n  public void onDestroy() {\n    // Cancel the notification -- we use the same ID that we had used to start it\n    mNM.cancel(R.string.alarm_service_started);\n\n    // Tell the user we stopped.\n    Toast.makeText(this, R.string.alarm_service_finished, Toast.LENGTH_SHORT).show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9515, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 77, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [77], "useEnd": [153], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/data/AptoideServiceData.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          Toast.makeText(AptoideServiceData.this, msg.what, Toast.LENGTH_SHORT).show();\n        }\n"}, {"dataset": "makeText", "exampleID": 9516, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.getContentResolver()", "context.getContentResolver()"], "configurationStart": [3771, 4284], "configurationEnd": [3816, 4312], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 4370, "focalAPIEnd": 4438, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(Context,*,*)"], "useStart": [4370, 4474], "useEnd": [4445, 4551], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openintents/filemanager/tree/master/FileManager/src/org/openintents/filemanager/util/MenuUtils.java", "rawCode": "  /**\n   * Central point where we handle actions for single selection, for every API level.\n   *\n   * @param mItem The selected menu option/action.\n   * @param fItem The data to act upon.\n   */\n  public static boolean handleSingleSelectionAction(\n      final SimpleFileListFragment navigator, MenuItem mItem, FileHolder fItem, Context context) {\n    DialogFragment dialog;\n    Bundle args;\n\n    switch (mItem.getItemId()) {\n      case R.id.menu_open:\n        navigator.openInformingPathBar(fItem);\n        return true;\n\n      case R.id.menu_create_shortcut:\n        createShortcut(fItem, context);\n        return true;\n\n      case R.id.menu_move:\n        ((FileManagerApplication) navigator.getActivity().getApplication())\n            .getCopyHelper()\n            .cut(fItem);\n        navigator.updateClipboardInfo();\n\n        // Refresh options menu\n        navigator.getActivity().supportInvalidateOptionsMenu();\n        return true;\n\n      case R.id.menu_copy:\n        ((FileManagerApplication) navigator.getActivity().getApplication())\n            .getCopyHelper()\n            .copy(fItem);\n        navigator.updateClipboardInfo();\n\n        // Refresh options menu\n        navigator.getActivity().supportInvalidateOptionsMenu();\n        return true;\n\n      case R.id.menu_delete:\n        dialog = new SingleDeleteDialog();\n        dialog.setTargetFragment(navigator, 0);\n        args = new Bundle();\n        args.putParcelable(FileManagerIntents.EXTRA_DIALOG_FILE_HOLDER, fItem);\n        dialog.setArguments(args);\n        dialog.show(navigator.getFragmentManager(), SingleDeleteDialog.class.getName());\n        return true;\n\n      case R.id.menu_rename:\n        dialog = new RenameDialog();\n        dialog.setTargetFragment(navigator, 0);\n        args = new Bundle();\n        args.putParcelable(FileManagerIntents.EXTRA_DIALOG_FILE_HOLDER, fItem);\n        dialog.setArguments(args);\n        dialog.show(navigator.getFragmentManager(), RenameDialog.class.getName());\n        return true;\n\n      case R.id.menu_send:\n        sendFile(fItem, context);\n        return true;\n\n      case R.id.menu_details:\n        dialog = new DetailsDialog();\n        dialog.setTargetFragment(navigator, 0);\n        args = new Bundle();\n        args.putParcelable(FileManagerIntents.EXTRA_DIALOG_FILE_HOLDER, fItem);\n        dialog.setArguments(args);\n        dialog.show(navigator.getFragmentManager(), DetailsDialog.class.getName());\n        return true;\n\n      case R.id.menu_compress:\n        dialog = new SingleCompressDialog();\n        dialog.setTargetFragment(navigator, 0);\n        args = new Bundle();\n        args.putParcelable(FileManagerIntents.EXTRA_DIALOG_FILE_HOLDER, fItem);\n        dialog.setArguments(args);\n        dialog.show(navigator.getFragmentManager(), SingleCompressDialog.class.getName());\n        return true;\n\n      case R.id.menu_extract:\n        File dest =\n            new File(\n                fItem.getFile().getParentFile(),\n                FileUtils.getNameWithoutExtension(fItem.getFile()));\n        dest.mkdirs();\n\n        // Changed from the previous behavior.\n        // We just extract on the current directory. If the user needs to put it in another dir,\n        // he/she can copy/cut the file with the new, equally easy to use way.\n        new ExtractManager(context)\n            .setOnExtractFinishedListener(\n                new ExtractManager.OnExtractFinishedListener() {\n\n                  @Override\n                  public void extractFinished() {\n                    navigator.refresh();\n                  }\n                })\n            .extract(fItem.getFile(), dest.getAbsolutePath());\n        return true;\n\n      case R.id.menu_bookmark:\n        String path = fItem.getFile().getAbsolutePath();\n        Cursor query =\n            context\n                .getContentResolver()\n                .query(\n                    BookmarksProvider.CONTENT_URI,\n                    new String[] {BookmarksProvider._ID},\n                    BookmarksProvider.PATH + \"=?\",\n                    new String[] {path},\n                    null);\n        if (!query.moveToFirst()) {\n          ContentValues values = new ContentValues();\n          values.put(BookmarksProvider.NAME, fItem.getName());\n          values.put(BookmarksProvider.PATH, path);\n          context.getContentResolver().insert(BookmarksProvider.CONTENT_URI, values);\n          Toast.makeText(context, R.string.bookmark_added, Toast.LENGTH_SHORT).show();\n        } else {\n          Toast.makeText(context, R.string.bookmark_already_exists, Toast.LENGTH_SHORT).show();\n        }\n        query.close();\n        return true;\n\n      case R.id.menu_more:\n        if (!PreferenceActivity.getShowAllWarning(context)) {\n          showMoreCommandsDialog(fItem, context);\n          return true;\n        }\n        showWarningDialog(fItem, context);\n\n        return true;\n    }\n\n    return false;\n  }\n"}, {"dataset": "makeText", "exampleID": 9517, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 899, "focalAPIEnd": 973, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [899], "useEnd": [980], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openproject/world2/tree/master/baseworld2/src/com/tianxia/lib/baseworld2/activity/MainActivity.java", "rawCode": "  @Override\n  public boolean onContextItemSelected(MenuItem item) {\n\n    // get item position\n    ContextMenuInfo info = item.getMenuInfo();\n    AdapterView.AdapterContextMenuInfo contextMenuInfo = (AdapterContextMenuInfo) info;\n    int position = contextMenuInfo.position - 1;\n\n    switch (item.getItemId()) {\n      case 1:\n        Intent intent = new Intent(Intent.ACTION_SEND);\n        intent.setType(\"text/plain\");\n        intent.putExtra(Intent.EXTRA_SUBJECT, getString(R.string.main_options_share_title));\n        intent.putExtra(Intent.EXTRA_TEXT, listData.get(position).text);\n        startActivity(Intent.createChooser(intent, getString(R.string.setting_share_app_title)));\n        break;\n      case 2:\n        ClipboardManager cm =\n            (ClipboardManager) getApplicationContext().getSystemService(Context.CLIPBOARD_SERVICE);\n        cm.setText(listData.get(position).text);\n        Toast.makeText(this, R.string.main_options_copy_toast, Toast.LENGTH_SHORT).show();\n        break;\n      default:\n        break;\n    }\n    return super.onContextItemSelected(item);\n  }\n"}, {"dataset": "makeText", "exampleID": 9518, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 224, "focalAPIEnd": 295, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [224], "useEnd": [302], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/garagepoort/Android/tree/master/AndroidDwaalDetectie/src/be/cegeka/android/dwaaldetectie/view/MainActivity.java", "rawCode": "  /**\n   * Is called when the users clicks the \"configure address\" button, changes Activity to the\n   * MapView.\n   *\n   * @param view\n   */\n  public void handleShowMap(View view) {\n    if (!networkCheck.isOnline()) {\n      Toast.makeText(this, R.string.map_info_no_internet, Toast.LENGTH_SHORT).show();\n    } else {\n      Intent intent = new Intent(this, MapView.class);\n      startActivity(intent);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9519, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 638, "focalAPIEnd": 793, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [638], "useEnd": [809], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dmlloyd/atari800/tree/master/src/android/src/MainActivity.java", "rawCode": "  private void bootupMsgs() {\n    String instver = _settings.get(false, \"version\");\n    if (instver == null || instver.equals(\"false\")) {\n      _bootupconfig = true;\n      pauseEmulation(true);\n      showDialog(DLG_WELCOME);\n      return;\n    }\n\n    String rompath = _settings.get(false, \"rompath\");\n    if (rompath == null || rompath.equals(\"false\")) {\n      pauseEmulation(true);\n      _bootupconfig = true;\n      showDialog(DLG_PATHSETUP);\n      return;\n    }\n\n    if (Integer.parseInt(instver) != getPInfo().versionCode) {\n      _bootupconfig = true;\n      pauseEmulation(true);\n      showDialog(DLG_CHANGES);\n      return;\n    }\n    Toast.makeText(\n            this,\n            _aBar.isReal() ? R.string.actionbarhelptoast : R.string.noactionbarhelptoast,\n            Toast.LENGTH_SHORT)\n        .show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9520, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.startActivity(Intent)"], "configurationStart": [240], "configurationEnd": [270], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 326, "focalAPIEnd": 410, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [326], "useEnd": [417], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kitkatandroid/JLS36G_base/tree/master/media/tests/CameraBrowser/src/com/android/camerabrowser/ObjectViewer.java", "rawCode": "    @Override\n    public void onScanCompleted(String path, Uri uri) {\n      mScannerConnection.disconnect();\n\n      // try to start an activity to view the file\n      Intent intent = new Intent(Intent.ACTION_VIEW, uri);\n      try {\n        mContext.startActivity(intent);\n      } catch (ActivityNotFoundException e) {\n        Toast.makeText(mContext, R.string.start_activity_failed_message, Toast.LENGTH_SHORT).show();\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9521, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 434, "focalAPIEnd": 496, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [434], "useEnd": [503], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CMPUT301W13T06/classproject/tree/master/app/src/main/java/com/cmput301/recipebot/ui/RecipeReceiverActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n    setSupportProgressBarIndeterminateVisibility(true);\n\n    setContentView(new ProgressBar(this));\n\n    Intent receivedIntent = getIntent();\n    Uri uri = receivedIntent.getData();\n\n    final Recipe recipe = recipeFromUri(uri);\n\n    if (recipe == null) {\n      Toast.makeText(this, R.string.invalid_file, Toast.LENGTH_LONG).show();\n    } else {\n      Intent intent = new Intent(this, ViewRecipeActivity.class);\n      intent.putExtra(ViewRecipeActivity.EXTRA_RECIPE, recipe);\n      startActivity(intent);\n    }\n    finish();\n  }\n"}, {"dataset": "makeText", "exampleID": 9522, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 156, "focalAPIEnd": 192, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/maplesyrup/maple-android/tree/master/ActionBarSherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java", "rawCode": "  public static Toast makeText(Context context, CharSequence s, int duration) {\n    if (VERSION.SDK_INT >= VERSION_CODES.ICE_CREAM_SANDWICH) {\n      return Toast.makeText(context, s, duration);\n    }\n    IcsToast toast = new IcsToast(context);\n    toast.setDuration(duration);\n    TextView view = new TextView(context);\n    view.setText(s);\n    // Original AOSP using reference on @android:color/bright_foreground_dark\n    // bright_foreground_dark - reference on @android:color/background_light\n    // background_light - 0xffffffff\n    view.setTextColor(0xffffffff);\n    view.setGravity(Gravity.CENTER);\n    view.setBackgroundResource(R.drawable.abs__toast_frame);\n    toast.setView(view);\n    return toast;\n  }\n"}, {"dataset": "makeText", "exampleID": 9523, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 557, "focalAPIEnd": 639, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [557], "useEnd": [646], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mnlk2-custom/android_packages_apps_Settings/tree/master/src/com/android/settings/wifi/AdvancedSettings.java", "rawCode": "  private void initNumChannelsPreference() {\n    ListPreference pref = (ListPreference) findPreference(KEY_NUM_CHANNELS);\n    pref.setOnPreferenceChangeListener(this);\n\n    WifiManager wifiManager = (WifiManager) getSystemService(WIFI_SERVICE);\n    /*\n     * Generate the list of valid channel counts to show in the ListPreference.\n     * The values are numerical, so the only text to be localized is the\n     * \"channel_word\" resource.\n     */\n    int[] validChannelCounts = wifiManager.getValidChannelCounts();\n    if (validChannelCounts == null) {\n      Toast.makeText(this, R.string.wifi_setting_num_channels_error, Toast.LENGTH_SHORT).show();\n      pref.setEnabled(false);\n      return;\n    }\n    String[] entries = new String[validChannelCounts.length];\n    String[] entryValues = new String[validChannelCounts.length];\n\n    for (int i = 0; i < validChannelCounts.length; i++) {\n      entryValues[i] = String.valueOf(validChannelCounts[i]);\n      entries[i] =\n          getString(R.string.wifi_setting_num_channels_channel_phrase, validChannelCounts[i]);\n    }\n    pref.setEntries(entries);\n    pref.setEntryValues(entryValues);\n    pref.setEnabled(true);\n    int numChannels = wifiManager.getNumAllowedChannels();\n    if (numChannels >= 0) {\n      pref.setValue(String.valueOf(numChannels));\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9524, "initialization": ["Context context = getApplicationContext()"], "initializationStart": [139], "initializationEnd": [162], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 251, "focalAPIEnd": 290, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nordquip/sousms/tree/master/src/mobile/AppForSchool/org.example.webviewdemo.WebViewDemo/src/org/example/webviewdemo/WebViewDemo.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n\n    Context context = getApplicationContext();\n    CharSequence text = \"Welcome\";\n    int duration = Toast.LENGTH_SHORT;\n\n    toast = Toast.makeText(context, text, duration);\n\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    // Create reference to UI elements\n    webView = (WebView) findViewById(R.id.webview_compontent);\n    WebSettings webSettings = webView.getSettings();\n    webSettings.setJavaScriptEnabled(true);\n    webView1 = (WebView) findViewById(R.id.webview_compontent1);\n    WebSettings webSettings1 = webView1.getSettings();\n    webSettings.setJavaScriptEnabled(true);\n    webView.loadUrl(\"http://140.211.89.15/mobile/\");\n    homeButton = (Button) findViewById(R.id.home_button);\n    tradeButton = (Button) findViewById(R.id.trade_button);\n    researchButton = (Button) findViewById(R.id.research_button);\n    profileButton = (Button) findViewById(R.id.profile_button);\n\n    // workaround so that the default browser doesn't take over\n    ll = (LinearLayout) findViewById(R.id.ll_sub);\n    sl = (LinearLayout) findViewById(R.id.sl_sub);\n    ll.setVisibility(View.GONE);\n    webView.invalidate();\n    webView.setWebViewClient(\n        new MyWebViewClient() {\n          @Override\n          public boolean shouldOverrideUrlLoading(WebView view, String url) {\n            if (url.toLowerCase().contains(\"http://140.211.89.15/mobile/home.html\")) {\n              ll.setVisibility(View.VISIBLE);\n              sl.setVisibility(View.GONE);\n              webView.invalidate();\n              webView1.invalidate();\n              webView1.loadUrl(\"http://140.211.89.15/mobile/home.html\");\n              if (count == 0) {\n                toast.show();\n                count++;\n              }\n              return true;\n            }\n            return false;\n          }\n        });\n    webView1.setWebViewClient(new MyWebViewClient());\n\n    // Setup click listener\n    homeButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View view) {\n            webView1.loadUrl(\"http://140.211.89.15/mobile/home.html\");\n          }\n        });\n\n    tradeButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View view) {\n            webView1.loadUrl(\"http://140.211.89.15/mobile/tradepage.php\");\n          }\n        });\n    researchButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View view) {\n            webView1.loadUrl(\"http://140.211.89.15/mobile/ResearchPage.php\");\n          }\n        });\n    profileButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View view) {\n            webView1.loadUrl(\"http://140.211.89.15/mobile/profile.php\");\n          }\n        });\n  }\n"}, {"dataset": "makeText", "exampleID": 9525, "initialization": ["Context context = getActivity()"], "initializationStart": [354], "initializationEnd": [367], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 465, "focalAPIEnd": 547, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [465], "useEnd": [554], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/speedydaniel/packages_apps_Calendar/tree/master/src/com/android/calendar/GeneralPreferences.java", "rawCode": "  @Override\n  public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {\n    final String key = preference.getKey();\n    if (KEY_CLEAR_SEARCH_HISTORY.equals(key)) {\n      SearchRecentSuggestions suggestions =\n          new SearchRecentSuggestions(\n              getActivity(),\n              Utils.getSearchAuthority(getActivity()),\n              CalendarRecentSuggestionsProvider.MODE);\n      suggestions.clearHistory();\n      Toast.makeText(getActivity(), R.string.search_history_cleared, Toast.LENGTH_SHORT).show();\n      return true;\n    } else {\n      return super.onPreferenceTreeClick(preferenceScreen, preference);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9526, "initialization": ["Context context = getApplicationContext()"], "initializationStart": [248], "initializationEnd": [271], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 383, "focalAPIEnd": 422, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [474], "useEnd": [486], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Limro/IHA/tree/master/SMAP/Default/Exercise2/src/iha/SMAP/handins/handin2/MainActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    Log.d(Tag, \"Checking version\");\n    if (android.os.Build.VERSION.SDK_INT <= android.os.Build.VERSION_CODES.DONUT) {\n      Log.d(Tag, \"Getting context\");\n      Context context = getApplicationContext();\n\n      CharSequence text = \"Too old phone - please upgrade!\";\n      int duration = 1000;\n\n      Toast toast = Toast.makeText(context, text, duration);\n\n      Log.d(Tag, \"Showing toast message\");\n      toast.show();\n    } else {\n      Log.d(Tag, \"Calling super\");\n      super.onCreate(savedInstanceState);\n\n      setContentView(R.layout.activity_main);\n      Log.d(Tag, \"Change onCreate state\");\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9527, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 244, "focalAPIEnd": 307, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [244], "useEnd": [314], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openintents/filemanager/tree/master/FileManager/src/org/openintents/filemanager/SaveAsActivity.java", "rawCode": "  private void startPickActivity(Intent intent) {\n    try {\n      startActivityForResult(intent, REQUEST_CODE_PICK_FILE_OR_DIRECTORY);\n    } catch (ActivityNotFoundException e) {\n      // Should never happen, but Java requires this catch\n      Toast.makeText(this, R.string.saveas_error, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9528, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 891, "focalAPIEnd": 963, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [891], "useEnd": [970], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sodnpoo/android_packages_apps_Camera/tree/master/src/com/android/camera/ReviewImage.java", "rawCode": "  public void onClick(View v) {\n    switch (v.getId()) {\n      case R.id.btn_delete:\n        MenuHelper.deleteImage(this, mDeletePhotoRunnable, mAllImages.getImageAt(mCurrentPosition));\n        break;\n      case R.id.btn_play:\n        startPlayVideoActivity();\n        break;\n      case R.id.btn_share:\n        {\n          IImage image = mAllImages.getImageAt(mCurrentPosition);\n          if (!MenuHelper.isWhiteListUri(image.fullSizeImageUri())) {\n            return;\n          }\n          startShareMediaActivity(image);\n          break;\n        }\n      case R.id.btn_set_as:\n        {\n          IImage image = mAllImages.getImageAt(mCurrentPosition);\n          Intent intent = Util.createSetAsIntent(image);\n          try {\n            startActivity(Intent.createChooser(intent, getText(R.string.setImage)));\n          } catch (android.content.ActivityNotFoundException ex) {\n            Toast.makeText(this, R.string.no_way_to_share_video, Toast.LENGTH_SHORT).show();\n          }\n          break;\n        }\n      case R.id.btn_done:\n        finish();\n        break;\n      case R.id.next_image:\n        moveNextOrPrevious(1);\n        break;\n      case R.id.prev_image:\n        moveNextOrPrevious(-1);\n        break;\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9529, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["printStackTrace()", "makeText(*,*,*)", "show()"], "tryExpressionStart": 324, "tryExpressionEnd": 328, "tryBlockStart": 324, "tryBlockEnd": 16884, "catchExpressionStart": 16747, "catchExpressionEnd": 16767, "catchBlockStart": 16747, "catchBlockEnd": 16884, "exceptionHandlingCallStart": [16775, 16802, 16802], "exceptionHandlingCallEnd": [16794, 16870, 16877], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 16662, "focalAPIEnd": 16732, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [16662, 16802], "useEnd": [16739, 16870], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/JakeWharton/WakkaWallpaper/tree/master/src/com/jakewharton/wakkawallpaper/Preferences.java", "rawCode": "  /**\n   * Perform importing of preferences from the specified JSON file.\n   *\n   * @param uri JSON file.\n   */\n  private void jsonImport(final Uri uri) {\n    final Resources resources = this.getResources();\n    final SharedPreferences.Editor editor =\n        this.getPreferenceManager().getSharedPreferences().edit();\n\n    try {\n      // Load entire file into JSONOBject\n      final BufferedReader file =\n          new BufferedReader(new InputStreamReader(this.getContentResolver().openInputStream(uri)));\n      final StringBuilder json = new StringBuilder();\n      String data;\n      while ((data = file.readLine()) != null) {\n        json.append(data);\n      }\n      final JSONObject settings = new JSONObject(json.toString());\n\n      // DISPLAY\n      final String display_key = resources.getString(R.string.settings_display_key);\n      if (settings.has(display_key)) {\n        final JSONObject display = settings.getJSONObject(display_key);\n\n        // fps\n        final String display_fps = resources.getString(R.string.settings_display_fps_key);\n        if (display.has(display_fps)) {\n          editor.putInt(display_fps, display.getInt(display_fps));\n        }\n        // juggerdot blink\n        final String display_juggerdotblink =\n            resources.getString(R.string.settings_display_juggerdotblink_key);\n        if (display.has(display_juggerdotblink)) {\n          editor.putInt(display_juggerdotblink, display.getInt(display_juggerdotblink));\n        }\n        // show hud\n        final String display_showhud = resources.getString(R.string.settings_display_showhud_key);\n        if (display.has(display_showhud)) {\n          editor.putBoolean(display_showhud, display.getBoolean(display_showhud));\n        }\n        // hud size\n        final String display_hudsize = resources.getString(R.string.settings_display_hudsize_key);\n        if (display.has(display_hudsize)) {\n          editor.putInt(display_hudsize, display.getInt(display_hudsize));\n        }\n        // hud offset\n        final String display_hudoffset =\n            resources.getString(R.string.settings_display_hudoffset_key);\n        if (display.has(display_hudoffset)) {\n          editor.putInt(display_hudoffset, display.getInt(display_hudoffset));\n        }\n        // show walls\n        final String display_showwalls =\n            resources.getString(R.string.settings_display_showwalls_key);\n        if (display.has(display_showwalls)) {\n          editor.putBoolean(display_showwalls, display.getBoolean(display_showwalls));\n        }\n        // icon rows\n        final String display_iconrows = resources.getString(R.string.settings_display_iconrows_key);\n        if (display.has(display_iconrows)) {\n          editor.putInt(display_iconrows, display.getInt(display_iconrows));\n        }\n        // icon cols\n        final String display_iconcols = resources.getString(R.string.settings_display_iconcols_key);\n        if (display.has(display_iconcols)) {\n          editor.putInt(display_iconcols, display.getInt(display_iconcols));\n        }\n        // icon row spacing\n        final String display_rowspacing =\n            resources.getString(R.string.settings_display_rowspacing_key);\n        if (display.has(display_rowspacing)) {\n          editor.putInt(display_rowspacing, display.getInt(display_rowspacing));\n        }\n        // icon col spacing\n        final String display_colspacing =\n            resources.getString(R.string.settings_display_colspacing_key);\n        if (display.has(display_colspacing)) {\n          editor.putInt(display_colspacing, display.getInt(display_colspacing));\n        }\n        // padding top\n        final String display_paddingtop =\n            resources.getString(R.string.settings_display_padding_top_key);\n        if (display.has(display_paddingtop)) {\n          editor.putInt(display_paddingtop, display.getInt(display_paddingtop));\n        }\n        // padding bottom\n        final String display_paddingbottom =\n            resources.getString(R.string.settings_display_padding_bottom_key);\n        if (display.has(display_paddingbottom)) {\n          editor.putInt(display_paddingbottom, display.getInt(display_paddingbottom));\n        }\n        // padding left\n        final String display_paddingleft =\n            resources.getString(R.string.settings_display_padding_left_key);\n        if (display.has(display_paddingleft)) {\n          editor.putInt(display_paddingleft, display.getInt(display_paddingleft));\n        }\n        // padding right\n        final String display_paddingright =\n            resources.getString(R.string.settings_display_padding_right_key);\n        if (display.has(display_paddingright)) {\n          editor.putInt(display_paddingright, display.getInt(display_paddingright));\n        }\n      }\n\n      // GAME\n      final String game_key = resources.getString(R.string.settings_game_key);\n      if (settings.has(game_key)) {\n        final JSONObject game = settings.getJSONObject(game_key);\n\n        // mode\n        final String game_mode = resources.getString(R.string.settings_game_mode_key);\n        if (game.has(game_mode)) {\n          editor.putInt(game_mode, game.getInt(game_mode));\n        }\n        // endless dot threshold\n        final String game_endlessdotregen =\n            resources.getString(R.string.settings_game_endlessdotregen_key);\n        if (game.has(game_endlessdotregen)) {\n          editor.putInt(game_endlessdotregen, game.getInt(game_endlessdotregen));\n        }\n        // endless jugger threshold\n        final String game_endlessjuggerdotregen =\n            resources.getString(R.string.settings_game_endlessjuggerdotregen_key);\n        if (game.has(game_endlessjuggerdotregen)) {\n          editor.putInt(game_endlessjuggerdotregen, game.getInt(game_endlessjuggerdotregen));\n        }\n        // display kill screen\n        final String game_killscreen = resources.getString(R.string.settings_game_killscreen_key);\n        if (game.has(game_killscreen)) {\n          editor.putBoolean(game_killscreen, game.getBoolean(game_killscreen));\n        }\n        // wrapping mode\n        final String game_wrappingmode =\n            resources.getString(R.string.settings_game_wrappingmode_key);\n        if (game.has(game_wrappingmode)) {\n          editor.putInt(game_wrappingmode, game.getInt(game_wrappingmode));\n        }\n        // the man wrapping\n        final String game_wrappingtheman =\n            resources.getString(R.string.settings_game_wrappingtheman_key);\n        if (game.has(game_wrappingtheman)) {\n          editor.putBoolean(game_wrappingtheman, game.getBoolean(game_wrappingtheman));\n        }\n        // ghost wrapping\n        final String game_wrappingghosts =\n            resources.getString(R.string.settings_game_wrappingghosts_key);\n        if (game.has(game_wrappingghosts)) {\n          editor.putBoolean(game_wrappingghosts, game.getBoolean(game_wrappingghosts));\n        }\n        // the man mode\n        final String game_themanmode = resources.getString(R.string.settings_game_themanmode_key);\n        if (game.has(game_themanmode)) {\n          editor.putInt(game_themanmode, game.getInt(game_themanmode));\n        }\n        // user controllable\n        final String game_usercontrol = resources.getString(R.string.settings_game_usercontrol_key);\n        if (game.has(game_usercontrol)) {\n          editor.putBoolean(game_usercontrol, game.getBoolean(game_usercontrol));\n        }\n        // ghost mode\n        final String game_ghostmode = resources.getString(R.string.settings_game_ghostmode_key);\n        if (game.has(game_ghostmode)) {\n          editor.putInt(game_ghostmode, game.getInt(game_ghostmode));\n        }\n        // ghosts are deadly\n        final String game_deadlyghosts =\n            resources.getString(R.string.settings_game_deadlyghosts_key);\n        if (game.has(game_deadlyghosts)) {\n          editor.putBoolean(game_deadlyghosts, game.getBoolean(game_deadlyghosts));\n        }\n        // ghost count\n        final String game_ghostcount = resources.getString(R.string.settings_game_ghostcount_key);\n        if (game.has(game_ghostcount)) {\n          editor.putInt(game_ghostcount, game.getInt(game_ghostcount));\n        }\n        // bonus allowed\n        final String game_bonuslife = resources.getString(R.string.settings_game_bonuslife_key);\n        if (game.has(game_bonuslife)) {\n          editor.putBoolean(game_bonuslife, game.getBoolean(game_bonuslife));\n        }\n        // bonus threshold\n        final String game_bonuslifethreshold =\n            resources.getString(R.string.settings_game_bonuslifethreshold_key);\n        if (game.has(game_bonuslifethreshold)) {\n          editor.putInt(game_bonuslifethreshold, game.getInt(game_bonuslifethreshold));\n        }\n        // fruit enabled\n        final String game_fruitenabled =\n            resources.getString(R.string.settings_game_fruitenabled_key);\n        if (game.has(game_fruitenabled)) {\n          editor.putBoolean(game_fruitenabled, game.getBoolean(game_fruitenabled));\n        }\n        // fruit one threshold\n        final String game_fruitonethreshold =\n            resources.getString(R.string.settings_game_fruitonethreshold_key);\n        if (game.has(game_fruitonethreshold)) {\n          editor.putInt(game_fruitonethreshold, game.getInt(game_fruitonethreshold));\n        }\n        // fruit two threshold\n        final String game_fruittwothreshold =\n            resources.getString(R.string.settings_game_fruittwothreshold_key);\n        if (game.has(game_fruittwothreshold)) {\n          editor.putInt(game_fruittwothreshold, game.getInt(game_fruittwothreshold));\n        }\n        // fruit visible lower\n        final String game_fruitvisiblelower =\n            resources.getString(R.string.settings_game_fruitvisiblelower_key);\n        if (game.has(game_fruitvisiblelower)) {\n          editor.putInt(game_fruitvisiblelower, game.getInt(game_fruitvisiblelower));\n        }\n        // fruit visible upper\n        final String game_fruitvisibleupper =\n            resources.getString(R.string.settings_game_fruitvisibleupper_key);\n        if (game.has(game_fruitvisibleupper)) {\n          editor.putInt(game_fruitvisibleupper, game.getInt(game_fruitvisibleupper));\n        }\n      }\n\n      // COLORS\n      final String color_key = resources.getString(R.string.settings_color_key);\n      if (settings.has(color_key)) {\n        final JSONObject color = settings.getJSONObject(color_key);\n        // background\n        final String color_game_background =\n            resources.getString(R.string.settings_color_game_background_key);\n        if (color.has(color_game_background)) {\n          editor.putInt(color_game_background, color.getInt(color_game_background));\n        }\n        // wall\n        final String color_game_walls = resources.getString(R.string.settings_color_game_walls_key);\n        if (color.has(color_game_walls)) {\n          editor.putInt(color_game_walls, color.getInt(color_game_walls));\n        }\n        // background image\n        final String color_game_bgimage =\n            resources.getString(R.string.settings_color_game_bgimage_key);\n        if (color.has(color_game_bgimage)) {\n          editor.putString(color_game_bgimage, color.getString(color_game_bgimage));\n        }\n        // background opacity\n        final String color_game_bgopacity =\n            resources.getString(R.string.settings_color_game_bgopacity_key);\n        if (color.has(color_game_bgopacity)) {\n          editor.putInt(color_game_bgopacity, color.getInt(color_game_bgopacity));\n        }\n        // dots\n        final String color_game_dot = resources.getString(R.string.settings_color_game_dot_key);\n        if (color.has(color_game_dot)) {\n          editor.putInt(color_game_dot, color.getInt(color_game_dot));\n        }\n        // juggerdots\n        final String color_game_juggerdot =\n            resources.getString(R.string.settings_color_game_juggerdot_key);\n        if (color.has(color_game_juggerdot)) {\n          editor.putInt(color_game_juggerdot, color.getInt(color_game_juggerdot));\n        }\n        // hud foreground\n        final String color_game_hudfg = resources.getString(R.string.settings_color_game_hudfg_key);\n        if (color.has(color_game_hudfg)) {\n          editor.putInt(color_game_hudfg, color.getInt(color_game_hudfg));\n        }\n        // hud background\n        final String color_game_hudbg = resources.getString(R.string.settings_color_game_hudbg_key);\n        if (color.has(color_game_hudbg)) {\n          editor.putInt(color_game_hudbg, color.getInt(color_game_hudbg));\n        }\n        // ready color\n        final String color_game_ready = resources.getString(R.string.settings_color_game_ready_key);\n        if (color.has(color_game_ready)) {\n          editor.putInt(color_game_ready, color.getInt(color_game_ready));\n        }\n        // game over color\n        final String color_game_gameover =\n            resources.getString(R.string.settings_color_game_gameover_key);\n        if (color.has(color_game_gameover)) {\n          editor.putInt(color_game_gameover, color.getInt(color_game_gameover));\n        }\n        // \"The Man\"\n        final String color_theman = resources.getString(R.string.settings_color_theman_key);\n        if (color.has(color_theman)) {\n          editor.putInt(color_theman, color.getInt(color_theman));\n        }\n        // eye background\n        final String color_ghost_eyebg =\n            resources.getString(R.string.settings_color_ghost_eyebg_key);\n        if (color.has(color_ghost_eyebg)) {\n          editor.putInt(color_ghost_eyebg, color.getInt(color_ghost_eyebg));\n        }\n        // eye foreground\n        final String color_ghost_eyefg =\n            resources.getString(R.string.settings_color_ghost_eyefg_key);\n        if (color.has(color_ghost_eyefg)) {\n          editor.putInt(color_ghost_eyefg, color.getInt(color_ghost_eyefg));\n        }\n        // scared body\n        final String color_ghost_scaredbg =\n            resources.getString(R.string.settings_color_ghost_scaredbg_key);\n        if (color.has(color_ghost_scaredbg)) {\n          editor.putInt(color_ghost_scaredbg, color.getInt(color_ghost_scaredbg));\n        }\n        // scared eyes\n        final String color_ghost_scaredfg =\n            resources.getString(R.string.settings_color_ghost_scaredfg_key);\n        if (color.has(color_ghost_scaredfg)) {\n          editor.putInt(color_ghost_scaredfg, color.getInt(color_ghost_scaredfg));\n        }\n        // scared blinking body\n        final String color_ghost_scaredblinkbg =\n            resources.getString(R.string.settings_color_ghost_scaredblinkbg_key);\n        if (color.has(color_ghost_scaredblinkbg)) {\n          editor.putInt(color_ghost_scaredblinkbg, color.getInt(color_ghost_scaredblinkbg));\n        }\n        // scared blinking eyes\n        final String color_ghost_scaredblinkfg =\n            resources.getString(R.string.settings_color_ghost_scaredblinkfg_key);\n        if (color.has(color_ghost_scaredblinkfg)) {\n          editor.putInt(color_ghost_scaredblinkfg, color.getInt(color_ghost_scaredblinkfg));\n        }\n        // blinky\n        final String color_ghost_blinky =\n            resources.getString(R.string.settings_color_ghost_blinky_key);\n        if (color.has(color_ghost_blinky)) {\n          editor.putInt(color_ghost_blinky, color.getInt(color_ghost_blinky));\n        }\n        // pinky\n        final String color_ghost_pinky =\n            resources.getString(R.string.settings_color_ghost_pinky_key);\n        if (color.has(color_ghost_pinky)) {\n          editor.putInt(color_ghost_pinky, color.getInt(color_ghost_pinky));\n        }\n        // inky\n        final String color_ghost_inky = resources.getString(R.string.settings_color_ghost_inky_key);\n        if (color.has(color_ghost_inky)) {\n          editor.putInt(color_ghost_inky, color.getInt(color_ghost_inky));\n        }\n        // clyde\n        final String color_ghost_clyde =\n            resources.getString(R.string.settings_color_ghost_clyde_key);\n        if (color.has(color_ghost_clyde)) {\n          editor.putInt(color_ghost_clyde, color.getInt(color_ghost_clyde));\n        }\n        // entity style\n        final String color_entitystyle = resources.getString(R.string.settings_color_entitystyle);\n        if (color.has(color_entitystyle)) {\n          editor.putInt(color_entitystyle, color.getInt(color_entitystyle));\n        }\n        // dot style\n        final String color_dotstyle = resources.getString(R.string.settings_color_dotstyle);\n        if (color.has(color_dotstyle)) {\n          editor.putInt(color_dotstyle, color.getInt(color_dotstyle));\n        }\n      }\n\n      // save changes\n      editor.commit();\n\n      // cheers\n      Toast.makeText(this, R.string.menu_import_success, Toast.LENGTH_SHORT).show();\n    } catch (Exception e) {\n      e.printStackTrace();\n      Toast.makeText(this, R.string.menu_import_failed, Toast.LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9530, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 74, "focalAPIEnd": 126, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [74], "useEnd": [133], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/peramikic/ARviewer/tree/master/src/com/libresoft/apps/ARviewer/Tips/ARTipManager.java", "rawCode": "  public void showTipShort(Context mContext, int textId) {\n    if (isTip) Toast.makeText(mContext, textId, Toast.LENGTH_SHORT).show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9531, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 414, "focalAPIEnd": 462, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,int)", "toast.makeText(*,*,int)", "toast.makeText(*,*,int)"], "useStart": [414, 817, 1010, 1325], "useEnd": [469, 869, 1060, 1372], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RudolfWeeber/eyes-free/tree/master/trunk/ocr/cardscanner/src/com/google/marvin/cardscanner/ScannerActivity.java", "rawCode": "  @Override\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    switch (requestCode) {\n      case REQUEST_CAPTURE:\n        {\n          if (resultCode == RESULT_OK) {\n            requestRecognize(data);\n          } else if (resultCode == RESULT_CANCELED) {\n            // Maintain the illusion that Capture is the main activity\n            finish();\n          } else {\n            Toast.makeText(this, R.string.capture_failed, 5).show();\n            Log.e(TAG, \"REQUEST_CAPTURE received unexpected resultCode (\" + resultCode + \")\");\n            requestCapture();\n          }\n          break;\n        }\n      case REQUEST_RECOGNIZE:\n        {\n          if (resultCode == RESULT_OK) {\n            handleCompleted(data);\n          } else if (resultCode == RESULT_CANCELED) {\n            Toast.makeText(this, R.string.recognize_canceled, 3).show();\n            Log.i(TAG, \"REQUEST_RECOGNIZED received RESULT_CANCELED\");\n            requestCapture();\n          } else {\n            Toast.makeText(this, R.string.recognize_failed, 5).show();\n            Log.e(TAG, \"REQUEST_RECOGNIZE received unexpected resultCode (\" + resultCode + \")\");\n            requestCapture();\n          }\n          break;\n        }\n      case REQUEST_REVIEW:\n        {\n          if (resultCode == RESULT_OK) {\n            Toast.makeText(this, R.string.contact_added, 3).show();\n          }\n          requestCapture();\n          break;\n        }\n      default:\n        {\n          Log.i(TAG, \"Received unknown activity request code (\" + requestCode + \")\");\n          super.onActivityResult(requestCode, resultCode, data);\n        }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9532, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 160, "focalAPIEnd": 244, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)", "toast.show()", "toast.makeText(*,String,*)"], "useStart": [160, 501, 501, 1011], "useEnd": [266, 585, 607, 1077], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/astray0924/EveryUseAndroid/tree/master/src/org/everyuse/android/activity/CreateActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Boolean success) {\n      indicator.dismiss();\n\n      if (success) {\n        if (isMode(MODE_CREATE)) {\n          Toast.makeText(CreateActivity.this, R.string.msg_create_success, Toast.LENGTH_SHORT)\n              .show();\n\n          Intent intent = new Intent(CreateActivity.this, DetailActivity.class);\n          intent.putExtra(DetailActivity.EXTRA_DATA, new_use_case);\n          startActivity(intent);\n        } else if (isMode(MODE_EDIT)) {\n          Toast.makeText(CreateActivity.this, R.string.msg_create_success, Toast.LENGTH_SHORT)\n              .show();\n\n          // TODO 업데이트된 UseCase를 보여주도록 구현해야함.\n          Intent intent = new Intent(activity, MainActivity.class);\n          intent.putExtra(MainActivity.EXTRA_REFRESH_LISTS, true);\n          startActivity(intent);\n\n          activity.finish();\n          return;\n        } else {\n          throw new IllegalStateException(\"Undefined mode detected\");\n        }\n\n        finish();\n      } else {\n        Toast.makeText(CreateActivity.this, msg_error, Toast.LENGTH_SHORT).show();\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9533, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1746, "focalAPIEnd": 1825, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1746], "useEnd": [1832], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tommy0823/packages_apps_MagicControl/tree/master/src/com/sourcery/magiccontrol/fragments/RibbonTargets.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()) {\n      case R.id.reset:\n        resetRibbon();\n        setupButtons();\n        refreshButtons();\n        return true;\n      case R.id.rearrange:\n        if (arrayNum < 10) {\n          ArrayList<String> aTargets = new ArrayList<String>();\n          for (int i = 0; i < mShortTargets.size(); i++) {\n            if (mShortTargets.get(i).equals(\"**null**\")) {\n              aTargets.add(NavBarHelpers.getProperSummary(mContext, mLongTargets.get(i)));\n            } else {\n              aTargets.add(NavBarHelpers.getProperSummary(mContext, mShortTargets.get(i)));\n            }\n          }\n          ArrangeRibbonFragment fragment = new ArrangeRibbonFragment();\n          fragment.setResources(\n              mContext, mContentRes, aTargets, mShortTargets, mLongTargets, mCustomIcons, arrayNum);\n          fragment.show(getFragmentManager(), \"rearrange\");\n        } else {\n          showHideAppsDialog();\n        }\n        return true;\n      case R.id.ribbon_toggles:\n        if (arrayNum == 2 || arrayNum == 4) {\n          allTogglesStrings.clear();\n          for (int i = 0; i < allToggles.size(); i++) {\n            allTogglesStrings.add(lookupToggle(allToggles.get(i)));\n          }\n          ArrayList<String> mToggles =\n              Settings.System.getArrayList(\n                  mContentRes, Settings.System.SWIPE_RIBBON_TOGGLES[ribbonNumber]);\n          ArrangeRibbonTogglesFragment fragment = new ArrangeRibbonTogglesFragment();\n          fragment.setResources(\n              mContext, mContentRes, allToggles, allTogglesStrings, mToggles, ribbonNumber);\n          fragment.show(getFragmentManager(), \"toggles\");\n        } else {\n          Toast.makeText(mContext, R.string.menu_ribbon_toggles_error, Toast.LENGTH_LONG).show();\n        }\n        return true;\n      default:\n        return super.onContextItemSelected(item);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9534, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 490, "focalAPIEnd": 561, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [490], "useEnd": [568], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Contacts/tree/master/src/com/android/contacts/ViewContactActivity.java", "rawCode": "  private void joinAggregate(final long contactId) {\n    Cursor c =\n        mResolver.query(\n            RawContacts.CONTENT_URI,\n            new String[] {RawContacts._ID},\n            RawContacts.CONTACT_ID + \"=\" + contactId,\n            null,\n            null);\n\n    try {\n      while (c.moveToNext()) {\n        long rawContactId = c.getLong(0);\n        setAggregationException(rawContactId, AggregationExceptions.TYPE_KEEP_TOGETHER);\n      }\n    } finally {\n      c.close();\n    }\n\n    Toast.makeText(this, R.string.contactsJoinedMessage, Toast.LENGTH_LONG).show();\n    startEntityQuery();\n  }\n"}, {"dataset": "makeText", "exampleID": 9535, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["toast.makeText(*,String,*)"], "configurationStart": [129], "configurationEnd": [278], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 323, "focalAPIEnd": 434, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [323], "useEnd": [454], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dittaeva/vespucci/tree/master/src/de/blau/android/Main.java", "rawCode": "    @Override\n    public void onClick(View arg0) {\n      String name = logic.getUndo().undo();\n      if (name != null) {\n        Toast.makeText(\n                Main.this,\n                getResources().getString(R.string.undo) + \": \" + name,\n                Toast.LENGTH_SHORT)\n            .show();\n      } else {\n        Toast.makeText(\n                Main.this, getResources().getString(R.string.undo_nothing), Toast.LENGTH_SHORT)\n            .show();\n      }\n      map.invalidate();\n    }\n"}, {"dataset": "makeText", "exampleID": 9536, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 197, "focalAPIEnd": 258, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.setGravity(int,int,int)", "toast.show()"], "useStart": [266, 300], "useEnd": [292, 313], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Theophilus/Hal/tree/master/src/SE_spring2013_g8/hal/Lights/LightControl.java", "rawCode": "  /** method used to toggle the blinds on and off */\n  public void BlindsT(View view) {\n    if (ipAddress != null) {\n      sendToServer(\"ToggleBlinds\" + \" \" + 0);\n    } else {\n      Toast prName = Toast.makeText(this, R.string.no_ip_error, Toast.LENGTH_LONG);\n      prName.setGravity(0, 0, 0);\n      prName.show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9537, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 677, "focalAPIEnd": 741, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.makeText(*,*,*)", "toast.show()", "toast.makeText(*,*,*)", "toast.show()", "toast.makeText(*,*,*)", "toast.show()"], "useStart": [778, 879, 968, 1042, 1134, 1208], "useEnd": [859, 891, 1032, 1054, 1200, 1220], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dwalkes/WakeMeSki/tree/master/src/com/wakemeski/ui/WakeMeSkiPreferences.java", "rawCode": "  /**\n   * Based on change in alarm scheduling related preferences, pop up a toast message telling the\n   * user if the alarm is ready to go or not\n   *\n   * @param wakeupEnabled true if the \"enable wake-up\" box is checked\n   */\n  private void alarmSchedulingPreferenceUpdated(boolean wakeupEnabled) {\n\n    if (wakeupEnabled) {\n\n      if (Alarms.getEnabledAlarmsQuery(getContentResolver()).getCount() != 0) {\n        int wakeupEnabledResorts = 0;\n        for (Resort r : mResortManager.getResorts()) {\n          if (r.isWakeupEnabled()) {\n            wakeupEnabledResorts++;\n          }\n        }\n        Toast toast;\n        if (wakeupEnabledResorts != 0) {\n          toast = Toast.makeText(this, R.string.alarm_updated, Toast.LENGTH_SHORT);\n        } else {\n          toast = Toast.makeText(this, R.string.please_enable_wakeup_on_resort, Toast.LENGTH_SHORT);\n        }\n        toast.show();\n      } else {\n        Log.d(\"No alarm configured\");\n        Toast toast = Toast.makeText(this, R.string.alarm_not_set, Toast.LENGTH_SHORT);\n        toast.show();\n      }\n    } else {\n      Log.d(\"Alarm is not enabled\");\n      Toast toast = Toast.makeText(this, R.string.wakeup_disabled, Toast.LENGTH_SHORT);\n      toast.show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9538, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 181, "focalAPIEnd": 250, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)", "toast.show()"], "useStart": [181, 301, 301], "useEnd": [257, 370, 377], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Launcher2/tree/master/src/com/android/launcher2/Launcher.java", "rawCode": "  void startActivityForResultSafely(Intent intent, int requestCode) {\n    try {\n      startActivityForResult(intent, requestCode);\n    } catch (ActivityNotFoundException e) {\n      Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();\n    } catch (SecurityException e) {\n      Toast.makeText(this, R.string.activity_not_found, Toast.LENGTH_SHORT).show();\n      Log.e(\n          TAG,\n          \"Launcher does not have the permission to launch \"\n              + intent\n              + \". Make sure to create a MAIN intent-filter for the corresponding activity \"\n              + \"or use the exported attribute for this activity.\",\n          e);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9539, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1321, "focalAPIEnd": 1385, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1321], "useEnd": [1392], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tbjers/AndTweet/tree/master/src/com/xorcode/andtweet/MessageListActivity.java", "rawCode": "  @Override\n  public boolean onContextItemSelected(MenuItem item) {\n    super.onContextItemSelected(item);\n    AdapterView.AdapterContextMenuInfo info;\n    try {\n      info = (AdapterView.AdapterContextMenuInfo) item.getMenuInfo();\n    } catch (ClassCastException e) {\n      Log.e(TAG, \"bad menuInfo\", e);\n      return false;\n    }\n\n    switch (item.getItemId()) {\n      case CONTEXT_MENU_ITEM_REPLY:\n        Uri uri = ContentUris.withAppendedId(AndTweetDatabase.DirectMessages.CONTENT_URI, info.id);\n        Cursor c =\n            getContentResolver()\n                .query(\n                    uri,\n                    new String[] {\n                      AndTweetDatabase.DirectMessages._ID, AndTweetDatabase.DirectMessages.AUTHOR_ID\n                    },\n                    null,\n                    null,\n                    null);\n        try {\n          c.moveToFirst();\n        } catch (Exception e) {\n          Log.e(TAG, \"onContextItemSelected: \" + e.toString());\n        } finally {\n          if (c != null && !c.isClosed()) c.close();\n        }\n        return true;\n\n      case CONTEXT_MENU_ITEM_STAR:\n      case CONTEXT_MENU_ITEM_RETWEET:\n      case CONTEXT_MENU_ITEM_UNFOLLOW:\n      case CONTEXT_MENU_ITEM_BLOCK:\n      case CONTEXT_MENU_ITEM_DIRECT_MESSAGE:\n      case CONTEXT_MENU_ITEM_PROFILE:\n        Toast.makeText(this, R.string.unimplemented, Toast.LENGTH_SHORT).show();\n        return true;\n    }\n    return false;\n  }\n"}, {"dataset": "makeText", "exampleID": 9540, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 200, "focalAPIEnd": 276, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [200], "useEnd": [283], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dekelna/BabyWatch/tree/master/src/com/dekel/babysitter/AlertActivity.java", "rawCode": "  public void userChoiceHaventFinishedRide() {\n    Log.d(Config.MODULE_NAME, \"userChoiceHaventFinishedRide\");\n    startBabyServiceWithIntent(Config.USER_CHOICE_HAVENT_FINISHED_RIDE_INTENT_EXTRA);\n    Toast.makeText(this, R.string.toast_finished_still_going, Toast.LENGTH_LONG).show();\n    finish();\n  }\n"}, {"dataset": "makeText", "exampleID": 9541, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 324, "focalAPIEnd": 395, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [324, 518], "useEnd": [402, 588], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/media/tests/CameraBrowser/src/com/android/camerabrowser/ObjectViewer.java", "rawCode": "  private void importObject() {\n    // copy file to /mnt/sdcard/imported/<filename>\n    File dest = Environment.getExternalStorageDirectory();\n    dest = new File(dest, \"imported\");\n    dest.mkdirs();\n    dest = new File(dest, mFileName);\n\n    if (mClient.importFile(mDeviceName, mObjectID, dest.getAbsolutePath())) {\n      Toast.makeText(this, R.string.object_saved_message, Toast.LENGTH_SHORT).show();\n\n      mScannerClient.setScanPath(dest.getAbsolutePath());\n      mScannerConnection.connect();\n    } else {\n      Toast.makeText(this, R.string.save_failed_message, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9542, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 496, "focalAPIEnd": 532, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,CharSequence,int)", "toast.show()"], "useStart": [540, 959, 1003], "useEnd": [552, 995, 1015], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/KPWhiver/SpectroPolaris/tree/master/SpectroPolarisClient/src/stkl/spectropolarisclient/JoinActivity.java", "rawCode": "  public void joinGame(View view) {\n    if (startingGame) return;\n    else startingGame = true;\n\n    EditText ipAdressEdit = (EditText) findViewById(R.id.join_ip);\n    String ipAdress = ipAdressEdit.getText().toString();\n    Matcher matcher = Patterns.IP_ADDRESS.matcher(ipAdress);\n\n    EditText nameEdit = (EditText) findViewById(R.id.username);\n\n    if (!(nameEdit.length() > 0)) {\n      CharSequence text = \"Please enter a name!\";\n      int duration = Toast.LENGTH_SHORT;\n\n      Toast toast = Toast.makeText(this, text, duration);\n      toast.show();\n      return;\n    }\n\n    username = nameEdit.getText().toString();\n\n    if (matcher.matches()) {\n\n      // Attempt to connect to the server\n      client = new Client(ipAdress, username, color);\n\n      new Connector(this).execute(client);\n\n    } else {\n      // Show toaster to tell user IP is invalid.\n      CharSequence text = \"Invalid IP!\";\n      int duration = Toast.LENGTH_SHORT;\n\n      Toast toast = Toast.makeText(this, text, duration);\n      toast.show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9543, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 212, "focalAPIEnd": 293, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [212], "useEnd": [300], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Email/tree/master/src/com/android/email/activity/MessageCompose.java", "rawCode": "  private void addAttachment(Attachment attachment) {\n    // Before attaching the attachment, make sure it meets any other pre-attach criteria\n    if (attachment.mSize > Email.MAX_ATTACHMENT_UPLOAD_SIZE) {\n      Toast.makeText(this, R.string.message_compose_attachment_size, Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    View view =\n        getLayoutInflater().inflate(R.layout.message_compose_attachment, mAttachments, false);\n    TextView nameView = (TextView) view.findViewById(R.id.attachment_name);\n    ImageButton delete = (ImageButton) view.findViewById(R.id.attachment_delete);\n    nameView.setText(attachment.mFileName);\n    delete.setOnClickListener(this);\n    delete.setTag(view);\n    view.setTag(attachment);\n    mAttachments.addView(view);\n  }\n"}, {"dataset": "makeText", "exampleID": 9544, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 156, "focalAPIEnd": 192, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zhaoyuqing/ActionBarSherlock/tree/master/actionbarsherlock/src/com/actionbarsherlock/internal/widget/IcsToast.java", "rawCode": "  public static Toast makeText(Context context, CharSequence s, int duration) {\n    if (VERSION.SDK_INT >= VERSION_CODES.ICE_CREAM_SANDWICH) {\n      return Toast.makeText(context, s, duration);\n    }\n    IcsToast toast = new IcsToast(context);\n    toast.setDuration(duration);\n    TextView view = new TextView(context);\n    view.setText(s);\n    // Original AOSP using reference on @android:color/bright_foreground_dark\n    // bright_foreground_dark - reference on @android:color/background_light\n    // background_light - 0xffffffff\n    view.setTextColor(0xffffffff);\n    view.setGravity(Gravity.CENTER);\n    view.setBackgroundResource(R.drawable.abs__toast_frame);\n    toast.setView(view);\n    return toast;\n  }\n"}, {"dataset": "makeText", "exampleID": 9545, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["notify_error(*)"], "tryExpressionStart": 37, "tryExpressionEnd": 41, "tryBlockStart": 37, "tryBlockEnd": 831, "catchExpressionStart": 781, "catchExpressionEnd": 801, "catchBlockStart": 781, "catchBlockEnd": 831, "exceptionHandlingCallStart": [809], "exceptionHandlingCallEnd": [824], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 560, "focalAPIEnd": 626, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [560], "useEnd": [633], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/raffaeleragni/android-wardrive/tree/master/src/ki/wardrive/ScanService.java", "rawCode": "  private void stop_services() {\n    try {\n      if (location_manager != null) {\n        location_manager.removeUpdates(location_listener);\n        location_manager = null;\n      }\n\n      if (wifi_manager != null) {\n        if (wifi_manager.isWifiEnabled() != previous_wifi_state)\n          wifi_manager.setWifiEnabled(previous_wifi_state);\n        unregisterReceiver(wifiEvent);\n        wifi_manager = null;\n      }\n\n      if (database != null) {\n        if (database.isOpen()) database.close();\n        database = null;\n      }\n\n      started = false;\n      Toast.makeText(this, R.string.SERVICE_STOPPED, Toast.LENGTH_SHORT).show();\n      NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n      nm.cancel(NOTIFICATION_ELEMENT);\n    } catch (Exception e) {\n      notify_error(e);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9546, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1076, "focalAPIEnd": 1138, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1076], "useEnd": [1145], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/hecao/gallery3d/tree/master/src/com/android/gallery3d/app/Gallery.java", "rawCode": "  private void startViewAction(Intent intent) {\n    Boolean slideshow = intent.getBooleanExtra(EXTRA_SLIDESHOW, false);\n    if (slideshow) {\n      getActionBar().hide();\n      DataManager manager = getDataManager();\n      Path path = manager.findPathByUri(intent.getData(), intent.getType());\n      if (path == null || manager.getMediaObject(path) instanceof MediaItem) {\n        path = Path.fromString(manager.getTopSetPath(DataManager.INCLUDE_IMAGE));\n      }\n      Bundle data = new Bundle();\n      data.putString(SlideshowPage.KEY_SET_PATH, path.toString());\n      data.putBoolean(SlideshowPage.KEY_RANDOM_ORDER, true);\n      data.putBoolean(SlideshowPage.KEY_REPEAT, true);\n      if (intent.getBooleanExtra(EXTRA_DREAM, false)) {\n        data.putBoolean(SlideshowPage.KEY_DREAM, true);\n      }\n      getStateManager().startState(SlideshowPage.class, data);\n    } else {\n      Bundle data = new Bundle();\n      DataManager dm = getDataManager();\n      Uri uri = intent.getData();\n      String contentType = getContentType(intent);\n      if (contentType == null) {\n        Toast.makeText(this, R.string.no_such_item, Toast.LENGTH_LONG).show();\n        finish();\n        return;\n      }\n      if (uri == null) {\n        int typeBits = GalleryUtils.determineTypeBits(this, intent);\n        data.putInt(KEY_TYPE_BITS, typeBits);\n        data.putString(AlbumSetPage.KEY_MEDIA_PATH, getDataManager().getTopSetPath(typeBits));\n        getStateManager().startState(AlbumSetPage.class, data);\n      } else if (contentType.startsWith(ContentResolver.CURSOR_DIR_BASE_TYPE)) {\n        int mediaType = intent.getIntExtra(KEY_MEDIA_TYPES, 0);\n        if (mediaType != 0) {\n          uri =\n              uri.buildUpon()\n                  .appendQueryParameter(KEY_MEDIA_TYPES, String.valueOf(mediaType))\n                  .build();\n        }\n        Path setPath = dm.findPathByUri(uri, null);\n        MediaSet mediaSet = null;\n        if (setPath != null) {\n          mediaSet = (MediaSet) dm.getMediaObject(setPath);\n        }\n        if (mediaSet != null) {\n          if (mediaSet.isLeafAlbum()) {\n            data.putString(AlbumPage.KEY_MEDIA_PATH, setPath.toString());\n            data.putString(\n                AlbumPage.KEY_PARENT_MEDIA_PATH, dm.getTopSetPath(DataManager.INCLUDE_ALL));\n            getStateManager().startState(AlbumPage.class, data);\n          } else {\n            data.putString(AlbumSetPage.KEY_MEDIA_PATH, setPath.toString());\n            getStateManager().startState(AlbumSetPage.class, data);\n          }\n        } else {\n          startDefaultPage();\n        }\n      } else {\n        Path itemPath = dm.findPathByUri(uri, intent.getType());\n        Path albumPath = dm.getDefaultSetOf(itemPath);\n        // TODO: Make this parameter public so other activities can reference it.\n        boolean singleItemOnly = intent.getBooleanExtra(\"SingleItemOnly\", false);\n        if (!singleItemOnly && (albumPath != null)) {\n          data.putString(PhotoPage.KEY_MEDIA_SET_PATH, albumPath.toString());\n        }\n        data.putString(PhotoPage.KEY_MEDIA_ITEM_PATH, itemPath.toString());\n        if (intent.getBooleanExtra(PhotoPage.KEY_TREAT_BACK_AS_UP, false)) {\n          data.putBoolean(PhotoPage.KEY_TREAT_BACK_AS_UP, true);\n        }\n\n        // Displays the filename as title, reading the filename from the interface:\n        // {@link android.provider.OpenableColumns#DISPLAY_NAME}.\n        AsyncQueryHandler queryHandler =\n            new AsyncQueryHandler(getContentResolver()) {\n              @Override\n              protected void onQueryComplete(int token, Object cookie, Cursor cursor) {\n                try {\n                  if ((cursor != null) && cursor.moveToFirst()) {\n                    String displayName = cursor.getString(0);\n\n                    // Just show empty title if other apps don't set DISPLAY_NAME\n                    setTitle((displayName == null) ? \"\" : displayName);\n                  }\n                } finally {\n                  Utils.closeSilently(cursor);\n                }\n              }\n            };\n        queryHandler.startQuery(\n            0, null, uri, new String[] {OpenableColumns.DISPLAY_NAME}, null, null, null);\n\n        getStateManager().startState(PhotoPage.class, data);\n      }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9547, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 194, "focalAPIEnd": 360, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [194], "useEnd": [378], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ChainsDD/Superuser/tree/master/src/com/noshufou/android/su/preferences/PreferencesActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Integer result) {\n      mClearLog.setTitle(R.string.pref_clear_log_title);\n      mClearLog.setSummary(\"\");\n      mClearLog.setEnabled(true);\n      Toast.makeText(\n              mContext,\n              getResources().getQuantityString(R.plurals.pref_logs_deleted, result, result),\n              Toast.LENGTH_SHORT)\n          .show();\n    }\n"}, {"dataset": "makeText", "exampleID": 9548, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 141, "focalAPIEnd": 215, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(Context,*,*)"], "useStart": [141, 243], "useEnd": [222, 334], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/stothardj/WhereAreYou/tree/master/androidgui/GUI/src/gogodeX/GUI/BuddyOverlay.java", "rawCode": "  @Override\n  protected boolean onTap(int pIndex) {\n    String snippet = items.get(pIndex).getSnippet();\n    if (snippet.equals(\"\")) {\n      Toast.makeText(mContext, items.get(pIndex).getTitle(), Toast.LENGTH_SHORT).show();\n    } else {\n      Toast.makeText(mContext, items.get(pIndex).getTitle() + \"\\n\" + snippet, Toast.LENGTH_SHORT)\n          .show();\n    }\n    return true;\n  }\n"}, {"dataset": "makeText", "exampleID": 9549, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 532, "focalAPIEnd": 597, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [532], "useEnd": [604], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kazhik/Kmoney/tree/master/android/src/net/kazhik/android/kmoney/KmoneyActivity.java", "rawCode": "  private void switchUser() {\n    class SwitchUserListener implements DialogInterface.OnClickListener {\n      private List<Item> userList;\n\n      public SwitchUserListener(List<Item> userList) {\n        this.userList = userList;\n      }\n\n      @Override\n      public void onClick(DialogInterface dialog, int which) {\n        Item item = this.userList.get(which);\n\n        KmoneyActivity.this.setUser(item.getId());\n      }\n    }\n    List<Item> userList = MasterDataReader.getUserNameList(this);\n\n    if (userList.isEmpty()) {\n      Toast.makeText(this, R.string.detail_nothing, Toast.LENGTH_SHORT).show();\n      return;\n    }\n    List<String> nameList = this.toNameList(userList);\n\n    AlertDialog.Builder builder = new AlertDialog.Builder(this);\n    builder.setTitle(R.string.user);\n    builder.setItems(\n        nameList.toArray(new CharSequence[nameList.size()]), new SwitchUserListener(userList));\n\n    AlertDialog alert = builder.create();\n    alert.show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9550, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 36, "focalAPIEnd": 125, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [36], "useEnd": [141], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/alberapps/tiempobus/tree/master/TiempoBus/src/alberapps/android/tiempobus/favoritos/FavoritoModificarActivity.java", "rawCode": "  private void modificadoOK() {\n    Toast.makeText(this, getResources().getText(R.string.info_modificar), Toast.LENGTH_SHORT)\n        .show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9551, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.startActivity(Intent)"], "configurationStart": [385], "configurationEnd": [406], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 427, "focalAPIEnd": 515, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [427], "useEnd": [533], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openeclair/OEUpdater/tree/master/src/openeclairupdaterapp/tasks/MD5CheckerTask.java", "rawCode": "  @Override\n  public void onPostExecute(Boolean result) {\n    UpdateInfo ui = new UpdateInfo();\n    String[] temp = mFilename.split(\"\\\\\\\\\");\n    ui.setName(temp[temp.length - 1]);\n    ui.setFileName(mFilename);\n    if (result == true) {\n      Intent i =\n          new Intent(mCtx, ApplyUpdateActivity.class)\n              .putExtra(Constants.KEY_UPDATE_INFO, (Serializable) ui);\n      mCtx.startActivity(i);\n    } else {\n      Toast.makeText(mCtx, R.string.apply_existing_update_md5error_message, Toast.LENGTH_LONG)\n          .show();\n    }\n\n    // Is null when no MD5SUM is present\n    if (mDialog != null) mDialog.dismiss();\n  }\n"}, {"dataset": "makeText", "exampleID": 9552, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 90, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [90], "useEnd": [144], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/erikwt/ParandroidMessaging/tree/master/src/org/parandroid/sms/ui/EditSlideDurationActivity.java", "rawCode": "  private void notifyUser(int msgId) {\n    mDur.requestFocus();\n    mDur.selectAll();\n    Toast.makeText(this, msgId, Toast.LENGTH_SHORT).show();\n    return;\n  }\n"}, {"dataset": "makeText", "exampleID": 9553, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 341, "focalAPIEnd": 456, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [341], "useEnd": [476], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wsot/platform_packages_apps_videoeditor/tree/master/src/com/android/videoeditor/VideoEditorBaseActivity.java", "rawCode": "    @Override\n    public void onVideoEditorThemeApplied(String projectPath, String theme, Exception exception) {\n      // Check if the VideoEditor is the one we are expecting\n      if (!projectPath.equals(mProjectPath)) {\n        return;\n      }\n\n      if (mProject == null) {\n        return;\n      }\n\n      if (exception != null) {\n        Toast.makeText(\n                VideoEditorBaseActivity.this, R.string.editor_apply_theme_error, Toast.LENGTH_LONG)\n            .show();\n      } else {\n        getMediaLayout().addMediaItems(mProject.getMediaItems());\n        getOverlayLayout().addMediaItems(mProject.getMediaItems());\n        getAudioTrackLayout().addAudioTracks(mProject.getAudioTracks());\n\n        updateTimelineDuration();\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9554, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 174, "focalAPIEnd": 247, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [174], "useEnd": [254], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Jules-/terraingis/tree/master/src/TerrainGIS/src/cz/kalcik/vojta/terraingis/fragments/AttributesFragment.java", "rawCode": "  /** reload attributes table */\n  public void reload() {\n    clear();\n\n    if (mLayer != null) {\n      try {\n        loadAttributes();\n      } catch (Exception e) {\n        Toast.makeText(mMainActivity, R.string.database_error, Toast.LENGTH_LONG).show();\n      }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9555, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 40, "focalAPIEnd": 136, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [40], "useEnd": [152], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arjunroy/cinder_base/tree/master/core/java/com/android/internal/app/UsbStorageActivity.java", "rawCode": "  private void showSharingError() {\n    Toast.makeText(this, com.android.internal.R.string.usb_storage_error_message, Toast.LENGTH_LONG)\n        .show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9556, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 41, "focalAPIEnd": 86, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [41], "useEnd": [93], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Lowerland/nl.dreamkernel.s4.tweaker/tree/master/src/nl/dreamkernel/s4/tweaker/misc/Misc.java", "rawCode": "  void showToast(CharSequence msg) {\n    Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9557, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "IOException", "exceptionHandlingCall": ["e(String,*)", "searchModeLoadFieldLocationWithGoogleWebservices(String,int)"], "tryExpressionStart": 118, "tryExpressionEnd": 122, "tryBlockStart": 118, "tryBlockEnd": 2649, "catchExpressionStart": 2489, "catchExpressionEnd": 2511, "catchBlockStart": 2489, "catchBlockEnd": 2649, "exceptionHandlingCallStart": [2521, 2574], "exceptionHandlingCallEnd": [2564, 2640], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1919, "focalAPIEnd": 2034, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [1919, 2220], "useEnd": [2062, 2303], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onelight-studio/onebike-android/tree/master/src/OneBike/OneBike/src/main/java/com/onelightstudio/onebike/MainActivity.java", "rawCode": "  private void searchModeLoadFieldLocation(String address, final int fieldId) {\n    if (Geocoder.isPresent()) {\n      try {\n        List<Address> addresses = geocoder.getFromLocationName(address, 1);\n        if (addresses != null && !addresses.isEmpty()) {\n          Address addr = addresses.get(0);\n          double lat = addr.getLatitude();\n          double lng = addr.getLongitude();\n          if (fieldId == FIELD_DEPARTURE) {\n            departureLocation = new LatLng(lat, lng);\n          }\n          if (fieldId == FIELD_ARRIVAL) {\n            arrivalLocation = new LatLng(lat, lng);\n          }\n\n          // This function is called for departure and arrival fields\n          // Once we have the 2 location, the stations and route loading can continue\n          if (departureLocation != null && arrivalLocation != null) {\n            // search the contract for the locations\n            Contract departureContract =\n                Util.getContractForLocation(departureLocation, MainActivity.this);\n            Contract arrivalContract =\n                Util.getContractForLocation(arrivalLocation, MainActivity.this);\n\n            if (departureContract != null && arrivalContract != null) {\n              if (departureContract.getName().equals(arrivalContract.getName())) {\n                if (currentContract != null\n                    && departureContract.getName().equals(currentContract.getName())) {\n                  if (searchModeLoadStationsAndRoute()) {\n                    searchModeDisplayStationsAndRoute();\n                  }\n                } else {\n                  currentContract = departureContract;\n                  waitLoadStationForLauchSearch = true;\n                  loadStationsForContract(false, currentContract);\n                }\n              } else {\n                searchButton.setEnabled(true);\n                setProgressBarIndeterminateVisibility(false);\n                Toast.makeText(\n                        MainActivity.this, R.string.serach_not_on_same_contract, Toast.LENGTH_LONG)\n                    .show();\n              }\n            } else {\n              searchButton.setEnabled(true);\n              setProgressBarIndeterminateVisibility(false);\n              Toast.makeText(MainActivity.this, R.string.unsupported_contract, Toast.LENGTH_LONG)\n                  .show();\n            }\n          }\n        } else {\n          searchButton.setEnabled(true);\n          setProgressBarIndeterminateVisibility(false);\n        }\n      } catch (IOException e) {\n        Log.e(\"Could not retrieve user address\", e);\n        searchModeLoadFieldLocationWithGoogleWebservices(address, fieldId);\n      }\n    } else {\n      Log.i(\"Geocoder not present, falling back to Google webservices\");\n      searchModeLoadFieldLocationWithGoogleWebservices(address, fieldId);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9558, "initialization": ["Context context = View.getContext()"], "initializationStart": [472], "initializationEnd": [489], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.getResources()"], "configurationStart": [803], "configurationEnd": [825], "guardCondition": "!(TextUtils.isEmpty(text,))", "guardType": "IF {", "guardExpressionStart": 139, "guardExpressionEnd": 167, "guardBlockStart": 139, "guardBlockEnd": 195, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 880, "focalAPIEnd": 929, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.setGravity(int,int,int)", "toast.setGravity(int,int,int)", "toast.show()"], "useStart": [1112, 1510, 1703], "useEnd": [1282, 1690, 1720], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iFixit/iFixitAndroid/tree/master/App/src/com/dozuki/ifixit/util/CheatSheet.java", "rawCode": "  /** Internal helper method to show the cheat sheet toast. */\n  private static boolean showCheatSheet(View view, CharSequence text) {\n    if (TextUtils.isEmpty(text)) {\n      return false;\n    }\n\n    final int[] screenPos = new int[2]; // origin is device display\n    final Rect displayFrame = new Rect(); // includes decorations (e.g. status bar)\n    view.getLocationOnScreen(screenPos);\n    view.getWindowVisibleDisplayFrame(displayFrame);\n\n    final Context context = view.getContext();\n    final int viewWidth = view.getWidth();\n    final int viewHeight = view.getHeight();\n    final int viewCenterX = screenPos[0] + viewWidth / 2;\n    final int screenWidth = context.getResources().getDisplayMetrics().widthPixels;\n    final int estimatedToastHeight =\n        (int) (ESTIMATED_TOAST_HEIGHT_DIPS * context.getResources().getDisplayMetrics().density);\n\n    Toast cheatSheet = Toast.makeText(context, text, Toast.LENGTH_SHORT);\n    boolean showBelow = screenPos[1] < estimatedToastHeight;\n    if (showBelow) {\n      // Show below\n      // Offsets are after decorations (e.g. status bar) are factored in\n      cheatSheet.setGravity(\n          Gravity.TOP | Gravity.CENTER_HORIZONTAL,\n          viewCenterX - screenWidth / 2,\n          screenPos[1] - displayFrame.top + viewHeight);\n    } else {\n      // Show above\n      // Offsets are after decorations (e.g. status bar) are factored in\n      // NOTE: We can't use Gravity.BOTTOM because when the keyboard is up\n      // its height isn't factored in.\n      cheatSheet.setGravity(\n          Gravity.TOP | Gravity.CENTER_HORIZONTAL,\n          viewCenterX - screenWidth / 2,\n          screenPos[1] - displayFrame.top - estimatedToastHeight);\n    }\n\n    cheatSheet.show();\n    return true;\n  }\n"}, {"dataset": "makeText", "exampleID": 9559, "initialization": ["Context context = getActivity()"], "initializationStart": [216], "initializationEnd": [234], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 313, "focalAPIEnd": 401, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [313], "useEnd": [421], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jritter/VoterApp/tree/master/VoterApp/src/ch/bfh/evoting/voterapp/fragment/NetworkOptionsFragment.java", "rawCode": "  /**\n   * Controls if identification is empty and shows a dialog\n   *\n   * @return true if identification was filled, false otherwise\n   */\n  private boolean checkIdentification() {\n    if (((NetworkConfigActivity) this.getActivity()).getIdentification().equals(\"\")) {\n\n      for (int i = 0; i < 2; i++)\n        Toast.makeText(this.getActivity(), R.string.toast_no_identification, Toast.LENGTH_SHORT)\n            .show();\n\n      return false;\n    }\n    return true;\n  }\n"}, {"dataset": "makeText", "exampleID": 9560, "initialization": ["Context context = getContext()"], "initializationStart": [107], "initializationEnd": [119], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 381, "focalAPIEnd": 465, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [381, 493], "useEnd": [472, 575], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fgluser/GitHubViewer/tree/master/src/net/flaxia/android/githubviewer/BlobsMenuDialog.java", "rawCode": "  private void boookmarkNow() {\n    final BookmarkSQliteOpenHelper bookmark = new BookmarkSQliteOpenHelper(getContext());\n    final long result =\n        bookmark.insert(\n            mRefs.getOwner(),\n            mRefs.getName(),\n            mRefs.getKey(),\n            mRefs.getHash(),\n            CommonHelper.getNow());\n\n    if (BookmarkSQliteOpenHelper.FAIL == result) {\n      Toast.makeText(getContext(), R.string.failed_to_edit_a_bookmark, Toast.LENGTH_SHORT).show();\n    } else {\n      Toast.makeText(getContext(), R.string.added_to_your_bookmarks, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9561, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 370, "focalAPIEnd": 639, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [370], "useEnd": [655], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kwoxer/ToDoList/tree/master/src/de/fhb/maus/android/todolist/TodoEditActivity.java", "rawCode": "  private void saveToDo() {\n    mCalendar.set(mYear, mMonth, mDay, mHour, mMinute, 0);\n    String category = (String) mCategory.getSelectedItem();\n    String summary = mTitleText.getText().toString();\n    String description = mBodyText.getText().toString();\n    boolean done = mCheckBox.isChecked();\n    String date = String.valueOf(mCalendar.getTime().getTime());\n\n    Toast.makeText(\n            this,\n            getResources().getString(R.string.additionalTodo)\n                + \" \"\n                + summary\n                + \" \"\n                + getResources().getString(R.string.additionalTodoSave),\n            Toast.LENGTH_LONG)\n        .show();\n\n    if (mRowId == null) {\n      long id = mDbHelper.createTodo(date, category, done, summary, description);\n      if (id > 0) {\n        mRowId = id;\n      }\n    } else {\n      mDbHelper.updateTodo(mRowId, date, category, done, summary, description);\n    }\n    finish();\n  }\n"}, {"dataset": "makeText", "exampleID": 9562, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 373, "focalAPIEnd": 458, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [373], "useEnd": [482], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/ApiDemos/src/com/example/android/apis/app/LocalServiceActivities.java", "rawCode": "          public void onServiceDisconnected(ComponentName className) {\n            // This is called when the connection with the service has been\n            // unexpectedly disconnected -- that is, its process crashed.\n            // Because it is running in our same process, we should never\n            // see this happen.\n            mBoundService = null;\n            Toast.makeText(Binding.this, R.string.local_service_disconnected, Toast.LENGTH_SHORT)\n                .show();\n          }\n"}, {"dataset": "makeText", "exampleID": 9563, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 218, "focalAPIEnd": 280, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [218], "useEnd": [287], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/higepon/Lovamimi-For-Android/tree/master/libs/facebook-android-sdk-3.6.0/samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java", "rawCode": "  private void onSessionStateChange(Session session, SessionState state, Exception exception) {\n    if (isResumed) {\n      if (exception != null && !(exception instanceof FacebookOperationCanceledException)) {\n        Toast.makeText(this, R.string.login_error, Toast.LENGTH_SHORT).show();\n        return;\n      }\n\n      if (session.isClosed()) {\n        showFragment(RPS, false);\n      }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9564, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 775, "focalAPIEnd": 890, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/liwenhaosuper/SysOfIMPS/tree/master/IMPS/src/com/imps/activities/ChatView.java", "rawCode": "        @Override\n        public void onClick(View v) {\n\n          if (v.getId() == send.getId()) {\n            String str = textEditor.getText().toString();\n            String sendStr;\n            if (str != null\n                && (sendStr =\n                        str.trim()\n                            .replaceAll(\"\\r\", \"\")\n                            .replaceAll(\"\\t\", \"\")\n                            .replaceAll(\"\\n\", \"\")\n                            .replaceAll(\"\\f\", \"\"))\n                    != \"\") {\n              sendMessage(sendStr);\n            }\n            textEditor.setText(\"\");\n\n          } else if (v.getId() == captureImageIv.getId()) {\n            String ip = CommonHelper.getLocalIpAddress();\n            if (ip == null || \"\".equals(ip)) {\n              Toast.makeText(\n                  ChatView.this, getResources().getString(R.string.net_problem), Toast.LENGTH_LONG);\n              return;\n            }\n            Log.d(\"ChatView\", \"IP sent is \" + ip);\n            UserManager.getInstance().SendPTPVideoReq(fUsername, ip, 1300);\n            Log.d(\"ChatView\", \"ptp video request sent\");\n            ComponentName cn = new ComponentName(ChatView.this, VideoContact2.class);\n            Intent intent = new Intent();\n            intent.putExtra(\"fUsername\", fUsername);\n            intent.setComponent(cn);\n            startActivity(intent);\n          } else if (v.getId() == graffitiImageIv.getId()) {\n            Log.d(\"ChatView\", \"graffiti clicked...\");\n            ComponentName cn = new ComponentName(ChatView.this, Graffiti.class);\n            Intent intent = new Intent();\n            intent.setComponent(cn);\n            startActivityForResult(intent, 1);\n          }\n        }\n"}, {"dataset": "makeText", "exampleID": 9565, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 309, "focalAPIEnd": 481, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [309], "useEnd": [503], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iceandfire/android_packages_apps_Settings/tree/master/src/com/android/settings/ApnSettings.java", "rawCode": "    @Override\n    public void handleMessage(Message msg) {\n      switch (msg.what) {\n        case EVENT_RESTORE_DEFAULTAPN_COMPLETE:\n          fillList();\n          getPreferenceScreen().setEnabled(true);\n          mRestoreDefaultApnMode = false;\n          dismissDialog(DIALOG_RESTORE_DEFAULTAPN);\n          Toast.makeText(\n                  ApnSettings.this,\n                  getResources().getString(R.string.restore_default_apn_completed),\n                  Toast.LENGTH_LONG)\n              .show();\n          break;\n      }\n    }\n"}, {"dataset": "makeText", "exampleID": 9566, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 288, "focalAPIEnd": 364, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [288], "useEnd": [371], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/faux123/android_packages_apps_Settings/tree/master/src/com/android/settings/bluetooth/BluetoothEnabler.java", "rawCode": "  public boolean onPreferenceChange(Preference preference, Object value) {\n    boolean enable = (Boolean) value;\n\n    // Show toast message if Bluetooth is not allowed in airplane mode\n    if (enable && !WirelessSettings.isRadioAllowed(mContext, Settings.System.RADIO_BLUETOOTH)) {\n      Toast.makeText(mContext, R.string.wifi_in_airplane_mode, Toast.LENGTH_SHORT).show();\n      return false;\n    }\n\n    mLocalManager.setBluetoothEnabled(enable);\n    mCheckBox.setEnabled(false);\n\n    // Don't update UI to opposite state until we're sure\n    return false;\n  }\n"}, {"dataset": "makeText", "exampleID": 9567, "initialization": ["Context context = getApplicationContext()"], "initializationStart": [60], "initializationEnd": [83], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 172, "focalAPIEnd": 211, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [217], "useEnd": [229], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/LUEshi/Trace2Learn/tree/master/src/edu/upenn/cis350/Trace2Learn/BrowseLessonsActivity.java", "rawCode": "  public void showToast(String msg) {\n    Context context = getApplicationContext();\n    CharSequence text = msg;\n    int duration = Toast.LENGTH_SHORT;\n\n    Toast toast = Toast.makeText(context, text, duration);\n    toast.show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9568, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 157, "focalAPIEnd": 218, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [157], "useEnd": [225], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mwebi/runnersHigh/tree/master/src/com/alarmclocksnoozers/runnershigh/HighScoreActivity.java", "rawCode": "  private void showLocalScore() {\n\n    highscoreTable.removeAllViews();\n\n    Cursor c = highScoreAdapter.fetchScores(\"0\");\n\n    if (c.isAfterLast()) {\n      Toast.makeText(this, R.string.hs_no_data, Toast.LENGTH_SHORT).show();\n      return;\n    }\n\n    int currentPlace = 1;\n\n    do {\n\n      final String placeString = \"\" + (currentPlace++) + \".\";\n      final String scoreString = c.getString(2);\n      final String nameString = c.getString(1);\n\n      View additional;\n\n      if (c.getString(3).equalsIgnoreCase(\"0\")) {\n        additional = new Button(this);\n\n        final Context context = this;\n        final int id = c.getInt(0);\n\n        additional.setOnClickListener(\n            new OnClickListener() {\n\n              public void onClick(View v) {\n                AlertDialog.Builder alert = new AlertDialog.Builder(context);\n\n                alert.setTitle(\"Push this score online ?\");\n                alert.setMessage(\"Name: \" + nameString + \"\\nScore: \" + scoreString);\n\n                // OK\n                alert.setPositiveButton(\n                    \"OK\",\n                    new DialogInterface.OnClickListener() {\n                      public void onClick(DialogInterface dialog, int whichButton) {\n                        // Push score online\n                        if (!isOnline()) {\n                          highScoreAdapter.toastMessage(R.string.hs_error_no_internet);\n                        } else {\n\n                          // Create a new HttpClient and Post Header\n                          HttpClient httpclient = new DefaultHttpClient();\n                          HttpPost httppost = new HttpPost(POST_HIGHSCORE_URL);\n\n                          try {\n                            List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);\n                            nameValuePairs.add(new BasicNameValuePair(\"name\", nameString));\n                            nameValuePairs.add(new BasicNameValuePair(\"score\", scoreString));\n                            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));\n\n                            httpclient.execute(httppost);\n                            highScoreAdapter.updateScore(id, 1);\n                            highScoreAdapter.toastMessage(R.string.hs_pushed_online);\n\n                            runOnUiThread(\n                                new Runnable() {\n\n                                  public void run() {\n                                    showLocalScore();\n                                  }\n                                });\n                          } catch (ClientProtocolException e) {\n                            // TODO Auto-generated catch block\n                          } catch (IOException e) {\n                            // TODO Auto-generated catch block\n                          }\n                        }\n                      }\n                    });\n\n                // CANCEL\n                alert.setNegativeButton(\n                    \"CANCEL\",\n                    new DialogInterface.OnClickListener() {\n                      public void onClick(DialogInterface dialog, int whichButton) {\n                        // Canceled.\n                      }\n                    });\n                alert.show();\n              }\n            });\n        additional.setBackgroundResource(R.drawable.highscore_submit);\n\n        LayoutParams paramsOfSubmitButton = new LayoutParams(0, LayoutParams.MATCH_PARENT, 3.0f);\n        additional.setLayoutParams(paramsOfSubmitButton);\n      } else {\n        additional = new TextView(this, null, android.R.attr.textAppearanceSmallInverse);\n        ((TextView) additional).setText(\"is online\");\n\n        LayoutParams paramsOfAdditional = new LayoutParams(0, LayoutParams.WRAP_CONTENT, 3.0f);\n        paramsOfAdditional.gravity = Gravity.CENTER_VERTICAL | Gravity.RIGHT;\n        additional.setLayoutParams(paramsOfAdditional);\n      }\n\n      generateLine(placeString, scoreString, nameString, additional);\n\n    } while (c.moveToNext());\n  }\n"}, {"dataset": "makeText", "exampleID": 9569, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 519, "focalAPIEnd": 587, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [519], "useEnd": [594], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kvite/astridclone/tree/master/astrid/plugin-src/com/todoroo/astrid/files/AACRecordingActivity.java", "rawCode": "  @Override\n  public void encodingFinished() {\n    try {\n\n      AtomicReference<String> nameRef = new AtomicReference<String>();\n      String outFile = FileUtilities.getNewAudioAttachmentPath(this, nameRef);\n\n      new AACToM4A().convert(this, tempFile, outFile);\n\n      Intent result = new Intent();\n      result.putExtra(RESULT_OUTFILE, outFile);\n      result.putExtra(RESULT_FILENAME, nameRef.get());\n      setResult(RESULT_OK, result);\n      finish();\n    } catch (IOException e) {\n      e.printStackTrace();\n      Toast.makeText(this, R.string.audio_err_encoding, Toast.LENGTH_LONG).show();\n    }\n    if (pd != null) pd.dismiss();\n  }\n"}, {"dataset": "makeText", "exampleID": 9570, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "IllegalStateException", "exceptionHandlingCall": ["e(String,String,*)"], "tryExpressionStart": 649, "tryExpressionEnd": 653, "tryBlockStart": 649, "tryBlockEnd": 1610, "catchExpressionStart": 1466, "catchExpressionEnd": 1498, "catchBlockStart": 1466, "catchBlockEnd": 1552, "exceptionHandlingCallStart": [1506], "exceptionHandlingCallEnd": [1545], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "context!=null", "guardType": "IF {", "guardExpressionStart": 1337, "guardExpressionEnd": 1357, "guardBlockStart": 1337, "guardBlockEnd": 1459, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1368, "focalAPIEnd": 1443, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1368], "useEnd": [1450], "hasFinally": 1, "cleanUpCall": ["Cursor.close()"], "finallyExpressionStart": 1553, "finallyExpressionEnd": 1561, "finallyBlockStart": 1553, "finallyBlockEnd": 1610, "cleanUpCallStart": [1589], "cleanUpCallEnd": [1603], "url": "https://github.com/TeamNyx/packages_apps_Browser/tree/master/src/com/android/browser/Bookmarks.java", "rawCode": "  /**\n   * Remove a bookmark from the database. If the url is a visited site, it will remain in the\n   * database, but only as a history item, and not as a bookmarked site.\n   *\n   * @param context Context of the calling Activity. This is used to make Toast confirming that the\n   *     bookmark has been removed and to lookup the correct content uri. It must not be null.\n   * @param cr The ContentResolver being used to remove the bookmark.\n   * @param url URL of the website to be removed.\n   */\n  /* package */ static void removeFromBookmarks(\n      Context context, ContentResolver cr, String url, String title) {\n    Cursor cursor = null;\n    try {\n      Uri uri = BookmarkUtils.getBookmarksUri(context);\n      cursor =\n          cr.query(\n              uri,\n              new String[] {BrowserContract.Bookmarks._ID},\n              BrowserContract.Bookmarks.URL\n                  + \" = ? AND \"\n                  + BrowserContract.Bookmarks.TITLE\n                  + \" = ?\",\n              new String[] {url, title},\n              null);\n\n      if (!cursor.moveToFirst()) {\n        return;\n      }\n\n      // Remove from bookmarks\n      WebIconDatabase.getInstance().releaseIconForPageUrl(url);\n      uri = ContentUris.withAppendedId(BrowserContract.Bookmarks.CONTENT_URI, cursor.getLong(0));\n      cr.delete(uri, null, null);\n      if (context != null) {\n        Toast.makeText(context, R.string.removed_from_bookmarks, Toast.LENGTH_LONG).show();\n      }\n    } catch (IllegalStateException e) {\n      Log.e(LOGTAG, \"removeFromBookmarks\", e);\n    } finally {\n      if (cursor != null) cursor.close();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9571, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 355, "focalAPIEnd": 424, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [355], "useEnd": [431], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/CMParts/tree/master/src/com/cyanogenmod/cmparts/activities/led/AdvancedActivity.java", "rawCode": "  private void doReset() {\n    /* XXX: confirmation? */\n    SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(this).edit();\n    editor.putString(CategoryActivity.KEY_CATEGORY_LIST, null);\n    editor.commit();\n\n    Settings.System.putString(\n        getContentResolver(), Settings.System.NOTIFICATION_PACKAGE_COLORS, \"\");\n    Toast.makeText(this, R.string.trackball_reset_all, Toast.LENGTH_LONG).show();\n    setResult(RESULT_OK);\n  }\n"}, {"dataset": "makeText", "exampleID": 9572, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 234, "focalAPIEnd": 312, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(Context,*,*)"], "useStart": [234, 373], "useEnd": [319, 445], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/uservoice/uservoice-android-sdk/tree/master/UserVoiceSDK/src/com/uservoice/uservoicesdk/dialog/SuggestionDialogFragment.java", "rawCode": "  public void suggestionSubscriptionUpdated(Suggestion model) {\n    if (getActivity() == null) return;\n    CheckBox checkbox = (CheckBox) headerView.findViewById(R.id.uv_subscribe_checkbox);\n    if (suggestion.isSubscribed()) {\n      Toast.makeText(context, R.string.uv_msg_subscribe_success, Toast.LENGTH_SHORT).show();\n      checkbox.setChecked(true);\n    } else {\n      Toast.makeText(context, R.string.uv_msg_unsubscribe, Toast.LENGTH_SHORT).show();\n      checkbox.setChecked(false);\n    }\n    displaySuggestion(view, suggestion);\n    if (getActivity() instanceof ForumActivity)\n      ((ForumActivity) getActivity()).suggestionUpdated(model);\n  }\n"}, {"dataset": "makeText", "exampleID": 9573, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 256, "focalAPIEnd": 332, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [256], "useEnd": [339], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_packages_apps_Settings/tree/master/src/com/android/settings/bluetooth/BluetoothEnabler.java", "rawCode": "  public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n    // Show toast message if Bluetooth is not allowed in airplane mode\n    if (isChecked && !WirelessSettings.isRadioAllowed(mContext, Settings.Global.RADIO_BLUETOOTH)) {\n      Toast.makeText(mContext, R.string.wifi_in_airplane_mode, Toast.LENGTH_SHORT).show();\n      // Reset switch to off\n      buttonView.setChecked(false);\n    }\n\n    if (mLocalAdapter != null) {\n      mLocalAdapter.setBluetoothEnabled(isChecked);\n    }\n    mSwitch.setEnabled(false);\n  }\n"}, {"dataset": "makeText", "exampleID": 9574, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["makeText(*,*,*)", "show()"], "tryExpressionStart": 279, "tryExpressionEnd": 283, "tryBlockStart": 279, "tryBlockEnd": 880, "catchExpressionStart": 771, "catchExpressionEnd": 791, "catchBlockStart": 771, "catchBlockEnd": 880, "exceptionHandlingCallStart": [799, 799], "exceptionHandlingCallEnd": [866, 873], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 691, "focalAPIEnd": 756, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [691, 799], "useEnd": [763, 866], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rowanseymour/refract/tree/master/src/com/ijuru/refract/activity/ExplorerActivity.java", "rawCode": "  /** Saves the current render to the gallery */\n  private void onMenuSave() {\n    File saveDir = ((RefractApplication) getApplication()).getSaveDirectory();\n    File saveFile = new File(saveDir, new Date().getTime() + \".png\");\n    Bitmap bitmap = rendererView.getBitmap();\n\n    try {\n      OutputStream stream = new FileOutputStream(saveFile);\n      bitmap.compress(CompressFormat.PNG, 80, stream);\n      stream.close();\n\n      // Tell the media scanner about the new file\n      Uri contentUri = Uri.fromFile(saveFile);\n      Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\n      mediaScanIntent.setData(contentUri);\n      sendBroadcast(mediaScanIntent);\n\n      Toast.makeText(this, R.string.str_imagesaved, Toast.LENGTH_SHORT).show();\n    } catch (Exception e) {\n      Toast.makeText(this, R.string.err_unabletosave, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9575, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 2735, "focalAPIEnd": 2801, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [2813], "useEnd": [2825], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/neiraza/k-9/tree/master/src/com/fsck/k9/activity/MessageView.java", "rawCode": "  @Override\n  public boolean onKeyDown(final int keyCode, final KeyEvent event) {\n    if (\n    // XXX TODO - when we go to android 2.0, uncomment this\n    // android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.ECLAIR &&\n    keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {\n      // Take care of calling this method on earlier versions of\n      // the platform where it doesn't exist.\n      onBackPressed();\n      return true;\n    }\n    switch (keyCode) {\n      case KeyEvent.KEYCODE_VOLUME_UP:\n        {\n          if (K9.useVolumeKeysForNavigationEnabled()) {\n            onNext();\n            return true;\n          }\n        }\n      case KeyEvent.KEYCODE_VOLUME_DOWN:\n        {\n          if (K9.useVolumeKeysForNavigationEnabled()) {\n            onPrevious();\n            return true;\n          }\n        }\n      case KeyEvent.KEYCODE_SHIFT_LEFT:\n      case KeyEvent.KEYCODE_SHIFT_RIGHT:\n        {\n          /*\n           * Selecting text started via shift key. Disable scrolling as\n           * this causes problems when selecting text.\n           */\n          mTopView.setScrolling(false);\n          break;\n        }\n      case KeyEvent.KEYCODE_DEL:\n        {\n          onDelete();\n          return true;\n        }\n      case KeyEvent.KEYCODE_D:\n        {\n          onDelete();\n          return true;\n        }\n      case KeyEvent.KEYCODE_F:\n        {\n          onForward();\n          return true;\n        }\n      case KeyEvent.KEYCODE_A:\n        {\n          onReplyAll();\n          return true;\n        }\n      case KeyEvent.KEYCODE_R:\n        {\n          onReply();\n          return true;\n        }\n      case KeyEvent.KEYCODE_G:\n        {\n          onFlag();\n          return true;\n        }\n      case KeyEvent.KEYCODE_M:\n        {\n          onMove();\n          return true;\n        }\n      case KeyEvent.KEYCODE_S:\n        {\n          onRefile(mAccount.getSpamFolderName());\n          return true;\n        }\n      case KeyEvent.KEYCODE_V:\n        {\n          onRefile(mAccount.getArchiveFolderName());\n          return true;\n        }\n      case KeyEvent.KEYCODE_Y:\n        {\n          onCopy();\n          return true;\n        }\n      case KeyEvent.KEYCODE_J:\n      case KeyEvent.KEYCODE_P:\n        {\n          onPrevious();\n          return true;\n        }\n      case KeyEvent.KEYCODE_N:\n      case KeyEvent.KEYCODE_K:\n        {\n          onNext();\n          return true;\n        }\n      case KeyEvent.KEYCODE_Z:\n        {\n          mHandler.post(\n              new Runnable() {\n                public void run() {\n                  mMessageView.zoom(event);\n                }\n              });\n          return true;\n        }\n      case KeyEvent.KEYCODE_H:\n        {\n          Toast toast = Toast.makeText(this, R.string.message_help_key, Toast.LENGTH_LONG);\n          toast.show();\n          return true;\n        }\n    }\n    return super.onKeyDown(keyCode, event);\n  }\n"}, {"dataset": "makeText", "exampleID": 9576, "initialization": ["CharSequence text = Context.getResources()"], "initializationStart": [4400], "initializationEnd": [4423], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["printStackTrace()"], "tryExpressionStart": 4101, "tryExpressionEnd": 4105, "tryBlockStart": 4101, "tryBlockEnd": 4637, "catchExpressionStart": 4575, "catchExpressionEnd": 4595, "catchBlockStart": 4575, "catchBlockEnd": 4637, "exceptionHandlingCallStart": [4607], "exceptionHandlingCallEnd": [4626], "configuration": ["context.getPackageName()", "context.getResources()"], "configurationStart": [1965, 4400], "configurationEnd": [1990, 4423], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,text,duration)", "focalAPIStart": 4472, "focalAPIEnd": 4530, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [4472], "useEnd": [4537], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/heyongjian/joy_launcher/tree/master/src/com/joy/launcher2/push/PushService.java", "rawCode": "    @Override\n    public void run() {\n      // TODO Auto-generated method stub\n      PushDownloadInfo info = null;\n\n      if (mBundle != null) {\n        info = new PushDownloadInfo();\n        info.setDownloadType(mBundle.getInt(PushUtils.PUSH_DETAIL_TYPE));\n        info.setCompletesize(0);\n        info.setFilename(mBundle.getString(PushUtils.PUSH_DETAIL_PACKAGE_NAME) + \".apk\");\n        info.setFilesize(mBundle.getInt(PushUtils.PUSH_DETAIL_SIZE));\n        mDownloadId = mBundle.getInt(PushUtils.PUSH_DETAIL_ID);\n        info.setId(mDownloadId);\n        info.setTitle(mBundle.getString(PushUtils.PUSH_DETAIL_TITLE));\n        info.setUrl(mBundle.getString(PushUtils.PUSH_DETAIL_URL));\n\n        info.setApkIconBuffer(\n            PushDownloadInfo.bitmapToBytes(\n                (Bitmap) mBundle.getParcelable(PushUtils.PUSH_DETAIL_ICON)));\n      } else {\n        // 查询数据库\n        PushDownLoadDBHelper dbHelper = PushDownLoadDBHelper.getInstances();\n        try {\n          info = dbHelper.get(mDownloadId);\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n      if (info == null) {\n        info = new PushDownloadInfo();\n      }\n      int type = info.getDownloadType();\n      String title = info.getTitle();\n      Bitmap icon = PushDownloadInfo.getApkIcon(info.getApkIconBuffer());\n      String url = info.getUrl();\n      String name = info.getFilename();\n      int id = info.getId();\n      mDownloadId = id;\n      int size = info.getFilesize();\n      int completeSize = info.getCompletesize();\n\n      int progress = size > 0 ? Math.min((int) ((completeSize / (float) size) * 100), 100) : 0;\n      final boolean isSilent = (type == PushUtils.PUSH_DETAIL_SILENT_DOWNLOAD_TYPE);\n      if (!isSilent && mNotification == null && mDownloadId > 0) {\n        mNotification =\n            new Notification(R.drawable.joy_push_statusbar_icon, title, System.currentTimeMillis());\n        mNotification.contentView =\n            new RemoteViews(mContext.getPackageName(), R.layout.push_notificaticon);\n        mNotification.contentView.setViewVisibility(R.id.push_icon, View.VISIBLE);\n        mNotification.contentView.setViewVisibility(R.id.push_download_progressBar, View.VISIBLE);\n        mNotification.contentView.setViewVisibility(R.id.push_text, View.VISIBLE);\n        mNotification.contentView.setViewVisibility(R.id.push_text1, View.GONE);\n        mNotification.contentView.setTextViewText(R.id.push_text, title);\n        mNotification.contentView.setImageViewBitmap(R.id.push_icon, icon);\n        mNotification.contentView.setProgressBar(\n            R.id.push_download_progressBar, 100, progress, false);\n        mNotification.contentIntent = null;\n        mNotification.flags |= Notification.FLAG_NO_CLEAR;\n        mNotificationManager.notify(mDownloadId, mNotification);\n      }\n\n      if (DEBUG) Log.e(TAG, \"start download APK\");\n      if (size > 0) {\n        // download apk\n        final PushDownloadInfo dInfo = info;\n        PushCallBack callback =\n            new PushCallBack() {\n\n              @Override\n              public void downloadUpdate() {\n                // TODO Auto-generated method stub\n                if (!isSilent && mNotification != null && mDownloadId > 0) {\n                  int progress =\n                      Math.min(\n                          (int) ((dInfo.getCompletesize() / (float) dInfo.getFilesize()) * 100),\n                          100);\n                  if (DEBUG) Log.e(TAG, \"download apk progress = \" + progress);\n                  mNotification.contentView.setProgressBar(\n                      R.id.push_download_progressBar, 100, progress, false);\n                  mNotificationManager.notify(mDownloadId, mNotification);\n                }\n              }\n\n              @Override\n              public void downloadSucceed() {\n                // TODO Auto-generated method stub\n                success = true;\n              }\n\n              @Override\n              public void downloadFailed() {\n                // TODO Auto-generated method stub\n                success = false;\n              }\n            };\n\n        try {\n          if (Util.hasSdcard()) {\n            PushDownLoadTask downloader =\n                PushDownloadManager.getInstances().newDownLoadTask(null, info, callback, false);\n            downloader.run();\n          } else {\n            if (!isSilent) {\n              CharSequence insertSDcard = mContext.getResources().getText(R.string.insert_sd_card);\n              Toast.makeText(mContext, insertSDcard, Toast.LENGTH_SHORT).show();\n            }\n          }\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n        if (success) {\n          Util.installAPK(Constants.DOWNLOAD_APK_DIR, info.getLocalname(), isSilent);\n          if (!isSilent) {\n            // mNotificationManager.cancel(id);\n          }\n        } else {\n          Log.e(TAG, \"download apk failed\");\n          if (!isSilent) {\n\n            // mNotificationManager.cancel(id);\n          } else {\n          }\n        }\n      }\n      if (!isSilent && mNotification != null && mDownloadId > 0)\n        mNotificationManager.cancel(mDownloadId);\n\n      if (DEBUG) Log.e(TAG, \"Download APK success = \" + success);\n      release();\n    }\n"}, {"dataset": "makeText", "exampleID": 9577, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 528, "focalAPIEnd": 602, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.setGravity(int,int,int)", "toast.show()"], "useStart": [610, 656], "useEnd": [648, 668], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zielmicha/emacs-android-app/tree/master/src/jackpal/androidterm/Term.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    int id = item.getItemId();\n    if (id == R.id.menu_preferences) {\n      doPreferences();\n    } else if (id == R.id.menu_new_window) {\n      doCreateNewWindow();\n    } else if (id == R.id.menu_close_window) {\n      confirmCloseWindow();\n    } else if (id == R.id.menu_window_list) {\n      startActivityForResult(new Intent(this, WindowList.class), REQUEST_CHOOSE_WINDOW);\n    } else if (id == R.id.menu_reset) {\n      doResetTerminal();\n      Toast toast = Toast.makeText(this, R.string.reset_toast_notification, Toast.LENGTH_LONG);\n      toast.setGravity(Gravity.CENTER, 0, 0);\n      toast.show();\n    } else if (id == R.id.menu_send_email) {\n      doEmailTranscript();\n    } else if (id == R.id.menu_toggle_wakelock) {\n      doToggleWakeLock();\n    } else if (id == R.id.menu_toggle_wifilock) {\n      doToggleWifiLock();\n    }\n    // Hide the action bar if appropriate\n    if (mActionBarMode == TermSettings.ACTION_BAR_MODE_HIDES) {\n      mActionBar.hide();\n    }\n    return super.onOptionsItemSelected(item);\n  }\n"}, {"dataset": "makeText", "exampleID": 9578, "initialization": ["Context context = getActivity()"], "initializationStart": [1161], "initializationEnd": [1174], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1204, "focalAPIEnd": 1276, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1204], "useEnd": [1283], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thevoiceless/CSCI498/tree/master/LunchList/src/csci498/thevoiceless/lunchlist/DetailFragment.java", "rawCode": "  private void saveRestaurant() {\n    if (name.getText().toString().length() > 0) {\n      Restaurant.Type type = null;\n      switch (typeGroup.getCheckedRadioButtonId()) {\n        case R.id.sitdownRadio:\n          type = Restaurant.Type.SIT_DOWN;\n          break;\n        case R.id.takeoutRadio:\n          type = Restaurant.Type.TAKE_OUT;\n          break;\n        case R.id.deliveryRadio:\n          type = Restaurant.Type.DELIVERY;\n          break;\n      }\n\n      if (restaurantId == null) {\n        getDbHelper()\n            .insert(\n                name.getText().toString(),\n                address.getText().toString(),\n                type,\n                notes.getText().toString(),\n                feed.getText().toString(),\n                latitude,\n                longitude);\n      } else {\n        getDbHelper()\n            .update(\n                restaurantId,\n                name.getText().toString(),\n                address.getText().toString(),\n                type,\n                notes.getText().toString(),\n                feed.getText().toString());\n        getDbHelper().updateLocation(restaurantId, latitude, longitude);\n      }\n      getActivity().finish();\n    } else {\n      Toast.makeText(getActivity(), R.string.name_required, Toast.LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9579, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 82, "focalAPIEnd": 192, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [82], "useEnd": [208], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rocapal/cursoAndroidURJC/tree/master/2ndEdition/miguel.hidalgoperez/3-List/src/com/example/list/SimpleClass.java", "rawCode": "  protected void onListItemClick(ListView l, View v, int position, long id) {\n    Toast.makeText(\n            this, String.valueOf(position) + \" - \" + testValues[position], Toast.LENGTH_SHORT)\n        .show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9580, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 541, "focalAPIEnd": 624, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [541], "useEnd": [631], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/amcereijo/trcardmanager/tree/master/src/com/trcardmanager/restaurant/TRCardManagerRestaurantsActivity.java", "rawCode": "  /** @param v */\n  public void search(View v) {\n\n    TRCardManagerApplication.setRestaurantSearchDao(null);\n    directiontoSearch = TRCardManagerApplication.getRestaurantSearchDao();\n\n    saveDataDirectionSearch();\n\n    // restaurants_search_restaurant_text\n    directiontoSearch.setAffiliate(\n        ((EditText) findViewById(R.id.restaurants_search_restaurant_text)).getText().toString());\n\n    if (\"\".equals(directiontoSearch.getAddressSearch())\n        && \"\".equals(directiontoSearch.getAffiliate())) {\n      // No data to search\n      Toast.makeText(this, R.string.restaurants_search_adv_no_data_in, Toast.LENGTH_LONG).show();\n    } else {\n      // restaurants_search_foodtype_spinner\n      int position =\n          ((Spinner) findViewById(R.id.restaurants_search_foodtype_spinner))\n              .getSelectedItemPosition();\n      String[] foodTypesValues = getResources().getStringArray(R.array.food_types_values);\n      directiontoSearch.setFoodType(foodTypesValues[position]);\n\n      directiontoSearch.setSearchViewType(SearchViewType.LIST_VIEW);\n\n      directiontoSearch.setSearchType(SearchType.DIRECTION_SEARCH);\n\n      findRestaurants();\n\n      InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\n      imm.hideSoftInputFromWindow(\n          ((EditText) findViewById(R.id.restaurants_search_locality_text)).getWindowToken(), 0);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9581, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 279, "focalAPIEnd": 355, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [279], "useEnd": [362], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/MySettings/tree/master/src/com/android/settings/wifi/WifiEnabler.java", "rawCode": "  public boolean onPreferenceChange(Preference preference, Object value) {\n    boolean enable = (Boolean) value;\n\n    // Show toast message if Wi-Fi is not allowed in airplane mode\n    if (enable && !WirelessSettings.isRadioAllowed(mContext, Settings.System.RADIO_WIFI)) {\n      Toast.makeText(mContext, R.string.wifi_in_airplane_mode, Toast.LENGTH_SHORT).show();\n      return false;\n    }\n\n    /** Disable tethering if enabling Wifi */\n    int wifiApState = mWifiManager.getWifiApState();\n    if (enable\n        && ((wifiApState == WifiManager.WIFI_AP_STATE_ENABLING)\n            || (wifiApState == WifiManager.WIFI_AP_STATE_ENABLED))) {\n      mWifiManager.setWifiApEnabled(null, false);\n    }\n    if (mWifiManager.setWifiEnabled(enable)) {\n      mCheckBox.setEnabled(false);\n    } else {\n      mCheckBox.setSummary(R.string.wifi_error);\n    }\n\n    // Don't update UI to opposite state until we're sure\n    return false;\n  }\n"}, {"dataset": "makeText", "exampleID": 9582, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 2185, "focalAPIEnd": 2254, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [2185], "useEnd": [2261], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/psucapstoneteamb/withinreach/tree/master/WithinReach/src/org/leifolson/withinreach/WithinReachActivity.java", "rawCode": "  public void handlePlaces() // this will be called by the search bar for locations to add\n      {\n    Handler asyncHandler =\n        new Handler() {\n          public void handleMessage(Message msg) {\n            super.handleMessage(msg);\n            switch (msg.what) {\n              case 1:\n                if (textView\n                    .getText()\n                    .toString()\n                    .equals(\"\")) // have to do this check because of multiple threads\n                break;\n                Bundle bundle = msg.getData();\n                String str = bundle.getString(\"PlacesJSON\");\n                if (str != null) {\n                  try {\n                    JSONObject jsonObject = new JSONObject(str);\n                    JSONArray jsonArray = jsonObject.getJSONArray(\"results\");\n                    if (jsonArray.length() < 1) break;\n                    for (int i = 0; i < placeMarkersSize; ++i) {\n                      if (placeMarkers[i] != null) placeMarkers[i].remove();\n                      if (jsonArray.isNull(i)) break;\n\n                      JSONObject jsonElement = jsonArray.getJSONObject(i);\n                      String name = jsonElement.getString(\"name\");\n\n                      LatLng latLng =\n                          new LatLng(\n                              jsonElement\n                                  .getJSONObject(\"geometry\")\n                                  .getJSONObject(\"location\")\n                                  .getDouble(\"lat\"),\n                              jsonElement\n                                  .getJSONObject(\"geometry\")\n                                  .getJSONObject(\"location\")\n                                  .getDouble(\"lng\"));\n\n                      placeMarkers[i] = makeMapMarker(latLng, name, true);\n                      placeRefs[i] =\n                          placeMarkers[i].getId() + \";\" + jsonElement.getString(\"reference\");\n                    }\n                  } catch (JSONException e) {\n                    e.printStackTrace();\n                  }\n                }\n                break;\n            }\n          }\n        };\n\n    if (mCurrentLocation == null && marker == null) {\n      Toast.makeText(this, R.string.no_location_message, Toast.LENGTH_LONG).show();\n      return;\n    }\n    String[] params = new String[5];\n\n    params[0] = Integer.toString(0); // 0 tells ServicesMgr that it's a Places request\n\n    params[1] = textView.getText().toString();\n\n    if (marker != null) {\n      params[2] = Double.toString(marker.getPosition().latitude);\n      params[3] = Double.toString(marker.getPosition().longitude);\n    } else {\n      params[2] = Double.toString(mCurrentLocation.getLatitude());\n      params[3] = Double.toString(mCurrentLocation.getLongitude());\n    }\n\n    int placesRadius;\n    // crudely allow for 1km if <= 10mins, and 2km if more than 10min. This should suffice for\n    // anywhere near downtown\n    if (timeConstraint <= 10) placesRadius = 1000;\n    else placesRadius = 2000;\n\n    params[4] = Integer.toString(placesRadius);\n    new ServicesMgr(asyncHandler).execute(params);\n  }\n"}, {"dataset": "makeText", "exampleID": 9583, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["context.getSystemService(*)"], "configurationStart": [190], "configurationEnd": [244], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 388, "focalAPIEnd": 468, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [388], "useEnd": [475], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envived-client/tree/master/src/com/envived/android/utils/imagemanager/ImageFetcher.java", "rawCode": "  /**\n   * Simple network connection check.\n   *\n   * @param context\n   */\n  private void checkConnection(Context context) {\n    final ConnectivityManager cm =\n        (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\n    final NetworkInfo networkInfo = cm.getActiveNetworkInfo();\n    if (networkInfo == null || !networkInfo.isConnectedOrConnecting()) {\n      Toast.makeText(context, R.string.no_network_connection_toast, Toast.LENGTH_LONG).show();\n      Log.e(TAG, \"checkConnection - no connection found\");\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9584, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 165, "focalAPIEnd": 245, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [165], "useEnd": [252], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jamesemorgan/AndroidWeatherSlider/tree/master/src/main/java/com/morgan/design/android/EnterLocationActivity.java", "rawCode": "  public void onGetLocation(final View v) {\n    final String location = this.location.getText().toString();\n    if (null == location || \"\".equals(location)) {\n      Toast.makeText(this, R.string.toast_please_enter_a_location, Toast.LENGTH_SHORT).show();\n      return;\n    }\n    this.googleAnalyticsService.trackPageView(this, GoogleAnalyticsService.GET_LOCATION);\n    new DownloadWOIEDDataTask(location).execute();\n  }\n"}, {"dataset": "makeText", "exampleID": 9585, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 170, "focalAPIEnd": 243, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [170], "useEnd": [250], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/brunsky/WS171-development/tree/master/samples/ApiDemos/src/com/example/android/apis/app/RemoteService.java", "rawCode": "  @Override\n  public void onDestroy() {\n    // Cancel the persistent notification.\n    mNM.cancel(R.string.remote_service_started);\n\n    // Tell the user we stopped.\n    Toast.makeText(this, R.string.remote_service_stopped, Toast.LENGTH_SHORT).show();\n\n    // Unregister all callbacks.\n    mCallbacks.kill();\n\n    // Remove the next pending message to increment the counter, stopping\n    // the increment loop.\n    mHandler.removeMessages(REPORT_MSG);\n  }\n"}, {"dataset": "makeText", "exampleID": 9586, "initialization": ["Context context = getActivity()"], "initializationStart": [139], "initializationEnd": [157], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 771, "focalAPIEnd": 860, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)", "toast.makeText(*,*,*)"], "useStart": [771, 1162, 1541, 3557, 3728, 4321, 4791, 5288, 6079], "useEnd": [880, 1251, 1629, 3671, 3838, 4406, 4901, 5399, 6161], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vgeirnaert/SimpleCharacterSheet/tree/master/Android/app/src/main/java/net/mindsoup/charactersoup/fragments/CreateItemFragment.java", "rawCode": "  public void accept(View view) {\n    boolean isError = false;\n    String input = \"\";\n    CharacterActivity activity = (CharacterActivity) this.getActivity();\n\n    String name =\n        ((EditText) this.getView().findViewById(R.id.create_item_name)).getText().toString();\n    String description =\n        ((EditText) this.getView().findViewById(R.id.create_item_description)).getText().toString();\n\n    if (name.trim().length() == 0) {\n      isError = true;\n    }\n\n    float weight = 0.0f;\n    int amount = 1;\n    int value = 0;\n    try {\n      input =\n          ((EditText) this.getView().findViewById(R.id.create_item_weight)).getText().toString();\n      weight = Float.parseFloat(input);\n    } catch (NumberFormatException e) {\n      if (input.length() > 0) {\n        Toast.makeText(this.getActivity(), R.string.item_create_error_weight, Toast.LENGTH_SHORT)\n            .show();\n        isError = true;\n      }\n    }\n    try {\n      input =\n          ((EditText) this.getView().findViewById(R.id.create_item_amount)).getText().toString();\n      amount = Integer.parseInt(input);\n    } catch (NumberFormatException e) {\n      if (input.length() > 0) {\n        Toast.makeText(this.getActivity(), R.string.item_create_error_amount, Toast.LENGTH_SHORT)\n            .show();\n        isError = true;\n      }\n    }\n    try {\n      input = ((EditText) this.getView().findViewById(R.id.create_item_value)).getText().toString();\n      value = Integer.parseInt(input);\n    } catch (NumberFormatException e) {\n      if (input.length() > 0) {\n        Toast.makeText(this.getActivity(), R.string.item_create_error_value, Toast.LENGTH_SHORT)\n            .show();\n        isError = true;\n      }\n    }\n    ItemEffects effect =\n        ItemEffects.getEffect(\n            ((Spinner) this.getView().findViewById(R.id.create_item_effecttype))\n                .getSelectedItemPosition());\n    String effectValueString =\n        ((EditText) this.getView().findViewById(R.id.create_item_effectvalue)).getText().toString();\n\n    int effectValue = 0;\n    if (effectValueString.length() > 0) effectValue = Integer.parseInt(effectValueString);\n\n    ItemSlots slot =\n        ItemSlots.getItemSlot(\n            ((Spinner) this.getView().findViewById(R.id.create_item_slot))\n                .getSelectedItemPosition());\n\n    Item i = null;\n\n    switch (slot) {\n      case WEAPON:\n        try {\n          Dice damage =\n              new Dice(\n                  ((EditText) this.getView().findViewById(R.id.create_weapon_damage))\n                      .getText()\n                      .toString());\n          int multi =\n              Integer.parseInt(\n                  ((EditText) this.getView().findViewById(R.id.create_weapon_critmulti))\n                      .getText()\n                      .toString());\n          int rangeindex =\n              ((Spinner) this.getView().findViewById(R.id.create_weapon_critrange))\n                      .getSelectedItemPosition()\n                  + 1;\n          PfHandedness hand =\n              PfHandedness.getHandedness(\n                  ((Spinner) this.getView().findViewById(R.id.create_weapon_handedness))\n                      .getSelectedItemPosition());\n          i = new Weapon(name, damage, multi, rangeindex, hand);\n          ((Weapon) i)\n              .setDamageType(\n                  ((EditText) this.getView().findViewById(R.id.create_weapon_damagetype))\n                      .getText()\n                      .toString());\n        } catch (RuntimeException e) {\n          if (e instanceof NumberFormatException) {\n            Toast.makeText(\n                    this.getActivity(), R.string.item_create_error_multiplier, Toast.LENGTH_SHORT)\n                .show();\n          } else {\n            Toast.makeText(\n                    this.getActivity(), R.string.item_create_error_damage, Toast.LENGTH_SHORT)\n                .show();\n          }\n          isError = true;\n        }\n        break;\n      case NOT_EQUIPABLE:\n        i = new Item(name);\n        break;\n      default:\n        int ac = 0, maxdex = 99, penalty = 0;\n\n        try {\n          input =\n              ((EditText) this.getView().findViewById(R.id.create_armor_ac)).getText().toString();\n          ac = Integer.parseInt(input);\n        } catch (NumberFormatException e) {\n          if (input.length() > 0) {\n            Toast.makeText(this.getActivity(), R.string.item_create_error_ac, Toast.LENGTH_SHORT)\n                .show();\n            isError = true;\n          }\n        }\n        try {\n          input =\n              ((EditText) this.getView().findViewById(R.id.create_armor_maxdex))\n                  .getText()\n                  .toString();\n          maxdex = Integer.parseInt(input);\n        } catch (NumberFormatException e) {\n          if (input.length() > 0) {\n            Toast.makeText(\n                    this.getActivity(), R.string.item_create_error_maxdex, Toast.LENGTH_SHORT)\n                .show();\n            isError = true;\n          }\n        }\n        try {\n          input =\n              ((EditText) this.getView().findViewById(R.id.create_armor_penalty))\n                  .getText()\n                  .toString();\n          penalty = Integer.parseInt(input);\n        } catch (NumberFormatException e) {\n          if (input.length() > 0) {\n            Toast.makeText(\n                    this.getActivity(), R.string.item_create_error_penalty, Toast.LENGTH_SHORT)\n                .show();\n            isError = true;\n          }\n        }\n\n        i = new Wearable(name, ac, maxdex, penalty);\n        break;\n    }\n\n    if (i != null) {\n      i.setDescription(description);\n      i.setStackSize(amount);\n      i.setValue(value);\n      i.setWeight(weight);\n\n      if (effect == ItemEffects.AB_AND_DAMAGE) {\n        i.addEffect(ItemEffects.ATTACK_BONUS, effectValue);\n        i.addEffect(ItemEffects.DAMAGE_BONUS, effectValue);\n      } else {\n        i.addEffect(effect, effectValue);\n      }\n      i.setSlot(slot);\n    } else {\n      isError = true;\n    }\n\n    if (!isError) {\n      activity.addItem(i);\n      this.dismiss();\n    } else {\n      Toast.makeText(this.getActivity(), R.string.item_create_error, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9587, "initialization": ["Context context = getActivity()"], "initializationStart": [852], "initializationEnd": [865], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1174, "focalAPIEnd": 1244, "followUpCheck": "toast != null", "checkType": "IF", "followUpCheckExpressionStart": 1381, "followUpCheckExpressionEnd": 1406, "followUpCheckBlockStart": 1381, "followUpCheckBlockEnd": 1455, "use": ["toast.show()", "toast.cancel()", "toast.makeText(*,*,*)", "toast.show()", "toast.cancel()", "toast.makeText(*,*,*)", "toast.show()"], "useStart": [1256, 1421, 1495, 1761, 1879, 1935, 2020], "useEnd": [1275, 1442, 1749, 1780, 1900, 2010, 2039], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/PerfectButter/platform_packages_apps_Settings/tree/master/src/com/android/settings/DeviceInfoSettings.java", "rawCode": "  @Override\n  public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {\n    if (preference.getKey().equals(KEY_FIRMWARE_VERSION)) {\n      System.arraycopy(mHits, 1, mHits, 0, mHits.length - 1);\n      mHits[mHits.length - 1] = SystemClock.uptimeMillis();\n      if (mHits[0] >= (SystemClock.uptimeMillis() - 500)) {\n        Intent intent = new Intent(Intent.ACTION_MAIN);\n        intent.setClassName(\"android\", com.android.internal.app.PlatLogoActivity.class.getName());\n        try {\n          startActivity(intent);\n        } catch (Exception e) {\n          Log.e(LOG_TAG, \"Unable to start activity \" + intent.toString());\n        }\n      }\n    } else if (preference.getKey().equals(KEY_BUILD_NUMBER)) {\n      if (mDevHitCountdown > 0) {\n        mDevHitCountdown--;\n        if (mDevHitCountdown == 0) {\n          getActivity()\n              .getSharedPreferences(DevelopmentSettings.PREF_FILE, Context.MODE_PRIVATE)\n              .edit()\n              .putBoolean(DevelopmentSettings.PREF_SHOW, true)\n              .apply();\n          if (mDevHitToast != null) {\n            mDevHitToast.cancel();\n          }\n          mDevHitToast = Toast.makeText(getActivity(), R.string.show_dev_on, Toast.LENGTH_LONG);\n          mDevHitToast.show();\n        } else if (mDevHitCountdown > 0 && mDevHitCountdown < (TAPS_TO_BE_A_DEVELOPER - 2)) {\n          if (mDevHitToast != null) {\n            mDevHitToast.cancel();\n          }\n          mDevHitToast =\n              Toast.makeText(\n                  getActivity(),\n                  getResources()\n                      .getQuantityString(\n                          R.plurals.show_dev_countdown, mDevHitCountdown, mDevHitCountdown),\n                  Toast.LENGTH_SHORT);\n          mDevHitToast.show();\n        }\n      } else if (mDevHitCountdown < 0) {\n        if (mDevHitToast != null) {\n          mDevHitToast.cancel();\n        }\n        mDevHitToast = Toast.makeText(getActivity(), R.string.show_dev_already, Toast.LENGTH_LONG);\n        mDevHitToast.show();\n      }\n    }\n    return super.onPreferenceTreeClick(preferenceScreen, preference);\n  }\n"}, {"dataset": "makeText", "exampleID": 9588, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 939, "focalAPIEnd": 989, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [939], "useEnd": [996], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/SimonFindling/swa/tree/master/Shop2App/src/de/shop/ui/main/Main.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    // Gibt es Suchergebnisse durch SearchView in der ActionBar, z.B. Kunde ?\n\n    Fragment detailsFragment = null;\n    final Bundle extras = getIntent().getExtras();\n    if (extras == null) {\n      // Keine Suchergebnisse o.ae. vorhanden\n\n      detailsFragment = new Startseite();\n\n      // Preferences laden\n      Prefs.init(this);\n    } else {\n      final AbstractKunde kunde = (AbstractKunde) extras.get(KUNDE_KEY);\n      if (kunde != null) {\n        Log.d(LOG_TAG, kunde.toString());\n\n        final Bundle args = new Bundle(1);\n        args.putSerializable(KUNDE_KEY, kunde);\n\n        detailsFragment = new KundeDetails();\n        detailsFragment.setArguments(args);\n      }\n    }\n\n    getFragmentManager().beginTransaction().add(R.id.details, detailsFragment).commit();\n\n    if (mock) {\n      Toast.makeText(this, R.string.s_mock, LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9589, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 861, "focalAPIEnd": 934, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [861], "useEnd": [941], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/bounce/src/com/authorwjf/bounce/BluetoothChat.java", "rawCode": "  public void onActivityResult(int requestCode, int resultCode, Intent data) {\n    switch (requestCode) {\n      case REQUEST_CONNECT_DEVICE_SECURE:\n        // When DeviceListActivity returns with a device to connect\n        if (resultCode == Activity.RESULT_OK) {\n          connectDevice(data, true);\n        }\n        break;\n      case REQUEST_CONNECT_DEVICE_INSECURE:\n        // When DeviceListActivity returns with a device to connect\n        if (resultCode == Activity.RESULT_OK) {\n          connectDevice(data, false);\n        }\n        break;\n      case REQUEST_ENABLE_BT:\n        // When the request to enable Bluetooth returns\n        if (resultCode == Activity.RESULT_OK) {\n          // Bluetooth is now enabled, so set up a chat session\n          setupChat();\n        } else {\n          // User did not enable Bluetooth or an error occurred\n          Toast.makeText(this, R.string.bt_not_enabled_leaving, Toast.LENGTH_SHORT).show();\n        }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9590, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 721, "focalAPIEnd": 794, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [721], "useEnd": [801], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Mms/tree/master/src/com/android/mms/ui/ComposeMessageActivity.java", "rawCode": "  private void saveDraft() {\n    // TODO: Do something better here. Maybe make discard() legal\n    // to call twice and make isEmpty() return true if discarded\n    // so it is caught in the clause above this one?\n    if (mWorkingMessage.isDiscarded()) {\n      return;\n    }\n\n    if (!mWaitingForSubActivity && !mWorkingMessage.isWorthSaving()) {\n      if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) {\n        log(\"saveDraft: not worth saving, discard WorkingMessage and bail\");\n      }\n      mWorkingMessage.discard();\n      return;\n    }\n\n    if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) {\n      log(\"saveDraft: call WorkingMessage.saveDraft\");\n    }\n\n    mWorkingMessage.saveDraft();\n\n    if (mToastForDraftSave) {\n      Toast.makeText(this, R.string.message_saved_as_draft, Toast.LENGTH_SHORT).show();\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9591, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 194, "focalAPIEnd": 378, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [194], "useEnd": [394], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/johanbrook/watchme/tree/master/src/se/chalmers/watchme/activity/AddMovieActivity.java", "rawCode": "  /**\n   * Queue a notification for the added movie\n   *\n   * @param movie The movie\n   */\n  private void setNotification(Movie movie) {\n    this.notifications.setMovieNotification(movie);\n\n    Toast.makeText(\n            this,\n            getString(R.string.notification_prefix_text)\n                + DateTimeUtils.toSimpleDate(movie.getDate()),\n            Toast.LENGTH_LONG)\n        .show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9592, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 927, "focalAPIEnd": 1000, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [927], "useEnd": [1007], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/igrir/teroka/tree/master/src/com/tanyoo/teroka/activities/BertarungActivity.java", "rawCode": "  public void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (D) Log.d(TAG, \"onActivityResult \" + resultCode);\n    switch (requestCode) {\n      case REQUEST_CONNECT_DEVICE_SECURE:\n        // When DeviceListActivity returns with a device to connect\n        if (resultCode == Activity.RESULT_OK) {\n          connectDevice(data, true);\n        }\n        break;\n      case REQUEST_CONNECT_DEVICE_INSECURE:\n        // When DeviceListActivity returns with a device to connect\n        if (resultCode == Activity.RESULT_OK) {\n          connectDevice(data, false);\n        }\n        break;\n      case REQUEST_ENABLE_BT:\n        // When the request to enable Bluetooth returns\n        if (resultCode == Activity.RESULT_OK) {\n          setup();\n          Log.d(TAG, \"BT enabled\");\n\n        } else {\n          // User did not enable Bluetooth or an error occurred\n          Log.d(TAG, \"BT not enabled\");\n          Toast.makeText(this, R.string.bt_not_enabled_leaving, Toast.LENGTH_SHORT).show();\n          finish();\n        }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9593, "initialization": ["Context context = getApplicationContext()"], "initializationStart": [191], "initializationEnd": [214], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 229, "focalAPIEnd": 397, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [229, 605], "useEnd": [419, 762], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ajlyon/zandy/tree/master/src/main/java/com/gimranov/zandy/app/CollectionMembershipActivity.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    // Handle item selection\n    switch (item.getItemId()) {\n      case R.id.do_sync:\n        if (!ServerCredentials.check(getApplicationContext())) {\n          Toast.makeText(\n                  getApplicationContext(),\n                  getResources().getString(R.string.sync_log_in_first),\n                  Toast.LENGTH_SHORT)\n              .show();\n          return true;\n        }\n        Log.d(TAG, \"Preparing sync requests\");\n        new ZoteroAPITask(getBaseContext()).execute(APIRequest.update(Item.load(itemKey, db)));\n        Toast.makeText(\n                getApplicationContext(),\n                getResources().getString(R.string.sync_started),\n                Toast.LENGTH_SHORT)\n            .show();\n        return true;\n      case R.id.do_new:\n        Bundle b = new Bundle();\n        b.putString(\"itemKey\", itemKey);\n        removeDialog(DIALOG_COLLECTION_LIST);\n        this.b = b;\n        showDialog(DIALOG_COLLECTION_LIST);\n        return true;\n      case R.id.do_prefs:\n        startActivity(new Intent(this, SettingsActivity.class));\n        return true;\n      default:\n        return super.onOptionsItemSelected(item);\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9594, "initialization": ["Context context = getApplicationContext()"], "initializationStart": [1641], "initializationEnd": [1664], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1707, "focalAPIEnd": 1790, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [1707, 1956], "useEnd": [1797, 2048], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/skullone/android_firewall/tree/master/src/com/jtschohl/androidfirewall/shortcuts/Profile4.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    SharedPreferences prefs3 =\n        PreferenceManager.getDefaultSharedPreferences(getApplicationContext());\n    SharedPreferences.Editor editor = prefs3.edit();\n    editor.putInt(\"itemPosition\", 4);\n    editor.commit();\n\n    getApplicationContext();\n    SharedPreferences prefs =\n        getApplicationContext().getSharedPreferences(Api.PREFS_NAME, Context.MODE_PRIVATE);\n    getApplicationContext();\n    final SharedPreferences prefs2 =\n        getApplicationContext().getSharedPreferences(Api.PREF_PROFILE4, Context.MODE_PRIVATE);\n    boolean toastenabled =\n        getApplicationContext()\n            .getSharedPreferences(Api.PREFS_NAME, 0)\n            .getBoolean(Api.PREF_TASKERNOTIFY, false);\n    final Editor editRules = prefs.edit();\n    editRules.clear();\n    for (Entry<String, ?> entry : prefs2.getAll().entrySet()) {\n      Object rule = entry.getValue();\n      String keys = entry.getKey();\n      if (rule instanceof Boolean) editRules.putBoolean(keys, ((Boolean) rule).booleanValue());\n      else if (rule instanceof Float) editRules.putFloat(keys, ((Float) rule).floatValue());\n      else if (rule instanceof String) editRules.putString(keys, ((String) rule));\n      else if (rule instanceof Long) editRules.putLong(keys, ((Long) rule).longValue());\n      else if (rule instanceof Integer) editRules.putInt(keys, ((Integer) rule).intValue());\n    }\n    editRules.commit();\n    Api.applications = null;\n    toggleUserSettings(getApplicationContext());\n    if (Api.isEnabled(getApplicationContext())) {\n      Api.applyIptablesRules(getApplicationContext(), true);\n      if (toastenabled) {\n        Toast.makeText(getApplicationContext(), R.string.tasker_profile, Toast.LENGTH_LONG).show();\n      }\n    } else {\n      Api.saveRules(getApplicationContext());\n      Api.purgeIptables(getApplicationContext(), true);\n      if (toastenabled) {\n        Toast.makeText(getApplicationContext(), R.string.tasker_profile_disabled, Toast.LENGTH_LONG)\n            .show();\n      }\n    }\n    finish();\n  }\n"}, {"dataset": "makeText", "exampleID": 9595, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 367, "focalAPIEnd": 455, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()", "toast.makeText(*,*,*)"], "useStart": [367, 719], "useEnd": [477, 806], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/javroch/android_packages_apps_Settings/tree/master/src/com/android/settings/CredentialStorage.java", "rawCode": "    @Override\n    public void onDismiss(DialogInterface dialog) {\n      if (mUnlockConfirmed) {\n        mUnlockConfirmed = false;\n        mError.setVisibility(View.VISIBLE);\n        mKeyStore.unlock(mOldPassword.getText().toString());\n        int error = mKeyStore.getLastError();\n        if (error == KeyStore.NO_ERROR) {\n          mRetriesRemaining = -1;\n          Toast.makeText(CredentialStorage.this, R.string.credentials_enabled, Toast.LENGTH_SHORT)\n              .show();\n          // aha, now we are unlocked, switch to key guard.\n          // we'll end up back in onResume to install\n          ensureKeyGuard();\n        } else if (error == KeyStore.UNINITIALIZED) {\n          mRetriesRemaining = -1;\n          Toast.makeText(CredentialStorage.this, R.string.credentials_erased, Toast.LENGTH_SHORT)\n              .show();\n          // we are reset, we can now set new password with key guard\n          handleUnlockOrInstall();\n        } else if (error >= KeyStore.WRONG_PASSWORD) {\n          // we need to try again\n          mRetriesRemaining = error - KeyStore.WRONG_PASSWORD + 1;\n          handleUnlockOrInstall();\n        }\n        return;\n      }\n      finish();\n    }\n"}, {"dataset": "makeText", "exampleID": 9596, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 113, "focalAPIEnd": 157, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [113], "useEnd": [164], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/drod2169/platform_packages_apps_Phone/tree/master/src/com/android/phone/ChangeIccPinScreen.java", "rawCode": "  private void showConfirmation() {\n    int id = mChangePin2 ? R.string.pin2_changed : R.string.pin_changed;\n    Toast.makeText(this, id, Toast.LENGTH_SHORT).show();\n  }\n"}, {"dataset": "makeText", "exampleID": 9597, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 941, "focalAPIEnd": 1017, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [941], "useEnd": [1024], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tinfoilhat/tinfoil-sms/tree/master/src/com/tinfoil/sms/sms/SendMessageActivity.java", "rawCode": "  public static String[] checkValidNumber(\n      Context context, TrustedContact newCont, String text, boolean checkText, boolean showError) {\n    if (newCont != null && !newCont.getNumber().isEmpty()) {\n      final String number = newCont.getNumber(0);\n\n      if (number.length() > 0 && (!checkText || text.length() > 0)) {\n        return new String[] {number, text};\n\n      } else if (showError) {\n        final AlertDialog.Builder builder = new AlertDialog.Builder(context);\n        builder\n            .setMessage(R.string.insufficent_information_provided)\n            .setCancelable(true)\n            .setPositiveButton(\n                android.R.string.ok,\n                new DialogInterface.OnClickListener() {\n                  public void onClick(final DialogInterface dialog, final int id) {}\n                });\n        final AlertDialog alert = builder.create();\n        alert.show();\n      }\n\n    } else if (showError) {\n      Toast.makeText(context, R.string.invalid_number_message, Toast.LENGTH_SHORT).show();\n    }\n    return null;\n  }\n"}, {"dataset": "makeText", "exampleID": 9598, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 225, "focalAPIEnd": 336, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [225], "useEnd": [356], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dittaeva/vespucci/tree/master/src/de/blau/android/Main.java", "rawCode": "    @Override\n    public boolean onLongClick(View v) {\n      UndoStorage undo = logic.getUndo();\n      if (undo.canUndo() || undo.canRedo()) {\n        UndoDialogFactory.showUndoDialog(Main.this, undo);\n      } else {\n        Toast.makeText(\n                Main.this, getResources().getString(R.string.undo_nothing), Toast.LENGTH_SHORT)\n            .show();\n      }\n      return true;\n    }\n"}, {"dataset": "makeText", "exampleID": 9599, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 1254, "focalAPIEnd": 1326, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [1254], "useEnd": [1333], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/telgniw/BukuDroid/tree/master/Mobile/ZXing/src/com/google/zxing/client/android/CaptureActivity.java", "rawCode": "  /**\n   * A valid barcode has been found, so give an indication of success and show the results.\n   *\n   * @param rawResult The contents of the barcode.\n   * @param barcode A greyscale bitmap of the camera data which was decoded.\n   */\n  public void handleDecode(Result rawResult, Bitmap barcode) {\n    inactivityTimer.onActivity();\n    lastResult = rawResult;\n    ResultHandler resultHandler = ResultHandlerFactory.makeResultHandler(this, rawResult);\n\n    if (barcode == null) {\n      // should not happen\n      return;\n    } else {\n      beepManager.playBeepSoundAndVibrate();\n      drawResultPoints(barcode, rawResult);\n      switch (source) {\n        case NATIVE_APP_INTENT:\n        case PRODUCT_SEARCH_LINK:\n          handleDecodeExternally(rawResult, resultHandler, barcode);\n          break;\n        case ZXING_LINK:\n          if (returnUrlTemplate == null) {\n            handleDecodeInternally(rawResult, resultHandler, barcode);\n          } else {\n            handleDecodeExternally(rawResult, resultHandler, barcode);\n          }\n          break;\n        case NONE:\n          SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);\n          if (prefs.getBoolean(PreferencesActivity.KEY_BULK_MODE, false)) {\n            Toast.makeText(this, R.string.msg_bulk_mode_scanned, Toast.LENGTH_SHORT).show();\n            // Wait a moment or else it will scan the same barcode continuously about 3 times\n            if (handler != null) {\n              handler.sendEmptyMessageDelayed(R.id.restart_preview, BULK_MODE_SCAN_DELAY_MS);\n            }\n            resetStatusView();\n          } else {\n            handleDecodeInternally(rawResult, resultHandler, barcode);\n          }\n          break;\n      }\n    }\n  }\n"}, {"dataset": "makeText", "exampleID": 9600, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "toast = toast.makeText(context,resId,duration)", "focalAPIStart": 191, "focalAPIEnd": 265, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["toast.show()"], "useStart": [191], "useEnd": [272], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/WSO2Mobile/wso2mobileserver/tree/master/products/mdm/modules/android-client/src/com/wso2mobile/mdm/services/WSO2MobileDeviceAdminReceiver.java", "rawCode": "  /** Called when this application is no longer the device administrator. */\n  @Override\n  public void onDisabled(Context context, Intent intent) {\n    super.onDisabled(context, intent);\n    Toast.makeText(context, R.string.device_admin_disabled, Toast.LENGTH_LONG).show();\n    Log.d(TAG, \"onDisabled\");\n    if (regId == null || regId.equals(\"\")) {\n      regId = GCMRegistrar.getRegistrationId(context);\n    }\n\n    if (regId != null || !regId.equals(\"\")) {\n      startUnRegistration(context);\n    }\n  }\n"}]