[{"dataset": "putString", "exampleID": 701, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 779, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "encodeUrl(bundle)"], "useStart": [825, 916, 966, 1028, 1109, 1196], "useEnd": [875, 958, 1007, 1066, 1154, 1222], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/werme/feedlr/tree/master/libs/facebook/src/com/facebook/android/Facebook.java", "rawCode": "  /**\n   * Generate a UI dialog for the request action in the given Android context with the provided\n   * parameters.\n   *\n   * <p>Note that this method is asynchronous and the callback will be invoked in the original\n   * calling thread (not in a background thread).\n   *\n   * @param context The Android context in which we will generate this dialog.\n   * @param action String representation of the desired method: e.g. \"feed\" ...\n   * @param parameters String key-value pairs to be passed as URL parameters.\n   * @param listener Callback interface to notify the application when the dialog has completed.\n   */\n  public void dialog(\n      Context context, String action, Bundle parameters, final DialogListener listener) {\n\n    String endpoint = DIALOG_BASE_URL + action;\n    parameters.putString(\"display\", \"touch\");\n    parameters.putString(\"redirect_uri\", REDIRECT_URI);\n\n    if (action.equals(LOGIN)) {\n      parameters.putString(\"type\", \"user_agent\");\n      parameters.putString(\"client_id\", mAppId);\n    } else {\n      parameters.putString(\"app_id\", mAppId);\n    }\n\n    if (isSessionValid()) {\n      parameters.putString(TOKEN, getAccessToken());\n    }\n    String url = endpoint + \"?\" + Util.encodeUrl(parameters);\n    if (context.checkCallingOrSelfPermission(Manifest.permission.INTERNET)\n        != PackageManager.PERMISSION_GRANTED) {\n      Util.showAlert(context, \"Error\", \"Application requires permission to access the Internet\");\n    } else {\n      new FbDialog(context, url, listener).show();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 702, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [819], "initializationEnd": [831], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 837, "focalAPIEnd": 876, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["getPolicy(String,bundle)"], "useStart": [895], "useEnd": [927], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Email/tree/master/src/com/android/email/VendorPolicyLoader.java", "rawCode": "  /**\n   * Returns provider setup information for a given email address\n   *\n   * <p>Vendor function: Select: FIND_PROVIDER Param: FIND_PROVIDER (String) Result:\n   * FIND_PROVIDER_IN_URI FIND_PROVIDER_IN_USER FIND_PROVIDER_OUT_URI FIND_PROVIDER_OUT_USER\n   * FIND_PROVIDER_NOTE (optional - null is OK)\n   *\n   * <p>Note, if we get this far, we expect \"correct\" results from the policy method. But throwing\n   * checked exceptions requires a bunch of upstream changes, so we're going to catch them here and\n   * add logging. Other exceptions may escape here (such as null pointers) to fail fast.\n   *\n   * @param domain The domain portion of the user's email address\n   * @return suitable Provider definition, or null if no match found\n   */\n  public Provider findProviderForDomain(String domain) {\n    Bundle params = new Bundle();\n    params.putString(FIND_PROVIDER, domain);\n    Bundle out = getPolicy(FIND_PROVIDER, params);\n    if (out != null && !out.isEmpty()) {\n      Provider p = new Provider();\n      p.id = null;\n      p.label = null;\n      p.domain = domain;\n      p.incomingUriTemplate = out.getString(FIND_PROVIDER_IN_URI);\n      p.incomingUsernameTemplate = out.getString(FIND_PROVIDER_IN_USER);\n      p.outgoingUriTemplate = out.getString(FIND_PROVIDER_OUT_URI);\n      p.outgoingUsernameTemplate = out.getString(FIND_PROVIDER_OUT_USER);\n      p.note = out.getString(FIND_PROVIDER_NOTE);\n      return p;\n    }\n    return null;\n  }\n"}, {"dataset": "putString", "exampleID": 703, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)", "bundle.putInt(String,int)"], "configurationStart": [94, 160], "configurationEnd": [154, 215], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 221, "focalAPIEnd": 275, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putParcelable(String,Location)", "bundle.putBoolean(String,boolean)"], "useStart": [281, 340], "useEnd": [334, 402], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/facebook-android-sdk-3.0.1/facebook/src/com/facebook/widget/PlacePickerFragment.java", "rawCode": "  void saveSettingsToBundle(Bundle outState) {\n    super.saveSettingsToBundle(outState);\n\n    outState.putInt(RADIUS_IN_METERS_BUNDLE_KEY, radiusInMeters);\n    outState.putInt(RESULTS_LIMIT_BUNDLE_KEY, resultsLimit);\n    outState.putString(SEARCH_TEXT_BUNDLE_KEY, searchText);\n    outState.putParcelable(LOCATION_BUNDLE_KEY, location);\n    outState.putBoolean(SHOW_SEARCH_BOX_BUNDLE_KEY, showSearchBox);\n  }\n"}, {"dataset": "putString", "exampleID": 704, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 827, "focalAPIEnd": 867, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "new FbDialog(Context,String,bundle,DialogListener)"], "useStart": [873, 964, 1014, 1076, 1234, 1536], "useEnd": [923, 1006, 1055, 1114, 1279, 1587], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/proxy-gen/codegen/tree/master/samples/platform/android/facebook/java/facebook-android-sdk-3.5/facebook/src/com/facebook/android/Facebook.java", "rawCode": "  /**\n   * Generate a UI dialog for the request action in the given Android context with the provided\n   * parameters.\n   *\n   * <p>Note that this method is asynchronous and the callback will be invoked in the original\n   * calling thread (not in a background thread).\n   *\n   * <p>This method is deprecated. See {@link com.facebook.widget.WebDialog}.\n   *\n   * @param context The Android context in which we will generate this dialog.\n   * @param action String representation of the desired method: e.g. \"feed\" ...\n   * @param parameters String key-value pairs to be passed as URL parameters.\n   * @param listener Callback interface to notify the application when the dialog has completed.\n   */\n  @Deprecated\n  public void dialog(\n      Context context, String action, Bundle parameters, final DialogListener listener) {\n    parameters.putString(\"display\", \"touch\");\n    parameters.putString(\"redirect_uri\", REDIRECT_URI);\n\n    if (action.equals(LOGIN)) {\n      parameters.putString(\"type\", \"user_agent\");\n      parameters.putString(\"client_id\", mAppId);\n    } else {\n      parameters.putString(\"app_id\", mAppId);\n      // We do not want to add an access token when displaying the auth dialog.\n      if (isSessionValid()) {\n        parameters.putString(TOKEN, getAccessToken());\n      }\n    }\n\n    if (context.checkCallingOrSelfPermission(Manifest.permission.INTERNET)\n        != PackageManager.PERMISSION_GRANTED) {\n      Util.showAlert(context, \"Error\", \"Application requires permission to access the Internet\");\n    } else {\n      new FbDialog(context, action, parameters, listener).show();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 705, "initialization": ["String value = GraphUser.getId()", "Bundle bundle = SharedPreferencesTokenCachingStrategy.load()"], "initializationStart": [97, 165], "initializationEnd": [109, 182], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 188, "focalAPIEnd": 233, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "SharedPreferencesTokenCachingStrategy.save(bundle)"], "useStart": [239, 295], "useEnd": [288, 320], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bitcellar-labs/facebook-android-sdk/tree/master/samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java", "rawCode": "  public void update(GraphUser user) {\n    if (user == null) {\n      return;\n    }\n\n    userId = user.getId();\n    userName = user.getName();\n\n    Bundle userInfo = tokenCache.load();\n    userInfo.putString(CACHE_USER_ID_KEY, userId);\n    userInfo.putString(CACHE_USER_NAME_KEY, userName);\n\n    tokenCache.save(userInfo);\n  }\n"}, {"dataset": "putString", "exampleID": 706, "initialization": ["Bundle bundle = getBundle()"], "initializationStart": [70], "initializationEnd": [86], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 92, "focalAPIEnd": 123, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["openUrl(String,*,bundle)"], "useStart": [181], "useEnd": [231], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/seniorprojectandroid/seniorproject/tree/master/seniorproject/src/edu/fiu/cs/seniorproject/client/EventfulRestClient.java", "rawCode": "  public String getEventDetails(String eventId) {\n    Bundle params = this.getBundle();\n    params.putString(\"id\", eventId);\n    String response = null;\n\n    try {\n      response = this.openUrl(BASE_URL + \"events/get\", GET, params);\n    } catch (MalformedURLException e) {\n      Logger.Error(\"EventfulRestClient\", \"MalformedURLException getting event details!!!\");\n    } catch (IOException e) {\n      Logger.Error(\"EventfulRestClient\", \"IOException getting event details!!!\");\n    }\n    return response;\n  }\n"}, {"dataset": "putString", "exampleID": 707, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [285], "initializationEnd": [297], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "value!=null", "guardType": "IF {", "guardExpressionStart": 230, "guardExpressionEnd": 257, "guardBlockStart": 230, "guardBlockEnd": 481, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 305, "focalAPIEnd": 358, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["HistoricosActivity.setArguments(bundle)"], "useStart": [442], "useEnd": [474], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dayana7789/apprhc/tree/master/src/com/nahmens/rhcimax/controlador/DatosClienteActivity.java", "rawCode": "  /**\n   * Metodo que se llama al seleccionar el boton historicos\n   *\n   * @param idEmpleado\n   */\n  public void onButtonHistoricoSelected(String nombreEmpleado) {\n    HistoricosActivity fragment = new HistoricosActivity();\n\n    if (nombreEmpleado != null) {\n      Bundle arguments = new Bundle();\n      arguments.putString(\"nombreEmpleado\", nombreEmpleado);\n      // pasamos al fragment el nombre de la empresa para hacer la busqueda\n      fragment.setArguments(arguments);\n    }\n\n    getFragmentManager()\n        .beginTransaction()\n        .replace(android.R.id.tabcontent, fragment, AplicacionActivity.tagFragmentHistoricos)\n        .addToBackStack(AplicacionActivity.tagFragmentHistoricos)\n        .commit();\n  }\n"}, {"dataset": "putString", "exampleID": 708, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 113, "focalAPIEnd": 185, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)"], "useStart": [191], "useEnd": [254], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mnlk2-custom/android_packages_apps_Settings/tree/master/src/com/android/settings/UserDictionarySettings.java", "rawCode": "  @Override\n  protected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    outState.putString(INSTANCE_KEY_DIALOG_EDITING_WORD, mDialogEditingWord);\n    outState.putBoolean(INSTANCE_KEY_ADDED_WORD, mAddedWordAlready);\n  }\n"}, {"dataset": "putString", "exampleID": 709, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [61], "initializationEnd": [73], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 81, "focalAPIEnd": 122, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [173], "useEnd": [201], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bitcellar-labs/facebook-android-sdk/tree/master/facebook/src/com/facebook/android/Facebook.java", "rawCode": "    private void refreshToken() {\n      Bundle requestData = new Bundle();\n      requestData.putString(TOKEN, accessToken);\n\n      Message request = Message.obtain();\n      request.setData(requestData);\n      request.replyTo = messageReceiver;\n\n      try {\n        messageSender.send(request);\n      } catch (RemoteException e) {\n        serviceListener.onError(new Error(\"Service connection error\"));\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 710, "initialization": ["Bundle bundle = new Bundle(int)"], "initializationStart": [1401], "initializationEnd": [1414], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1420, "focalAPIEnd": 1457, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putInt(String,int)", "bundle.putString(String,String)", "bundle.putInt(String,int)", "bundle.putString(String,String)", "new Request(Session,String,bundle,*,Callback)"], "useStart": [1463, 1539, 1682, 1787, 2138], "useEnd": [1503, 1674, 1727, 1824, 2203], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androideveloper/RAVA-Voting/tree/master/RavaVotingAndroid/libraries/facebook/src/com/facebook/Request.java", "rawCode": "  /**\n   * Creates a new Request that is configured to perform a search for places near a specified\n   * location via the Graph API. At least one of location or searchText must be specified.\n   *\n   * @param session the Session to use, or null; if non-null, the session must be in an opened state\n   * @param location the location around which to search; only the latitude and longitude components\n   *     of the location are meaningful\n   * @param radiusInMeters the radius around the location to search, specified in meters; this is\n   *     ignored if no location is specified\n   * @param resultsLimit the maximum number of results to return\n   * @param searchText optional text to search for as part of the name or type of an object\n   * @param callback a callback that will be called when the request is completed to handle success\n   *     or error conditions\n   * @return a Request that is ready to execute\n   * @throws FacebookException If neither location nor searchText is specified\n   */\n  public static Request newPlacesSearchRequest(\n      Session session,\n      Location location,\n      int radiusInMeters,\n      int resultsLimit,\n      String searchText,\n      final GraphPlaceListCallback callback) {\n    if (location == null && Utility.isNullOrEmpty(searchText)) {\n      throw new FacebookException(\"Either location or searchText must be specified.\");\n    }\n\n    Bundle parameters = new Bundle(5);\n    parameters.putString(\"type\", \"place\");\n    parameters.putInt(\"limit\", resultsLimit);\n    if (location != null) {\n      parameters.putString(\n          \"center\",\n          String.format(Locale.US, \"%f,%f\", location.getLatitude(), location.getLongitude()));\n      parameters.putInt(\"distance\", radiusInMeters);\n    }\n    if (!Utility.isNullOrEmpty(searchText)) {\n      parameters.putString(\"q\", searchText);\n    }\n\n    Callback wrapper =\n        new Callback() {\n          @Override\n          public void onCompleted(Response response) {\n            if (callback != null) {\n              callback.onCompleted(typedListFromResponse(response, GraphPlace.class), response);\n            }\n          }\n        };\n\n    return new Request(session, SEARCH, parameters, HttpMethod.GET, wrapper);\n  }\n"}, {"dataset": "putString", "exampleID": 711, "initialization": ["String value = format(String,String)", "Bundle bundle = new Bundle()"], "initializationStart": [1470, 1528], "initializationEnd": [1505, 1540], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1552, "focalAPIEnd": 1584, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putLongArray(String,long[])", "Intent.putExtras(bundle)"], "useStart": [1596, 1729], "useEnd": [1625, 1748], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dileepbapat/music/tree/master/src/com/android/music/AlbumBrowserActivity.java", "rawCode": "  @Override\n  public boolean onContextItemSelected(MenuItem item) {\n    switch (item.getItemId()) {\n      case PLAY_SELECTION:\n        {\n          // play the selected album\n          long[] list = MusicUtils.getSongListForAlbum(this, Long.parseLong(mCurrentAlbumId));\n          MusicUtils.playAll(this, list, 0);\n          return true;\n        }\n\n      case QUEUE:\n        {\n          long[] list = MusicUtils.getSongListForAlbum(this, Long.parseLong(mCurrentAlbumId));\n          MusicUtils.addToCurrentPlaylist(this, list);\n          return true;\n        }\n\n      case NEW_PLAYLIST:\n        {\n          Intent intent = new Intent();\n          intent.setClass(this, CreatePlaylist.class);\n          startActivityForResult(intent, NEW_PLAYLIST);\n          return true;\n        }\n\n      case PLAYLIST_SELECTED:\n        {\n          long[] list = MusicUtils.getSongListForAlbum(this, Long.parseLong(mCurrentAlbumId));\n          long playlist = item.getIntent().getLongExtra(\"playlist\", 0);\n          MusicUtils.addToPlaylist(this, list, playlist);\n          return true;\n        }\n      case DELETE_ITEM:\n        {\n          long[] list = MusicUtils.getSongListForAlbum(this, Long.parseLong(mCurrentAlbumId));\n          String f;\n          if (android.os.Environment.isExternalStorageRemovable()) {\n            f = getString(R.string.delete_album_desc);\n          } else {\n            f = getString(R.string.delete_album_desc_nosdcard);\n          }\n          String desc = String.format(f, mCurrentAlbumName);\n          Bundle b = new Bundle();\n          b.putString(\"description\", desc);\n          b.putLongArray(\"items\", list);\n          Intent intent = new Intent();\n          intent.setClass(this, DeleteItems.class);\n          intent.putExtras(b);\n          startActivityForResult(intent, -1);\n          return true;\n        }\n      case SEARCH:\n        doSearch();\n        return true;\n    }\n    return super.onContextItemSelected(item);\n  }\n"}, {"dataset": "putString", "exampleID": 712, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "value!=null", "guardType": "IF {", "guardExpressionStart": 67, "guardExpressionEnd": 85, "guardBlockStart": 67, "guardBlockEnd": 133, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 96, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bitcellar-labs/facebook-android-sdk/tree/master/facebook/src/com/facebook/widget/FacebookDialog.java", "rawCode": "    void putExtra(Bundle extras, String key, String value) {\n      if (value != null) {\n        extras.putString(key, value);\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 713, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [764], "initializationEnd": [776], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 782, "focalAPIEnd": 825, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["request(bundle)"], "useStart": [849], "useEnd": [859], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nloko/SyncMyPix/tree/master/src/com/facebook/android/Facebook.java", "rawCode": "  /**\n   * Invalidate the current user session by removing the access token in memory, clearing the\n   * browser cookie, and calling auth.expireSession through the API.\n   *\n   * <p>Note that this method blocks waiting for a network response, so do not call it in a UI\n   * thread.\n   *\n   * @param context The Android context in which the logout should be called: it should be the same\n   *     context in which the login occurred in order to clear any stored cookies\n   * @throws IOException\n   * @throws MalformedURLException\n   * @return JSON string representation of the auth.expireSession response (\"true\" if successful)\n   */\n  public String logout(Context context) throws MalformedURLException, IOException {\n    Util.clearCookies(context);\n    Bundle b = new Bundle();\n    b.putString(\"method\", \"auth.expireSession\");\n    String response = request(b);\n    setAccessToken(null);\n    setAccessExpires(0);\n    return response;\n  }\n"}, {"dataset": "putString", "exampleID": 714, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [168], "initializationEnd": [180], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [186], "configurationEnd": [213], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 219, "focalAPIEnd": 253, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putInt(String,int)", "NotificationFragment.setArguments(bundle)"], "useStart": [259, 298], "useEnd": [292, 318], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dbstar/dbstar/tree/master/DbstarLauncher/src/com/dbstar/app/alert/NotificationFragment.java", "rawCode": "  public static NotificationFragment newInstance(int style, String message, int duration) {\n    NotificationFragment f = new NotificationFragment();\n\n    Bundle args = new Bundle();\n    args.putInt(\"style\", style);\n    args.putString(\"message\", message);\n    args.putInt(\"duration\", duration);\n    f.setArguments(args);\n\n    return f;\n  }\n"}, {"dataset": "putString", "exampleID": 715, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [145], "initializationEnd": [157], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [281], "configurationEnd": [337], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 347, "focalAPIEnd": 410, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtras(bundle)"], "useStart": [430], "useEnd": [454], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/StevenKo/Restarurant/tree/master/src/com/restaurant/collection/MapActivity.java", "rawCode": "  @Override\n  public void onInfoWindowClick(Marker m) {\n    Intent intent = new Intent(this, RestaurantIntroActivity.class);\n    Bundle bundle = new Bundle();\n    for (int i = 0; i < restaurants.size(); i++) {\n      if (restaurants.get(i).getName().equals(m.getTitle())) {\n        bundle.putInt(\"ResturantId\", restaurants.get(i).getId());\n        bundle.putString(\"ResturantName\", restaurants.get(i).getName());\n      }\n    }\n    intent.putExtras(bundle);\n    this.startActivity(intent);\n  }\n"}, {"dataset": "putString", "exampleID": 716, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [419], "initializationEnd": [431], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 439, "focalAPIEnd": 514, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [989, 1062, 1145], "useEnd": [1052, 1135, 1202], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jmorille/androGister/tree/master/cash-register/src/main/java/eu/ttbox/androgister/sync/authenticator/Authenticator.java", "rawCode": "  @Override\n  public Bundle getAuthToken(\n      AccountAuthenticatorResponse response,\n      Account account,\n      String authTokenType,\n      Bundle loginOptions)\n      throws NetworkErrorException {\n    Log.v(TAG, \"getAuthToken()\");\n\n    // If the caller requested an authToken type we don't support, then\n    // return an error\n    if (!authTokenType.equals(Constants.AUTHTOKEN_TYPE)) {\n      final Bundle result = new Bundle();\n      result.putString(AccountManager.KEY_ERROR_MESSAGE, \"invalid authTokenType\");\n      return result;\n    }\n\n    // Extract the username and password from the Account Manager, and ask\n    // the server for an appropriate AuthToken.\n    final AccountManager am = AccountManager.get(mContext);\n    final String password = am.getPassword(account);\n    if (password != null) {\n      final String authToken = NetworkUtilities.authenticate(account.name, password);\n      if (!TextUtils.isEmpty(authToken)) {\n        final Bundle result = new Bundle();\n        result.putString(AccountManager.KEY_ACCOUNT_NAME, account.name);\n        result.putString(AccountManager.KEY_ACCOUNT_TYPE, Constants.ACCOUNT_TYPE);\n        result.putString(AccountManager.KEY_AUTHTOKEN, authToken);\n        return result;\n      }\n    }\n\n    // If we get here, then we couldn't access the user's password - so we\n    // need to re-prompt them for their credentials. We do that by creating\n    // an intent to display our AuthenticatorActivity panel.\n    final Intent intent = new Intent(mContext, AuthenticatorActivity.class);\n    intent.putExtra(AuthenticatorActivity.PARAM_USERNAME, account.name);\n    intent.putExtra(AuthenticatorActivity.PARAM_AUTHTOKEN_TYPE, authTokenType);\n    intent.putExtra(AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE, response);\n    final Bundle bundle = new Bundle();\n    bundle.putParcelable(AccountManager.KEY_INTENT, intent);\n    return bundle;\n  }\n"}, {"dataset": "putString", "exampleID": 717, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [300], "initializationEnd": [312], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "!(value==null)", "guardType": "IF {", "guardExpressionStart": 142, "guardExpressionEnd": 162, "guardBlockStart": 142, "guardBlockEnd": 274, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 318, "focalAPIEnd": 373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putDouble(String,double)", "AppEventsLogger.logEvent(String,double,bundle)"], "useStart": [379, 449], "useEnd": [442, 532], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androideveloper/RAVA-Voting/tree/master/RavaVotingAndroid/libraries/facebook/src/com/facebook/InsightsLogger.java", "rawCode": "  /** Deprecated. Please use {@link AppEventsLogger} instead. */\n  public void logConversionPixel(String pixelId, double valueOfPixel) {\n\n    if (pixelId == null) {\n      Logger.log(LoggingBehavior.DEVELOPER_ERRORS, \"Insights\", \"pixelID cannot be null\");\n      return;\n    }\n\n    Bundle parameters = new Bundle();\n    parameters.putString(EVENT_PARAMETER_PIXEL_ID, pixelId);\n    parameters.putDouble(EVENT_PARAMETER_PIXEL_VALUE, valueOfPixel);\n\n    appEventsLogger.logEvent(EVENT_NAME_LOG_CONVERSION_PIXEL, valueOfPixel, parameters);\n    AppEventsLogger.eagerFlush();\n  }\n"}, {"dataset": "putString", "exampleID": 718, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [917], "initializationEnd": [929], "hasTryCatch": 1, "exceptionType": "SQLException", "exceptionHandlingCall": ["printStackTrace()"], "tryExpressionStart": 1229, "tryExpressionEnd": 1233, "tryBlockStart": 1229, "tryBlockEnd": 1955, "catchExpressionStart": 1857, "catchExpressionEnd": 1880, "catchBlockStart": 1857, "catchBlockEnd": 1955, "exceptionHandlingCallStart": [1929], "exceptionHandlingCallEnd": [1948], "configuration": ["bundle.putInt(String,int)", "bundle.putLong(String,long)"], "configurationStart": [1448, 1489], "configurationEnd": [1480, 1549], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1557, "focalAPIEnd": 1667, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Intent.putExtras(bundle)"], "useStart": [1675, 1813], "useEnd": [1805, 1849], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/shangrz/noticeUEFA/tree/master/src/com/shang/noticeuefa/AlamrReceiver.java", "rawCode": "  @Override\n  public void onReceive(Context context, Intent intent) {\n    if (intent.getStringExtra(\"delnotice\") != null) {\n      System.out.println(intent.getStringExtra(\"delnotice\"));\n      return;\n    }\n    aQuery = new AQuery(context);\n    nm = (NotificationManager) context.getSystemService(\"notification\");\n    System.out.println(\"闹钟时间到\");\n    Toast.makeText(context, \"闹钟时间到\", Toast.LENGTH_LONG).show();\n\n    Notification notification;\n\n    notification = new Notification(R.drawable.icon, \"比赛即将开始\", System.currentTimeMillis());\n\n    int theid = 0;\n    if (intent.getExtras() != null) {\n      System.out.println(intent.getExtras());\n      System.out.println(\"xxx:\" + intent.getExtras().getInt(\"match_id\", 0));\n      theid = intent.getExtras().getInt(\"match_id\", 0);\n    } else {\n      System.out.println(\"no bundle\");\n    }\n    notification.contentView = adapterNoticeView(context, theid);\n\n    Bundle bundle = new Bundle();\n    // bundle.putInt(\"theid\", 100);\n    // Bundle bundle = new Bundle();\n\n    Intent notificationIntent =\n        new Intent(context, SinaTrendActivity.class)\n            .setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK)\n            .putExtras(bundle);\n    Match match;\n    try {\n      System.out.println(\"########\" + theid + \"***\");\n      match = getHelper(context).getMatchDao().queryForId(theid);\n      System.out.println(\"########\" + theid + \"***\" + match.getMatchTime().getTime());\n      bundle.putInt(\"MATCH_ID\", theid);\n\n      bundle.putLong(\"MATCH_TIME\", match.getMatchTime().getTime());\n      bundle.putString(\n          \"TITLE\", match.getTeamA().getTeamName() + \" Vs \" + match.getTeamB().getTeamName());\n      bundle.putString(\n          \"THEKEYWORD\",\n          match.getTeamA().getTeamName() + \" \" + match.getTeamB().getTeamName() + \" 足球\");\n      notificationIntent.putExtras(bundle);\n    } catch (SQLException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n\n    PendingIntent contentIntent =\n        PendingIntent.getActivity(context, theid, notificationIntent, 0); // request match_id\n    notification.contentIntent = contentIntent;\n\n    notification.flags |= Notification.FLAG_ONGOING_EVENT;\n    // notification.defaults = Notification.DEFAULT_SOUND;\n\n    notification.sound =\n        Uri.parse(\"android.resource://\" + context.getPackageName() + \"/\" + R.raw.customsound);\n    // notification.vibrate = new long[] { 1000, 1000, 1000, 1000, 1000 };\n    nm.notify(theid, notification);\n  }\n"}, {"dataset": "putString", "exampleID": 719, "initialization": ["String value = TestSession.getTestUserId()", "Bundle bundle = new Bundle()"], "initializationStart": [136, 186], "initializationEnd": [159, 198], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 204, "focalAPIEnd": 244, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "newRestRequest(TestSession,String,bundle,*)"], "useStart": [250, 317], "useEnd": [292, 383], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/facebook-android-sdk-master/facebook/tests/src/com/facebook/RequestTests.java", "rawCode": "  @LargeTest\n  public void testRestMethodGetUser() {\n    TestSession session = openTestSessionWithSharedUser();\n    String testUserId = session.getTestUserId();\n\n    Bundle parameters = new Bundle();\n    parameters.putString(\"uids\", testUserId);\n    parameters.putString(\"fields\", \"uid,name\");\n\n    Request request = Request.newRestRequest(session, \"users.getInfo\", parameters, null);\n    Response response = request.executeAndWait();\n    assertNotNull(response);\n\n    GraphObjectList<GraphObject> graphObjects = response.getGraphObjectList();\n    assertNotNull(graphObjects);\n    assertEquals(1, graphObjects.size());\n\n    GraphObject user = graphObjects.get(0);\n    assertNotNull(user);\n    assertEquals(testUserId, user.getProperty(\"uid\").toString());\n  }\n"}, {"dataset": "putString", "exampleID": 720, "initialization": ["String value = Bundle.getString(String)", "Bundle bundle = new Bundle()"], "initializationStart": [1585, 2120], "initializationEnd": [1619, 2132], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [2140], "configurationEnd": [2204], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 2212, "focalAPIEnd": 2256, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["MedicationListFragment.setArguments(bundle)"], "useStart": [2334], "useEnd": [2366], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nutsiepully/medmanage/tree/master/src/org/vcs/medmanage/MedicationListActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_medication_list);\n\n    if (findViewById(R.id.medication_detail_container) != null) {\n      // The detail container view will be present only in the\n      // large-screen layouts (res/values-large and\n      // res/values-sw600dp). If this view is present, then the\n      // activity should be in two-pane mode.\n      mTwoPane = true;\n\n      // In two-pane mode, list items should be given the\n      // 'activated' state when touched.\n      ((MedicationListFragment) getSupportFragmentManager().findFragmentById(R.id.medication_list))\n          .setActivateOnItemClick(true);\n    }\n\n    // Set the action bar back button because it's nice\n    getActionBar().setHomeButtonEnabled(true);\n    getActionBar().setDisplayHomeAsUpEnabled(true);\n\n    String residentToGet = new String();\n    Intent inIntent = getIntent();\n    if (inIntent.hasExtra(\"resName\")) {\n      // If we got here during normal application usage, there will be\n      // a resident attached as an extra, which we should get from\n      // the database.\n      Bundle extras = inIntent.getExtras();\n      residentToGet = extras.getString(\"resName\");\n    } else { // If there wasn't a matching key in the intent, then this page\n      // was probably navigated to during testing. In that case, we\n      // just use a default Resident.\n      residentToGet = \"James Cooper\";\n    }\n    if (inIntent.hasExtra(\"MedicationName\")) {\n      Bundle extras = inIntent.getExtras();\n      inMed = extras.getString(\"MedicationName\");\n    }\n\n    // Get a reference to the DB the hard way\n    RuntimeExceptionDao<Resident, Integer> dao = getHelper().getResidentDataDao();\n    List<Resident> foundResidents = ResidentUtils.findResident(dao, residentToGet);\n    if (foundResidents.size() > 0) {\n      currentResident = foundResidents.get(0);\n\n      // Set the actionbar title to reflect the current resident\n      setTitle(currentResident.getName() + \"'s Medication\");\n\n      // Builds display for list fragment\n      Bundle arguments = new Bundle();\n      arguments.putInt(\"ResidentId\", currentResident.getResident_id());\n      arguments.putString(\"MedicationName\", inMed);\n      MedicationListFragment fragment = new MedicationListFragment();\n      fragment.setArguments(arguments);\n      getSupportFragmentManager()\n          .beginTransaction()\n          .replace(R.id.medication_list, fragment)\n          .commit();\n\n      // Made a bad decision trying fragments, so we have to be ugly and\n      // get medication twice. Here we get medication\n      RuntimeExceptionDao<Medication, Integer> medDao = getHelper().getMedicationDataDao();\n      RuntimeExceptionDao<ResidentMedication, Integer> medsDao =\n          getHelper().getResidentMedicationDataDao();\n      MedicationUtils medUtils = new MedicationUtils(medDao);\n      medsList = medUtils.getMedicationForResident(currentResident);\n\n      setupUI();\n    } else {\n      Toast.makeText(getBaseContext(), \"Failed to find james cooper?\", Toast.LENGTH_LONG).show();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 721, "initialization": ["String value = getCoverageFilePath()"], "initializationStart": [190], "initializationEnd": [211], "hasTryCatch": 1, "exceptionType": "ClassNotFoundException", "exceptionHandlingCall": ["reportEmmaError(String,*)"], "tryExpressionStart": 285, "tryExpressionEnd": 289, "tryBlockStart": 285, "tryBlockEnd": 1398, "catchExpressionStart": 969, "catchExpressionEnd": 1002, "catchBlockStart": 969, "catchBlockEnd": 1064, "exceptionHandlingCallStart": [1010], "exceptionHandlingCallEnd": [1057], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 694, "focalAPIEnd": 756, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)"], "useStart": [810], "useEnd": [961], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arjunroy/cinder_base/tree/master/test-runner/android/test/InstrumentationTestRunner.java", "rawCode": "  private void generateCoverageReport() {\n    // use reflection to call emma dump coverage method, to avoid\n    // always statically compiling against emma jar\n    String coverageFilePath = getCoverageFilePath();\n    java.io.File coverageFile = new java.io.File(coverageFilePath);\n    try {\n      Class emmaRTClass = Class.forName(\"com.vladium.emma.rt.RT\");\n      Method dumpCoverageMethod =\n          emmaRTClass.getMethod(\n              \"dumpCoverageData\", coverageFile.getClass(), boolean.class, boolean.class);\n\n      dumpCoverageMethod.invoke(null, coverageFile, false, false);\n      // output path to generated coverage file so it can be parsed by a test harness if\n      // needed\n      mResults.putString(REPORT_KEY_COVERAGE_PATH, coverageFilePath);\n      // also output a more user friendly msg\n      mResults.putString(\n          Instrumentation.REPORT_KEY_STREAMRESULT,\n          String.format(\"Generated code coverage data to %s\", coverageFilePath));\n    } catch (ClassNotFoundException e) {\n      reportEmmaError(\"Is emma jar on classpath?\", e);\n    } catch (SecurityException e) {\n      reportEmmaError(e);\n    } catch (NoSuchMethodException e) {\n      reportEmmaError(e);\n    } catch (IllegalArgumentException e) {\n      reportEmmaError(e);\n    } catch (IllegalAccessException e) {\n      reportEmmaError(e);\n    } catch (InvocationTargetException e) {\n      reportEmmaError(e);\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 722, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [628], "initializationEnd": [640], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 646, "focalAPIEnd": 708, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "addAccountExplicitly(Account,*,bundle)"], "useStart": [714, 787, 854, 922, 996, 1064, 1126, 1190, 1349], "useEnd": [781, 848, 916, 990, 1058, 1120, 1184, 1280, 1444], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cloudspokes/mobile_campus/tree/master/aau/android/VFConnector/src/com/salesforce/androidsdk/rest/ClientManager.java", "rawCode": "  /**\n   * Create a new account and return the details of the new account in a bundle.\n   *\n   * @param accountName\n   * @param username\n   * @param refreshToken\n   * @param authToken\n   * @param instanceUrl\n   * @param loginUrl\n   * @param clientId\n   * @param orgId\n   * @param userId\n   * @param passcodeHash\n   * @return\n   */\n  public Bundle createNewAccount(\n      String accountName,\n      String username,\n      String refreshToken,\n      String authToken,\n      String instanceUrl,\n      String loginUrl,\n      String clientId,\n      String orgId,\n      String userId,\n      String passcodeHash) {\n\n    Bundle extras = new Bundle();\n    extras.putString(AccountManager.KEY_ACCOUNT_NAME, accountName);\n    extras.putString(AccountManager.KEY_ACCOUNT_TYPE, getAccountType());\n    extras.putString(AuthenticatorService.KEY_USERNAME, username);\n    extras.putString(AuthenticatorService.KEY_LOGIN_URL, loginUrl);\n    extras.putString(AuthenticatorService.KEY_INSTANCE_URL, instanceUrl);\n    extras.putString(AuthenticatorService.KEY_CLIENT_ID, clientId);\n    extras.putString(AuthenticatorService.KEY_ORG_ID, orgId);\n    extras.putString(AuthenticatorService.KEY_USER_ID, userId);\n    extras.putString(AccountManager.KEY_AUTHTOKEN, Encryptor.encrypt(authToken, passcodeHash));\n\n    Account acc = new Account(accountName, getAccountType());\n    accountManager.addAccountExplicitly(acc, Encryptor.encrypt(refreshToken, passcodeHash), extras);\n    accountManager.setAuthToken(acc, AccountManager.KEY_AUTHTOKEN, authToken);\n\n    return extras;\n  }\n"}, {"dataset": "putString", "exampleID": 723, "initialization": ["String value = Bundle.getString(String)", "Bundle bundle = new Bundle()"], "initializationStart": [1196, 1619], "initializationEnd": [1248, 1631], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1643, "focalAPIEnd": 1695, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dayana7789/apprhc/tree/master/src/com/nahmens/rhcimax/adapters/ListaCorreosCursorAdapter.java", "rawCode": "  /**\n   * Funcion que se encarga de llenar las filas de la tabla: tlListCorreos dinamicamente.\n   *\n   * @param context\n   * @param cursor Contiene los datos de los empleados.\n   */\n  public void mbindView(Context context, Cursor cursor) {\n    // Columna de la BD que queremos recuperar\n    String columna = null;\n\n    // Indice de la columna de BD\n    int nombreCol = 0;\n\n    // Resultado de obtener el indice de la columna de BD\n    String nombre = null;\n\n    // Nombre del view en nuestro Layout donde queremos\n    // que aparezca el resultado.\n    View mView = null;\n    TextView tv = null;\n    CheckBox cb = null;\n\n    String idEmpleadoNuevo = null;\n    boolean chequeado = false;\n\n    View mTableRow = null;\n\n    // Para cada valor de la BD solicitado, lo mostramos en el text view.\n    while (!cursor.isAfterLast()) {\n\n      // obtenemos la referencia a la fila descrita en activity_fila_correo.xml\n      mTableRow = (TableRow) View.inflate(context, R.layout.activity_fila_correo, null);\n\n      for (int i = 0; i < from.length; i++) {\n\n        columna = from[i];\n        nombreCol = cursor.getColumnIndex(columna);\n        nombre = cursor.getString(nombreCol);\n\n        idEmpleadoNuevo = cursor.getString(cursor.getColumnIndex(Empleado.ID));\n\n        mView = (View) mTableRow.findViewById(to[i]);\n        // Log.e(\"correos\",getCorreosSeleccionados().toString());\n        if (mView instanceof CheckBox) {\n          cb = (CheckBox) mView;\n          cb.setText(nombre);\n          chequeado = getCorreosSeleccionados().get(idEmpleadoNuevo);\n          cb.setChecked(chequeado);\n\n          final Bundle mArgumentos = new Bundle();\n          mArgumentos.putString(\"idEmpleado\", idEmpleadoNuevo);\n\n          cb.setOnCheckedChangeListener(\n              new OnCheckedChangeListener() {\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                  mOnCheckedChanged(mArgumentos, isChecked);\n                }\n              });\n\n        } else if (mView instanceof TextView) {\n          tv = (TextView) mView;\n          tv.setText(nombre);\n        }\n      }\n\n      // agregamos las filas o TableRows a TableLayout\n      tlListCorreos.addView(mTableRow);\n\n      // Creamos una linea divisora entre las filas\n      View line = new View(context);\n      line.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, 1));\n      line.setBackgroundColor(Color.LTGRAY);\n      tlListCorreos.addView(line);\n\n      cursor.moveToNext();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 724, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 185, "focalAPIEnd": 219, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "openUrl(String,String,bundle)"], "useStart": [255, 399], "useEnd": [296, 436], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/maplesyrup/maple-android/tree/master/facebook/src/com/facebook/android/Facebook.java", "rawCode": "  @SuppressWarnings(\"deprecation\")\n  String requestImpl(String graphPath, Bundle params, String httpMethod)\n      throws FileNotFoundException, MalformedURLException, IOException {\n    params.putString(\"format\", \"json\");\n    if (isSessionValid()) {\n      params.putString(TOKEN, getAccessToken());\n    }\n    String url = (graphPath != null) ? GRAPH_BASE_URL + graphPath : RESTSERVER_URL;\n    return Util.openUrl(url, httpMethod, params);\n  }\n"}, {"dataset": "putString", "exampleID": 725, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)", "bundle.putInt(String,int)"], "configurationStart": [94, 160], "configurationEnd": [154, 215], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 221, "focalAPIEnd": 275, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putParcelable(String,Location)", "bundle.putBoolean(String,boolean)"], "useStart": [281, 340], "useEnd": [334, 402], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jerrymannel/ISawABird/tree/master/FacebookSDK/src/com/facebook/widget/PlacePickerFragment.java", "rawCode": "  void saveSettingsToBundle(Bundle outState) {\n    super.saveSettingsToBundle(outState);\n\n    outState.putInt(RADIUS_IN_METERS_BUNDLE_KEY, radiusInMeters);\n    outState.putInt(RESULTS_LIMIT_BUNDLE_KEY, resultsLimit);\n    outState.putString(SEARCH_TEXT_BUNDLE_KEY, searchText);\n    outState.putParcelable(LOCATION_BUNDLE_KEY, location);\n    outState.putBoolean(SHOW_SEARCH_BOX_BUNDLE_KEY, showSearchBox);\n  }\n"}, {"dataset": "putString", "exampleID": 726, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [111], "initializationEnd": [123], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 129, "focalAPIEnd": 172, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["request(String,bundle,*)"], "useStart": [178], "useEnd": [247], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ylang/18-641Java/tree/master/facebook-android-sdk-3.0.1/samples/Hackbook/src/com/facebook/android/Hackbook.java", "rawCode": "  public void requestUserData() {\n    mText.setText(\"Fetching user name, profile pic...\");\n    Bundle params = new Bundle();\n    params.putString(\"fields\", \"name, picture\");\n    Utility.mAsyncRunner.request(\"me\", params, new UserRequestListener());\n  }\n"}, {"dataset": "putString", "exampleID": 727, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [122], "initializationEnd": [134], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 143, "focalAPIEnd": 179, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["instantiate(*,*,bundle)"], "useStart": [261], "useEnd": [376], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androidquery/androidquery/tree/master/demo/src/com/androidquery/test/image/ImageLoadingPageGridActivity.java", "rawCode": "    @Override\n    public Fragment getItem(int pos) {\n\n      AQUtility.debug(\"primary\", topics[pos]);\n\n      Bundle args = new Bundle();\n\n      args.putString(\"topic\", topics[pos]);\n\n      ImageGridFragment fragment =\n          (ImageGridFragment)\n              Fragment.instantiate(\n                  ImageLoadingPageGridActivity.this, ImageGridFragment.class.getName(), args);\n\n      return fragment;\n    }\n"}, {"dataset": "putString", "exampleID": 728, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [575], "initializationEnd": [587], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [593], "configurationEnd": [651], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 657, "focalAPIEnd": 700, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["parseExtras(*,AccountType,EntityDelta,bundle)"], "useStart": [706], "useEnd": [770], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/packages_apps_Contacts/tree/master/tests/src/com/android/contacts/EntityModifierTests.java", "rawCode": "  public void testParseExtrasIgnoreLimit() {\n    final AccountType accountType = getAccountType();\n\n    // Build \"before\" IM\n    final ContentValues first = new ContentValues();\n    first.put(Data._ID, TEST_ID);\n    first.put(Data.MIMETYPE, Im.CONTENT_ITEM_TYPE);\n    first.put(Im.DATA, TEST_IM);\n\n    final EntityDelta state = getEntity(TEST_ID, first);\n    final int beforeCount = state.getMimeEntries(Im.CONTENT_ITEM_TYPE).size();\n\n    // We should ignore data that doesn't fit account type rules, since account type\n    // only allows single Im\n    final Bundle extras = new Bundle();\n    extras.putInt(Insert.IM_PROTOCOL, Im.PROTOCOL_GOOGLE_TALK);\n    extras.putString(Insert.IM_HANDLE, TEST_IM);\n    EntityModifier.parseExtras(mContext, accountType, state, extras);\n\n    final int afterCount = state.getMimeEntries(Im.CONTENT_ITEM_TYPE).size();\n    assertEquals(\"Broke account type rules\", beforeCount, afterCount);\n  }\n"}, {"dataset": "putString", "exampleID": 729, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 422, "focalAPIEnd": 456, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kvite/astridclone/tree/master/facebook/facebook/src/com/facebook/TokenCachingStrategy.java", "rawCode": "  /**\n   * Puts the token value into a Bundle.\n   *\n   * @param bundle A Bundle in which the token value should be stored.\n   * @param value The String representing the token value, or null.\n   * @throws NullPointerException if the passed in Bundle or token value are null\n   */\n  public static void putToken(Bundle bundle, String value) {\n    Validate.notNull(bundle, \"bundle\");\n    Validate.notNull(value, \"value\");\n    bundle.putString(TOKEN_KEY, value);\n  }\n"}, {"dataset": "putString", "exampleID": 730, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 422, "focalAPIEnd": 456, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androideveloper/RAVA-Voting/tree/master/RavaVotingAndroid/libraries/facebook/src/com/facebook/TokenCachingStrategy.java", "rawCode": "  /**\n   * Puts the token value into a Bundle.\n   *\n   * @param bundle A Bundle in which the token value should be stored.\n   * @param value The String representing the token value, or null.\n   * @throws NullPointerException if the passed in Bundle or token value are null\n   */\n  public static void putToken(Bundle bundle, String value) {\n    Validate.notNull(bundle, \"bundle\");\n    Validate.notNull(value, \"value\");\n    bundle.putString(TOKEN_KEY, value);\n  }\n"}, {"dataset": "putString", "exampleID": 731, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [404], "initializationEnd": [416], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 422, "focalAPIEnd": 454, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Intent.putExtras(bundle)"], "useStart": [460, 504], "useEnd": [498, 536], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/7yl4r/AvatarWallpaper/tree/master/src/edu/usf/eng/pie/avatars4change/dataInterface/activityMonitor.java", "rawCode": "  private static Intent getPAcollectorServiceIntent(Context ctx) {\n    final String[] mLabels = {\"still\", \"walking\", \"running\"};\n    Intent mServiceIntent =\n        new Intent(\n            ctx, edu.usf.eng.pie.avatars4change.myrunsdatacollectorlite.ServiceSensors.class);\n    int activityId = Globals.SERVICE_TASK_TYPE_CLASSIFY; // TODO: what?\n    String label = mLabels[activityId];\n    Bundle extras = new Bundle();\n    extras.putString(\"label\", label);\n    extras.putString(\"type\", \"collecting\");\n    mServiceIntent.putExtras(extras);\n    return mServiceIntent;\n  }\n"}, {"dataset": "putString", "exampleID": 732, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [127], "initializationEnd": [139], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 145, "focalAPIEnd": 211, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["startPreferencePanel(*,bundle,*,*,*,int)"], "useStart": [282], "useEnd": [405], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TrasUI/old_Settings/tree/master/src/com/android/settings/fuelgauge/PowerUsageDetail.java", "rawCode": "  private void startApplicationDetailsActivity() {\n    // start new fragment to display extended information\n    Bundle args = new Bundle();\n    args.putString(InstalledAppDetails.ARG_PACKAGE_NAME, mPackages[0]);\n\n    PreferenceActivity pa = (PreferenceActivity) getActivity();\n    pa.startPreferencePanel(\n        InstalledAppDetails.class.getName(), args, R.string.application_info_label, null, null, 0);\n  }\n"}, {"dataset": "putString", "exampleID": 733, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [4211], "initializationEnd": [4223], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 4229, "focalAPIEnd": 4256, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "bundle.putIntegerArrayList(String,ArrayList<Integer>)", "bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putIntegerArrayList(String,ArrayList<Integer>)", "bundle.putIntegerArrayList(String,ArrayList<Integer>)", "bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putIntegerArrayList(String,ArrayList<Integer>)", "bundle.putStringArrayList(String,ArrayList<String>)"], "useStart": [4262, 4294, 4343, 4407, 4470, 4533, 4605, 4657, 4711, 4777, 6356], "useEnd": [4288, 4337, 4401, 4464, 4527, 4599, 4651, 4705, 4771, 4822, 6398], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/erichare/RevMiner-OpenMenu-Integration/tree/master/Android/OpenMenu/src/com/net/rmopenmenu/LoadList.java", "rawCode": "  public Bundle load(String query) {\n    SQLiteDatabase db = new Database(context).getReadableDatabase();\n    ArrayList<Integer> item_ids = new ArrayList<Integer>();\n    ArrayList<String> restaurant_names = new ArrayList<String>();\n    ArrayList<Integer> restaurant_lats = new ArrayList<Integer>();\n    ArrayList<Integer> restaurant_lons = new ArrayList<Integer>();\n    ArrayList<String> restaurant_distances = new ArrayList<String>();\n    ArrayList<String> item_names = new ArrayList<String>();\n    ArrayList<String> item_prices = new ArrayList<String>();\n    ArrayList<String> item_descriptions = new ArrayList<String>();\n    ArrayList<Integer> item_vegs = new ArrayList<Integer>();\n\n    final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);\n    GeoPoint myLoc = new GeoPoint(prefs.getInt(\"lat\", 47662150), prefs.getInt(\"lon\", -122313237));\n    if (menu) {\n      Cursor cursor =\n          db.query(\"items\", null, \"name LIKE '%\" + query + \"%'\", null, null, null, null);\n      cursor.moveToFirst();\n\n      while (!cursor.isAfterLast()) {\n        item_ids.add(cursor.getInt(cursor.getColumnIndex(\"iid\")));\n        item_names.add(cursor.getString(cursor.getColumnIndex(\"name\")));\n        item_descriptions.add(cursor.getString(cursor.getColumnIndex(\"description\")));\n        String price = cursor.getString(cursor.getColumnIndex(\"price\"));\n        if (price.equals(\"0.00\")) {\n          price = \"Unknown Price\";\n        }\n        item_prices.add(price);\n        item_vegs.add(cursor.getInt(cursor.getColumnIndex(\"veg\")));\n        cursor.moveToNext();\n      }\n\n      for (int i = 0; i < item_ids.size(); i++) {\n        cursor =\n            db.query(\"restaurants_items\", null, \"iid = \" + item_ids.get(i), null, null, null, null);\n        cursor.moveToFirst();\n\n        int rid = cursor.getInt(cursor.getColumnIndex(\"rid\"));\n\n        cursor = db.query(\"restaurants\", null, \"rid = \" + rid, null, null, null, null);\n        cursor.moveToFirst();\n\n        restaurant_names.add(cursor.getString(cursor.getColumnIndex(\"name\")));\n        restaurant_lats.add(cursor.getInt(cursor.getColumnIndex(\"lat\")));\n        restaurant_lons.add(cursor.getInt(cursor.getColumnIndex(\"lon\")));\n\n        double distance =\n            MapFragment.distanceBetween(\n                myLoc,\n                new GeoPoint(\n                    cursor.getInt(cursor.getColumnIndex(\"lat\")),\n                    cursor.getInt(cursor.getColumnIndex(\"lon\"))));\n        restaurant_distances.add(String.format(\"%.1f\", distance));\n      }\n    } else {\n      Cursor cursor =\n          db.query(\"restaurants\", null, \"name LIKE '%\" + query + \"%'\", null, null, null, null);\n      cursor.moveToFirst();\n\n      int rid = cursor.getInt(cursor.getColumnIndex(\"rid\"));\n      String restaurant_name = cursor.getString(cursor.getColumnIndex(\"name\"));\n      int restaurant_lat = cursor.getInt(cursor.getColumnIndex(\"lat\"));\n      int restaurant_lon = cursor.getInt(cursor.getColumnIndex(\"lon\"));\n      double distance =\n          MapFragment.distanceBetween(myLoc, new GeoPoint(restaurant_lat, restaurant_lon));\n\n      cursor = db.query(\"restaurants_items\", null, \"rid = \" + rid, null, null, null, null);\n      cursor.moveToFirst();\n\n      while (!cursor.isAfterLast()) {\n        item_ids.add(cursor.getInt(cursor.getColumnIndex(\"iid\")));\n        cursor.moveToNext();\n      }\n\n      for (int i = 0; i < item_ids.size(); i++) {\n        cursor = db.query(\"items\", null, \"iid = \" + item_ids.get(i), null, null, null, null);\n        cursor.moveToFirst();\n\n        restaurant_names.add(restaurant_name);\n        restaurant_lats.add(restaurant_lat);\n        restaurant_lons.add(restaurant_lon);\n        restaurant_distances.add(String.format(\"%.1f\", distance));\n\n        item_names.add(cursor.getString(cursor.getColumnIndex(\"name\")));\n        String price = cursor.getString(cursor.getColumnIndex(\"price\"));\n        if (price.equals(\"0.00\")) {\n          price = \"Unknown Price\";\n        }\n        item_prices.add(price);\n        item_descriptions.add(cursor.getString(cursor.getColumnIndex(\"description\")));\n        item_vegs.add(cursor.getInt(cursor.getColumnIndex(\"veg\")));\n      }\n    }\n\n    if (db != null) db.close();\n\n    Bundle b = new Bundle();\n    b.putString(\"query\", query);\n    b.putBoolean(\"menu\", menu);\n    b.putIntegerArrayList(\"item_ids\", item_ids);\n    b.putStringArrayList(\"restaurant_names\", restaurant_names);\n    b.putIntegerArrayList(\"restaurant_lats\", restaurant_lats);\n    b.putIntegerArrayList(\"restaurant_lons\", restaurant_lons);\n    b.putStringArrayList(\"restaurant_distances\", restaurant_distances);\n    b.putStringArrayList(\"item_names\", item_names);\n    b.putStringArrayList(\"item_prices\", item_prices);\n    b.putStringArrayList(\"item_descriptions\", item_descriptions);\n    b.putIntegerArrayList(\"item_vegs\", item_vegs);\n\n    ArrayList<Item> item_list = new ArrayList<Item>();\n\n    for (int i = 0; i < item_ids.size(); i++) {\n      boolean mSort = (menu ? prefs.getBoolean(\"sortPrice\", false) : true);\n      Item item =\n          new Item(\n              item_ids.get(i),\n              restaurant_names.get(i),\n              restaurant_lats.get(i),\n              restaurant_lons.get(i),\n              restaurant_distances.get(i),\n              item_names.get(i),\n              item_prices.get(i),\n              item_descriptions.get(i),\n              item_vegs.get(i),\n              mSort);\n      item_list.add(item);\n    }\n\n    Collections.sort(item_list);\n\n    ArrayList<String> combined = new ArrayList<String>();\n    String thisName = \"\";\n    for (Iterator<Item> i = item_list.iterator(); i.hasNext(); ) {\n      Item item = i.next();\n      if (!item.restaurant_name.equals(thisName)) {\n        combined.add(\n            (combined.size() == 0 ? \"\" : \"\\n\\n\")\n                + item.restaurant_name\n                + \"\\n\"\n                + item.restaurant_distance\n                + \" mi.\\n\\n\");\n      }\n      combined.add(\n          item.item_name\n              + (item.item_description.equals(\"\") ? \"\" : \"\\n\" + item.item_description)\n              + (item.item_price.equals(\"Unknown Price\") ? \"\" : \"\\n$\" + item.item_price)\n              + \"\\n\"\n              + (item.item_veg == 1\n                  ? \"We think this IS a vegetarian item\"\n                  : \"We think this is NOT a vegetarian item\"));\n      thisName = item.restaurant_name;\n    }\n\n    b.putStringArrayList(\"combined\", combined);\n\n    return b;\n  }\n"}, {"dataset": "putString", "exampleID": 734, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [1101], "initializationEnd": [1113], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1123, "focalAPIEnd": 1177, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putInt(String,int)", "makeIntent(*,*,bundle)"], "useStart": [1187, 1288], "useEnd": [1251, 1370], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ddnbrowser/Diva.NetBrowser/tree/master/src/net/diva/browser/page/MusicListFragment.java", "rawCode": "  @Override\n  public boolean onContextItemSelected(MenuItem item) {\n    AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();\n    if (getListView().getPositionForView(info.targetView) != info.position) return false;\n\n    MusicInfo music = m_adapter.getItem(info.position);\n    switch (item.getItemId()) {\n      case R.id.item_update:\n        updateMusic(music);\n        return true;\n      case R.id.item_select:\n        m_selections.add(music);\n        if (!isSelectionMode()) setSelectionMode(true);\n        return true;\n      case R.id.item_edit_reading:\n        editTitleReading(music);\n        return true;\n      case R.id.item_ranking:\n        WebBrowseActivity.open(\n            getActivity(), String.format(\"/divanet/ranking/summary/%s/0\", music.id));\n        return true;\n      case R.id.item_copy_title:\n        ClipboardManager clipboard =\n            (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);\n        if (clipboard != null) clipboard.setText(music.title);\n        return true;\n      case R.id.item_play_record:\n        Bundle args = new Bundle();\n        args.putString(HistoryFragment.KEY_MUSIC, music.title);\n        args.putInt(HistoryFragment.KEY_RANK, m_adapter.getDifficulty());\n        startActivity(\n            ContainerActivity.makeIntent(getActivity(), HistoryFragment.class.getName(), args));\n        return true;\n      default:\n        return super.onContextItemSelected(item);\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 735, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "value!=null", "guardType": "IF {", "guardExpressionStart": 67, "guardExpressionEnd": 85, "guardBlockStart": 67, "guardBlockEnd": 133, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 96, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kgnvch/Shoppit/tree/master/facebook-android-sdk-3.5/facebook/src/com/facebook/widget/FacebookDialog.java", "rawCode": "    void putExtra(Bundle extras, String key, String value) {\n      if (value != null) {\n        extras.putString(key, value);\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 736, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [61], "initializationEnd": [73], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 81, "focalAPIEnd": 123, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [174], "useEnd": [202], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lmr3796/Oasis/tree/master/src/com/facebook/android/Facebook.java", "rawCode": "    private void refreshToken() {\n      Bundle requestData = new Bundle();\n      requestData.putString(TOKEN, mAccessToken);\n\n      Message request = Message.obtain();\n      request.setData(requestData);\n      request.replyTo = messageReceiver;\n\n      try {\n        messageSender.send(request);\n      } catch (RemoteException e) {\n        serviceListener.onError(new Error(\"Service connection error\"));\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 737, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 779, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "encodeUrl(bundle)"], "useStart": [825, 916, 966, 1028, 1109, 1196], "useEnd": [875, 958, 1007, 1066, 1154, 1222], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vaugan/whatsON/tree/master/libs/facebook/src/com/facebook/android/Facebook.java", "rawCode": "  /**\n   * Generate a UI dialog for the request action in the given Android context with the provided\n   * parameters.\n   *\n   * <p>Note that this method is asynchronous and the callback will be invoked in the original\n   * calling thread (not in a background thread).\n   *\n   * @param context The Android context in which we will generate this dialog.\n   * @param action String representation of the desired method: e.g. \"feed\" ...\n   * @param parameters String key-value pairs to be passed as URL parameters.\n   * @param listener Callback interface to notify the application when the dialog has completed.\n   */\n  public void dialog(\n      Context context, String action, Bundle parameters, final DialogListener listener) {\n\n    String endpoint = DIALOG_BASE_URL + action;\n    parameters.putString(\"display\", \"touch\");\n    parameters.putString(\"redirect_uri\", REDIRECT_URI);\n\n    if (action.equals(LOGIN)) {\n      parameters.putString(\"type\", \"user_agent\");\n      parameters.putString(\"client_id\", mAppId);\n    } else {\n      parameters.putString(\"app_id\", mAppId);\n    }\n\n    if (isSessionValid()) {\n      parameters.putString(TOKEN, getAccessToken());\n    }\n    String url = endpoint + \"?\" + Util.encodeUrl(parameters);\n    if (context.checkCallingOrSelfPermission(Manifest.permission.INTERNET)\n        != PackageManager.PERMISSION_GRANTED) {\n      Util.showAlert(context, \"Error\", \"Application requires permission to access the Internet\");\n    } else {\n      new FbDialog(context, url, listener).show();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 738, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [8161], "initializationEnd": [8173], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 8183, "focalAPIEnd": 8235, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["DetalleFragment.setArguments(bundle)"], "useStart": [8303], "useEnd": [8335], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cesarvf90/ProyectoRH/tree/master/src/pe/edu/pucp/proyectorh/MainActivity.java", "rawCode": "  @Override\n  public void onItemSelected(String id) {\n    if (dosPaneles) {\n      if (Modulo.MODULO_ACTUAL == Constante.MI_INFORMACION) {\n        if (Modulo.INFORMACION_PERSONAL.equals(id)) { // Información\n          // personal\n          VisualizarInfoColaboradoFragment fragment = new VisualizarInfoColaboradoFragment();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.EQUIPO_TRABAJO.equals(id)) { // Mi equipo de trabajo\n          ConsultarEquipoTrabajoFragment fragment = new ConsultarEquipoTrabajoFragment();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.CONTACTOS.equals(id)) { // Mis contactos\n          ContactosFragment fragment = new ContactosFragment();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.AGENDA.equals(id)) { // Mi agenda\n          AgendaFragment fragment = new AgendaFragment();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n      } else if (Modulo.MODULO_ACTUAL == Constante.RECLUTAMIENTO) {\n        if (Modulo.APROBAR_SOLICITUDES.equals(id)) { // Aprobar\n          // Solicitudes\n          // Oferta Laboral\n          AprobarSolicitudOfertaLaboral fragment = new AprobarSolicitudOfertaLaboral();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.EVALUACION_FASE1.equals(id)) { // Evaluar Postulante\n          // 1ra fase\n          MenuOfertasLaboralesPrimeraFase fragment = new MenuOfertasLaboralesPrimeraFase();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.EVALUACION_FASE3.equals(id)) { // Evaluar Postulante\n          // 3ra fase\n          MenuOfertasLaboralesTerceraFase fragment = new MenuOfertasLaboralesTerceraFase();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.POSTULAR_OFERTA.equals(id)) { // Postular a\n          // Convocatoria\n          PostularOfertaLaboral fragment = new PostularOfertaLaboral();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n      } else if (Modulo.MODULO_ACTUAL == Constante.REPORTES) {\n\n        if (Modulo.REPORTE_EVALUACION_360.equals(id)) {\n          Reporte360Grafico fragment = new Reporte360Grafico();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n        if (Modulo.REPORTE_HISTORICO_OBJETIVOS.equals(id)) {\n          ReportePersonalBSCPrincipal fragment = new ReportePersonalBSCPrincipal();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n        if (Modulo.REPORTE_OFERTAS_LABORALES.equals(id)) {\n          ReporteCubrimientoPrincipal fragment = new ReporteCubrimientoPrincipal();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n        if (Modulo.REPORTE_OBJETIVOS_BSC.equals(id)) {\n          ReporteObjetivosBSCPrincipal fragment = new ReporteObjetivosBSCPrincipal();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n      } else if (Modulo.MODULO_ACTUAL == Constante.EVALUACION_360) { // SE\n        // ACTUALIZO\n        if (Modulo.PENDIENTES.equals(id)) { // Rol evaluadores\n          RolEvaluador fragment = new RolEvaluador();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.ROL_EVALUADO.equals(id)) { // Rol de Evaluado\n          RolEvaluadoEver fragment = new RolEvaluadoEver();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.SUBORDINADOS.equals(id)) { // Mis subordinados\n          pe.edu.pucp.proyectorh.evaluacion360.MisSubordinados fragment =\n              new pe.edu.pucp.proyectorh.evaluacion360.MisSubordinados();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n      } else if (Modulo.MODULO_ACTUAL == Constante.LINEA_DE_CARRERA) {\n        if (Modulo.COMPARAR_CAPACIDADES.equals(id)) { // Comparar\n          // capacidades\n          ComparaCapacidad fragment = new ComparaCapacidad();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.CANDIDATOS_X_PUESTO.equals(id)) { // Candidatos por\n          // puesto\n          CandidatosxPuesto fragment = new CandidatosxPuesto();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n      } else if (Modulo.MODULO_ACTUAL == Constante.OBJETIVOS) {\n        if (Modulo.OBJETIVOS_EMPRESARIALES.equals(id)) { // Objetivos\n          // Empresa\n          ObjetivosEmpresa fragment = new ObjetivosEmpresa();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.OBJETIVOS_PROPIOS.equals(id)) { // Mis Objetivos\n          MisObjetivos fragment = new MisObjetivos();\n          fragment.indicador = MisObjetivos.IND_MISOBJS;\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.OBJETIVOS_EQUIPO.equals(id)) { // Objetivos\n          // Subordinados\n          // (PARA CREAR\n          // OBJETIVOS PARA MIS SUBORDINADOS -\n          // EVER)\n          MisObjetivos fragment = new MisObjetivos();\n          fragment.indicador = MisObjetivos.IND_SUBORD;\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n\n        if (Modulo.REGISTRAR_AVANCE.equals(id)) { // Registrar Avance\n          RegistroAvance fragment = new RegistroAvance();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.VISUALIZAR_AVANCE.equals(id)) { // Mis Avances\n          VisualizacionAvance fragment = new VisualizacionAvance();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n        if (Modulo.MONITOREO.equals(id)) { // Monitoreo ( PARA VER LOS\n          // OBJETIVOS DE\n          // MIS SUBORDINADOS - CARLOS)\n          Monitoreo fragment = new Monitoreo();\n          getSupportFragmentManager()\n              .beginTransaction()\n              .replace(R.id.opcion_detail_container, fragment)\n              .commit();\n        }\n      } else {\n        Bundle arguments = new Bundle();\n        arguments.putString(DetalleFragment.ARG_ITEM_ID, id);\n        DetalleFragment fragment = new DetalleFragment();\n        fragment.setArguments(arguments);\n        getSupportFragmentManager()\n            .beginTransaction()\n            .replace(R.id.opcion_detail_container, fragment)\n            .commit();\n      }\n    } else {\n      Intent detailIntent = new Intent(this, DetalleActivity.class);\n      detailIntent.putExtra(DetalleFragment.ARG_ITEM_ID, id);\n      startActivity(detailIntent);\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 739, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [129], "initializationEnd": [141], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 147, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtra(String,bundle)"], "useStart": [188], "useEnd": [224], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mturek/gras/tree/master/NestedFragments/src/com/example/newspinproj/MainActivity.java", "rawCode": "  private void openTaskCreation() {\n\n    Intent intent = new Intent(MainActivity.this, TaskAssignent.class);\n    Bundle bundle = new Bundle();\n    bundle.putString(\"group\", curgroup);\n    intent.putExtra(\"groupinfo\", bundle);\n    startActivity(intent);\n  }\n"}, {"dataset": "putString", "exampleID": 740, "initialization": ["Bundle bundle = Message.getData()"], "initializationStart": [540], "initializationEnd": [553], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 559, "focalAPIEnd": 587, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putLong(String,long)", "bundle.putString(String,String)"], "useStart": [593, 639, 683, 735], "useEnd": [633, 677, 729, 793], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/faux123/android_frameworks_base/tree/master/core/java/android/webkit/CallbackProxy.java", "rawCode": "  /** Starts a download if a download listener has been registered, otherwise return false. */\n  public boolean onDownloadStart(\n      String url,\n      String userAgent,\n      String contentDisposition,\n      String mimetype,\n      long contentLength) {\n    // Do an unsynchronized quick check to avoid posting if no callback has\n    // been set.\n    if (mDownloadListener == null) {\n      // Cancel the download if there is no browser client.\n      return false;\n    }\n\n    Message msg = obtainMessage(DOWNLOAD_FILE);\n    Bundle bundle = msg.getData();\n    bundle.putString(\"url\", url);\n    bundle.putString(\"userAgent\", userAgent);\n    bundle.putString(\"mimetype\", mimetype);\n    bundle.putLong(\"contentLength\", contentLength);\n    bundle.putString(\"contentDisposition\", contentDisposition);\n    sendMessage(msg);\n    return true;\n  }\n"}, {"dataset": "putString", "exampleID": 741, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [63], "initializationEnd": [75], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 81, "focalAPIEnd": 140, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["ComputerDetailFragment.setArguments(bundle)"], "useStart": [214], "useEnd": [246], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fredefl/Computer-Info-Android/tree/master/src/dk/illution/computer/info/ComputerDetailActivity.java", "rawCode": "  public void viewComputer(String id) {\n    Bundle arguments = new Bundle();\n    arguments.putString(ComputerDetailFragment.ARG_ITEM_ID, id);\n    ComputerDetailFragment fragment = new ComputerDetailFragment();\n    fragment.setArguments(arguments);\n    getSupportFragmentManager()\n        .beginTransaction()\n        .replace(R.id.computer_detail_container, fragment)\n        .commit();\n  }\n"}, {"dataset": "putString", "exampleID": 742, "initialization": ["String value = Result.getText()", "Bundle bundle = new Bundle()"], "initializationStart": [209, 287], "initializationEnd": [225, 299], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 305, "focalAPIEnd": 345, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtras(bundle)"], "useStart": [351], "useEnd": [381], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sunriver/projects/tree/master/android/eoecn/src/com/google/zxing/CaptureActivity.java", "rawCode": "  /**\n   * @param result\n   * @param barcode\n   */\n  public void handleDecode(Result result, Bitmap barcode) {\n    inactivityTimer.onActivity();\n    playBeepSoundAndVibrate();\n\n    final String resultString = result.getText();\n    Intent resultIntent = new Intent();\n    Bundle bundle = new Bundle();\n    bundle.putString(\"result\", resultString);\n    resultIntent.putExtras(bundle);\n    this.setResult(RESULT_OK, resultIntent);\n\n    finish();\n  }\n"}, {"dataset": "putString", "exampleID": 743, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [117], "initializationEnd": [129], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putLong(String,long)"], "configurationStart": [135], "configurationEnd": [181], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 187, "focalAPIEnd": 238, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putInt(String,int)", "Intent.putExtras(bundle)", "bundle.putInt(String,int)", "bundle.putParcelable(*,AcalDateTime)", "Intent.putExtras(bundle)"], "useStart": [397, 467, 828, 900, 977], "useEnd": [455, 500, 888, 965, 1010], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ujayant/acal/tree/master/src/com/morphoss/acal/activity/EventView.java", "rawCode": "  @Override\n  public void onClick(View arg0) {\n    int button = (int) ((Integer) arg0.getTag());\n    Bundle bundle = new Bundle();\n    bundle.putLong(EventEdit.RESOURCE_ID_KEY, rid);\n    bundle.putString(EventEdit.RECCURENCE_ID_KEY, rrid);\n    Intent eventEditIntent = new Intent(this, EventEdit.class);\n    switch (button) {\n      case EDIT:\n        {\n          // start event activity\n          bundle.putInt(EventEdit.ACTION_KEY, EventEdit.ACTION_EDIT);\n          eventEditIntent.putExtras(bundle);\n          this.startActivityForResult(eventEditIntent, EDIT_EVENT);\n          break;\n        }\n      case ADD:\n        {\n          AcalDateTime dateTime = new AcalDateTime();\n          if (event != null) dateTime = event.getStart();\n          else if (cacheObject != null) dateTime = cacheObject.getStartDateTime();\n          bundle.putInt(EventEdit.ACTION_KEY, EventEdit.ACTION_CREATE);\n          bundle.putParcelable(EventEdit.NEW_EVENT_DATE_TIME_KEY, dateTime);\n          eventEditIntent.putExtras(bundle);\n          this.startActivityForResult(eventEditIntent, EDIT_ADD);\n          break;\n        }\n      case TODAY:\n        {\n          AcalDateTime selectedDate = new AcalDateTime();\n          Intent res = new Intent();\n          res.putExtra(\"selectedDate\", (Parcelable) selectedDate);\n          this.setResult(RESULT_OK, res);\n          this.finish();\n          break;\n        }\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 744, "initialization": ["String value = getName()", "Bundle bundle = new Bundle()"], "initializationStart": [221, 271], "initializationEnd": [251, 283], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 289, "focalAPIEnd": 373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "StubInstrumentationTestRunner.onCreate(bundle)"], "useStart": [379, 473], "useEnd": [467, 514], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/test-runner/tests/src/android/test/InstrumentationTestRunnerTest.java", "rawCode": "  /**\n   * Test that the -e {@link InstrumentationTestRunner.ARGUMENT_ANNOTATION} parameter properly\n   * selects tests.\n   */\n  public void testAnnotationParameter() throws Exception {\n    String expectedTestClassName = AnnotationTest.class.getName();\n    Bundle args = new Bundle();\n    args.putString(InstrumentationTestRunner.ARGUMENT_TEST_CLASS, expectedTestClassName);\n    args.putString(InstrumentationTestRunner.ARGUMENT_ANNOTATION, FlakyTest.class.getName());\n    mInstrumentationTestRunner.onCreate(args);\n    assertTestRunnerCalledWithExpectedParameters(expectedTestClassName, \"testAnnotated\");\n  }\n"}, {"dataset": "putString", "exampleID": 745, "initialization": ["Bundle bundle = Message.getData()"], "initializationStart": [197], "initializationEnd": [208], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 216, "focalAPIEnd": 302, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Message.setData(bundle)", "bundle.putString(String,String)", "Message.setData(bundle)"], "useStart": [310, 351, 477, 522], "useEnd": [343, 363, 514, 534], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jortizcs/sfs_applications/tree/master/BuildingNetworkAccess/src/sfs/apps/NetAccessAsyncTask.java", "rawCode": "  protected void onProgressUpdate(Integer... progress) {\n    if (progress[0] < 101) {\n      Log.i(DEBUG_TAG, new Integer(progress[0]).toString());\n      Message m = new Message();\n      Bundle b = m.getData();\n      b.putString(\"progress_level\", new Double((double) (progress[0]) / runtime).toString());\n      b.putString(\"progress_msg\", line);\n      m.setData(b);\n      handler.sendMessage(m);\n    } else {\n      Message m = new Message();\n      Bundle b = m.getData();\n      b.putString(\"progress_level\", \"Done\");\n      m.setData(b);\n      handler.sendMessage(m);\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 746, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.getByteArray(String)"], "configurationStart": [1453], "configurationEnd": [1477], "guardCondition": "!(bundle.containsKey(key,)) && !(value.equals(\"GET\",))", "guardType": "IF {", "guardExpressionStart": 910, "guardExpressionEnd": 935, "guardBlockStart": 910, "guardBlockEnd": 986, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1579, "focalAPIEnd": 1613, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.getString(String)", "bundle.putString(String,String)", "encodePostBody(bundle,String)"], "useStart": [1721, 1764, 2230], "useEnd": [1753, 1811, 2265], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/plushdevelopment/Frienemy---Android/tree/master/src/com/facebook/android/Util.java", "rawCode": "  /**\n   * Connect to an HTTP URL and return the response as a string.\n   *\n   * <p>Note that the HTTP method override is used on non-GET requests. (i.e. requests are made as\n   * \"POST\" with method specified in the body).\n   *\n   * @param url - the resource to open: must be a welformed URL\n   * @param method - the HTTP method to use (\"GET\", \"POST\", etc.)\n   * @param params - the query parameter for the URL (e.g. access_token=foo)\n   * @return the URL contents as a String\n   * @throws MalformedURLException - if the URL format is invalid\n   * @throws IOException - if a network problem occurs\n   */\n  public static String openUrl(String url, String method, Bundle params)\n      throws MalformedURLException, IOException {\n    // random string as boundary for multi-part http post\n    String strBoundary = \"3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f\";\n    String endLine = \"\\r\\n\";\n\n    OutputStream os;\n\n    if (method.equals(\"GET\")) {\n      url = url + \"?\" + encodeUrl(params);\n    }\n    Util.logd(\"Facebook-Util\", method + \" URL: \" + url);\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    conn.setRequestProperty(\n        \"User-Agent\", System.getProperties().getProperty(\"http.agent\") + \" FacebookAndroidSDK\");\n    if (!method.equals(\"GET\")) {\n      Bundle dataparams = new Bundle();\n      for (String key : params.keySet()) {\n        if (params.getByteArray(key) != null) {\n          dataparams.putByteArray(key, params.getByteArray(key));\n        }\n      }\n\n      // use method override\n      if (!params.containsKey(\"method\")) {\n        params.putString(\"method\", method);\n      }\n\n      if (params.containsKey(\"access_token\")) {\n        String decoded_token = URLDecoder.decode(params.getString(\"access_token\"));\n        params.putString(\"access_token\", decoded_token);\n      }\n\n      conn.setRequestMethod(\"POST\");\n      conn.setRequestProperty(\"Content-Type\", \"multipart/form-data;boundary=\" + strBoundary);\n      conn.setDoOutput(true);\n      conn.setDoInput(true);\n      conn.setRequestProperty(\"Connection\", \"Keep-Alive\");\n      conn.connect();\n      os = new BufferedOutputStream(conn.getOutputStream());\n\n      os.write((\"--\" + strBoundary + endLine).getBytes());\n      os.write((encodePostBody(params, strBoundary)).getBytes());\n      os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n\n      if (!dataparams.isEmpty()) {\n\n        for (String key : dataparams.keySet()) {\n          os.write(\n              (\"Content-Disposition: form-data; filename=\\\"\" + key + \"\\\"\" + endLine).getBytes());\n          os.write((\"Content-Type: content/unknown\" + endLine + endLine).getBytes());\n          os.write(dataparams.getByteArray(key));\n          os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n        }\n      }\n      os.flush();\n    }\n\n    String response = \"\";\n    try {\n      response = read(conn.getInputStream());\n    } catch (FileNotFoundException e) {\n      // Error Stream contains JSON that we can parse to a FB error\n      response = read(conn.getErrorStream());\n    }\n    return response;\n  }\n"}, {"dataset": "putString", "exampleID": 747, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [84], "initializationEnd": [96], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 104, "focalAPIEnd": 134, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["obtain(*,int,int,int,bundle)"], "useStart": [281], "useEnd": [327], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/umitproject/ns-mobile/tree/master/src/org/umit/ns/mobile/service/ScanService.java", "rawCode": "    public boolean tellActivity(int RESP_CODE, String info) {\n      Bundle bundle = new Bundle();\n      bundle.putString(\"Info\", info);\n      Log.d(\"UmitScanner\", \"tellActivity():RESP_CODE=\" + RESP_CODE + \" ID=\" + id + \" info=\" + info);\n\n      try {\n        messengerActivity.send(Message.obtain(null, RESP_CODE, id, 0, bundle));\n      } catch (RemoteException e) {\n        Log.d(\"UmitScanner\", \"ScanService could not send Message to Activity\");\n        return false;\n      }\n      return true;\n    }\n"}, {"dataset": "putString", "exampleID": 748, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [232], "initializationEnd": [244], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 254, "focalAPIEnd": 323, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putLong(String,long)", "logSdkEvent(String,*,bundle)"], "useStart": [333, 408, 479], "useEnd": [398, 469, 535], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ScootrNova/ClassyGames/tree/master/projects/android/facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "    private void logEvent(String eventName, String timeParameter, String callId) {\n      if (callId != null) {\n        AppEventsLogger appEventsLogger = AppEventsLogger.newLogger(context, applicationId);\n        Bundle parameters = new Bundle();\n        parameters.putString(AnalyticsEvents.PARAMETER_APP_ID, applicationId);\n        parameters.putString(AnalyticsEvents.PARAMETER_ACTION_ID, callId);\n        parameters.putLong(timeParameter, System.currentTimeMillis());\n        appEventsLogger.logSdkEvent(eventName, null, parameters);\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 749, "initialization": ["Bundle bundle = new Bundle()", "String value = getMessage()"], "initializationStart": [142, 389], "initializationEnd": [154, 403], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)"], "configurationStart": [160, 247, 412], "configurationEnd": [188, 284, 439], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 447, "focalAPIEnd": 486, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [499], "useEnd": [511], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Entomologist/entomologist/tree/master/mobile/Trac/src/org/entomologistproject/trac/TracCommentsTask.java", "rawCode": "  @Override\n  protected Void doInBackground(Handler... params) {\n    Handler h = params[0];\n    Message m = h.obtainMessage();\n    Bundle b = new Bundle();\n    b.putBoolean(\"error\", false);\n\n    try {\n      checkHost();\n      getComments();\n      b.putBoolean(\"comments_cached\", true);\n    } catch (EntomologistException e) {\n      Log.e(\"Entomologist\", \"EntomologistException caught: \" + e.getMessage());\n      b.putBoolean(\"error\", true);\n      b.putString(\"errormsg\", e.getMessage());\n    }\n\n    m.setData(b);\n    m.sendToTarget();\n    dbHelper.close();\n    return null;\n  }\n"}, {"dataset": "putString", "exampleID": 750, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [210], "initializationEnd": [222], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putLong(String,long)"], "configurationStart": [228], "configurationEnd": [293], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 299, "focalAPIEnd": 357, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [363, 409, 461, 514, 564], "useEnd": [403, 455, 508, 558, 604], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kgnvch/Shoppit/tree/master/facebook-android-sdk-3.5/facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "  static Bundle newAuthorizationLoggingBundle(String authLoggerId) {\n    // We want to log all parameters for all events, to ensure stability of columns across different\n    // event types.\n    Bundle bundle = new Bundle();\n    bundle.putLong(EVENT_PARAM_TIMESTAMP, System.currentTimeMillis());\n    bundle.putString(EVENT_PARAM_AUTH_LOGGER_ID, authLoggerId);\n    bundle.putString(EVENT_PARAM_METHOD, \"\");\n    bundle.putString(EVENT_PARAM_LOGIN_RESULT, \"\");\n    bundle.putString(EVENT_PARAM_ERROR_MESSAGE, \"\");\n    bundle.putString(EVENT_PARAM_ERROR_CODE, \"\");\n    bundle.putString(EVENT_PARAM_EXTRAS, \"\");\n    return bundle;\n  }\n"}, {"dataset": "putString", "exampleID": 751, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [107], "initializationEnd": [119], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 125, "focalAPIEnd": 178, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "showDialog(int,bundle)"], "useStart": [184, 256], "useEnd": [243, 289], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/janrain/engage.android/tree/master/Jump/src/com/janrain/android/engage/ui/JRUiFragment.java", "rawCode": "  /*package*/ ManagedDialog showProgressDialog(String displayText, boolean cancelable) {\n    Bundle opts = new Bundle();\n    opts.putString(KEY_DIALOG_PROGRESS_TEXT, displayText);\n    opts.putBoolean(KEY_DIALOG_PROGRESS_CANCELABLE, cancelable);\n    return showDialog(DIALOG_PROGRESS, opts);\n  }\n"}, {"dataset": "putString", "exampleID": 752, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 195, "focalAPIEnd": 241, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androideveloper/RAVA-Voting/tree/master/RavaVotingAndroid/libraries/Simple Facebook/src/com/sromku/simple/fb/entities/Feed.java", "rawCode": "    /**\n     * This message (shown as user input) attached to this post.\n     *\n     * @param message\n     * @return {@link Builder}\n     */\n    public Builder setMessage(String message) {\n      mBundle.putString(Parameters.MESSAGE, message);\n      return this;\n    }\n"}, {"dataset": "putString", "exampleID": 753, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 121, "focalAPIEnd": 186, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putInt(String,int)", "bundle.putString(String,String)"], "useStart": [192, 269, 344, 414], "useEnd": [263, 338, 408, 485], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rcg0/arc/tree/master/android application/arc/src/com/example/asdf/RegistroActivity.java", "rawCode": "  protected void onSaveInstanceState(Bundle savedInstanceState) {\n    super.onSaveInstanceState(savedInstanceState);\n    savedInstanceState.putString(\"email\", email.getText().toString());\n    savedInstanceState.putBoolean(\"masculino\", generoMasculino.isChecked());\n    savedInstanceState.putBoolean(\"femenino\", generoFemenino.isChecked());\n    savedInstanceState.putInt(\"edad\", edad.getPositionForView(edad));\n    savedInstanceState.putString(\"profesion\", trabajo.getText().toString());\n  }\n"}, {"dataset": "putString", "exampleID": 754, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 779, "focalAPIEnd": 819, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "encodeUrl(bundle)"], "useStart": [825, 916, 966, 1028, 1109, 1196], "useEnd": [875, 958, 1007, 1066, 1154, 1222], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TheEmpty/moai-dev/tree/master/ant/host-source/source/project/external/facebook/project/src/com/facebook/android/Facebook.java", "rawCode": "  /**\n   * Generate a UI dialog for the request action in the given Android context with the provided\n   * parameters.\n   *\n   * <p>Note that this method is asynchronous and the callback will be invoked in the original\n   * calling thread (not in a background thread).\n   *\n   * @param context The Android context in which we will generate this dialog.\n   * @param action String representation of the desired method: e.g. \"feed\" ...\n   * @param parameters String key-value pairs to be passed as URL parameters.\n   * @param listener Callback interface to notify the application when the dialog has completed.\n   */\n  public void dialog(\n      Context context, String action, Bundle parameters, final DialogListener listener) {\n\n    String endpoint = DIALOG_BASE_URL + action;\n    parameters.putString(\"display\", \"touch\");\n    parameters.putString(\"redirect_uri\", REDIRECT_URI);\n\n    if (action.equals(LOGIN)) {\n      parameters.putString(\"type\", \"user_agent\");\n      parameters.putString(\"client_id\", mAppId);\n    } else {\n      parameters.putString(\"app_id\", mAppId);\n    }\n\n    if (isSessionValid()) {\n      parameters.putString(TOKEN, getAccessToken());\n    }\n    String url = endpoint + \"?\" + Util.encodeUrl(parameters);\n    if (context.checkCallingOrSelfPermission(Manifest.permission.INTERNET)\n        != PackageManager.PERMISSION_GRANTED) {\n      Util.showAlert(context, \"Error\", \"Application requires permission to access the Internet\");\n    } else {\n      new FbDialog(context, url, listener).show();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 755, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 129, "focalAPIEnd": 165, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ylang/18-641Java/tree/master/facebook-android-sdk-3.0.1/facebook/src/com/facebook/widget/PickerFragment.java", "rawCode": "    @Override\n    void saveSelectionToBundle(Bundle outBundle, String key) {\n      if (!TextUtils.isEmpty(selectedId)) {\n        outBundle.putString(key, selectedId);\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 756, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 154, "focalAPIEnd": 262, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["putExtra(*,bundle)"], "useStart": [616], "useEnd": [669], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/luigiliquori/myMed/tree/master/frontend/binary/android/myjam/src/com/mymed/android/myjam/ui/InsertActivity.java", "rawCode": "  private void requestInsertReport(Bundle bundle, MReportBean report) {\n    final Intent intent = new Intent(InsertActivity.this, CallService.class);\n    bundle.putString(\n        CallContract.ACCESS_TOKEN, GlobalStateAndUtils.getInstance(this).getAccessToken());\n    intent.putExtra(CallService.EXTRA_ACTIVITY_ID, this.getClass().getName());\n    intent.putExtra(CallService.EXTRA_REQUEST_CODE, CallCode.INSERT_REPORT);\n    intent.putExtra(CallService.EXTRA_PRIORITY_CODE, HttpCall.HIGH_PRIORITY);\n    intent.putExtra(CallService.EXTRA_NUMBER_ATTEMPTS, 3);\n    intent.putExtra(CallService.EXTRA_OBJECT, report);\n    intent.putExtra(CallService.EXTRA_ATTRIBUTES, bundle);\n    Log.d(TAG, \"Intent sent: \" + intent.toString());\n    startService(intent);\n  }\n"}, {"dataset": "putString", "exampleID": 757, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.get(*)"], "configurationStart": [1393], "configurationEnd": [1408], "guardCondition": "!(bundle.containsKey(key,)) && !(value.equals(\"GET\",))", "guardType": "IF {", "guardExpressionStart": 910, "guardExpressionEnd": 935, "guardBlockStart": 910, "guardBlockEnd": 986, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1612, "focalAPIEnd": 1646, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.getString(String)", "bundle.putString(String,String)", "encodePostBody(bundle,String)"], "useStart": [1754, 1797, 2263], "useEnd": [1786, 1844, 2298], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/serp256/lightning/tree/master/src/social/facebook/android/sdk/src/com/facebook/android/Util.java", "rawCode": "  /**\n   * Connect to an HTTP URL and return the response as a string.\n   *\n   * <p>Note that the HTTP method override is used on non-GET requests. (i.e. requests are made as\n   * \"POST\" with method specified in the body).\n   *\n   * @param url - the resource to open: must be a welformed URL\n   * @param method - the HTTP method to use (\"GET\", \"POST\", etc.)\n   * @param params - the query parameter for the URL (e.g. access_token=foo)\n   * @return the URL contents as a String\n   * @throws MalformedURLException - if the URL format is invalid\n   * @throws IOException - if a network problem occurs\n   */\n  public static String openUrl(String url, String method, Bundle params)\n      throws MalformedURLException, IOException {\n    // random string as boundary for multi-part http post\n    String strBoundary = \"3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f\";\n    String endLine = \"\\r\\n\";\n\n    OutputStream os;\n\n    if (method.equals(\"GET\")) {\n      url = url + \"?\" + encodeUrl(params);\n    }\n    Util.logd(\"Facebook-Util\", method + \" URL: \" + url);\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    conn.setRequestProperty(\n        \"User-Agent\", System.getProperties().getProperty(\"http.agent\") + \" FacebookAndroidSDK\");\n    if (!method.equals(\"GET\")) {\n      Bundle dataparams = new Bundle();\n      for (String key : params.keySet()) {\n        Object parameter = params.get(key);\n        if (parameter instanceof byte[]) {\n          dataparams.putByteArray(key, (byte[]) parameter);\n        }\n      }\n\n      // use method override\n      if (!params.containsKey(\"method\")) {\n        params.putString(\"method\", method);\n      }\n\n      if (params.containsKey(\"access_token\")) {\n        String decoded_token = URLDecoder.decode(params.getString(\"access_token\"));\n        params.putString(\"access_token\", decoded_token);\n      }\n\n      conn.setRequestMethod(\"POST\");\n      conn.setRequestProperty(\"Content-Type\", \"multipart/form-data;boundary=\" + strBoundary);\n      conn.setDoOutput(true);\n      conn.setDoInput(true);\n      conn.setRequestProperty(\"Connection\", \"Keep-Alive\");\n      conn.connect();\n      os = new BufferedOutputStream(conn.getOutputStream());\n\n      os.write((\"--\" + strBoundary + endLine).getBytes());\n      os.write((encodePostBody(params, strBoundary)).getBytes());\n      os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n\n      if (!dataparams.isEmpty()) {\n\n        for (String key : dataparams.keySet()) {\n          os.write(\n              (\"Content-Disposition: form-data; filename=\\\"\" + key + \"\\\"\" + endLine).getBytes());\n          os.write((\"Content-Type: content/unknown\" + endLine + endLine).getBytes());\n          os.write(dataparams.getByteArray(key));\n          os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n        }\n      }\n      os.flush();\n    }\n\n    String response = \"\";\n    try {\n      response = read(conn.getInputStream());\n    } catch (FileNotFoundException e) {\n      // Error Stream contains JSON that we can parse to a FB error\n      response = read(conn.getErrorStream());\n    }\n    return response;\n  }\n"}, {"dataset": "putString", "exampleID": 758, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 70, "focalAPIEnd": 136, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [142, 236, 356, 425], "useEnd": [191, 310, 413, 466], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_packages_apps_Settings/tree/master/src/com/android/settings/inputmethod/UserDictionaryAddWordContents.java", "rawCode": "  /* package */ void saveStateIntoBundle(final Bundle outState) {\n    outState.putString(EXTRA_WORD, mWordEditText.getText().toString());\n    outState.putString(EXTRA_ORIGINAL_WORD, mOldWord);\n    if (null != mShortcutEditText) {\n      outState.putString(EXTRA_SHORTCUT, mShortcutEditText.getText().toString());\n    }\n    if (null != mOldShortcut) {\n      outState.putString(EXTRA_ORIGINAL_SHORTCUT, mOldShortcut);\n    }\n    outState.putString(EXTRA_LOCALE, mLocale);\n  }\n"}, {"dataset": "putString", "exampleID": 759, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putBoolean(String,boolean)", "bundle.putInt(String,int)"], "configurationStart": [146, 197], "configurationEnd": [191, 246], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 252, "focalAPIEnd": 287, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [293, 334, 422], "useEnd": [328, 416, 486], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dzo/packages_apps_phone/tree/master/src/com/android/phone/FdnSetting.java", "rawCode": "  /** Save the state of the pin change. */\n  @Override\n  protected void onSaveInstanceState(Bundle out) {\n    super.onSaveInstanceState(out);\n    out.putBoolean(SKIP_OLD_PIN_KEY, mSkipOldPin);\n    out.putInt(PIN_CHANGE_STATE_KEY, mPinChangeState);\n    out.putString(OLD_PIN_KEY, mOldPin);\n    out.putString(NEW_PIN_KEY, mNewPin);\n    out.putString(DIALOG_MESSAGE_KEY, mButtonChangePin2.getDialogMessage().toString());\n    out.putString(DIALOG_PIN_ENTRY_KEY, mButtonChangePin2.getText());\n  }\n"}, {"dataset": "putString", "exampleID": 760, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [84], "initializationEnd": [96], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 102, "focalAPIEnd": 138, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "new Request(*,String,bundle,*,*)"], "useStart": [144, 206], "useEnd": [193, 275], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/hackathon-3d/thedroidsyourlookingfor-repo/tree/master/libs/facebook-android-sdk-3.5/facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "  Request createGetPermissionsRequest(String accessToken) {\n    Bundle parameters = new Bundle();\n    parameters.putString(\"fields\", \"id\");\n    parameters.putString(\"access_token\", accessToken);\n    return new Request(null, \"me/permissions\", parameters, HttpMethod.GET, null);\n  }\n"}, {"dataset": "putString", "exampleID": 761, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.getByteArray(String)"], "configurationStart": [1449], "configurationEnd": [1473], "guardCondition": "!(bundle.containsKey(key,)) && !(value.equals(\"GET\",))", "guardType": "IF {", "guardExpressionStart": 910, "guardExpressionEnd": 935, "guardBlockStart": 910, "guardBlockEnd": 986, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1575, "focalAPIEnd": 1609, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.getString(String)", "bundle.putString(String,String)", "encodePostBody(bundle,String)"], "useStart": [1717, 1760, 2226], "useEnd": [1749, 1807, 2261], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/craigbooker/mdv-projects/tree/master/pgplugins/Android/Facebook/src/com/facebook/android/Util.java", "rawCode": "  /**\n   * Connect to an HTTP URL and return the response as a string.\n   *\n   * <p>Note that the HTTP method override is used on non-GET requests. (i.e. requests are made as\n   * \"POST\" with method specified in the body).\n   *\n   * @param url - the resource to open: must be a welformed URL\n   * @param method - the HTTP method to use (\"GET\", \"POST\", etc.)\n   * @param params - the query parameter for the URL (e.g. access_token=foo)\n   * @return the URL contents as a String\n   * @throws MalformedURLException - if the URL format is invalid\n   * @throws IOException - if a network problem occurs\n   */\n  public static String openUrl(String url, String method, Bundle params)\n      throws MalformedURLException, IOException {\n    // random string as boundary for multi-part http post\n    String strBoundary = \"3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f\";\n    String endLine = \"\\r\\n\";\n\n    OutputStream os;\n\n    if (method.equals(\"GET\")) {\n      url = url + \"?\" + encodeUrl(params);\n    }\n    Log.d(\"Facebook-Util\", method + \" URL: \" + url);\n    HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();\n    conn.setRequestProperty(\n        \"User-Agent\", System.getProperties().getProperty(\"http.agent\") + \" FacebookAndroidSDK\");\n    if (!method.equals(\"GET\")) {\n      Bundle dataparams = new Bundle();\n      for (String key : params.keySet()) {\n        if (params.getByteArray(key) != null) {\n          dataparams.putByteArray(key, params.getByteArray(key));\n        }\n      }\n\n      // use method override\n      if (!params.containsKey(\"method\")) {\n        params.putString(\"method\", method);\n      }\n\n      if (params.containsKey(\"access_token\")) {\n        String decoded_token = URLDecoder.decode(params.getString(\"access_token\"));\n        params.putString(\"access_token\", decoded_token);\n      }\n\n      conn.setRequestMethod(\"POST\");\n      conn.setRequestProperty(\"Content-Type\", \"multipart/form-data;boundary=\" + strBoundary);\n      conn.setDoOutput(true);\n      conn.setDoInput(true);\n      conn.setRequestProperty(\"Connection\", \"Keep-Alive\");\n      conn.connect();\n      os = new BufferedOutputStream(conn.getOutputStream());\n\n      os.write((\"--\" + strBoundary + endLine).getBytes());\n      os.write((encodePostBody(params, strBoundary)).getBytes());\n      os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n\n      if (!dataparams.isEmpty()) {\n\n        for (String key : dataparams.keySet()) {\n          os.write(\n              (\"Content-Disposition: form-data; filename=\\\"\" + key + \"\\\"\" + endLine).getBytes());\n          os.write((\"Content-Type: content/unknown\" + endLine + endLine).getBytes());\n          os.write(dataparams.getByteArray(key));\n          os.write((endLine + \"--\" + strBoundary + endLine).getBytes());\n        }\n      }\n      os.flush();\n    }\n\n    String response = \"\";\n    try {\n      response = read(conn.getInputStream());\n    } catch (FileNotFoundException e) {\n      // Error Stream contains JSON that we can parse to a FB error\n      response = read(conn.getErrorStream());\n    }\n    return response;\n  }\n"}, {"dataset": "putString", "exampleID": 762, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "value!=null", "guardType": "IF {", "guardExpressionStart": 114, "guardExpressionEnd": 156, "guardBlockStart": 114, "guardBlockEnd": 660, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 165, "focalAPIEnd": 206, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)"], "useStart": [688, 775, 834], "useEnd": [730, 814, 873], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onyx-intl/orion-viewer/tree/master/mupdf/android/src/com/artifex/mupdfdemo/MuPDFActivity.java", "rawCode": "  @Override\n  protected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n\n    if (mFileName != null && mDocView != null) {\n      outState.putString(\"FileName\", mFileName);\n\n      // Store current page in the prefs against the file name,\n      // so that we can pick it up each time the file is loaded\n      // Other info is needed only for screen-orientation change,\n      // so it can go in the bundle\n      SharedPreferences prefs = getPreferences(Context.MODE_PRIVATE);\n      SharedPreferences.Editor edit = prefs.edit();\n      edit.putInt(\"page\" + mFileName, mDocView.getDisplayedViewIndex());\n      edit.commit();\n    }\n\n    if (!mButtonsVisible) outState.putBoolean(\"ButtonsHidden\", true);\n\n    if (mTopBarMode == TopBarMode.Search) outState.putBoolean(\"SearchMode\", true);\n\n    if (mReflow) outState.putBoolean(\"ReflowMode\", true);\n  }\n"}, {"dataset": "putString", "exampleID": 763, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [808], "initializationEnd": [820], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "findViewById(*)", "TextView.setText(String)", "setTextColor(*)", "EditText.setText(String)"], "tryExpressionStart": 491, "tryExpressionEnd": 495, "tryBlockStart": 491, "tryBlockEnd": 1380, "catchExpressionStart": 966, "catchExpressionEnd": 986, "catchBlockStart": 966, "catchBlockEnd": 1380, "exceptionHandlingCallStart": [1048, 1103, 1148, 1309, 1352], "exceptionHandlingCallEnd": [1062, 1140, 1301, 1344, 1373], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 828, "focalAPIEnd": 878, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtras(bundle)"], "useStart": [886], "useEnd": [919], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ritnorthstar/Minimap-Client/tree/master/Code/Minimap/src/main/java/com/northstar/minimap/MainActivity.java", "rawCode": "  public void launchSelectionActivity(View view) {\n    Globals state = (Globals) getApplicationContext();\n    Intent selectionIntent = new Intent(this, SelectionActivity.class);\n    EditText ipTextbox = (EditText) findViewById(R.id.server_ip);\n    String serverIP = ipTextbox.getText().toString();\n    String originalIP = serverIP;\n    if (!serverIP.startsWith(\"http://\")) {\n      serverIP = \"http://\" + serverIP;\n    }\n    String ipErrorMessage = \"no error!\";\n    state.log(serverIP);\n\n    try {\n      state.comm.setServerIP(new URL(serverIP));\n\n      SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);\n      SharedPreferences.Editor editor = sharedPref.edit();\n      editor.putString(SettingsActivity.KEY_PREF_IP, originalIP);\n      editor.commit();\n\n      Bundle bundle = new Bundle();\n      bundle.putString(IP_ERROR_MESSAGE, ipErrorMessage);\n      selectionIntent.putExtras(bundle);\n\n      startActivity(selectionIntent);\n    } catch (Exception e) {\n      // Incorrect IP address format\n      ipErrorMessage = e.getMessage();\n\n      TextView errorText = (TextView) findViewById(R.id.ip_error_text_view);\n      errorText.setText(\n          \"\\\"\"\n              + serverIP\n              + \"\\\" isn't a valid IP address.\\nIt should be something like \\\"10.0.2.2:9000\\\"\");\n      errorText.setTextColor(Color.WHITE);\n      ipTextbox.setText(\"\");\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 764, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 111, "focalAPIEnd": 161, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DavidTPate/diablo3_builder/tree/master/d3_android/src/com/wemakestuff/diablo3builder/ClassListFragment.java", "rawCode": "  @Override\n  public void onSaveInstanceState(Bundle outState) {\n\n    super.onSaveInstanceState(outState);\n    outState.putString(\"selectedClass\", selectedClass);\n  }\n"}, {"dataset": "putString", "exampleID": 765, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [259], "initializationEnd": [271], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 277, "focalAPIEnd": 342, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [348], "useEnd": [367], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ylang/18-641Java/tree/master/SmartGallery/src/com/ece/smartGallery/activity/bluetooth/BluetoothChatService.java", "rawCode": "  /** Indicate that the connection attempt failed and notify the UI Activity. */\n  private void connectionFailed() {\n    // Send a failure message back to the Activity\n    Message msg = mHandler.obtainMessage(BluetoothChat.MESSAGE_TOAST);\n    Bundle bundle = new Bundle();\n    bundle.putString(BluetoothChat.TOAST, \"Unable to connect device\");\n    msg.setData(bundle);\n    mHandler.sendMessage(msg);\n\n    // Start the service over to restart listening mode\n    BluetoothChatService.this.start();\n  }\n"}, {"dataset": "putString", "exampleID": 766, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [731], "initializationEnd": [743], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 749, "focalAPIEnd": 789, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "new Request(Session,String,bundle,*,Callback)"], "useStart": [825, 974, 1028], "useEnd": [863, 1008, 1096], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OpenKit/openkit-android/tree/master/Vendor/facebook/src/com/facebook/Request.java", "rawCode": "  /**\n   * Creates a new Request configured to post a status update to a user's feed.\n   *\n   * @param session the Session to use, or null; if non-null, the session must be in an opened state\n   * @param message the text of the status update\n   * @param placeId an optional place id to associate with the post\n   * @param tagIds an optional list of user ids to tag in the post\n   * @param callback a callback that will be called when the request is completed to handle success\n   *     or error conditions\n   * @return a Request that is ready to execute\n   */\n  private static Request newStatusUpdateRequest(\n      Session session, String message, String placeId, List<String> tagIds, Callback callback) {\n\n    Bundle parameters = new Bundle();\n    parameters.putString(\"message\", message);\n\n    if (placeId != null) {\n      parameters.putString(\"place\", placeId);\n    }\n\n    if (tagIds != null && tagIds.size() > 0) {\n      String tags = TextUtils.join(\",\", tagIds);\n      parameters.putString(\"tags\", tags);\n    }\n\n    return new Request(session, MY_FEED, parameters, HttpMethod.POST, callback);\n  }\n"}, {"dataset": "putString", "exampleID": 767, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putInt(String,int)", "bundle.putInt(String,int)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)"], "configurationStart": [110, 201, 273, 347, 410, 465, 547, 620, 690, 757], "configurationEnd": [195, 267, 341, 404, 459, 541, 614, 684, 751, 824], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 830, "focalAPIEnd": 880, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putInt(String,int)", "bundle.putBoolean(String,boolean)", "bundle.putParcelable(String,Uri)"], "useStart": [886, 958, 1043], "useEnd": [952, 1005, 1114], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/packages_apps_Contacts/tree/master/src/com/android/contacts/list/ContactEntryListFragment.java", "rawCode": "  @Override\n  public void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    outState.putBoolean(KEY_SECTION_HEADER_DISPLAY_ENABLED, mSectionHeaderDisplayEnabled);\n    outState.putBoolean(KEY_PHOTO_LOADER_ENABLED, mPhotoLoaderEnabled);\n    outState.putBoolean(KEY_QUICK_CONTACT_ENABLED, mQuickContactEnabled);\n    outState.putBoolean(KEY_INCLUDE_PROFILE, mIncludeProfile);\n    outState.putBoolean(KEY_SEARCH_MODE, mSearchMode);\n    outState.putBoolean(KEY_VISIBLE_SCROLLBAR_ENABLED, mVisibleScrollbarEnabled);\n    outState.putInt(KEY_SCROLLBAR_POSITION, mVerticalScrollbarPosition);\n    outState.putInt(KEY_DIRECTORY_SEARCH_MODE, mDirectorySearchMode);\n    outState.putBoolean(KEY_SELECTION_VISIBLE, mSelectionVisible);\n    outState.putBoolean(KEY_LEGACY_COMPATIBILITY, mLegacyCompatibility);\n    outState.putString(KEY_QUERY_STRING, mQueryString);\n    outState.putInt(KEY_DIRECTORY_RESULT_LIMIT, mDirectoryResultLimit);\n    outState.putBoolean(KEY_DARK_THEME, mDarkTheme);\n\n    if (mListView != null) {\n      outState.putParcelable(KEY_LIST_STATE, mListView.onSaveInstanceState());\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 768, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [324], "initializationEnd": [336], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 345, "focalAPIEnd": 410, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [418, 492, 567], "useEnd": [483, 559, 632], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/embest-tech/rowboat-frameworks-base/tree/master/core/java/android/net/http/SslCertificate.java", "rawCode": "  /**\n   * Saves the certificate state to a bundle\n   *\n   * @param certificate The SSL certificate to store\n   * @return A bundle with the certificate stored in it or null if fails\n   */\n  public static Bundle saveState(SslCertificate certificate) {\n    Bundle bundle = null;\n\n    if (certificate != null) {\n      bundle = new Bundle();\n\n      bundle.putString(ISSUED_TO, certificate.getIssuedTo().getDName());\n      bundle.putString(ISSUED_BY, certificate.getIssuedBy().getDName());\n\n      bundle.putString(VALID_NOT_BEFORE, certificate.getValidNotBefore());\n      bundle.putString(VALID_NOT_AFTER, certificate.getValidNotAfter());\n    }\n\n    return bundle;\n  }\n"}, {"dataset": "putString", "exampleID": 769, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [1028], "initializationEnd": [1040], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1050, "focalAPIEnd": 1109, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtra(String,bundle)"], "useStart": [1119], "useEnd": [1150], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/liwenhaosuper/SysOfIMPS/tree/master/IMPS/src/com/imps/activities/Login.java", "rawCode": "    @Override\n    public void onReceive(Context context, Intent intent) {\n      // TODO Auto-generated method stub\n      String action = intent.getAction();\n      System.out.println(\"!!!login: get broadcast!!! action is \" + action);\n      pd.dismiss();\n      if (\"error_msg\".equals(action)) {\n        errorMsg = intent.getStringExtra(\"message\");\n        showDialog(ERROR);\n        stopConfig();\n        try {\n          initialConfig();\n        } catch (Exception e) {\n          // TODO Auto-generated catch block\n          e.printStackTrace();\n        }\n      } else if (\"login_success\".equals(action)) {\n        Toast.makeText(\n                Login.this, getResources().getString(R.string.login_success), Toast.LENGTH_SHORT)\n            .show();\n        System.out.println(\"!!!login_success has been received!!!\");\n        UserManager.getInstance().SendFriListReq();\n        ComponentName cn = new ComponentName(Login.this, My_Map.class);\n        Intent ti = new Intent();\n        ti.setComponent(cn);\n        Bundle bundle = new Bundle();\n        bundle.putString(\"mUsername\", account.getText().toString());\n        ti.putExtra(\"username\", bundle);\n        startActivity(ti);\n\n      } else if (\"exit\".equals(action)) {\n        Client.session.close();\n        stopService(new Intent(Login.this, IMService.class));\n        finish();\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 770, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [272], "initializationEnd": [284], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 290, "focalAPIEnd": 368, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Message.setData(bundle)"], "useStart": [374, 451], "useEnd": [445, 466], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/coderbyheart/GroupMood/tree/master/moodclient/src/de/hsrm/mi/mobcomp/y2k11grp04/activity/ServiceActivity.java", "rawCode": "  /**\n   * Legt ein Topic zu einem Meeting an\n   *\n   * @param meeting\n   * @param imageFile\n   */\n  protected void createFotoVoteTopic(Meeting meeting, File imageFile) {\n    Message m = Message.obtain(null, MoodServerService.MSG_FOTOVOTE_CREATE_TOPIC);\n    Bundle data = new Bundle();\n    data.putString(MoodServerService.KEY_MEETING_URI, meeting.getUri().toString());\n    data.putString(MoodServerService.KEY_TOPIC_IMAGE, imageFile.toString());\n    m.setData(data);\n    sendMessage(m);\n  }\n"}, {"dataset": "putString", "exampleID": 771, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [218], "initializationEnd": [230], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 236, "focalAPIEnd": 281, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "GroupCreationDialogFragment.setArguments(bundle)"], "useStart": [287, 338, 381], "useEnd": [332, 375, 406], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ninjanetworks/contacts/tree/master/src/com/android/contacts/interactions/GroupCreationDialogFragment.java", "rawCode": "  public static void show(\n      FragmentManager fragmentManager, String accountType, String accountName, String dataSet) {\n    GroupCreationDialogFragment dialog = new GroupCreationDialogFragment();\n    Bundle args = new Bundle();\n    args.putString(ARG_ACCOUNT_TYPE, accountType);\n    args.putString(ARG_ACCOUNT_NAME, accountName);\n    args.putString(ARG_DATA_SET, dataSet);\n    dialog.setArguments(args);\n    dialog.show(fragmentManager, \"createGroup\");\n  }\n"}, {"dataset": "putString", "exampleID": 772, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [81], "initializationEnd": [93], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 99, "focalAPIEnd": 140, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)", "new Request(*,String,bundle,*)", "bundle.getString(String)"], "useStart": [146, 211, 588, 822, 1513], "useEnd": [205, 268, 698, 879, 1541], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hyperactivity/android-app/tree/master/modules/facebook/src/com/facebook/TestSession.java", "rawCode": "  private TestAccount createTestAccountAndFinishAuth() {\n    Bundle parameters = new Bundle();\n    parameters.putString(\"installed\", \"true\");\n    parameters.putString(\"permissions\", getPermissionsString());\n    parameters.putString(\"access_token\", getAppAccessToken());\n\n    // If we're in shared mode, we want to rename this user to encode its permissions, so we can\n    // find it later\n    // in another shared session. If we're in private mode, don't bother renaming it since we're\n    // just going to\n    // delete it at the end of the session.\n    if (mode == Mode.SHARED) {\n      parameters.putString(\n          \"name\", String.format(\"Shared %s Testuser\", getSharedTestAccountIdentifier()));\n    }\n\n    String graphPath = String.format(\"%s/accounts/test-users\", testApplicationId);\n    Request createUserRequest = new Request(null, graphPath, parameters, HttpMethod.POST);\n    Response response = createUserRequest.executeAndWait();\n\n    FacebookRequestError error = response.getError();\n    TestAccount testAccount = response.getGraphObjectAs(TestAccount.class);\n    if (error != null) {\n      finishAuthOrReauth(null, error.getException());\n      return null;\n    } else {\n      assert testAccount != null;\n\n      // If we are in shared mode, store this new account in the dictionary so we can re-use it\n      // later.\n      if (mode == Mode.SHARED) {\n        // Remember the new name we gave it, since we didn't get it back in the results of the\n        // create request.\n        testAccount.setName(parameters.getString(\"name\"));\n        storeTestAccount(testAccount);\n      }\n\n      finishAuthWithTestAccount(testAccount);\n\n      return testAccount;\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 773, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [948], "initializationEnd": [960], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "logd(String,*)"], "tryExpressionStart": 469, "tryExpressionEnd": 473, "tryBlockStart": 469, "tryBlockEnd": 2571, "catchExpressionStart": 2422, "catchExpressionEnd": 2442, "catchBlockStart": 2422, "catchBlockEnd": 2571, "exceptionHandlingCallStart": [2549, 2516], "exceptionHandlingCallEnd": [2563, 2564], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 970, "focalAPIEnd": 1047, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Request.setParameters(bundle)"], "useStart": [1143], "useEnd": [1195], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/facebook-android-sdk-3.0/facebook/src/com/facebook/Settings.java", "rawCode": "  /**\n   * Manually publish install attribution to the Facebook graph. Internally handles tracking repeat\n   * calls to prevent multiple installs being published to the graph.\n   *\n   * @param context the current Context\n   * @return returns false on error. Applications should retry until true is returned. Safe to call\n   *     again after true is returned.\n   */\n  public static boolean publishInstallAndWait(final Context context, final String applicationId) {\n    try {\n      if (applicationId == null) {\n        return false;\n      }\n      String attributionId = Settings.getAttributionId(context.getContentResolver());\n      SharedPreferences preferences =\n          context.getSharedPreferences(ATTRIBUTION_PREFERENCES, Context.MODE_PRIVATE);\n      String pingKey = applicationId + \"ping\";\n      long lastPing = preferences.getLong(pingKey, 0);\n      if (lastPing == 0 && attributionId != null) {\n        Bundle supportsAttributionParams = new Bundle();\n        supportsAttributionParams.putString(APPLICATION_FIELDS, SUPPORTS_ATTRIBUTION);\n        Request pingRequest = Request.newGraphPathRequest(null, applicationId, null);\n        pingRequest.setParameters(supportsAttributionParams);\n\n        GraphObject supportResponse = pingRequest.executeAndWait().getGraphObject();\n        Object doesSupportAttribution = supportResponse.getProperty(SUPPORTS_ATTRIBUTION);\n\n        if (!(doesSupportAttribution instanceof Boolean)) {\n          throw new JSONException(\n              String.format(\n                  \"%s contains %s instead of a Boolean\",\n                  SUPPORTS_ATTRIBUTION, doesSupportAttribution));\n        }\n\n        if ((Boolean) doesSupportAttribution) {\n          GraphObject publishParams = GraphObject.Factory.create();\n          publishParams.setProperty(ANALYTICS_EVENT, MOBILE_INSTALL_EVENT);\n          publishParams.setProperty(ATTRIBUTION_KEY, attributionId);\n\n          String publishUrl = String.format(PUBLISH_ACTIVITY_PATH, applicationId);\n\n          Request publishRequest = Request.newPostRequest(null, publishUrl, publishParams, null);\n          publishRequest.executeAndWait();\n\n          // denote success since no error threw from the post.\n          SharedPreferences.Editor editor = preferences.edit();\n          lastPing = System.currentTimeMillis();\n          editor.putLong(pingKey, lastPing);\n          editor.commit();\n        }\n      }\n      return lastPing != 0;\n    } catch (Exception e) {\n      // if there was an error, fall through to the failure case.\n      Utility.logd(\"Facebook-publish\", e.getMessage());\n    }\n    return false;\n  }\n"}, {"dataset": "putString", "exampleID": 774, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [123], "initializationEnd": [135], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putStringArrayList(String,ArrayList<String>)", "bundle.putLong(String,long)"], "configurationStart": [141, 219], "configurationEnd": [213, 348], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 354, "focalAPIEnd": 419, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["AuthorizationClient.GetTokenAuthHandler.getTokenCompleted(AuthorizationClient.AuthorizationRequest,bundle)"], "useStart": [687], "useEnd": [729], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/satoshi-okawa/facebook-android-sdk-test1/tree/master/facebook/tests/src/com/facebook/AuthorizationClientTests.java", "rawCode": "  @SmallTest\n  @MediumTest\n  @LargeTest\n  public void testGetTokenHandlesSuccessWithAllPermissions() {\n    Bundle bundle = new Bundle();\n    bundle.putStringArrayList(NativeProtocol.EXTRA_PERMISSIONS, PERMISSIONS);\n    bundle.putLong(\n        NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH,\n        new Date().getTime() / 1000 + EXPIRES_IN_DELTA);\n    bundle.putString(NativeProtocol.EXTRA_ACCESS_TOKEN, ACCESS_TOKEN);\n\n    MockAuthorizationClient client = new MockAuthorizationClient();\n    AuthorizationClient.GetTokenAuthHandler handler = client.new GetTokenAuthHandler();\n\n    AuthorizationClient.AuthorizationRequest request = createRequest();\n    client.setRequest(request);\n    handler.getTokenCompleted(request, bundle);\n\n    assertNotNull(client.result);\n    assertEquals(AuthorizationClient.Result.Code.SUCCESS, client.result.code);\n\n    AccessToken token = client.result.token;\n    assertNotNull(token);\n    assertEquals(ACCESS_TOKEN, token.getToken());\n    assertDateDiffersWithinDelta(new Date(), token.getExpires(), EXPIRES_IN_DELTA * 1000, 1000);\n    assertEquals(PERMISSIONS, token.getPermissions());\n  }\n"}, {"dataset": "putString", "exampleID": 775, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [186], "initializationEnd": [198], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 204, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putLong(String,long)", "bundle.putString(String,String)", "logSdkEvent(*,*,bundle)"], "useStart": [276, 390, 466], "useEnd": [384, 459, 553], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/steffanc/Tahoe/tree/master/modules/Facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "  private void logWebLoginCompleted(String applicationId, String e2e) {\n    AppEventsLogger appEventsLogger = AppEventsLogger.newLogger(context, applicationId);\n\n    Bundle parameters = new Bundle();\n    parameters.putString(AnalyticsEvents.PARAMETER_WEB_LOGIN_E2E, e2e);\n    parameters.putLong(\n        AnalyticsEvents.PARAMETER_WEB_LOGIN_SWITCHBACK_TIME, System.currentTimeMillis());\n    parameters.putString(AnalyticsEvents.PARAMETER_APP_ID, applicationId);\n\n    appEventsLogger.logSdkEvent(AnalyticsEvents.EVENT_WEB_LOGIN_COMPLETE, null, parameters);\n  }\n"}, {"dataset": "putString", "exampleID": 776, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [999], "initializationEnd": [1011], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1017, "focalAPIEnd": 1058, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putInt(String,int)", "AddStatsToResults(String,NetworkStats,bundle)", "AddStatsToResults(String,NetworkStats,bundle)", "sendStatus(int,bundle)"], "useStart": [1064, 1104, 1143, 1199, 1255], "useEnd": [1098, 1137, 1193, 1249, 1324], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spacecaker/android_frameworks_base_CSM9.1/tree/master/core/tests/bandwidthtests/src/com/android/bandwidthtest/BandwidthTest.java", "rawCode": "  /**\n   * Helper method that downloads a file using http connection from a test server and reports the\n   * data usage stats to instrumentation out.\n   */\n  protected void downloadFile() throws Exception {\n    NetworkStats pre_test_stats = fetchDataFromProc(mUid);\n    String ts = Long.toString(System.currentTimeMillis());\n\n    String targetUrl = BandwidthTestUtil.buildDownloadUrl(mTestServer, FILE_SIZE, mDeviceId, ts);\n    TrafficStats.startDataProfiling(mContext);\n    File tmpSaveFile = new File(BASE_DIR + File.separator + TMP_FILENAME);\n    assertTrue(BandwidthTestUtil.DownloadFromUrl(targetUrl, tmpSaveFile));\n    NetworkStats prof_stats = TrafficStats.stopDataProfiling(mContext);\n    Log.d(LOG_TAG, prof_stats.toString());\n\n    NetworkStats post_test_stats = fetchDataFromProc(mUid);\n    NetworkStats proc_stats = post_test_stats.subtract(pre_test_stats);\n\n    // Output measurements to instrumentation out, so that it can be compared to that of\n    // the server.\n    Bundle results = new Bundle();\n    results.putString(\"device_id\", mDeviceId);\n    results.putString(\"timestamp\", ts);\n    results.putInt(\"size\", FILE_SIZE);\n    AddStatsToResults(PROF_LABEL, prof_stats, results);\n    AddStatsToResults(PROC_LABEL, proc_stats, results);\n    getInstrumentation().sendStatus(INSTRUMENTATION_IN_PROGRESS, results);\n\n    // Clean up.\n    assertTrue(cleanUpFile(tmpSaveFile));\n  }\n"}, {"dataset": "putString", "exampleID": 777, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [211], "initializationEnd": [223], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putLong(String,long)"], "configurationStart": [229], "configurationEnd": [264], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 270, "focalAPIEnd": 302, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "GroupDeletionDialogFragment.setArguments(bundle)"], "useStart": [308, 367], "useEnd": [361, 392], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamSourcery/packages_apps_Contacts/tree/master/src/com/android/contacts/interactions/GroupDeletionDialogFragment.java", "rawCode": "  public static void show(\n      FragmentManager fragmentManager, long groupId, String label, boolean endActivity) {\n    GroupDeletionDialogFragment dialog = new GroupDeletionDialogFragment();\n    Bundle args = new Bundle();\n    args.putLong(ARG_GROUP_ID, groupId);\n    args.putString(ARG_LABEL, label);\n    args.putBoolean(ARG_SHOULD_END_ACTIVITY, endActivity);\n    dialog.setArguments(args);\n    dialog.show(fragmentManager, \"deleteGroup\");\n  }\n"}, {"dataset": "putString", "exampleID": 778, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)", "bundle.putInt(String,int)"], "configurationStart": [94, 160], "configurationEnd": [154, 215], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 221, "focalAPIEnd": 275, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putParcelable(String,Location)", "bundle.putBoolean(String,boolean)"], "useStart": [281, 340], "useEnd": [334, 402], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nurunecohack/activemtl/tree/master/FacebookSDK/src/com/facebook/widget/PlacePickerFragment.java", "rawCode": "  void saveSettingsToBundle(Bundle outState) {\n    super.saveSettingsToBundle(outState);\n\n    outState.putInt(RADIUS_IN_METERS_BUNDLE_KEY, radiusInMeters);\n    outState.putInt(RESULTS_LIMIT_BUNDLE_KEY, resultsLimit);\n    outState.putString(SEARCH_TEXT_BUNDLE_KEY, searchText);\n    outState.putParcelable(LOCATION_BUNDLE_KEY, location);\n    outState.putBoolean(SHOW_SEARCH_BOX_BUNDLE_KEY, showSearchBox);\n  }\n"}, {"dataset": "putString", "exampleID": 779, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 94, "focalAPIEnd": 140, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)"], "useStart": [146], "useEnd": [203], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Aulie/Freerider/tree/master/facebook/src/com/facebook/widget/FriendPickerFragment.java", "rawCode": "  void saveSettingsToBundle(Bundle outState) {\n    super.saveSettingsToBundle(outState);\n\n    outState.putString(USER_ID_BUNDLE_KEY, userId);\n    outState.putBoolean(MULTI_SELECT_BUNDLE_KEY, multiSelect);\n  }\n"}, {"dataset": "putString", "exampleID": 780, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 422, "focalAPIEnd": 456, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/facebook-android-sdk-3.0.1/facebook/src/com/facebook/TokenCachingStrategy.java", "rawCode": "  /**\n   * Puts the token value into a Bundle.\n   *\n   * @param bundle A Bundle in which the token value should be stored.\n   * @param value The String representing the token value, or null.\n   * @throws NullPointerException if the passed in Bundle or token value are null\n   */\n  public static void putToken(Bundle bundle, String value) {\n    Validate.notNull(bundle, \"bundle\");\n    Validate.notNull(value, \"value\");\n    bundle.putString(TOKEN_KEY, value);\n  }\n"}, {"dataset": "putString", "exampleID": 781, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [1164], "initializationEnd": [1176], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putStringArrayList(String,ArrayList)"], "configurationStart": [1186], "configurationEnd": [1229], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1239, "focalAPIEnd": 1273, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Intent.putExtras(bundle)"], "useStart": [1283, 1384], "useEnd": [1313, 1404], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zoebbmm/Android/tree/master/temp/AndroidRestrant/src/xxe/restrant/show/ActivityShowFood.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    super.onOptionsItemSelected(item);\n    switch (item.getItemId()) {\n      case Menu.FIRST:\n        // Intent intent1 = new Intent(ActivityShowFood.this,ShopCartAdd.class);\n        // startActivity(intent1);\n        foodList = new ArrayList();\n        // 通过循环data的长度，传入i，将data中的数据放入map中，即map中放入的就是一个食物的信息\n        for (int i = 0; i < LineAdapter.data.size(); i++) {\n          if (map.get(Integer.parseInt(LineAdapter.data.get(i).get(\"id\").toString()))) {\n            Map<String, String> map = new HashMap<String, String>();\n            map.put(\"foodId\", LineAdapter.data.get(i).get(\"id\") + \"\");\n            map.put(\"foodName\", LineAdapter.data.get(i).get(\"name\") + \"\");\n            map.put(\"foodPrice\", LineAdapter.data.get(i).get(\"price\") + \"\");\n            map.put(\"foodNum\", \"\" + mapNum.get((Integer) LineAdapter.data.get(i).get(\"id\")));\n\n            Log.e(\n                \"id:\" + map.get(\"foodId\"),\n                \"name:\" + map.get(\"foodName\") + \"price:\" + map.get(\"foodPrice\"));\n            foodList.add(map);\n          }\n        }\n\n        Log.e(\"==========\", \"OK\");\n        Bundle bl = new Bundle();\n        bl.putStringArrayList(\"ShopCart\", foodList);\n        bl.putString(\"userName\", userName);\n        bl.putString(\"userId\", userId);\n        Intent intent = new Intent(this, ShopCartAdd.class);\n        intent.putExtras(bl);\n        startActivity(intent);\n\n        break;\n      case Menu.FIRST + 1:\n        ActivityShowFood.this.finish();\n        this.finish();\n        // showDialog(DIALOG1);\n        break;\n      case Menu.FIRST + 2:\n        Intent intent2 = new Intent(ActivityShowFood.this, ActivityRecord.class);\n        intent2.putExtra(\"userName\", userName);\n        intent2.putExtra(\"userId\", userId);\n        startActivity(intent2);\n\n        break;\n    }\n\n    return true;\n  }\n"}, {"dataset": "putString", "exampleID": 782, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [199], "initializationEnd": [211], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "searchableFragmentTags.contains(value,)", "guardType": "IF {", "guardExpressionStart": 117, "guardExpressionEnd": 173, "guardBlockStart": 117, "guardBlockEnd": 355, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 219, "focalAPIEnd": 280, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["startSearch(*,boolean,bundle,boolean)"], "useStart": [289], "useEnd": [329], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envsmth/tree/master/EnvSocialApp/src/com/envsocial/android/DetailsActivity.java", "rawCode": "  @Override\n  public boolean onSearchRequested() {\n    // first check to see which fragment initiated the search\n    if (searchableFragmentTags.contains(mActiveFragmentTag)) {\n      Bundle appData = new Bundle();\n      appData.putString(Feature.SEARCH_FEATURE, mActiveFragmentTag);\n\n      startSearch(null, false, appData, false);\n      return true;\n    }\n\n    return false;\n  }\n"}, {"dataset": "putString", "exampleID": 783, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [86], "initializationEnd": [98], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [105], "configurationEnd": [146], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 152, "focalAPIEnd": 186, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Parcel.writeBundle(bundle)"], "useStart": [193], "useEnd": [217], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bbcallen/vlc-android-macbuild/tree/master/android/LibMediaPlayer/src/tv/danmaku/media/resource/Segment.java", "rawCode": "  @Override\n  public void writeToParcel(Parcel dest, int flags) {\n    Bundle bundle = new Bundle();\n\n    bundle.putInt(BUNDLE_DURATION, mDuration);\n    bundle.putString(BUNDLE_URL, mUrl);\n\n    dest.writeBundle(bundle);\n  }\n"}, {"dataset": "putString", "exampleID": 784, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [233], "initializationEnd": [245], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 251, "focalAPIEnd": 287, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "EditAddressBookEntryFragment.setArguments(bundle)"], "useStart": [293, 365], "useEnd": [359, 392], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/guerrerocarlos/bitcoin-wallet/tree/master/wallet/src/de/schildbach/wallet/ui/EditAddressBookEntryFragment.java", "rawCode": "  private static EditAddressBookEntryFragment instance(\n      final String address, final String suggestedAddressLabel) {\n    final EditAddressBookEntryFragment fragment = new EditAddressBookEntryFragment();\n\n    final Bundle args = new Bundle();\n    args.putString(KEY_ADDRESS, address);\n    args.putString(KEY_SUGGESTED_ADDRESS_LABEL, suggestedAddressLabel);\n    fragment.setArguments(args);\n\n    return fragment;\n  }\n"}, {"dataset": "putString", "exampleID": 785, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [452], "initializationEnd": [464], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 472, "focalAPIEnd": 528, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["respond(bundle)"], "useStart": [552], "useEnd": [574], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arjunroy/cinder_base/tree/master/core/java/android/provider/Gmail.java", "rawCode": "    /**\n     * When a conversation cursor is created it becomes the active network cursor, which means that\n     * it will fetch results from the network if it needs to in order to show all mail that matches\n     * its query. If you later want to requery an older cursor and would like that cursor to be the\n     * active cursor you need to call this method before requerying.\n     */\n    public void becomeActiveNetworkCursor() {\n      Bundle input = new Bundle();\n      input.putString(RESPOND_INPUT_COMMAND, COMMAND_ACTIVATE);\n      Bundle output = mCursor.respond(input);\n      String response = output.getString(RESPOND_OUTPUT_COMMAND_RESPONSE);\n      assert COMMAND_RESPONSE_OK.equals(response);\n    }\n"}, {"dataset": "putString", "exampleID": 786, "initialization": ["String value = Uri.getSchemeSpecificPart()", "Bundle bundle = new Bundle()"], "initializationStart": [568, 691], "initializationEnd": [596, 703], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putAll(Bundle)"], "configurationStart": [793], "configurationEnd": [829], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 1248, "focalAPIEnd": 1298, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "bundle.putString(String,String)"], "useStart": [1306, 1595, 1653], "useEnd": [1355, 1645, 1702], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ninjanetworks/contacts/tree/master/src/com/android/contacts/activities/ShowOrCreateActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    // Create handler if doesn't exist, otherwise cancel any running\n    if (mQueryHandler == null) {\n      mQueryHandler = new NotifyingAsyncQueryHandler(this, this);\n    } else {\n      mQueryHandler.cancelOperation(QUERY_TOKEN);\n    }\n\n    final Intent intent = getIntent();\n    final Uri data = intent.getData();\n\n    // Unpack scheme and target data from intent\n    String scheme = null;\n    String ssp = null;\n    if (data != null) {\n      scheme = data.getScheme();\n      ssp = data.getSchemeSpecificPart();\n    }\n\n    // Build set of extras for possible use when creating contact\n    mCreateExtras = new Bundle();\n    Bundle originalExtras = intent.getExtras();\n    if (originalExtras != null) {\n      mCreateExtras.putAll(originalExtras);\n    }\n\n    // Read possible extra with specific title\n    mCreateDescrip = intent.getStringExtra(Intents.EXTRA_CREATE_DESCRIPTION);\n    if (mCreateDescrip == null) {\n      mCreateDescrip = ssp;\n    }\n\n    // Allow caller to bypass dialog prompt\n    mCreateForce = intent.getBooleanExtra(Intents.EXTRA_FORCE_CREATE, false);\n\n    // Handle specific query request\n    if (Constants.SCHEME_MAILTO.equals(scheme)) {\n      mCreateExtras.putString(Intents.Insert.EMAIL, ssp);\n      mCreateExtras.putString(SearchManager.QUERY, ssp);\n\n      Uri uri = Uri.withAppendedPath(Email.CONTENT_FILTER_URI, Uri.encode(ssp));\n      mQueryHandler.startQuery(QUERY_TOKEN, null, uri, CONTACTS_PROJECTION, null, null, null);\n\n    } else if (Constants.SCHEME_TEL.equals(scheme)) {\n      mCreateExtras.putString(Intents.Insert.PHONE, ssp);\n      mCreateExtras.putString(SearchManager.QUERY, ssp);\n\n      Uri uri = Uri.withAppendedPath(PhoneLookup.CONTENT_FILTER_URI, ssp);\n      mQueryHandler.startQuery(QUERY_TOKEN, null, uri, PHONES_PROJECTION, null, null, null);\n\n    } else {\n      Log.w(TAG, \"Invalid intent:\" + getIntent());\n      finish();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 787, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [383], "initializationEnd": [395], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 607, "focalAPIEnd": 670, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)"], "useStart": [676], "useEnd": [739], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/packages_apps_Contacts/tree/master/tests/src/com/android/contacts/tests/testauth/TestAuthenticator.java", "rawCode": "  /** Create a new account with the name generated by {@link #newUniqueUserName()}. */\n  @Override\n  public Bundle addAccount(\n      AccountAuthenticatorResponse response,\n      String accountType,\n      String authTokenType,\n      String[] requiredFeatures,\n      Bundle options) {\n    Log.v(TestauthConstants.LOG_TAG, \"addAccount() type=\" + accountType);\n    final Bundle bundle = new Bundle();\n\n    final Account account = new Account(newUniqueUserName(), accountType);\n\n    // Create an account.\n    AccountManager.get(mContext).addAccountExplicitly(account, PASSWORD, null);\n\n    // And return it.\n    bundle.putString(AccountManager.KEY_ACCOUNT_NAME, account.name);\n    bundle.putString(AccountManager.KEY_ACCOUNT_TYPE, account.type);\n    return bundle;\n  }\n"}, {"dataset": "putString", "exampleID": 788, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [277], "initializationEnd": [289], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 295, "focalAPIEnd": 359, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [365], "useEnd": [384], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/scribbler87/dajkta-location-based-social-network/tree/master/application/src/fi/local/social/network/bttest/BluetoothChatService.java", "rawCode": "  /** Indicate that the connection was lost and notify the UI Activity. */\n  private void connectionLost() {\n    setState(STATE_LISTEN);\n\n    // Send a failure message back to the Activity\n    Message msg = mHandler.obtainMessage(BTActivity.MESSAGE_TOAST);\n    Bundle bundle = new Bundle();\n    bundle.putString(BTActivity.TOAST, \"Device connection was lost\");\n    msg.setData(bundle);\n    mHandler.sendMessage(msg);\n  }\n"}, {"dataset": "putString", "exampleID": 789, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "value!=null", "guardType": "IF {", "guardExpressionStart": 114, "guardExpressionEnd": 156, "guardBlockStart": 114, "guardBlockEnd": 660, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 165, "focalAPIEnd": 206, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)", "bundle.putBoolean(String,boolean)"], "useStart": [688, 775, 834], "useEnd": [730, 814, 873], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andyhan/mupdf/tree/master/platform/android/src/com/artifex/mupdfdemo/MuPDFActivity.java", "rawCode": "  @Override\n  protected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n\n    if (mFileName != null && mDocView != null) {\n      outState.putString(\"FileName\", mFileName);\n\n      // Store current page in the prefs against the file name,\n      // so that we can pick it up each time the file is loaded\n      // Other info is needed only for screen-orientation change,\n      // so it can go in the bundle\n      SharedPreferences prefs = getPreferences(Context.MODE_PRIVATE);\n      SharedPreferences.Editor edit = prefs.edit();\n      edit.putInt(\"page\" + mFileName, mDocView.getDisplayedViewIndex());\n      edit.commit();\n    }\n\n    if (!mButtonsVisible) outState.putBoolean(\"ButtonsHidden\", true);\n\n    if (mTopBarMode == TopBarMode.Search) outState.putBoolean(\"SearchMode\", true);\n\n    if (mReflow) outState.putBoolean(\"ReflowMode\", true);\n  }\n"}, {"dataset": "putString", "exampleID": 790, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [319], "initializationEnd": [331], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "Bundle.putString(String,String)"], "tryExpressionStart": 367, "tryExpressionEnd": 371, "tryBlockStart": 367, "tryBlockEnd": 820, "catchExpressionStart": 581, "catchExpressionEnd": 601, "catchBlockStart": 581, "catchBlockEnd": 662, "exceptionHandlingCallStart": [638, 611], "exceptionHandlingCallEnd": [652, 653], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 437, "focalAPIEnd": 497, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "Message.setData(bundle)"], "useStart": [611, 681], "useEnd": [653, 698], "hasFinally": 1, "cleanUpCall": ["Message.setData(Bundle)", "Handler.sendMessage(Message)"], "finallyExpressionStart": 663, "finallyExpressionEnd": 671, "finallyBlockStart": 663, "finallyBlockEnd": 820, "cleanUpCallStart": [681, 726], "cleanUpCallEnd": [698, 764], "url": "https://github.com/ramesesinc/clfc/tree/master/platform/android/PaymentCollectionApp/src/com/rameses/paymentcollectionapp/ChangePassword.java", "rawCode": "    @Override\n    public void run() {\n      Map env = ClientContext.getCurrentContext().getAppEnv();\n      env.put(\"app.host\", ApplicationUtil.getAppHost(context, getApp().getNetworkStatus()));\n      PasswordService svc = new PasswordService();\n\n      Message msg = responseHandler.obtainMessage();\n      Bundle data = new Bundle();\n      boolean flag = false;\n      try {\n        svc.changePassword(oldpwd, newpwd, confirmpwd);\n        data.putString(\"response\", \"Password successfully changed.\");\n        msg = changePasswordHandler.obtainMessage();\n        flag = true;\n      } catch (Exception e) {\n        data.putString(\"response\", e.getMessage());\n      } finally {\n        msg.setData(data);\n        if (flag == true) changePasswordHandler.sendMessage(msg);\n        else responseHandler.sendMessage(msg);\n      }\n    }\n"}, {"dataset": "putString", "exampleID": 791, "initialization": ["Bundle bundle = getParameters()"], "initializationStart": [71], "initializationEnd": [86], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 94, "focalAPIEnd": 170, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "bundle.putString(String,String)", "new WebDialog(*,String,bundle,*,*)"], "useStart": [178, 265, 339], "useEnd": [257, 323, 419], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/androideveloper/RAVA-Voting/tree/master/RavaVotingAndroid/libraries/facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "    @Override\n    public WebDialog build() {\n      Bundle parameters = getParameters();\n      parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, REDIRECT_URI);\n      parameters.putString(ServerProtocol.DIALOG_PARAM_CLIENT_ID, getApplicationId());\n      parameters.putString(ServerProtocol.DIALOG_PARAM_E2E, e2e);\n\n      return new WebDialog(getContext(), OAUTH_DIALOG, parameters, getTheme(), getListener());\n    }\n"}, {"dataset": "putString", "exampleID": 792, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [248], "initializationEnd": [260], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 267, "focalAPIEnd": 327, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Intent.putExtras(bundle)"], "useStart": [333], "useEnd": [352], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/yangjiandong/cw-advandroid/tree/master/AppWidget/LoremWidget/src/com/commonsware/android/appwidget/lorem/LoremViewsFactory.java", "rawCode": "  @Override\n  public RemoteViews getViewAt(int position) {\n    RemoteViews row = new RemoteViews(ctxt.getPackageName(), R.layout.row);\n\n    row.setTextViewText(android.R.id.text1, items[position]);\n\n    Intent i = new Intent();\n    Bundle extras = new Bundle();\n\n    extras.putString(WidgetProvider.EXTRA_WORD, items[position]);\n    i.putExtras(extras);\n    row.setOnClickFillInIntent(android.R.id.text1, i);\n\n    return (row);\n  }\n"}, {"dataset": "putString", "exampleID": 793, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [230], "initializationEnd": [242], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 248, "focalAPIEnd": 274, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rweather/tvguide/tree/master/android/TVGuide/src/com/southernstorm/tvguide/TvChannel.java", "rawCode": "  /**\n   * Converts the information in this channel object into a bundle for passing to a new activity.\n   *\n   * @return the bundle containing information about this channel\n   */\n  public Bundle toBundle() {\n    Bundle bundle = new Bundle();\n    bundle.putString(\"id\", id);\n    return bundle;\n  }\n"}, {"dataset": "putString", "exampleID": 794, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [275], "initializationEnd": [287], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 295, "focalAPIEnd": 427, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["ItemDetailFragment.setArguments(bundle)"], "useStart": [497], "useEnd": [529], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/android_new/src/hisaab/hisaab/ItemDetailActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_item_detail);\n\n    getActionBar().setDisplayHomeAsUpEnabled(true);\n\n    if (savedInstanceState == null) {\n      Bundle arguments = new Bundle();\n      arguments.putString(\n          ItemDetailFragment.ARG_ITEM_ID,\n          getIntent().getStringExtra(ItemDetailFragment.ARG_ITEM_ID));\n      ItemDetailFragment fragment = new ItemDetailFragment();\n      fragment.setArguments(arguments);\n      getSupportFragmentManager()\n          .beginTransaction()\n          .add(R.id.item_detail_container, fragment)\n          .commit();\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 795, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [84], "initializationEnd": [96], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 102, "focalAPIEnd": 138, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putString(String,String)", "new Request(*,String,bundle,*,*)"], "useStart": [144, 206], "useEnd": [193, 275], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fishkingsin/WristbandProject/tree/master/FacebookSDK/src/com/facebook/AuthorizationClient.java", "rawCode": "  Request createGetPermissionsRequest(String accessToken) {\n    Bundle parameters = new Bundle();\n    parameters.putString(\"fields\", \"id\");\n    parameters.putString(\"access_token\", accessToken);\n    return new Request(null, \"me/permissions\", parameters, HttpMethod.GET, null);\n  }\n"}, {"dataset": "putString", "exampleID": 796, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 162, "focalAPIEnd": 252, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/asorici/envsmth/tree/master/EnvSocialApp/src/com/envsocial/android/features/description/BoothDescriptionActivity.java", "rawCode": "  @Override\n  protected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    if (mActionBar.getSelectedTab() != null) {\n      outState.putString(\"booth_description_tab\", (String) mActionBar.getSelectedTab().getTag());\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 797, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [883], "initializationEnd": [895], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 901, "focalAPIEnd": 980, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["new Request(Session,String,bundle,*,Callback)"], "useStart": [993], "useEnd": [1054], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/shi-314/AngryKings/tree/master/facebook/src/com/facebook/Request.java", "rawCode": "  /**\n   * Creates a new Request configured to update a user owned Open Graph object.\n   *\n   * @param session the Session to use, or null; if non-null, the session must be in an opened state\n   * @param openGraphObject the Open Graph object to update, which must have a valid 'id' property\n   * @param callback a callback that will be called when the request is completed to handle success\n   *     or error conditions\n   * @return a Request that is ready to execute\n   */\n  public static Request newUpdateOpenGraphObjectRequest(\n      Session session, OpenGraphObject openGraphObject, Callback callback) {\n    if (openGraphObject == null) {\n      throw new FacebookException(\"openGraphObject cannot be null\");\n    }\n\n    String path = openGraphObject.getId();\n    if (path == null) {\n      throw new FacebookException(\"openGraphObject must have an id\");\n    }\n\n    Bundle bundle = new Bundle();\n    bundle.putString(OBJECT_PARAM, openGraphObject.getInnerJSONObject().toString());\n    return new Request(session, path, bundle, HttpMethod.POST, callback);\n  }\n"}, {"dataset": "putString", "exampleID": 798, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 188, "focalAPIEnd": 267, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Crystalnix/BitPop/tree/master/content/shell/android/java/src/org/chromium/content_shell/ContentShellActivity.java", "rawCode": "  @Override\n  protected void onSaveInstanceState(Bundle outState) {\n    super.onSaveInstanceState(outState);\n    Shell activeShell = getActiveShell();\n    if (activeShell != null) {\n      outState.putString(ACTIVE_SHELL_URL_KEY, activeShell.getContentView().getUrl());\n    }\n  }\n"}, {"dataset": "putString", "exampleID": 799, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [83], "initializationEnd": [95], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["bundle.putInt(String,int)"], "configurationStart": [101], "configurationEnd": [136], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 142, "focalAPIEnd": 174, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["Message.setData(bundle)"], "useStart": [231], "useEnd": [258], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/igofrias/feriaSW/tree/master/Viper/parte de neko/Proyecto/src/com/Phyrex/proyecto/BTService.java", "rawCode": "  void sendBTCmessage(int delay, int message, String name) {\n    Bundle myBundle = new Bundle();\n    myBundle.putInt(\"message\", message);\n    myBundle.putString(\"name\", name);\n    Message myMessage = myHandler.obtainMessage();\n    myMessage.setData(myBundle);\n\n    if (delay == 0) btcHandler.sendMessage(myMessage);\n    else btcHandler.sendMessageDelayed(myMessage, delay);\n  }\n"}, {"dataset": "putString", "exampleID": 800, "initialization": ["Bundle bundle = new Bundle()"], "initializationStart": [186], "initializationEnd": [198], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = bundle.putString(key,value)", "focalAPIStart": 204, "focalAPIEnd": 270, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["bundle.putLong(String,long)", "bundle.putString(String,String)", "logSdkEvent(*,*,bundle)"], "useStart": [276, 390, 466], "useEnd": [384, 459, 553], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ScootrNova/ClassyGames/tree/master/projects/android/facebook/src/com/facebook/AuthorizationClient.java", "rawCode": "  private void logWebLoginCompleted(String applicationId, String e2e) {\n    AppEventsLogger appEventsLogger = AppEventsLogger.newLogger(context, applicationId);\n\n    Bundle parameters = new Bundle();\n    parameters.putString(AnalyticsEvents.PARAMETER_WEB_LOGIN_E2E, e2e);\n    parameters.putLong(\n        AnalyticsEvents.PARAMETER_WEB_LOGIN_SWITCHBACK_TIME, System.currentTimeMillis());\n    parameters.putString(AnalyticsEvents.PARAMETER_APP_ID, applicationId);\n\n    appEventsLogger.logSdkEvent(AnalyticsEvents.EVENT_WEB_LOGIN_COMPLETE, null, parameters);\n  }\n"}]