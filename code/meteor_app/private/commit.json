[{"dataset": "commit", "exampleID": 7401, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = edit()"], "initializationStart": [170], "initializationEnd": [186], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [192], "configurationEnd": [232], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 238, "focalAPIEnd": 255, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CHU-TDAP/E-learning-Android/tree/master/src/tw/edu/chu/csie/e_learning/util/SettingUtils.java", "rawCode": "  /**\n   * 設定是否允許結束離開此應用程式\n   *\n   * @param setTF <code>true</code>允許結束離開此應用程式\n   */\n  public void setExitEnable(boolean setTF) {\n    SharedPreferences.Editor prefEdit = this.pref.edit();\n    prefEdit.putBoolean(\"learn_exit\", setTF);\n    prefEdit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7402, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [375], "initializationEnd": [393], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [399, 484], "configurationEnd": [478, 578], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 584, "focalAPIEnd": 604, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/britzl/androidutils/tree/master/androidutils-lib/src/com/loopj/android/http/PersistentCookieStore.java", "rawCode": "  @Override\n  public void addCookie(Cookie cookie) {\n    String name = cookie.getName() + cookie.getDomain();\n\n    // Save cookie into local store, or remove if expired\n    if (!cookie.isExpired(new Date())) {\n      cookies.put(name, cookie);\n    } else {\n      cookies.remove(name);\n    }\n\n    // Save cookie into persistent store\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n    prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(\",\", cookies.keySet()));\n    prefsWriter.putString(COOKIE_NAME_PREFIX + name, encodeCookie(new SerializableCookie(cookie)));\n    prefsWriter.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7403, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,int)", "sharedPreferences.Editor.Editor.putLong(String,long)", "sharedPreferences.Editor.Editor.putLong(String,int)"], "configurationStart": [242, 352, 487], "configurationEnd": [282, 416, 527], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 688, "focalAPIEnd": 703, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cloudspokes/mobile_campus/tree/master/aau/android/AAU Campus/src/com/appirio/mobile/AMSalesforceDroidGapActivity.java", "rawCode": "    public void onClick(DialogInterface dialog, int which) {\n      Calendar calendar = Calendar.getInstance();\n      calendar.add(Calendar.DAY_OF_MONTH, ASK_FEEDBACK_AFTER_DAYS);\n\n      if (which == DialogInterface.BUTTON_NEGATIVE) {\n        editor.putLong(ASK_FEEDBACK_ON_PREF, -1);\n      } else if (which == DialogInterface.BUTTON_NEUTRAL) {\n        editor.putLong(ASK_FEEDBACK_ON_PREF, calendar.getTimeInMillis());\n      } else if (which == DialogInterface.BUTTON_POSITIVE) {\n        editor.putLong(ASK_FEEDBACK_ON_PREF, -1);\n\n        startActivity(\n            new Intent(\n                Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + ctx.getPackageName())));\n      }\n\n      editor.commit();\n    }\n"}, {"dataset": "commit", "exampleID": 7404, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [414], "initializationEnd": [432], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [438], "configurationEnd": [484], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 490, "focalAPIEnd": 510, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AfzalivE/MI-Chat/tree/master/android-app/src/main/java/com/afzaln/mi_chat/utils/PrefUtils.java", "rawCode": "  /**\n   * Commits a preference in SharedPreferences.\n   *\n   * @param context the context\n   * @param stringName the preference name\n   * @param stringValue the value of the preference\n   */\n  public static void setPref(Context context, String stringName, String stringValue) {\n    SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);\n    SharedPreferences.Editor prefsEditor = sharedPrefs.edit();\n    prefsEditor.putString(stringName, stringValue);\n    prefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7405, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [287], "initializationEnd": [305], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.clear()"], "configurationStart": [311], "configurationEnd": [330], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 336, "focalAPIEnd": 356, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AfzalivE/MI-Chat/tree/master/android-app/src/main/java/com/afzaln/mi_chat/utils/PrefUtils.java", "rawCode": "  /**\n   * Removes all preferences from SharedPreferences\n   *\n   * @param context the context\n   */\n  public static void clearPrefs(Context context) {\n    SharedPreferences sharedPrefs = PreferenceManager.getDefaultSharedPreferences(context);\n    SharedPreferences.Editor prefsEditor = sharedPrefs.edit();\n    prefsEditor.clear();\n    prefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7406, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [91], "initializationEnd": [116], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putFloat(String,float)", "sharedPreferences.Editor.Editor.putFloat(String,float)", "sharedPreferences.Editor.Editor.putFloat(String,float)", "sharedPreferences.Editor.Editor.putFloat(String,float)", "sharedPreferences.Editor.Editor.putFloat(String,float)"], "configurationStart": [122, 162, 231, 302, 348], "configurationEnd": [156, 225, 296, 342, 382], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 388, "focalAPIEnd": 398, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void saveMapCameraPosition(CameraPosition pos) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putFloat(\"CameraZoom\", pos.zoom);\n    e.putFloat(\"CameraTargetLatitude\", (float) pos.target.latitude);\n    e.putFloat(\"CameraTargetLongitude\", (float) pos.target.longitude);\n    e.putFloat(\"CameraBearing\", pos.bearing);\n    e.putFloat(\"CameraTilt\", pos.tilt);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7407, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [504], "initializationEnd": [516], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [524], "configurationEnd": [587], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 595, "focalAPIEnd": 615, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mitchtech/android-context/tree/master/src/edu/fsu/cs/contextprovider/ContextExpandableListActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    PreferenceManager.setDefaultValues(\n        this, ContextConstants.CONTEXT_PREFS, MODE_WORLD_READABLE, R.xml.prefs, false);\n    prefs = getSharedPreferences(ContextConstants.CONTEXT_PREFS, MODE_PRIVATE);\n\n    getPrefs();\n\n    if (!prefs.contains(ContextConstants.PREFS_FIRST_RUN)) {\n      Toast.makeText(this, \"First Run\", Toast.LENGTH_LONG).show();\n      SharedPreferences.Editor prefsEditor = prefs.edit();\n      prefsEditor.putBoolean(ContextConstants.PREFS_FIRST_RUN, false);\n      prefsEditor.commit();\n\n      // startup the primary context service (if just installed)\n      startService(new Intent(this, ContextService.class));\n\n      AlarmManager manager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);\n      Intent intent =\n          new Intent(getBaseContext(), edu.fsu.cs.contextprovider.wakeup.WakeupAlarmReceiver.class);\n      PendingIntent pi = PendingIntent.getBroadcast(getBaseContext(), 0, intent, 0);\n      manager.setRepeating(\n          AlarmManager.ELAPSED_REALTIME_WAKEUP,\n          SystemClock.elapsedRealtime() + 10000,\n          accuracyPopupPeriod * 1000,\n          pi);\n    }\n\n    tts = new TextToSpeech(this, this);\n\n    running = true;\n\n    if (clip == null) {\n      clip = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);\n    }\n\n    /* Start ContextProviderService */\n    bindService(new Intent(this, ContextProviderService.class), conn, Context.BIND_AUTO_CREATE);\n\n    if (locationEnabled) {\n      refreshLocation();\n    }\n\n    if (movementEnabled) {\n      refreshMovement();\n    }\n\n    if (weatherEnabled) {\n      refreshWeather();\n    }\n\n    if (systemEnabled) {\n      refreshSystem();\n    }\n\n    if (socialEnabled) {\n      refreshSocial();\n    }\n    if (derivedEnabled) {\n      refreshDerived();\n    }\n\n    mAdapter =\n        new SimpleExpandableListAdapter(\n            this,\n            groupData,\n            android.R.layout.simple_expandable_list_item_1,\n            new String[] {NAME, VALUE},\n            new int[] {android.R.id.text1, android.R.id.text2},\n            childData,\n            android.R.layout.simple_expandable_list_item_2,\n            new String[] {NAME, VALUE},\n            new int[] {android.R.id.text1, android.R.id.text2});\n\n    setListAdapter(mAdapter);\n\n    Handler handler = new Handler();\n    handler.postDelayed(\n        new Runnable() {\n          public void run() {\n            refresh();\n          }\n        },\n        1000);\n  }\n"}, {"dataset": "commit", "exampleID": 7408, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 324, "focalAPIEnd": 339, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/packages-apps-Music/tree/master/src/com/android/music/SharedPreferencesCompat.java", "rawCode": "  public static void apply(SharedPreferences.Editor editor) {\n    if (sApplyMethod != null) {\n      try {\n        sApplyMethod.invoke(editor);\n        return;\n      } catch (InvocationTargetException unused) {\n        // fall through\n      } catch (IllegalAccessException unused) {\n        // fall through\n      }\n    }\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7409, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [94], "initializationEnd": [118], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.clear()"], "configurationStart": [124], "configurationEnd": [149], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 155, "focalAPIEnd": 181, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ajhalbleib/aicg/tree/master/appinventor/components/src/com/google/appinventor/components/runtime/TinyDB.java", "rawCode": "  @Override\n  public void onDelete() {\n    final SharedPreferences.Editor sharedPrefsEditor = sharedPreferences.edit();\n    sharedPrefsEditor.clear();\n    sharedPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7410, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [100, 264, 436, 602], "configurationEnd": [258, 430, 596, 764], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 770, "focalAPIEnd": 793, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/data/preferences/ManagerPreferences.java", "rawCode": "  public void setIconDownloadPermissions(ViewIconDownloadPermissions iconDownloadPermissions) {\n    setPreferences.putBoolean(\n        EnumPreferences.DOWNLOAD_ICONS_.name() + EnumIconDownloadsPermission.WIFI.name(),\n        iconDownloadPermissions.isWiFi());\n    setPreferences.putBoolean(\n        EnumPreferences.DOWNLOAD_ICONS_.name() + EnumIconDownloadsPermission.ETHERNET.name(),\n        iconDownloadPermissions.isEthernet());\n    setPreferences.putBoolean(\n        EnumPreferences.DOWNLOAD_ICONS_.name() + EnumIconDownloadsPermission.WIMAX.name(),\n        iconDownloadPermissions.isWiMax());\n    setPreferences.putBoolean(\n        EnumPreferences.DOWNLOAD_ICONS_.name() + EnumIconDownloadsPermission.MOBILE.name(),\n        iconDownloadPermissions.isMobile());\n    setPreferences.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7411, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [130], "initializationEnd": [148], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [470, 666], "configurationEnd": [515, 745], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 757, "focalAPIEnd": 777, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rfaisal/personal/tree/master/__before_june_19_2013/src/com/loopj/android/http/PersistentCookieStore.java", "rawCode": "  @Override\n  public boolean clearExpired(Date date) {\n    boolean clearedAny = false;\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n\n    for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {\n      String name = entry.getKey();\n      Cookie cookie = entry.getValue();\n      if (cookie.isExpired(date)) {\n        // Clear cookies from local store\n        cookies.remove(name);\n\n        // Clear cookies from persistent store\n        prefsWriter.remove(COOKIE_NAME_PREFIX + name);\n\n        // We've cleared at least one\n        clearedAny = true;\n      }\n    }\n\n    // Update names in persistent store\n    if (clearedAny) {\n      prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(\",\", cookies.keySet()));\n    }\n    prefsWriter.commit();\n\n    return clearedAny;\n  }\n"}, {"dataset": "commit", "exampleID": 7412, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [204, 313, 420, 529], "configurationEnd": [271, 379, 485, 597], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 656, "focalAPIEnd": 683, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sorinescu/cashlens/tree/master/src/com/udesign/cashlens/AppSettings.java", "rawCode": "  /** @param filterViewsOrder the filterViewsOrder to set */\n  public void setExpenseFilterViewEnabled(ExpenseFilterType filterType, boolean enabled) {\n    switch (filterType) {\n      case MONTH:\n        mSharedPrefsEditor.putBoolean(\"expenseFilterMonthEnabled\", enabled);\n        break;\n      case WEEK:\n        mSharedPrefsEditor.putBoolean(\"expenseFilterWeekEnabled\", enabled);\n        break;\n      case DAY:\n        mSharedPrefsEditor.putBoolean(\"expenseFilterDayEnabled\", enabled);\n        break;\n      case CUSTOM:\n        mSharedPrefsEditor.putBoolean(\"expenseFilterCustomEnabled\", enabled);\n        break;\n      default:\n        return;\n    }\n\n    mSharedPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7413, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 51, "focalAPIEnd": 66, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/trajano/GasPrices/tree/master/src/main/java/net/trajano/gasprices/PreferenceAdaptorEditor.java", "rawCode": "  @Override\n  public boolean commit() {\n    return editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7414, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [86], "configurationEnd": [160], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 166, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MentoSchool/skincare/tree/master/Collage_SkinCare/src/com/collage/skincare/fragment/FragMain.java", "rawCode": "  @Override\n  public void onPause() {\n    // Save the current setting for updates\n    mEditor.putBoolean(LocationUtils.KEY_UPDATES_REQUESTED, mUpdatesRequested);\n    mEditor.commit();\n\n    super.onPause();\n  }\n"}, {"dataset": "commit", "exampleID": 7415, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [207], "initializationEnd": [219], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [225], "configurationEnd": [270], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 276, "focalAPIEnd": 287, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/turbo-lover/tagil/tree/master/NewsTagil/src/main/java/ru/news/tagil/utility/myPreferencesWorker.java", "rawCode": "  public void set_typeface(String tf) {\n    ContextWrapper cw = new ContextWrapper(context);\n    sPref = cw.getSharedPreferences(preference_location, Context.MODE_PRIVATE);\n    SharedPreferences.Editor ed = sPref.edit();\n    ed.putString(preference_current_typeface, tf);\n    ed.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7416, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor()"], "initializationStart": [99], "initializationEnd": [110], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [116], "configurationEnd": [149], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 155, "focalAPIEnd": 170, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rjmarsan/PlasmaSound/tree/master/src/amir/android/icebreaking/SeekBarPreference.java", "rawCode": "  private void updatePreference(final int newValue) {\n\n    final SharedPreferences.Editor editor = getEditor();\n    editor.putInt(getKey(), newValue);\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7417, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [99], "initializationEnd": [124], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [130, 189], "configurationEnd": [171, 338], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 392, "focalAPIEnd": 402, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void saveRegistrationId(String regId, Context context) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putString(\"GCM_REGISTRATION_ID\", regId);\n    try {\n      e.putInt(\n          \"LAST_GCM_REGISTERED_APP_VERSION\",\n          context.getPackageManager().getPackageInfo(context.getPackageName(), 0).versionCode);\n    } catch (NameNotFoundException e1) {\n\n    }\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7418, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [138, 198, 262, 328], "configurationEnd": [190, 254, 320, 383], "guardCondition": "sharedPreferences.Editor!=null", "guardType": "IF {", "guardExpressionStart": 34, "guardExpressionEnd": 59, "guardBlockStart": 34, "guardBlockEnd": 419, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 391, "focalAPIEnd": 412, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wallander/AndroidTD/tree/master/replicaisland-read-only/src/com/replica/replicaisland/AndouKun.java", "rawCode": "  protected void saveGame() {\n    if (mPrefsEditor != null) {\n      final int completed = LevelTree.packCompletedLevels(mLevelRow);\n      mPrefsEditor.putInt(PREFERENCE_LEVEL_ROW, mLevelRow);\n      mPrefsEditor.putInt(PREFERENCE_LEVEL_INDEX, mLevelIndex);\n      mPrefsEditor.putInt(PREFERENCE_LEVEL_COMPLETED, completed);\n      mPrefsEditor.putLong(PREFERENCE_SESSION_ID, mSessionId);\n      mPrefsEditor.commit();\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7419, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [944], "initializationEnd": [968], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["e(String,String,SharedPreferences.Editor)"], "tryExpressionStart": 504, "tryExpressionEnd": 508, "tryBlockStart": 504, "tryBlockEnd": 1383, "catchExpressionStart": 1204, "catchExpressionEnd": 1224, "catchBlockStart": 1204, "catchBlockEnd": 1295, "exceptionHandlingCallStart": [1234], "exceptionHandlingCallEnd": [1286], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [1110], "configurationEnd": [1134], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 1162, "focalAPIEnd": 1172, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["e(String,String,sharedPreferences.Editor)"], "useStart": [1234], "useEnd": [1286], "hasFinally": 1, "cleanUpCall": ["Cursor.close()"], "finallyExpressionStart": 1296, "finallyExpressionEnd": 1304, "finallyBlockStart": 1296, "finallyBlockEnd": 1383, "cleanUpCallStart": [1329], "cleanUpCallEnd": [1338], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/media/java/android/mtp/MtpDatabase.java", "rawCode": "  private void initDeviceProperties(Context context) {\n    final String devicePropertiesName = \"device-properties\";\n    mDeviceProperties = context.getSharedPreferences(devicePropertiesName, Context.MODE_PRIVATE);\n    File databaseFile = context.getDatabasePath(devicePropertiesName);\n\n    if (databaseFile.exists()) {\n      // for backward compatibility - read device properties from sqlite database\n      // and migrate them to shared prefs\n      SQLiteDatabase db = null;\n      Cursor c = null;\n      try {\n        db = context.openOrCreateDatabase(\"device-properties\", Context.MODE_PRIVATE, null);\n        if (db != null) {\n          c =\n              db.query(\n                  \"properties\",\n                  new String[] {\"_id\", \"code\", \"value\"},\n                  null,\n                  null,\n                  null,\n                  null,\n                  null);\n          if (c != null) {\n            SharedPreferences.Editor e = mDeviceProperties.edit();\n            while (c.moveToNext()) {\n              String name = c.getString(1);\n              String value = c.getString(2);\n              e.putString(name, value);\n            }\n            e.commit();\n          }\n        }\n      } catch (Exception e) {\n        Log.e(TAG, \"failed to migrate device properties\", e);\n      } finally {\n        if (c != null) c.close();\n        if (db != null) db.close();\n      }\n      databaseFile.delete();\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7420, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [86], "configurationEnd": [160], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 166, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MentoSchool/skincare/tree/master/Collage_GoddessOfSkin-prototype/src/com/collage/goddessofskin/prototype/fragment/FragMain.java", "rawCode": "  @Override\n  public void onPause() {\n    // Save the current setting for updates\n    mEditor.putBoolean(LocationUtils.KEY_UPDATES_REQUESTED, mUpdatesRequested);\n    mEditor.commit();\n\n    super.onPause();\n  }\n"}, {"dataset": "commit", "exampleID": 7421, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [287], "initializationEnd": [299], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [307, 344], "configurationEnd": [336, 378], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 386, "focalAPIEnd": 397, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/scottferg/android-desktop-clock/tree/master/src/com/android/deskclock/Alarms.java", "rawCode": "  static void saveSnoozeAlert(final Context context, final int id, final long time) {\n    SharedPreferences prefs = context.getSharedPreferences(AlarmClock.PREFERENCES, 0);\n    if (id == -1) {\n      clearSnoozePreference(context, prefs);\n    } else {\n      SharedPreferences.Editor ed = prefs.edit();\n      ed.putInt(PREF_SNOOZE_ID, id);\n      ed.putLong(PREF_SNOOZE_TIME, time);\n      ed.commit();\n    }\n    // Set the next alert after updating the snooze.\n    setNextAlert(context);\n  }\n"}, {"dataset": "commit", "exampleID": 7422, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [270, 335], "configurationEnd": [329, 400], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 406, "focalAPIEnd": 421, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blechd0se/android_packages_apps_AeroControl/tree/master/AeroControl/library/discreetapprate/src/fr/nicolaspomepuy/discreetapprate/AppRate.java", "rawCode": "  private boolean incrementViews() {\n\n    if (System.currentTimeMillis() - settings.getLong(KEY_LAST_COUNT_UPDATE, 0L)\n        < minimumInterval * 1000) {\n      if (debug) LogD(\"Count not incremented due to minimum interval not reached\");\n      return false;\n    }\n\n    editor.putInt(KEY_COUNT, settings.getInt(KEY_COUNT, 0) + 1);\n    editor.putLong(KEY_LAST_COUNT_UPDATE, System.currentTimeMillis());\n    editor.commit();\n    return true;\n  }\n"}, {"dataset": "commit", "exampleID": 7423, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [93], "initializationEnd": [118], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [124], "configurationEnd": [173], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 179, "focalAPIEnd": 189, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setApplicationPurchased(boolean purchaseth) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putBoolean(\"APPLICATION_PURCHASED\", purchaseth);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7424, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [555], "initializationEnd": [563], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [633, 672], "configurationEnd": [666, 715], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 893, "focalAPIEnd": 903, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/Spinner/src/com/android/example/spinner/SpinnerActivity.java", "rawCode": "  /**\n   * Write the application's current state to a properties repository.\n   *\n   * @param c - The Activity's Context\n   */\n  public boolean writeInstanceState(Context c) {\n\n    /*\n     * Get the SharedPreferences object for this application\n     */\n\n    SharedPreferences p =\n        c.getSharedPreferences(SpinnerActivity.PREFERENCES_FILE, MODE_WORLD_READABLE);\n\n    /*\n     * Get the editor for this object. The editor interface abstracts the implementation of\n     * updating the SharedPreferences object.\n     */\n\n    SharedPreferences.Editor e = p.edit();\n\n    /*\n     * Write the keys and values to the Editor\n     */\n\n    e.putInt(POSITION_KEY, this.mPos);\n    e.putString(SELECTION_KEY, this.mSelection);\n\n    /*\n     * Commit the changes. Return the result of the commit. The commit fails if Android\n     * failed to commit the changes to persistent storage.\n     */\n\n    return (e.commit());\n  }\n"}, {"dataset": "commit", "exampleID": 7425, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [109], "initializationEnd": [121], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [267, 303, 388, 437], "configurationEnd": [295, 331, 429, 478], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 559, "focalAPIEnd": 577, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/c-geo/tree/master/src/carnero/cgeo/cgSettings.java", "rawCode": "  public boolean setLogin(String username, String password) {\n    final SharedPreferences.Editor prefsEdit = prefs.edit();\n\n    if (username == null || username.length() == 0 || password == null || password.length() == 0) {\n      // erase username and password\n      prefsEdit.remove(\"username\");\n      prefsEdit.remove(\"password\");\n    } else {\n      // save username and password\n      prefsEdit.putString(\"username\", username);\n      prefsEdit.putString(\"password\", password);\n    }\n\n    this.username = username;\n    this.password = password;\n\n    return prefsEdit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7426, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor()"], "initializationStart": [99], "initializationEnd": [110], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [116], "configurationEnd": [149], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 155, "focalAPIEnd": 170, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rjmarsan/PlasmaSound/tree/master/src/amir/android/icebreaking/SeekBarPreferenceView.java", "rawCode": "  private void updatePreference(final int newValue) {\n\n    final SharedPreferences.Editor editor = getEditor();\n    editor.putInt(getKey(), newValue);\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7427, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [207], "initializationEnd": [219], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [225], "configurationEnd": [267], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 273, "focalAPIEnd": 284, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/turbo-lover/tagil/tree/master/NewsTagil/src/main/java/ru/news/tagil/utility/myPreferencesWorker.java", "rawCode": "  public void set_login(String login) {\n    ContextWrapper cw = new ContextWrapper(context);\n    sPref = cw.getSharedPreferences(preference_location, Context.MODE_PRIVATE);\n    SharedPreferences.Editor ed = sPref.edit();\n    ed.putString(preference_user_login, login);\n    ed.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7428, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [135], "configurationEnd": [207], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 213, "focalAPIEnd": 236, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/data/preferences/ManagerPreferences.java", "rawCode": "  private void setInconsistentRepoIsPrivate(boolean privat) {\n    // AptoideLog.v(this, \"set InconsistentRepoIsPrivate: \"+privat);\n    setPreferences.putBoolean(EnumPreferences.SERVER_PRIVATE.name(), privat);\n    setPreferences.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7429, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [252], "initializationEnd": [261], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [267], "configurationEnd": [329], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 335, "focalAPIEnd": 347, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/piusvelte/wapdroid-pro/tree/master/src/com/piusvelte/wapdroid/WapdroidUI.java", "rawCode": "  @Override\n  public void onResume() {\n    super.onResume();\n    SharedPreferences sp =\n        (SharedPreferences)\n            getSharedPreferences(getString(R.string.key_preferences), WapdroidService.MODE_PRIVATE);\n    SharedPreferences.Editor spe = sp.edit();\n    spe.putBoolean(getString(R.string.key_manual_override), false);\n    spe.commit();\n    if (sp.getBoolean(getString(R.string.key_manageWifi), false))\n      startService(new Intent(this, WapdroidService.class));\n    else {\n      AlertDialog.Builder dialog = new AlertDialog.Builder(this);\n      dialog.setMessage(R.string.service_info);\n      dialog.setNegativeButton(android.R.string.cancel, this);\n      dialog.show();\n    }\n    bindService(new Intent(this, WapdroidService.class), this, BIND_AUTO_CREATE);\n  }\n"}, {"dataset": "commit", "exampleID": 7430, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [72], "initializationEnd": [85], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [92, 153, 223, 273, 319, 376, 423, 478, 535, 597, 666, 730], "configurationEnd": [147, 217, 267, 313, 370, 416, 472, 529, 591, 660, 724, 787], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 794, "focalAPIEnd": 805, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vujazzman/android-vanderbilt-dining/tree/master/src/edu/vanderbilt/vuphone/android/dining/Main.java", "rawCode": "  private void commitUserSettings() {\n    SharedPreferences.Editor ed = mprefs.edit();\n\n    ed.putBoolean(PREF_SETTINGS_MODIFIED, settingsModified);\n    ed.putBoolean(PREF_SORT_SETTINGS_MODIFIED, sortSettingsModified);\n    ed.putBoolean(PREF_FAVORITE, checkedSort[0]);\n    ed.putBoolean(PREF_OPEN, checkedSort[1]);\n    ed.putBoolean(PREF_TIME_TILL_CLOSE, checkedSort[2]);\n    ed.putBoolean(PREF_NEAR, checkedSort[3]);\n\n    ed.putBoolean(PREF_FAV_ICON, ra.getShowFavIcon());\n    ed.putBoolean(PREF_GRAY_CLOSED, ra.getGrayClosed());\n    ed.putBoolean(PREF_SHOW_DISTANCE, ra.getShowDistances());\n    ed.putBoolean(PREF_SHOW_PLACE_TYPE, ra.getShowRestaurantType());\n    ed.putBoolean(PREF_HIDE_OFF_CAMPUS, ra.getHideOffCampus());\n    ed.putBoolean(PREF_HIDE_OFF_CARD, ra.getHideOffTheCard());\n\n    ed.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7431, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [719], "initializationEnd": [730], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [740], "configurationEnd": [789], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 799, "focalAPIEnd": 810, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/onyx-intl/orion-viewer/tree/master/orion-viewer/src/universe/constellation/orion/viewer/prefs/OrionTapActivity.java", "rawCode": "  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    if (resultCode == Activity.RESULT_OK) {\n      if (active_view != null) {\n        TextView view =\n            (TextView) active_view.findViewById(isLong ? R.id.longClick : R.id.shortClick);\n        int code = data.getIntExtra(\"code\", 0);\n        Action action = Action.getAction(code);\n        myCode[index][isLong ? 1 : 0] = action.getCode();\n        view.setText(getResources().getString(action.getName()));\n\n        int i = index / 3;\n        int j = index % 3;\n        Common.d(index + \" \" + i + \" \" + j);\n        SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);\n        SharedPreferences.Editor ed = pref.edit();\n        ed.putInt(getKey(i, j, isLong), action.getCode());\n        ed.commit();\n      }\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7432, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [425], "configurationEnd": [481], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 487, "focalAPIEnd": 508, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lrq3000/hexiano/tree/master/Hexiano/src/opensource/hexiano/Prefer.java", "rawCode": "  public static boolean saveMultiInstrumentsMapping(\n      SharedPreferences.Editor mPrefsEditor, String[] mapping) {\n    // Concatenate all entries in this mapping into a string\n    String miConf = android.text.TextUtils.join(multiInstrumentsSeparator, mapping);\n\n    // Remove null/empty entries (because join will not skip a null/empty string)\n    miConf = cleanConfRegexp(miConf);\n\n    // Save the new mapping config\n    mPrefsEditor.putString(\"multiInstrumentsConfig\", miConf);\n    mPrefsEditor.commit();\n\n    return true;\n  }\n"}, {"dataset": "commit", "exampleID": 7433, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [55], "configurationEnd": [129], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 135, "focalAPIEnd": 158, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/data/preferences/ManagerPreferences.java", "rawCode": "  private void setAptoideClientUUID(String uuid) {\n    setPreferences.putString(EnumPreferences.APTOIDE_CLIENT_UUID.name(), uuid);\n    setPreferences.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7434, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [182], "initializationEnd": [200], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.remove(String)"], "configurationStart": [251, 308], "configurationEnd": [296, 345], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 351, "focalAPIEnd": 371, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/oyatsukai/openkit-android-beta/tree/master/OpenKitSDK/src/io/openkit/asynchttp/PersistentCookieStore.java", "rawCode": "  @Override\n  public void clear() {\n    // Clear cookies from local store\n    cookies.clear();\n\n    // Clear cookies from persistent store\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n    for (String name : cookies.keySet()) {\n      prefsWriter.remove(COOKIE_NAME_PREFIX + name);\n    }\n    prefsWriter.remove(COOKIE_NAME_STORE);\n    prefsWriter.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7435, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [60], "configurationEnd": [112], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 118, "focalAPIEnd": 134, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/Broadband-Usage/tree/master/src/au/id/teda/broadband/usage/helper/NotificationHelper.java", "rawCode": "  private void setPeakQuotaNearNotified(boolean flag) {\n    mEditor.putBoolean(KEY_NOTIFY_PEAK_QUOTA_NEAR, flag);\n    mEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7436, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [861], "configurationEnd": [912], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 920, "focalAPIEnd": 942, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/noradtux/navit-webos/tree/master/navit/navit/android/src/org/navitproject/navit/NavitAddressSearchActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    getWindow()\n        .setFlags(\n            WindowManager.LayoutParams.FLAG_BLUR_BEHIND,\n            WindowManager.LayoutParams.FLAG_BLUR_BEHIND);\n    LinearLayout panel = new LinearLayout(this);\n    panel.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\n    panel.setOrientation(LinearLayout.VERTICAL);\n\n    // address: label and text field\n    SharedPreferences settings = getSharedPreferences(Navit.NAVIT_PREFS, MODE_PRIVATE);\n    mCountry = settings.getString(\"DefaultCountry\", null);\n\n    if (mCountry == null) {\n      Locale defaultLocale = Locale.getDefault();\n      mCountry = defaultLocale.getCountry().toLowerCase(defaultLocale);\n      SharedPreferences.Editor edit_settings = settings.edit();\n      edit_settings.putString(\"DefaultCountry\", mCountry);\n      edit_settings.commit();\n    }\n\n    mCountryButton = new ImageButton(this);\n\n    mCountryButton.setImageResource(getDrawableID(\"country_\" + mCountry + \"_32_32\"));\n\n    mCountryButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            requestCountryDialog();\n          }\n        });\n\n    // address: label and text field\n    TextView addr_view = new TextView(this);\n    addr_view.setText(Navit.get_text(\"Enter Destination\")); // TRANS\n    addr_view.setTextSize(TypedValue.COMPLEX_UNIT_SP, 20f);\n    addr_view.setLayoutParams(\n        new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\n    addr_view.setPadding(4, 4, 4, 4);\n\n    // partial match checkbox\n    pm_checkbox = new CheckBox(this);\n    pm_checkbox.setText(Navit.get_text(\"partial match\")); // TRANS\n    pm_checkbox.setChecked(false);\n    pm_checkbox.setGravity(Gravity.CENTER);\n\n    // search button\n    final Button btnSearch = new Button(this);\n    btnSearch.setText(Navit.get_text(\"Search\")); // TRANS\n    btnSearch.setLayoutParams(\n        new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n    btnSearch.setGravity(Gravity.CENTER);\n    btnSearch.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            executeDone();\n          }\n        });\n\n    ListView lastAddresses = new ListView(this);\n    NavitAppConfig navitConfig = (NavitAppConfig) getApplicationContext();\n\n    final List<Navit.NavitAddress> addresses = navitConfig.getLastAddresses();\n    int addressCount = addresses.size();\n    if (addressCount > 0) {\n      String[] strAddresses = new String[addressCount];\n      for (int addrIndex = 0; addrIndex < addressCount; addrIndex++) {\n        strAddresses[addrIndex] = addresses.get(addrIndex).addr;\n      }\n      ArrayAdapter<String> addressList =\n          new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, strAddresses);\n      lastAddresses.setAdapter(addressList);\n      lastAddresses.setOnItemClickListener(\n          new OnItemClickListener() {\n            public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n              Intent resultIntent = new Intent();\n              resultIntent.putExtra(\"addr_selected\", true);\n\n              Navit.NavitAddressResultList_foundItems.clear();\n              Navit.NavitAddressResultList_foundItems.add(addresses.get(arg2));\n\n              setResult(Activity.RESULT_OK, resultIntent);\n              finish();\n            }\n          });\n    }\n\n    Bundle extras = getIntent().getExtras();\n    if (extras != null) {\n      String title = extras.getString(\"title\");\n      Boolean partial = extras.getBoolean(\"partial_match\");\n      String address = extras.getString(\"address_string\");\n\n      if (title != null && title.length() > 0) this.setTitle(title);\n\n      pm_checkbox.setChecked(partial);\n\n      address_string = new EditText(this);\n      if (address != null) address_string.setText(address);\n    }\n\n    LinearLayout searchSettingsLayout = new LinearLayout(this);\n    searchSettingsLayout.setOrientation(LinearLayout.HORIZONTAL);\n\n    searchSettingsLayout.addView(mCountryButton);\n    searchSettingsLayout.addView(pm_checkbox);\n    panel.addView(addr_view);\n    panel.addView(address_string);\n    panel.addView(searchSettingsLayout);\n    panel.addView(btnSearch);\n    panel.addView(lastAddresses);\n\n    setContentView(panel);\n  }\n"}, {"dataset": "commit", "exampleID": 7437, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor()"], "initializationStart": [245], "initializationEnd": [256], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [262, 308], "configurationEnd": [302, 348], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 354, "focalAPIEnd": 369, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bieridee/bieridee-front/tree/master/application/src/main/java/ch/hsr/bieridee/android/config/Auth.java", "rawCode": "  /**\n   * Saves user data to the shared settings.\n   *\n   * @param username Username string\n   * @param password Password string\n   */\n  public static void setAuth(String username, String password) {\n    final SharedPreferences.Editor editor = getEditor();\n    editor.putString(USERNAME_KEY, username);\n    editor.putString(PASSWORD_KEY, password);\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7438, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [197], "initializationEnd": [209], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [215], "configurationEnd": [261], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 267, "focalAPIEnd": 285, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cnaut/considerateapp/tree/master/considerateapp-frontend/src/com/pinokia/considerateapp/FlipService.java", "rawCode": "  private static void writePreference(boolean pref, Context c) {\n    SharedPreferences prefs = c.getSharedPreferences(ConsiderateAppActivity.prefsName, 0);\n    SharedPreferences.Editor prefsEdit = prefs.edit();\n    prefsEdit.putBoolean(\"considerate_mode\", pref);\n    prefsEdit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7439, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [49], "configurationEnd": [87], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 93, "focalAPIEnd": 110, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/iiNet-Usage/tree/master/iiNet Usage Phone/src/au/id/teda/iinetusage/phone/helper/UserPassHelper.java", "rawCode": "  public void setPassword(String password) {\n    myEditor.putString(PASSWORD, password);\n    myEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7440, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [53, 114, 178, 247, 326], "configurationEnd": [108, 172, 241, 320, 387], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 393, "focalAPIEnd": 408, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arpia49/Swarn/tree/master/src/com/arpia49/Registro.java", "rawCode": "  public static void guardarSonido(Sonido val) {\n    editor.putInt(\"numeroSonidos\", ListaSonidos.size() + 1);\n    editor.putInt(\"sonidoClave\" + val.getId(), val.getClave());\n    editor.putString(\"sonidoNombre\" + val.getId(), val.getNombre());\n    editor.putString(\"sonidoDescripcion\" + val.getId(), val.getDescripcion());\n    editor.putString(\"sonidoDatos\" + val.getId(), val.getDatos());\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7441, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [295], "initializationEnd": [307], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [315, 352], "configurationEnd": [344, 386], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 394, "focalAPIEnd": 405, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/minstrelsy/servestream/tree/master/src/net/sourceforge/servestream/alarm/Alarms.java", "rawCode": "  static void saveSnoozeAlert(final Context context, final int id, final long time) {\n    SharedPreferences prefs = context.getSharedPreferences(AlarmClockActivity.PREFERENCES, 0);\n    if (id == -1) {\n      clearSnoozePreference(context, prefs);\n    } else {\n      SharedPreferences.Editor ed = prefs.edit();\n      ed.putInt(PREF_SNOOZE_ID, id);\n      ed.putLong(PREF_SNOOZE_TIME, time);\n      ed.commit();\n    }\n    // Set the next alert after updating the snooze.\n    setNextAlert(context);\n  }\n"}, {"dataset": "commit", "exampleID": 7442, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [87], "initializationEnd": [112], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putFloat(String,float)", "sharedPreferences.Editor.Editor.putFloat(String,float)"], "configurationStart": [118, 160], "configurationEnd": [154, 196], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 202, "focalAPIEnd": 212, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setCurrentDownPoint(float x, float y) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putFloat(\"FORECAST_MAP_DOWN_X\", x);\n    e.putFloat(\"FORECAST_MAP_DOWN_Y\", y);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7443, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 66, "focalAPIEnd": 81, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/DiUS/resilience-android/tree/master/resilience-app/src/main/java/au/com/dius/resilience/persistence/repository/impl/PreferenceAdapter.java", "rawCode": "  private void closeEditor(SharedPreferences.Editor editor) {\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7444, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [109], "initializationEnd": [121], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [267, 303, 388, 437], "configurationEnd": [295, 331, 429, 478], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 559, "focalAPIEnd": 577, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/cgeo-original/tree/master/src/carnero/cgeo/original/libs/Settings.java", "rawCode": "  public boolean setLogin(String username, String password) {\n    final SharedPreferences.Editor prefsEdit = prefs.edit();\n\n    if (username == null || username.length() == 0 || password == null || password.length() == 0) {\n      // erase username and password\n      prefsEdit.remove(\"username\");\n      prefsEdit.remove(\"password\");\n    } else {\n      // save username and password\n      prefsEdit.putString(\"username\", username);\n      prefsEdit.putString(\"password\", password);\n    }\n\n    this.username = username;\n    this.password = password;\n\n    return prefsEdit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7445, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [63], "configurationEnd": [118], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 124, "focalAPIEnd": 140, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/Broadband-Usage/tree/master/src/au/id/teda/broadband/usage/helper/NotificationHelper.java", "rawCode": "  private void setOffpeakQuotaNearNotified(boolean flag) {\n    mEditor.putBoolean(KEY_NOTIFY_OFFPEAK_QUOTA_NEAR, flag);\n    mEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7446, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = edit()"], "initializationStart": [463], "initializationEnd": [487], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [2902, 3391], "configurationEnd": [2938, 3427], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 3486, "focalAPIEnd": 3506, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chenatu/ccnx-underlay/tree/master/android/CCNx-Android-Services/src/org/ccnx/android/services/repo/RepoService.java", "rawCode": "  protected void onStartService(Intent intent) {\n    Log.d(TAG, \"onStartService - Starting\");\n    boolean isPrefSet = false;\n\n    // Get all the CCND options from the intent\n    // If no option is found on intent, look in System properties\n    // If no system property is set, fallback to preferences\n    // And while settings OPTIONS, set preferences\n    // We will only attempt a recovery if we are running REPO 2.0.0\n    SharedPreferences.Editor prefsEditor = mCCNxServicePrefs.edit();\n\n    if (intent != null) {\n      if (Pattern.matches(\"1\\\\.0\\\\.0\", repo_version)) {\n        try {\n          Properties props = new Properties();\n          byte[] opts = intent.getByteArrayExtra(\"vm_options\");\n          if (null != opts) {\n            ByteArrayInputStream bais = new ByteArrayInputStream(opts);\n            props.loadFromXML(bais);\n\n            System.getProperties().putAll(props);\n          }\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n\n        Log.d(TAG, \"CCN_DIR = \" + UserConfiguration.userConfigurationDirectory());\n        Log.d(TAG, \"DEF_ALIS = \" + UserConfiguration.defaultKeyAlias());\n        Log.d(TAG, \"KEY_DIR = \" + UserConfiguration.keyRepositoryDirectory());\n        Log.d(TAG, \"KEY_FILE = \" + UserConfiguration.keystoreFileName());\n        Log.d(TAG, \"USER_NAME = \" + UserConfiguration.userName());\n\n        if (intent.hasExtra(REPO_OPTIONS.REPO_DIRECTORY.name())) {\n          repo_dir = intent.getStringExtra(REPO_OPTIONS.REPO_DIRECTORY.name());\n        }\n\n        if (intent.hasExtra(REPO_OPTIONS.REPO_DEBUG.name())) {\n          repo_debug = intent.getStringExtra(REPO_OPTIONS.REPO_DEBUG.name());\n        } else {\n          repo_debug = DEFAULT_REPO_DEBUG;\n        }\n\n        if (intent.hasExtra(REPO_OPTIONS.REPO_LOCAL.name())) {\n          repo_local_name = intent.getStringExtra(REPO_OPTIONS.REPO_LOCAL.name());\n        } else {\n          repo_local_name = DEFAULT_REPO_LOCAL_NAME;\n        }\n\n        if (intent.hasExtra(REPO_OPTIONS.REPO_GLOBAL.name())) {\n          repo_global_name = intent.getStringExtra(REPO_OPTIONS.REPO_GLOBAL.name());\n        } else {\n          repo_global_name = DEFAULT_REPO_GLOBAL_NAME;\n        }\n\n        if (intent.hasExtra(REPO_OPTIONS.REPO_NAMESPACE.name())) {\n          repo_namespace = intent.getStringExtra(REPO_OPTIONS.REPO_NAMESPACE.name());\n        } else {\n          repo_namespace = DEFAULT_REPO_NAMESPACE;\n        }\n      } else if (Pattern.matches(\"2\\\\.0\\\\.0\", repo_version)) {\n        for (CCNR_OPTIONS opt : CCNR_OPTIONS.values()) {\n          if (!intent.hasExtra(opt.name())) {\n            continue;\n          }\n          String s = intent.getStringExtra(opt.name());\n          if (null == s) s = System.getProperty(opt.name());\n          Log.d(TAG, \"setting option \" + opt.name() + \" = \" + s);\n          if (s != null) {\n            options.put(opt.name(), s);\n            isPrefSet = true;\n            prefsEditor.putString(opt.name(), s);\n          }\n        }\n        for (CCNS_OPTIONS opt : CCNS_OPTIONS.values()) {\n          if (!intent.hasExtra(opt.name())) {\n            continue;\n          }\n          String s = intent.getStringExtra(opt.name());\n          if (null == s) s = System.getProperty(opt.name());\n          Log.d(TAG, \"setting option \" + opt.name() + \" = \" + s);\n          if (s != null) {\n            options.put(opt.name(), s);\n            isPrefSet = true;\n            prefsEditor.putString(opt.name(), s);\n          }\n        }\n        if (isPrefSet) {\n          prefsEditor.commit();\n        }\n      } else {\n        Log.d(TAG, \"Unknown Repo version \" + repo_version + \" specified, failed to start Repo.\");\n        setStatus(SERVICE_STATUS.SERVICE_ERROR);\n      }\n    } else {\n      // We must load options from prefs\n      options = new HashMap<String, String>((HashMap<String, String>) mCCNxServicePrefs.getAll());\n    }\n    Load();\n  }\n"}, {"dataset": "commit", "exampleID": 7447, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [363], "initializationEnd": [381], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [391, 467, 535, 602, 672], "configurationEnd": [457, 525, 592, 662, 736], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 784, "focalAPIEnd": 810, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tinrap/SiQuoia/tree/master/src/com/sjsu/siquoia/SiQuoiaHomeActivity.java", "rawCode": "  @Override\n  public boolean onOptionsItemSelected(MenuItem item) {\n    Intent intent;\n    switch (item.getItemId()) {\n        // user wants to log out\n      case R.id.action_logout:\n        // update user info\n        SharedPreferences preferences = getSharedPreferences(SiQuoiaHomeActivity.SIQUOIA_PREF, 0);\n        SharedPreferences.Editor perferenceUpdater = preferences.edit();\n        perferenceUpdater.putBoolean(SiQuoiaHomeActivity.LOGGED_IN, false);\n        perferenceUpdater.putString(SiQuoiaHomeActivity.EMAIL, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.QUIZ, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.ANSWERS, \"\");\n        perferenceUpdater.putString(SiQuoiaHomeActivity.PACKET_TYPE, \"\");\n\n        // commit preference changes\n        perferenceUpdater.commit();\n\n        // finish this activity and take user to login screen\n        intent = new Intent();\n        intent.setClass(SiQuoiaHomeActivity.this, SiQuoiaLoginActivity.class);\n        startActivity(intent);\n        finish();\n        break;\n\n        // user is redeeming a code\n      case R.id.action_redeem:\n        showRedeemCodeAlert();\n        break;\n\n      case R.id.action_user_profile:\n        intent = new Intent();\n        intent.putExtra(USER, user);\n        intent.setClass(SiQuoiaHomeActivity.this, UserProfileActivity.class);\n        startActivity(intent);\n        break;\n\n      default:\n        break;\n    }\n    return false;\n  }\n"}, {"dataset": "commit", "exampleID": 7448, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [126, 243], "configurationEnd": [186, 302], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 315, "focalAPIEnd": 336, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lrq3000/hexiano/tree/master/Hexiano/src/opensource/hexiano/Prefer.java", "rawCode": "  public static boolean saveArray(\n      SharedPreferences.Editor mPrefsEditor, String arrayName, String[] arrayValues) {\n    mPrefsEditor.putInt(arrayName + \"_size\", arrayValues.length);\n    for (int i = 0; i < arrayValues.length; i++)\n      mPrefsEditor.putString(arrayName + \"_\" + i, arrayValues[i]);\n    return mPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7449, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [80], "configurationEnd": [152], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 160, "focalAPIEnd": 176, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/remain/topick/tree/master/client/Topick/src/com/kosenventure/sansan/topick/WebViewActivity.java", "rawCode": "    public void sendFacebookAccessToken(String token) {\n      log(token);\n      mEditor.putString(getStr(R.string.facebook_access_token_set_key), token);\n      mEditor.commit();\n      Intent intent = new Intent();\n      intent.putExtra(\"name\", \"Facebook\");\n      setResult(RESULT_OK, intent);\n      finish();\n    }\n"}, {"dataset": "commit", "exampleID": 7450, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [3023], "configurationEnd": [3069], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 3077, "focalAPIEnd": 3097, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ESOS-Lab/Mobibench/tree/master/MobiBench/src/esos/ResultListControl/DialogActivity.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n\n    super.onCreate(savedInstanceState);\n    requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);\n\n    db_prefs = getSharedPreferences(\"Setting\", MODE_PRIVATE);\n\n    pref_editor = db_prefs.edit();\n\n    // window feature for no title - must be set prior to calling setContentView.\n    // requestWindowFeature(Window.FEATURE_NO_TITLE);\n\n    // create a DataGridView instance\n    ViewGroup.LayoutParams params =\n        new ViewGroup.LayoutParams(\n            ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.FILL_PARENT);\n    list = new DataListView(this);\n\n    // create an DataAdapter and a MTable\n    adapter = new IconTextListAdapter(this);\n\n    // add items\n    Resources res = getResources();\n\n    int resID[] = new int[7];\n    resID[0] = R.drawable.icon_sw;\n    resID[1] = R.drawable.icon_sr;\n    resID[2] = R.drawable.icon_rw;\n    resID[3] = R.drawable.icon_rr;\n    resID[4] = R.drawable.icon_insert;\n    resID[5] = R.drawable.icon_update;\n    resID[6] = R.drawable.icon_delete;\n\n    if (ResultDate == null) { // ResultDate가 0인 경우는 새로운 실험을 시작했을 때만.\n      ResultDate = dateFormat.format(calendar.getTime()); // for data base date\n    }\n    db_index = db_prefs.getInt(\"database_index\", 0); // data base indexing\n    clip_text = clip_title = \"\";\n\n    clip_text =\n        \"* \" + Build.MANUFACTURER.toUpperCase() + \" \" + Build.MODEL + \"\\n* \" + ResultDate + \"\\n\\n\";\n    clip_title = dateFormat_file.format(calendar.getTime());\n    ;\n    for (int idx = 0; idx < 7; idx++) {\n      if (bHasResult[idx] != 0) {\n        adapter.addItem(\n            new IconTextItem(\n                res.getDrawable(resID[idx]),\n                ResultCPU_act[idx],\n                ResultCPU_iow[idx],\n                ResultCPU_idl[idx],\n                ResultCS_tot[idx],\n                ResultCS_vol[idx],\n                ResultThrp[idx],\n                ResultExpName[idx]));\n\n        clip_text +=\n            \"- \"\n                + ResultExpName[idx]\n                + \": \"\n                + ResultThrp[idx]\n                + \"\\n\"\n                + \" ▪ CPU: \"\n                + ResultCPU_act[idx]\n                + \",\"\n                + ResultCPU_iow[idx]\n                + \",\"\n                + ResultCPU_idl[idx]\n                + \"\\n\"\n                + \" ▪ CTX_SW: \"\n                + ResultCS_tot[idx]\n                + \"(\"\n                + ResultCS_vol[idx]\n                + \")\\n\\n\";\n        if (check_using_db == 1) {\n          // Log.d(DEBUG_TAG, \"addItem / checkusing is 1 : idx/expname \" + idx + \" \" +\n          // ResultExpName[idx]);\n          db.insert_DB(\n              db_index,\n              ResultDate,\n              ResultType[idx],\n              1,\n              ResultCPU_act[idx],\n              ResultCPU_iow[idx],\n              ResultCPU_idl[idx],\n              ResultCS_tot[idx],\n              ResultCS_vol[idx],\n              ResultThrp[idx],\n              ResultExpName[idx]);\n        }\n      }\n    }\n    if (check_using_db == 1) {\n      db_index++;\n      pref_editor.putInt(\"database_index\", db_index);\n      pref_editor.commit();\n    }\n\n    list.setAdapter(adapter);\n\n    setContentView(list, params);\n\n    getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.custome_title);\n\n    findViewById(R.id.ibtn_share).setOnClickListener(myButtonClick);\n    findViewById(R.id.ibtn_save).setOnClickListener(myButtonClick);\n\n    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n    NetworkInfo ni = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);\n    isWifiAvail = ni.isAvailable();\n    isWifiConn = ni.isConnected();\n    ni = cm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);\n    isMobileAvail = ni.isAvailable();\n    isMobileConn = ni.isConnected();\n\n    if (check_using_db == 1) {\n      if (isWifiConn || isMobileConn) {\n\n        AlertDialog alert =\n            new AlertDialog.Builder(this)\n                .setTitle(\"Send Results\")\n                .setMessage(\n                    \"Submit the performance result to the ranking server for research purposes.\"\n                        + \"\\n\"\n                        + \"(No personally identifiable information is collected.)\")\n                .setCancelable(true)\n                .setPositiveButton(\n                    \"Accept\",\n                    new DialogInterface.OnClickListener() {\n                      public void onClick(DialogInterface dialog, int whichButton) {\n                        u_data = new UpdateData();\n                        String tmp_string[] = new String[7];\n                        for (int k = 0; k < 7; k++) {\n                          if (bHasResult[k] == 1) {\n                            tmp_string[k] = ResultThrp[k];\n                          } else {\n                            tmp_string[k] = \"-1\";\n                          }\n                        }\n                        u_data.HttpPostData(\n                            tmp_string[0],\n                            tmp_string[1],\n                            tmp_string[2],\n                            tmp_string[3],\n                            tmp_string[4],\n                            tmp_string[5],\n                            tmp_string[6],\n                            dev_num,\n                            g_partition.substring(1),\n                            g_thread,\n                            g_file_size_w,\n                            g_file_size_r,\n                            g_io_size,\n                            g_file_mode,\n                            g_transaction_mode,\n                            g_sqlite_mode,\n                            g_sqlite_journal,\n                            StorageOptions.GetFileSystemName(),\n                            g_def);\n                        Log.d(DEBUG_TAG, \"DEFAULT : \" + g_def);\n                        Toast.makeText(\n                                DialogActivity.this, \"send result to server\", Toast.LENGTH_SHORT)\n                            .show();\n                      }\n                    })\n                .setNegativeButton(\n                    \"Decline\",\n                    new DialogInterface.OnClickListener() {\n                      public void onClick(DialogInterface dialog, int whichButton) {}\n                    })\n                .show();\n      }\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7451, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor(android.content.Context)"], "initializationStart": [274], "initializationEnd": [304], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)"], "configurationStart": [417], "configurationEnd": [439], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 451, "focalAPIEnd": 466, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mikegr/android-shuffle/tree/master/client/src/org/dodgybits/shuffle/android/widget/AbstractWidgetProvider.java", "rawCode": "  @Override\n  public void onDeleted(android.content.Context context, int[] appWidgetIds) {\n    Ln.d(\"onDeleted\");\n    // When the user deletes the widget, delete the preference associated with it.\n    final int N = appWidgetIds.length;\n    SharedPreferences.Editor editor = Preferences.getEditor(context);\n    for (int i = 0; i < N; i++) {\n      String prefKey = Preferences.getWidgetQueryKey(appWidgetIds[i]);\n      editor.remove(prefKey);\n    }\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7452, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [148], "initializationEnd": [166], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [172], "configurationEnd": [212], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 218, "focalAPIEnd": 237, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kogeva/Reactr/tree/master/Reactr/src/main/java/com/eyepinch/reactr/MainActivity.java", "rawCode": "  public void removeSessionHash() {\n    preferences = getSharedPreferences(\"reactrPrefer\", MODE_PRIVATE);\n    SharedPreferences.Editor prefEditor = preferences.edit();\n    prefEditor.putString(\"session_hash\", \"\");\n    prefEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7453, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = edit()"], "initializationStart": [149], "initializationEnd": [165], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)"], "configurationStart": [222], "configurationEnd": [260], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 268, "focalAPIEnd": 285, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.commit()"], "useStart": [306, 363], "useEnd": [355, 380], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CHU-TDAP/E-learning-Android/tree/master/src/tw/edu/chu/csie/e_learning/util/SettingUtils.java", "rawCode": "  /**\n   * 設定教材下載網址\n   *\n   * @param setURL 教材下載網址\n   */\n  public void setRemoteMaterialURL(String setURL) {\n    SharedPreferences.Editor prefEdit = this.pref.edit();\n    if (setURL.isEmpty() || setURL.equals(\"\")) {\n      prefEdit.remove(\"remote_material_url\");\n      prefEdit.commit();\n    } else {\n      prefEdit.putString(\"remote_material_url\", setURL);\n      prefEdit.commit();\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7454, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [88], "initializationEnd": [113], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putFloat(String,float)"], "configurationStart": [119], "configurationEnd": [166], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 172, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setMapWebcamMarkerFontSize(float size) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putFloat(\"MAP_WEBCAM_MARKER_FONT_SIZE\", size);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7455, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [113], "initializationEnd": [137], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [176, 226, 290, 367], "configurationEnd": [218, 269, 359, 443], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 455, "focalAPIEnd": 481, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wanddy/ai4cn/tree/master/appinventor/components/src/com/google/appinventor/components/runtime/Twitter.java", "rawCode": "  private void saveAccessToken(AccessToken accessToken) {\n    final SharedPreferences.Editor sharedPrefsEditor = sharedPreferences.edit();\n    if (accessToken == null) {\n      sharedPrefsEditor.remove(ACCESS_TOKEN_TAG);\n      sharedPrefsEditor.remove(ACCESS_SECRET_TAG);\n    } else {\n      sharedPrefsEditor.putString(ACCESS_TOKEN_TAG, accessToken.getToken());\n      sharedPrefsEditor.putString(ACCESS_SECRET_TAG, accessToken.getTokenSecret());\n    }\n    sharedPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7456, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [242], "initializationEnd": [259], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [307, 393, 484, 581], "configurationEnd": [387, 478, 575, 687], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 694, "focalAPIEnd": 712, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jwlawson/Nof1/tree/master/Nof1/src/org/nof1trial/nof1/services/Scheduler.java", "rawCode": "  private void reschedule(int mins) {\n    // Work out when next to set the alarm, set it and save in preferences\n    SharedPreferences schedPrefs = getSharedPreferences(Keys.SCHED_NAME, MODE_PRIVATE);\n    SharedPreferences.Editor schedEdit = schedPrefs.edit();\n\n    // Roll back settings in preferences\n    schedEdit.putInt(Keys.SCHED_NEXT_DAY, schedPrefs.getInt(Keys.SCHED_LAST_DAY, 1));\n    schedEdit.putInt(Keys.SCHED_CUR_PERIOD, schedPrefs.getInt(Keys.SCHED_LAST_PERIOD, 1));\n    schedEdit.putString(Keys.SCHED_NEXT_DATE, schedPrefs.getString(Keys.SCHED_LAST_DATE, null));\n    schedEdit.putInt(\n        Keys.SCHED_NEXT_CUMULATIVE_DAY, schedPrefs.getInt(Keys.SCHED_CUMULATIVE_DAY, 1));\n\n    schedEdit.commit();\n    backup();\n\n    // Get calendar for this time + mins\n    Calendar cal = Calendar.getInstance();\n    cal.add(Calendar.MINUTE, mins);\n\n    // Finally, use the new values to set an alarm\n    Intent intent = new Intent(Scheduler.this, AlarmReceiver.class);\n    intent.putExtra(Keys.INTENT_ALARM, true);\n    setAlarm(intent, cal);\n  }\n"}, {"dataset": "commit", "exampleID": 7457, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [62], "configurationEnd": [117], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 123, "focalAPIEnd": 139, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/Broadband-Usage/tree/master/src/au/id/teda/broadband/usage/helper/NotificationHelper.java", "rawCode": "  private void setEndOfPeriodNearNotified(boolean flag) {\n    mEditor.putBoolean(KEY_NOTIFY_END_OF_PERIOD_NEAR, flag);\n    mEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7458, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [539], "initializationEnd": [551], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [561], "configurationEnd": [595], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 605, "focalAPIEnd": 623, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/cgeo-original/tree/master/src/carnero/cgeo/original/libs/Settings.java", "rawCode": "  public HashMap<String, String> getLogin() {\n    final HashMap<String, String> login = new HashMap<String, String>();\n\n    if (username == null || password == null) {\n      final String preUsername = prefs.getString(\"username\", null);\n      final String prePassword = prefs.getString(\"password\", null);\n\n      if (initialized == 0 && (preUsername == null || prePassword == null)) {\n        Intent initIntent = new Intent(context, init.class);\n        context.startActivity(initIntent);\n\n        final SharedPreferences.Editor prefsEdit = prefs.edit();\n        prefsEdit.putInt(\"initialized\", 1);\n        prefsEdit.commit();\n\n        initialized = 1;\n\n        return null;\n      } else if (initialized == 1 && (preUsername == null || prePassword == null)) {\n        return null;\n      }\n\n      login.put(\"username\", preUsername);\n      login.put(\"password\", prePassword);\n\n      username = preUsername;\n      password = prePassword;\n    } else {\n      login.put(\"username\", username);\n      login.put(\"password\", password);\n    }\n\n    return login;\n  }\n"}, {"dataset": "commit", "exampleID": 7459, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [419], "initializationEnd": [432], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [442], "configurationEnd": [486], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 496, "focalAPIEnd": 512, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/isenseDev/iSENSE-Hardware/tree/master/Android/Canobie_Physics_v2/src/edu/uml/cs/isense/canobiev2/AmusementPark.java", "rawCode": "  @Override\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n\n    if (requestCode == SYNC_TIME_REQUESTED) {\n      if (resultCode == RESULT_OK) {\n        timeOffset = data.getExtras().getLong(\"offset\");\n        SharedPreferences mPrefs = getSharedPreferences(TIME_OFFSET_PREFS_ID, 0);\n        SharedPreferences.Editor mEditor = mPrefs.edit();\n        mEditor.putLong(TIME_OFFSET_KEY, timeOffset);\n        mEditor.commit();\n      }\n    } else if (requestCode == QUEUE_UPLOAD_REQUESTED) {\n      boolean success = uq.buildQueueFromFile();\n      if (!success) {\n        w.make(\"Could not re-build queue from file!\", Waffle.IMAGE_X);\n      }\n    } else if (requestCode == CHOOSE_SENSORS_REQUESTED) {\n      startStop.setEnabled(true);\n      dfm.setEnabledFields(acceptedFields);\n\n    } else if (requestCode == SETUP_REQUESTED) {\n      rideName.setText(\"Ride: \" + rideNameString);\n\n      SharedPreferences mPrefs = getSharedPreferences(Setup.PROJ_PREFS_ID, 0);\n      final SharedPreferences.Editor mEdit = mPrefs.edit();\n      mEdit.putString(Setup.PROJECT_ID, Integer.toString(projectNum));\n      mEdit.commit();\n\n    } else if (requestCode == LOGIN_REQUESTED) {\n\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7460, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [397], "initializationEnd": [415], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [429], "configurationEnd": [464], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 478, "focalAPIEnd": 489, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.commit()"], "useStart": [829, 880], "useEnd": [866, 891], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/shutoff/car-alarm/tree/master/src/main/java/ru/shutoff/caralarm/Preferences.java", "rawCode": "  @Override\n  public void onActivityResult(int requestCode, int resultCode, Intent data) {\n\n    if (resultCode != RESULT_OK) return;\n\n    switch (requestCode) {\n      case GET_ALARM_SOUND:\n        {\n          Uri uri = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);\n          if (uri != null) {\n            alarmUri = uri.toString();\n            SharedPreferences.Editor ed = preferences.edit();\n            ed.putString(Names.ALARM, alarmUri);\n            ed.commit();\n            setAlarmTitle();\n          }\n          break;\n        }\n      case GET_NOTIFY_SOUND:\n        {\n          Uri uri = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);\n          if (uri != null) {\n            notifyUri = uri.toString();\n            SharedPreferences.Editor ed = preferences.edit();\n            ed.putString(Names.NOTIFY, notifyUri);\n            ed.commit();\n            setNotifyTitle();\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7461, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [123], "configurationEnd": [186], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 192, "focalAPIEnd": 219, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sorinescu/cashlens/tree/master/src/com/udesign/cashlens/AppSettings.java", "rawCode": "  /** @param lastUsedCurrency the lastUsedCurrency to set */\n  public void setLastUsedCurrency(int lastUsedCurrency) {\n    mSharedPrefsEditor.putInt(\"lastUsedCurrency\", lastUsedCurrency);\n    mSharedPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7462, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = createMock(*)"], "initializationStart": [230], "initializationEnd": [272], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 498, "focalAPIEnd": 513, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["expect(editor)", "replay(sharedPreferences.Editor)", "verify(sharedPreferences.Editor)"], "useStart": [491, 568, 890], "useEnd": [514, 582, 904], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sng/gb/tree/master/trunk/GeoBeagleTest/test/com/google/code/geobeagle/activity/main/AppLifecycleManagerTest.java", "rawCode": "  @Test\n  public void testOnPause() {\n    LifecycleManager lifecycleManager1 = createMock(LifecycleManager.class);\n    LifecycleManager lifecycleManager2 = createMock(LifecycleManager.class);\n    SharedPreferences.Editor editor = createMock(SharedPreferences.Editor.class);\n    SharedPreferences sharedPreferences = createMock(SharedPreferences.class);\n    lifecycleManager1.onPause(editor);\n    lifecycleManager2.onPause(editor);\n    expect(sharedPreferences.edit()).andReturn(editor);\n    expect(editor.commit()).andReturn(true);\n\n    replay(sharedPreferences);\n    replay(editor);\n    replay(lifecycleManager1);\n    replay(lifecycleManager2);\n    AppLifecycleManager appLifecycleManager =\n        new AppLifecycleManager(\n            sharedPreferences, new LifecycleManager[] {lifecycleManager2, lifecycleManager1});\n    appLifecycleManager.onPause();\n    verify(sharedPreferences);\n    verify(editor);\n    verify(lifecycleManager1);\n    verify(lifecycleManager2);\n  }\n"}, {"dataset": "commit", "exampleID": 7463, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [96], "initializationEnd": [121], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [127], "configurationEnd": [180], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 186, "focalAPIEnd": 196, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setRadarImageTimestamp(long currentTimeMillis) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putLong(\"RADAR_IMAGE_TIMESTAMP\", currentTimeMillis);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7464, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [322], "initializationEnd": [340], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [350], "configurationEnd": [415], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 534, "focalAPIEnd": 560, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tinrap/SiQuoia/tree/master/src/com/sjsu/siquoia/CreateUserAccountActivity.java", "rawCode": "    protected void onPostExecute(String result) {\n\n      if (result.equalsIgnoreCase(\"true\")) // user has been created\n      {\n        // update user status to logged in\n        SharedPreferences preferences = getSharedPreferences(SiQuoiaHomeActivity.SIQUOIA_PREF, 0);\n        SharedPreferences.Editor perferenceUpdater = preferences.edit();\n        perferenceUpdater.putBoolean(SiQuoiaHomeActivity.LOGGED_IN, true);\n        perferenceUpdater.putString(SiQuoiaHomeActivity.EMAIL, email);\n\n        // commit preference changes\n        perferenceUpdater.commit();\n\n        // close progress dialog\n        progressBar.dismiss();\n\n        // start home screen activity\n        Intent intent = new Intent();\n        intent.setClass(CreateUserAccountActivity.this, SiQuoiaHomeActivity.class);\n\n        // store status as new user and pass user email to homeactivity\n        intent.putExtra(SiQuoiaHomeActivity.NEW_USER, true);\n        intent.putExtra(SiQuoiaHomeActivity.EMAIL, email);\n        startActivity(intent);\n        finish();\n      } else // user has not been created in db\n      {\n        // closes progress dialog\n        progressBar.dismiss();\n\n        // let user know that the email id is in use\n        Toast toast =\n            Toast.makeText(getApplicationContext(), \"Email is already used.\", Toast.LENGTH_SHORT);\n        toast.show();\n      }\n    }\n"}, {"dataset": "commit", "exampleID": 7465, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [424], "initializationEnd": [448], "hasTryCatch": 1, "exceptionType": "JSONException", "exceptionHandlingCall": ["new YailRuntimeError(String,String)"], "tryExpressionStart": 454, "tryExpressionEnd": 458, "tryBlockStart": 454, "tryBlockEnd": 711, "catchExpressionStart": 586, "catchExpressionEnd": 610, "catchBlockStart": 586, "catchBlockEnd": 711, "exceptionHandlingCallStart": [624], "exceptionHandlingCallEnd": [704], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [466], "configurationEnd": [544], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 552, "focalAPIEnd": 578, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rkipper/AppInventor_RK/tree/master/appinventor/components/src/com/google/appinventor/components/runtime/TinyDB.java", "rawCode": "  /**\n   * Store the given value under the given tag. The storage persists on the phone when the app is\n   * restarted.\n   *\n   * @param tag The tag to use\n   * @param valueToStore The value to store. Can be any type of value (e.g. number, text, boolean or\n   *     list).\n   */\n  @SimpleFunction\n  public void StoreValue(final String tag, final Object valueToStore) {\n    final SharedPreferences.Editor sharedPrefsEditor = sharedPreferences.edit();\n    try {\n      sharedPrefsEditor.putString(tag, JsonUtil.getJsonRepresentation(valueToStore));\n      sharedPrefsEditor.commit();\n    } catch (JSONException e) {\n      throw new YailRuntimeError(\"Value failed to convert to JSON.\", \"JSON Creation Error.\");\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7466, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [50], "configurationEnd": [89], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 95, "focalAPIEnd": 112, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Teeds/iiNet-Usage/tree/master/iiNet Usage Phone/src/au/id/teda/iinetusage/phone/helper/UserPassHelper.java", "rawCode": "  public void setIsPassed(boolean isPassed) {\n    myEditor.putBoolean(ISPASSED, isPassed);\n    myEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7467, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [93], "initializationEnd": [105], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [111], "configurationEnd": [156], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 162, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Rafe/Footpon/tree/master/Footpon/src/j3/footpon/pedometer/StepService.java", "rawCode": "  private boolean savePoints() {\n    SharedPreferences.Editor stateEditor;\n    stateEditor = state.edit();\n    stateEditor.putLong(User.SHARE_POINTS, steps);\n    stateEditor.commit();\n    return true;\n  }\n"}, {"dataset": "commit", "exampleID": 7468, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getRateMyAppPreferencesEditor(Context)"], "initializationStart": [111], "initializationEnd": [149], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.clear()"], "configurationStart": [156], "configurationEnd": [170], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 176, "focalAPIEnd": 191, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MyMalcom/malcom-lib-android/tree/master/src/main/java/com/malcom/library/android/module/campaign/MCMCampaignsLogics.java", "rawCode": "  private static void clearRateMyAppControlParameters(Context context) {\n    SharedPreferences.Editor editor = getRateMyAppPreferencesEditor(context);\n\n    editor.clear();\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7469, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [398], "initializationEnd": [407], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putLong(String,long)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [415, 498, 609, 684], "configurationEnd": [463, 536, 672, 753], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 786, "focalAPIEnd": 797, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tbjers/AndTweet/tree/master/src/com/xorcode/andtweet/AndTweetService.java", "rawCode": "    /**\n     * Persist the object to the SharedPreferences We're not storing all types of commands here\n     * because not all commands go to the queue\n     *\n     * @param sp\n     * @param index Index of the preference's name to be used\n     */\n    public void save(SharedPreferences sp, int index) {\n      String si = Integer.toString(index);\n\n      android.content.SharedPreferences.Editor ed = sp.edit();\n      ed.putString(EXTRA_MSGTYPE + si, command.save());\n      if (itemId != 0) {\n        ed.putLong(EXTRA_TWEETID + si, itemId);\n      }\n      switch (command) {\n        case UPDATE_STATUS:\n          ed.putString(EXTRA_STATUS + si, bundle.getString(EXTRA_STATUS));\n          ed.putLong(EXTRA_INREPLYTOID + si, bundle.getLong(EXTRA_INREPLYTOID));\n          break;\n      }\n      ed.commit();\n    }\n"}, {"dataset": "commit", "exampleID": 7470, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [329], "initializationEnd": [337], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["e(*,String,SharedPreferences.Editor)"], "tryExpressionStart": 104, "tryExpressionEnd": 108, "tryBlockStart": 104, "tryBlockEnd": 858, "catchExpressionStart": 796, "catchExpressionEnd": 816, "catchBlockStart": 796, "catchBlockEnd": 858, "exceptionHandlingCallStart": [824], "exceptionHandlingCallEnd": [851], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [349], "configurationEnd": [391], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 403, "focalAPIEnd": 413, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["e(*,String,sharedPreferences.Editor)"], "useStart": [824], "useEnd": [851], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mjibson/goread-android/tree/master/goread/src/main/java/com/goread/goreader/MainActivity.java", "rawCode": "  protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {\n    try {\n      if (requestCode == GoRead.PICK_ACCOUNT_REQUEST) {\n        if (resultCode == RESULT_OK) {\n          String accountName = data.getStringExtra(AccountManager.KEY_ACCOUNT_NAME);\n          SharedPreferences.Editor e = p.edit();\n          e.putString(GoRead.P_ACCOUNT, accountName);\n          e.commit();\n          getAuthCookie();\n        } else {\n          Log.e(GoRead.TAG, String.format(\"%d, %d, %s\", requestCode, resultCode, data));\n          Log.e(GoRead.TAG, \"pick not ok, try again\");\n          pickAccount();\n        }\n      } else {\n        Log.e(\n            GoRead.TAG,\n            String.format(\"activity result: %d, %d, %s\", requestCode, resultCode, data));\n      }\n    } catch (Exception e) {\n      Log.e(GoRead.TAG, \"oar\", e);\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7471, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [48], "configurationEnd": [86], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 92, "focalAPIEnd": 108, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/xstd/quick_setting/tree/master/src/com/xstd/qm/setting/SettingManager.java", "rawCode": "  public void setKeyLanuchTime(long time) {\n    mEditor.putLong(KEY_LANUCH_TIME, time);\n    mEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7472, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.getClass()"], "configurationStart": [109], "configurationEnd": [126], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 313, "focalAPIEnd": 328, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/t2health/T2AndroidJump/tree/master/Jump/src/com/janrain/android/utils/PrefUtils.java", "rawCode": "  private static void sharedPreferenceEditorApplyOrCommit(SharedPreferences.Editor editor) {\n    try {\n      editor.getClass().getMethod(\"apply\").invoke(editor);\n    } catch (NoSuchMethodException ignore) {\n    } catch (InvocationTargetException ignore) {\n    } catch (IllegalAccessException ignore) {\n    }\n\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7473, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 81, "focalAPIEnd": 95, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Starlon/FroyVisuals-old/tree/master/StarVisuals/src/org/libvisual/android/LibVisualSettings.java", "rawCode": "  /** commit recent edits */\n  public void commit() {\n    /* commit edits */\n    _edit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7474, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.apply()"], "configurationStart": [125], "configurationEnd": [139], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 333, "focalAPIEnd": 348, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/core/java/android/preference/Preference.java", "rawCode": "  private void tryCommit(SharedPreferences.Editor editor) {\n    if (mPreferenceManager.shouldCommit()) {\n      try {\n        editor.apply();\n      } catch (AbstractMethodError unused) {\n        // The app injected its own pre-Gingerbread\n        // SharedPreferences.Editor implementation without\n        // an apply method.\n        editor.commit();\n      }\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7475, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [109], "initializationEnd": [118], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.clear()"], "configurationStart": [124], "configurationEnd": [135], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 141, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MaChristmann/mobile-trial/tree/master/test/src/com/android/vending/licensing/ObfuscatedPreferencesTest.java", "rawCode": "  public void cleanup() {\n    // Manually clear out any saved preferences\n    SharedPreferences.Editor spe = sp.edit();\n    spe.clear();\n    spe.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7476, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = ListPreference.getEditor()"], "initializationStart": [197], "initializationEnd": [228], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [236], "configurationEnd": [276], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 284, "focalAPIEnd": 299, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pronoschallenge/pronoschallenge-android/tree/master/src/fr/pronoschallenge/options/OptionsActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Boolean success) {\n\n      ListPreference strategiePreference = (ListPreference) findPreference(\"strategie\");\n\n      SharedPreferences.Editor editor = strategiePreference.getEditor();\n      editor.putString(\"strategie\", strategie);\n      editor.commit();\n\n      strategiePreference.setSummary(strategiePreference.getEntry());\n\n      if (dialog.isShowing()) {\n        dialog.dismiss();\n      }\n      super.onPostExecute(success);\n    }\n"}, {"dataset": "commit", "exampleID": 7477, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [170], "configurationEnd": [221], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 234, "focalAPIEnd": 254, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thomasbreitbach/hci_advanced/tree/master/2FactorLockScreen/src/de/thm/hcia/twofactorlockscreen/io/SharedPreferenceIO.java", "rawCode": "  /** Increments value of PREF_LOGINS_SUCCESSFUL */\n  public boolean incrementLoginsSuccessful() {\n    int success = mSettings.getInt(PREF_LOGINS_SUCCESSFUL, 0) + 1;\n    mPrefEditor.putInt(PREF_LOGINS_SUCCESSFUL, success);\n    return mPrefEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7478, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [92], "configurationEnd": [131], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 139, "focalAPIEnd": 154, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MaartenJager/Lazygames.TrainYourEye/tree/master/src/lazygames/trainyoureye/SettingManager.java", "rawCode": "  public static void writeGreenValue(int greenValue) {\n    if (preferences != null) {\n      editor.putInt(\"greenValue\", greenValue);\n      editor.commit();\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7479, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [130], "initializationEnd": [148], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [470, 666], "configurationEnd": [515, 745], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 757, "focalAPIEnd": 777, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/oyatsukai/openkit-android-beta/tree/master/OpenKitSDK/src/io/openkit/asynchttp/PersistentCookieStore.java", "rawCode": "  @Override\n  public boolean clearExpired(Date date) {\n    boolean clearedAny = false;\n    SharedPreferences.Editor prefsWriter = cookiePrefs.edit();\n\n    for (ConcurrentHashMap.Entry<String, Cookie> entry : cookies.entrySet()) {\n      String name = entry.getKey();\n      Cookie cookie = entry.getValue();\n      if (cookie.isExpired(date)) {\n        // Clear cookies from local store\n        cookies.remove(name);\n\n        // Clear cookies from persistent store\n        prefsWriter.remove(COOKIE_NAME_PREFIX + name);\n\n        // We've cleared at least one\n        clearedAny = true;\n      }\n    }\n\n    // Update names in persistent store\n    if (clearedAny) {\n      prefsWriter.putString(COOKIE_NAME_STORE, TextUtils.join(\",\", cookies.keySet()));\n    }\n    prefsWriter.commit();\n\n    return clearedAny;\n  }\n"}, {"dataset": "commit", "exampleID": 7480, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [75], "configurationEnd": [103], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 109, "focalAPIEnd": 124, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lbaye/repo/tree/master/android/src/com/socmaps/util/SharedPreferencesHelper.java", "rawCode": "  public SharedPreferencesHelper setString(String key, String value) {\n    editor.putString(key, value);\n    editor.commit();\n\n    return this;\n  }\n"}, {"dataset": "commit", "exampleID": 7481, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [55], "configurationEnd": [129], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 135, "focalAPIEnd": 158, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/data/preferences/ManagerPreferences.java", "rawCode": "  public void setAgeRating(EnumAgeRating rating) {\n    setPreferences.putInt(EnumPreferences.AGE_RATING.name(), rating.ordinal());\n    setPreferences.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7482, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [156], "configurationEnd": [201], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 214, "focalAPIEnd": 234, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thomasbreitbach/hci_advanced/tree/master/2FactorLockScreen/src/de/thm/hcia/twofactorlockscreen/io/SharedPreferenceIO.java", "rawCode": "  /** Increments value of PREF_LOGINS_FAILED */\n  public boolean incrementLoginsFailed() {\n    int fails = mSettings.getInt(PREF_LOGINS_FAILED, 0) + 1;\n    mPrefEditor.putInt(PREF_LOGINS_FAILED, fails);\n    return mPrefEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7483, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [630, 750], "configurationEnd": [701, 805], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 815, "focalAPIEnd": 836, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mossplix/mifosx-comminity-apps/tree/master/MifosXMobile/src/com/rhok/mifosxmobile/LoginActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(String result) {\n      super.onPostExecute(result);\n\n      if (mProgressDialog.isShowing()) {\n        mProgressDialog.dismiss();\n      }\n\n      if (result.equals(INCORRECT_DETAILS) || result.equals(NEED_ONLINE_AUTH_FIRST)) {\n        Toast.makeText(LoginActivity.this, result, Toast.LENGTH_LONG).show();\n      } else {\n        Log.i(\n            \"onPostExecute\",\n            \"Saving user credentials and authentication key to shared preferences.\");\n        // Save a hash of the authenticated username and password to shared preferences, for offline\n        // authentication\n        mPrefsEditor.putString(USER_CREDENTIALS_HASH, md5(username + password));\n        // Save the authentication key\n        mPrefsEditor.putString(USER_AUTHENTICATION_KEY, result);\n        mPrefsEditor.commit();\n\n        // Start the ClientListActivity\n        Intent intent = new Intent(LoginActivity.this, ClientListActivity.class);\n        startActivity(intent);\n      }\n    }\n"}, {"dataset": "commit", "exampleID": 7484, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [430, 539], "configurationEnd": [502, 601], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 629, "focalAPIEnd": 655, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/servalproject/batphone/tree/master/src/org/servalproject/ui/SettingsMeshMSScreenActivity.java", "rawCode": "  @Override\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    switch (requestCode) {\n      case RINGTONE_PICKER_ACTIVITY: // Notification sound\n        switch (resultCode) {\n          case RESULT_OK:\n            Uri uri = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);\n            if (uri != null) {\n              mPreferenceEditor.putString(\"meshms_notification_sound\", uri.toString());\n            } else {\n              mPreferenceEditor.putString(\"meshms_notification_sound\", null);\n            }\n            mPreferenceEditor.commit();\n            break;\n          case RESULT_CANCELED:\n            // Do nothing\n            break;\n        }\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7485, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [113], "initializationEnd": [138], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putLong(String,long)"], "configurationStart": [144], "configurationEnd": [203], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 209, "focalAPIEnd": 219, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/delleceste/it.giacomos.android.osmer/tree/master/Osmer/src/it/giacomos/android/osmer/preferences/Settings.java", "rawCode": "  public void setMinTimeBetweenNotificationsMinutes(String tag, long minTime) {\n    SharedPreferences.Editor e = mSharedPreferences.edit();\n    e.putLong(\"MIN_TIME_BETWEEN_NOTIFICATIONS_\" + tag, minTime);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7486, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [137], "initializationEnd": [161], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.clear()"], "configurationStart": [167], "configurationEnd": [192], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 198, "focalAPIEnd": 224, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wanddy/ai4cn/tree/master/appinventor/components/src/com/google/appinventor/components/runtime/TinyDB.java", "rawCode": "  /** Clear the entire data store */\n  @SimpleFunction\n  public void ClearAll() {\n    final SharedPreferences.Editor sharedPrefsEditor = sharedPreferences.edit();\n    sharedPrefsEditor.clear();\n    sharedPrefsEditor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7487, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [390], "initializationEnd": [399], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [405], "configurationEnd": [435], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 441, "focalAPIEnd": 451, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applications4android/ComicReader/tree/master/ComicReader/src/com/blogspot/applications4android/comicreader/ActivityComicReader.java", "rawCode": "  /** Things to be performed when running for the first time */\n  private void _firstRun() {\n    SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());\n    if (!sp.getBoolean(FIRST_RUN, true)) {\n      return;\n    }\n    Log.d(TAG, \"Running this app for the first time!\");\n    ActivitySettingsPage.setupDefaults(this);\n    SharedPreferences.Editor e = sp.edit();\n    e.putBoolean(FIRST_RUN, false);\n    e.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7488, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [569], "initializationEnd": [581], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [591, 650, 715, 774], "configurationEnd": [640, 705, 764, 811], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 821, "focalAPIEnd": 841, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/welovechickens/Annenberg-Friend-Finder/tree/master/Annenberg Friend Finder/src/com/harvard/annenberg/SignUpActivity.java", "rawCode": "  public void showUploadSuccess(String json) {\n    Log.v(\"JSON\", json);\n    if (json == null) {\n      String message = \"An network error has occured. Please try again later\";\n      showFinalAlert(message);\n      return;\n    }\n    try {\n      JSONObject object = new JSONObject(json);\n      String status = object.getString(\"status\");\n      status = status.trim();\n      Log.v(\"STATUS\", \"Status is: \" + status);\n      if (status.equals(\"OK\")) {\n\n        SharedPreferences prefs = getSharedPreferences(\"AFF\", MODE_PRIVATE);\n        SharedPreferences.Editor prefsEditor = prefs.edit();\n        prefsEditor.putString(\"h\", object.getString(\"h\"));\n        prefsEditor.putString(\"huid\", object.getString(\"huid\"));\n        prefsEditor.putString(\"n\", object.getString(\"n\"));\n        prefsEditor.putBoolean(\"login\", true);\n        prefsEditor.commit();\n\n        Toast.makeText(this, \"You have successfully Signed Up\", Toast.LENGTH_LONG).show();\n        finish();\n      } else {\n        Log.v(\"STATUS\", status);\n        String message = status;\n        showFinalAlert(message);\n      }\n    } catch (Exception e) {\n\n    }\n  }\n"}, {"dataset": "commit", "exampleID": 7489, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [198], "initializationEnd": [207], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [213], "configurationEnd": [258], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 264, "focalAPIEnd": 274, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/openintents/openintents/tree/master/UpdateCheckerApp/src/org/openintents/distribution/EulaActivity.java", "rawCode": "  /** Accept EULA and proceed with main application. */\n  public void acceptEula() {\n    SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);\n    SharedPreferences.Editor e = sp.edit();\n    e.putBoolean(PREFERENCES_EULA_ACCEPTED, true);\n    e.commit();\n\n    // Call the activity that originally called checkEula()\n    Intent i = new Intent();\n    i.setClassName(mLaunchPackage, mLaunchClass);\n    startActivity(i);\n    finish();\n  }\n"}, {"dataset": "commit", "exampleID": 7490, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putLong(String,int)"], "configurationStart": [39, 83, 125, 164], "configurationEnd": [77, 119, 158, 198], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 204, "focalAPIEnd": 220, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kryukov/jimm-multi/tree/master/android/src/protocol/vk/api/VkSession.java", "rawCode": "  public void resetAccessToken() {\n    _editor.putString(\"VkAccessToken\", \"\");\n    _editor.putString(\"VkExpiresIn\", \"\");\n    _editor.putString(\"VkUserId\", \"\");\n    _editor.putLong(\"VkAccessTime\", 0);\n    _editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7491, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 57, "focalAPIEnd": 72, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Prototik/HoloEverywhere/tree/master/addons/preferences/src/org/holoeverywhere/preference/_SharedPreferencesImpl_XML.java", "rawCode": "    @Override\n    public boolean commit() {\n      return editor.commit();\n    }\n"}, {"dataset": "commit", "exampleID": 7492, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [211], "configurationEnd": [303], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 316, "focalAPIEnd": 331, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/smarek/Simple-Dilbert/tree/master/src/main/java/com/mareksebera/simpledilbert/preferences/DilbertPreferences.java", "rawCode": "  /**\n   * Saves last viewed date in preferences\n   *\n   * @param currentDate date of last viewed strip\n   * @return if saving was successfull\n   */\n  public boolean saveCurrentDate(LocalDate currentDate) {\n    editor.putString(PREF_CURRENT_DATE, currentDate.toString(DilbertPreferences.DATE_FORMATTER));\n    return editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7493, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "OperationCanceledException", "exceptionHandlingCall": ["makeText(Context,String,*)", "show()"], "tryExpressionStart": 86, "tryExpressionEnd": 90, "tryBlockStart": 86, "tryBlockEnd": 1814, "catchExpressionStart": 1438, "catchExpressionEnd": 1475, "catchBlockStart": 1438, "catchBlockEnd": 1576, "exceptionHandlingCallStart": [1485, 1485], "exceptionHandlingCallEnd": [1560, 1567], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [303], "configurationEnd": [340], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 350, "focalAPIEnd": 365, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/timherman76/leggo/tree/master/src/com/leggo/SettingsActivity.java", "rawCode": "    public void run(AccountManagerFuture<Bundle> result) {\n      Bundle bundle;\n      try {\n        // Get bundle result\n        bundle = result.getResult();\n        Intent i = (Intent) bundle.get(AccountManager.KEY_INTENT);\n        auth_token = bundle.getString(AccountManager.KEY_AUTHTOKEN);\n\n        editor.putString(\"token\", auth_token);\n        editor.commit();\n\n        if (i == null) {\n          // User input not required, we have permission. Set\n          // preference to the account.\n          ListPreference accountPref =\n              (ListPreference) prefManager.findPreference(ACCOUNT_SELECTION);\n          accountPref.setValue(accountName);\n          accountSelectionPref.setSummary(\"Logged in as: \" + accountName);\n\n          // Get and set cookie into preferences\n          AuthCookie.getCookie(auth_token, context);\n\n        } else {\n          // Send permission prompt intent.\n          // Set flag on this intent so that we get the result of that\n          // intent\n          int flags = i.getFlags();\n          flags &= ~Intent.FLAG_ACTIVITY_NEW_TASK;\n          i.setFlags(flags);\n\n          idRequests[id] = accountName;\n\n          // StartActvitityForResult has a second parameter\n          // identifying the call\n          startActivityForResult(i, id);\n          // Increment id in a way that it will not exceed the end of\n          // the array\n          id = (id + 1) % idRequests.length;\n        }\n\n      } catch (OperationCanceledException e) {\n        Toast.makeText(context, \"Operation Canceled Exception\", Toast.LENGTH_SHORT).show();\n      } catch (AuthenticatorException e) {\n        Toast.makeText(context, \"Authenticator Exception\", Toast.LENGTH_SHORT).show();\n      } catch (IOException e) {\n        Toast.makeText(context, \"IO Exception\", Toast.LENGTH_SHORT).show();\n      }\n    }\n"}, {"dataset": "commit", "exampleID": 7494, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.getClass()"], "configurationStart": [109], "configurationEnd": [126], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 313, "focalAPIEnd": 328, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/janrain/engage.android/tree/master/Jump/src/com/janrain/android/utils/PrefUtils.java", "rawCode": "  private static void sharedPreferenceEditorApplyOrCommit(SharedPreferences.Editor editor) {\n    try {\n      editor.getClass().getMethod(\"apply\").invoke(editor);\n    } catch (NoSuchMethodException ignore) {\n    } catch (InvocationTargetException ignore) {\n    } catch (IllegalAccessException ignore) {\n    }\n\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7495, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [97], "initializationEnd": [109], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.remove(String)", "sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [199, 273], "configurationEnd": [228, 316], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 369, "focalAPIEnd": 387, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/c-geo/tree/master/src/carnero/cgeo/cgSettings.java", "rawCode": "  public boolean setSignature(String signature) {\n    final SharedPreferences.Editor prefsEdit = prefs.edit();\n\n    if (signature == null || signature.length() == 0) {\n      // erase signature\n      prefsEdit.remove(\"signature\");\n    } else {\n      // save signature\n      prefsEdit.putString(\"signature\", signature);\n    }\n\n    this.signature = signature;\n\n    return prefsEdit.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7496, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [150], "initializationEnd": [159], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putString(String,String)", "sharedPreferences.Editor.Editor.putInt(String,int)", "sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [215, 338, 428, 514, 594, 689, 823, 979], "configurationEnd": [250, 383, 475, 538, 635, 722, 849, 1005], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 1026, "focalAPIEnd": 1037, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dai1741/forked_from_MikuMikuDroid/tree/master/MikuMikuDroid/src/jp/gauzau/MikuMikuDroidmod/CoreLogic.java", "rawCode": "  public void storeState() {\n    SharedPreferences sp = mCtx.getSharedPreferences(\"default\", Context.MODE_PRIVATE);\n    SharedPreferences.Editor ed = sp.edit();\n\n    // model & motion\n    if (mMiku != null) {\n      ed.putInt(\"ModelNum\", mMiku.size());\n      for (int i = 0; i < mMiku.size(); i++) {\n        Miku m = mMiku.get(i);\n        ed.putString(\"Model\" + i, m.mModel.mFileName);\n        if (m.mMotion != null) {\n          ed.putString(\"Motion\" + i, m.mMotion.mFileName);\n        }\n      }\n    } else {\n      ed.putInt(\"ModelNum\", 0);\n    }\n\n    // camera\n    if (mCamera != null) {\n      ed.putString(\"Camera\", mCamera.mFileName);\n    }\n\n    // music\n    if (mMedia != null) {\n      ed.putString(\"Music\", mMediaName);\n      int cur = mMedia.getCurrentPosition();\n      if (cur + 100 < mMedia.getDuration()) {\n        ed.putInt(\"Position\", cur);\n      }\n    } else {\n      int cur = mFakeMedia.getCurrentPosition();\n      if (cur + 100 < mFakeMedia.getDuration()) {\n        ed.putInt(\"Position\", cur);\n      }\n    }\n\n    ed.commit();\n    Log.d(\"CoreLogic\", \"Store State\");\n  }\n"}, {"dataset": "commit", "exampleID": 7497, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [543], "initializationEnd": [555], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putInt(String,int)"], "configurationStart": [565], "configurationEnd": [599], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 609, "focalAPIEnd": 627, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/c-geo/tree/master/src/carnero/cgeo/cgSettings.java", "rawCode": "  public HashMap<String, String> getLogin() {\n    final HashMap<String, String> login = new HashMap<String, String>();\n\n    if (username == null || password == null) {\n      final String preUsername = prefs.getString(\"username\", null);\n      final String prePassword = prefs.getString(\"password\", null);\n\n      if (initialized == 0 && (preUsername == null || prePassword == null)) {\n        Intent initIntent = new Intent(context, cgeoinit.class);\n        context.startActivity(initIntent);\n\n        final SharedPreferences.Editor prefsEdit = prefs.edit();\n        prefsEdit.putInt(\"initialized\", 1);\n        prefsEdit.commit();\n\n        initialized = 1;\n\n        return null;\n      } else if (initialized == 1 && (preUsername == null || prePassword == null)) {\n        return null;\n      }\n\n      login.put(\"username\", preUsername);\n      login.put(\"password\", prePassword);\n\n      username = preUsername;\n      password = prePassword;\n    } else {\n      login.put(\"username\", username);\n      login.put(\"password\", password);\n    }\n\n    return login;\n  }\n"}, {"dataset": "commit", "exampleID": 7498, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor()"], "initializationStart": [97], "initializationEnd": [108], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putBoolean(String,boolean)"], "configurationStart": [114], "configurationEnd": [157], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 163, "focalAPIEnd": 178, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rjmarsan/PlasmaSound/tree/master/src/amir/android/icebreaking/SeekBarPreferenceView.java", "rawCode": "  private void updatePreferenceY(boolean enabled) {\n\n    final SharedPreferences.Editor editor = getEditor();\n    editor.putBoolean(getKey() + \"_y\", enabled);\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7499, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = getEditor()"], "initializationStart": [188], "initializationEnd": [199], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [205], "configurationEnd": [241], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 247, "focalAPIEnd": 262, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rjmarsan/PlasmaSound/tree/master/src/amir/android/icebreaking/RadioGroupPrefs.java", "rawCode": "  private void updatePreference(final String newValue) {\n    // Log.d(\"RadioGroupPrefs\", \"Writing new value: \"+newValue+\" for key:\"+getKey());\n\n    final SharedPreferences.Editor editor = getEditor();\n    editor.putString(getKey(), newValue);\n    editor.commit();\n  }\n"}, {"dataset": "commit", "exampleID": 7500, "initialization": ["SharedPreferences.Editor sharedPreferences.Editor = SharedPreferences.edit()"], "initializationStart": [205], "initializationEnd": [217], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["sharedPreferences.Editor.Editor.putString(String,String)"], "configurationStart": [223], "configurationEnd": [263], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": "editor = sharedPreferences.Editor.commit()", "focalAPIStart": 269, "focalAPIEnd": 280, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/turbo-lover/tagil/tree/master/NewsTagil/src/main/java/ru/news/tagil/utility/myPreferencesWorker.java", "rawCode": "  public void set_pass(String pass) {\n    ContextWrapper cw = new ContextWrapper(context);\n    sPref = cw.getSharedPreferences(preference_location, Context.MODE_PRIVATE);\n    SharedPreferences.Editor ed = sPref.edit();\n    ed.putString(preference_user_pass, pass);\n    ed.commit();\n  }\n"}]