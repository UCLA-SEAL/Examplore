[{"dataset": "setContentView", "exampleID": 201, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 156, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/charlestontelles/INN372-android/tree/master/SolarPowerCalcAndroid/src/au/edu/qut/inn372/greenhat/activity/LocationActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_location_input);\n    // setupLocations();\n    // setupSpinner();\n    parentTabbedActivity = (TabbedActivity) this.getParent(); // made it global\n    calculator = parentTabbedActivity.getCalculator();\n\n    // Initializing fields for location\n    locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);\n    geocoder = new Geocoder(this);\n\n    mapView = (MapView) findViewById(R.id.mapview);\n    mapView.setBuiltInZoomControls(true);\n  }\n"}, {"dataset": "setContentView", "exampleID": 202, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 112, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thiendamvam/WhyQ/tree/master/Code/src/whyq/activity/WhyqFriendsFacebookActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_facebook_friends);\n\n    isFacebook = getIntent().getBooleanExtra(\"is_facebook\", true);\n    showHeaderSearchField(true);\n    SearchField searchField = getSearchField();\n    EditText tvSearch = searchField.getEditTextView();\n    mActivity = this;\n    tvSearch.setHint(R.string.find_a_friend);\n    tvSearch.setTextColor(getResources().getColor(R.color.white));\n    tvSearch.setBackgroundResource(R.drawable.textfield_search_default_holo_dark);\n\n    mListview = (AmazingListView) findViewById(R.id.listview);\n    mListview.setPinnedHeaderView(findViewById(R.id.header));\n    mListview.setOnItemClickListener(\n        new OnItemClickListener() {\n\n          @Override\n          public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n            final Object item = arg0.getItemAtPosition(arg2);\n            FriendFacebook facebook = (FriendFacebook) item;\n            if (facebook.getIs_join()) {\n              startUserProfileActivity(\n                  facebook.getId(), facebook.getFirstName(), facebook.getAvatar());\n            }\n          }\n        });\n\n    mFriendFacebookAdapter = new FriendsFacebookAdapter(this, mImageWorker);\n    mAccessToken = Session.getActiveSession().getAccessToken();\n    if (BuildConfig.DEBUG) {\n      Log.d(\"WhyqFriendsFacebookActivity\", \"access token: \" + mAccessToken);\n    }\n\n    setTitle(R.string.friend_from_facebook);\n    getFriends();\n\n    mInviteContainer = findViewById(R.id.inviteContainer);\n    mInviteMessage = (TextView) findViewById(R.id.tvMessage);\n    mInviteButton = (Button) findViewById(R.id.invite);\n    mInviteButton.setOnClickListener(\n        new View.OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            if (INVITED_LIST.size() == 0 && invitedFacebookFriend.size() == 0) {\n              Toast.makeText(\n                      mActivity, \"Please choose at least 1 people to invite\", Toast.LENGTH_LONG)\n                  .show();\n              return;\n            }\n            inviteFriends();\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 203, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 159, "focalAPIEnd": 203, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Aethelflaed/connectbot/tree/master/src/org/connectbot/PortForwardListActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    long hostId = this.getIntent().getLongExtra(Intent.EXTRA_TITLE, -1);\n\n    setContentView(R.layout.act_portforwardlist);\n\n    // connect with hosts database and populate list\n    this.hostdb = new HostDatabase(this);\n    host = hostdb.findHostById(hostId);\n\n    {\n      final String nickname = host != null ? host.getNickname() : null;\n      final Resources resources = getResources();\n\n      if (nickname != null) {\n        this.setTitle(\n            String.format(\n                \"%s: %s (%s)\",\n                resources.getText(R.string.app_name),\n                resources.getText(R.string.title_port_forwards_list),\n                nickname));\n      } else {\n        this.setTitle(\n            String.format(\n                \"%s: %s\",\n                resources.getText(R.string.app_name),\n                resources.getText(R.string.title_port_forwards_list)));\n      }\n    }\n\n    connection =\n        new ServiceConnection() {\n          public void onServiceConnected(ComponentName className, IBinder service) {\n            TerminalManager bound = ((TerminalManager.TerminalBinder) service).getService();\n\n            hostBridge = bound.getConnectedBridge(host);\n            updateHandler.sendEmptyMessage(-1);\n          }\n\n          public void onServiceDisconnected(ComponentName name) {\n            hostBridge = null;\n          }\n        };\n\n    this.updateList();\n\n    this.registerForContextMenu(this.getListView());\n\n    this.getListView()\n        .setOnItemClickListener(\n            new OnItemClickListener() {\n              public void onItemClick(AdapterView<?> adapter, View view, int position, long id) {\n                ListView lv = PortForwardListActivity.this.getListView();\n                PortForwardBean pfb = (PortForwardBean) lv.getItemAtPosition(position);\n\n                if (hostBridge != null) {\n                  if (pfb.isEnabled()) hostBridge.disablePortForward(pfb);\n                  else {\n                    if (!hostBridge.enablePortForward(pfb))\n                      Toast.makeText(\n                              PortForwardListActivity.this,\n                              getString(R.string.portforward_problem),\n                              Toast.LENGTH_LONG)\n                          .show();\n                  }\n\n                  updateHandler.sendEmptyMessage(-1);\n                }\n              }\n            });\n\n    this.inflater = LayoutInflater.from(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 204, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 313, "focalAPIEnd": 353, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MinionApp/minion/tree/master/MinionApp/src/uw/cse403/minion/CombatActivity.java", "rawCode": "  /**\n   * Displays the combat page and loads in any previously entered information from the local\n   * database.\n   */\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    if (TraceControl.TRACE) Debug.startMethodTracing(\"CombatActivity_onCreate\");\n\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_combat);\n    charID = this.getIntent().getExtras().getLong(\"cid\");\n    combat = new Combat(charID);\n\n    loadData();\n\n    if (TraceControl.TRACE) Debug.stopMethodTracing();\n  }\n"}, {"dataset": "setContentView", "exampleID": 205, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 96, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/backtoschool/TestSelf/tree/master/TestSelf/src/main/java/com/backtoschool/testself/Sci1Test5Activity.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.sci1test5_layout);\n    Bundle extras = getIntent().getExtras();\n    if (extras != null) {\n      strMenberID = extras.getString(\"MemberID\");\n    }\n    initialWidget();\n  }\n"}, {"dataset": "setContentView", "exampleID": 206, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 141, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sntc06/Icequeen/tree/master/src/com/mis/icequeen/PreTest.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.pre_test);\n    Bundle extras = getIntent().getExtras();\n    // ¨ú¥X¿ï¾Üªº³¹¸`\n    cptrange = extras.getIntArray(\"selected\");\n    showlist = new ArrayList<Integer>();\n    for (int i = 0; i < cptrange.length; i++) {\n      if (cptrange[i] == 1) {\n        getIntent()\n            .setData(\n                Uri.parse(\"content://com.mis.icequeen.testprovider/getVOCbyChapter:\" + (i + 1)));\n        total = getIntent().getData();\n        test = managedQuery(total, null, null, null, null);\n        System.out.println(\"voc count: \" + test.getCount());\n        test.moveToFirst();\n        for (int j = 0; j < test.getCount(); j++) {\n          showlist.add(test.getInt(0));\n          if (!test.isLast()) test.moveToNext();\n        }\n        System.out.println(showlist.size());\n        test.close();\n      }\n    }\n\n    ButtonListener buttonListener = new ButtonListener();\n    btnConfirmTest = (Button) findViewById(R.id.btnConfirmTest);\n    btnConfirmTest.setOnClickListener(buttonListener);\n    pendingVocLinearLayout = (LinearLayout) findViewById(R.id.pendingVocLinearLayout);\n    TextView word = (TextView) findViewById(R.id.textView2);\n    word.setText(\"\");\n    for (int i = 0; i < cptrange.length; i++) {\n      if (cptrange[i] == 1) {\n        word.append(\" Chapter \" + (i + 1) + \"\\n\");\n      }\n    }\n    word.setText(word.getText().toString().substring(0, word.getText().length() - 1));\n  }\n"}, {"dataset": "setContentView", "exampleID": 207, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 150, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/davros-/platform_frameworks_base/tree/master/core/tests/coretests/src/android/animation/BasicAnimatorActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.animator_basic);\n  }\n"}, {"dataset": "setContentView", "exampleID": 208, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 182, "focalAPIEnd": 227, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Wavesonics/TMinus/tree/master/TMinus/src/main/java/com/darkrockstudios/apps/tminus/experiences/rocket/browse/RocketBrowserActivity.java", "rawCode": "  @Override\n  protected void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n    setContentView(R.layout.activity_common_list);\n\n    FragmentManager fragmentManager = getFragmentManager();\n\n    RocketBrowserFragment rocketBrowserFragment = RocketBrowserFragment.newInstance();\n    fragmentManager\n        .beginTransaction()\n        .replace(R.id.COMMON_list_fragment_container, rocketBrowserFragment, TAG_ROCKET_LIST)\n        .commit();\n\n    initNavDrawer();\n  }\n"}, {"dataset": "setContentView", "exampleID": 209, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 161, "focalAPIEnd": 200, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rocapal/cursoAndroidURJC/tree/master/2ndEdition/omar.pedraza/06 Fragments/src/com/AGi/Fragments/List/ImageActivity.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.image_activity);\n\n    Bundle extras = getIntent().getExtras();\n    Integer image = extras.getInt(Constants.kImage, 0);\n\n    ImageFragment fragment =\n        (ImageFragment) getSupportFragmentManager().findFragmentById(R.id.image_container);\n    fragment.setImage(image);\n  }\n"}, {"dataset": "setContentView", "exampleID": 210, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 335, "focalAPIEnd": 376, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Luminger/AnJaRoot/tree/master/src/org/failedprojects/anjaroot/RequestActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    handler.postDelayed(\n        new Runnable() {\n          @Override\n          public void run() {\n            Log.v(LOGTAG, \"Timeout triggered\");\n            answerRequest(false);\n          }\n        },\n        timeout);\n    setContentView(R.layout.request_activity);\n\n    Button grant = (Button) findViewById(R.id.grant_btn);\n    grant.setOnClickListener(this);\n    Button deny = (Button) findViewById(R.id.deny_btn);\n    deny.setOnClickListener(this);\n\n    Intent intent = getIntent();\n    int uid = intent.getIntExtra(\"uid\", -1);\n    PackageManager pm = getPackageManager();\n    String[] pkgs = pm.getPackagesForUid(uid);\n\n    if (pkgs.length < 1) {\n      Log.e(LOGTAG, String.format(\"Failed to get package for uid %d\", uid));\n      return;\n    }\n\n    if (pkgs.length > 1) {\n      Log.e(LOGTAG, \"There is more than one package with uid %d, displaying only the first\");\n      Log.e(LOGTAG, \"Returned packages are:\");\n      for (String pkg : pkgs) {\n        Log.e(LOGTAG, String.format(\" %s\", pkg));\n      }\n    }\n\n    try {\n      PackageInfo pi = pm.getPackageInfo(pkgs[0], 0);\n\n      Drawable logo = pi.applicationInfo.loadIcon(pm);\n      CharSequence name = pi.applicationInfo.loadLabel(pm);\n\n      ImageView iv = (ImageView) findViewById(R.id.icon);\n      iv.setImageDrawable(logo);\n\n      TextView tv = (TextView) findViewById(R.id.icon_name);\n      tv.setText(name);\n\n      TextView t = (TextView) findViewById(R.id.title_text);\n      t.setText(String.format(getString(R.string.request_activity_title_text), name));\n    } catch (NameNotFoundException e) {\n      Log.e(LOGTAG, \"Failed to get PackageInfo\", e);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 211, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 99, "focalAPIEnd": 142, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applications4android/ComicReader/tree/master/ComicReader/src/com/blogspot/applications4android/comicreader/ComicStripViewer.java", "rawCode": "  @Override\n  public void onResume() {\n    Log.d(TAG, \"on resume ....\");\n    super.onResume();\n    setContentView(R.layout.comic_strip_viewer);\n    setTitle(mTitle);\n    mCtrls = (LinearLayout) findViewById(R.id.view_control);\n    mPzv = (PanZoomView) findViewById(R.id.image_viewer);\n    mPzc = new PanZoomControl(mPzv);\n    mPzv.setController(mPzc);\n    mPzl = new PanZoomListener(mPzc, mCtrls);\n    mPzv.setOnTouchListener(mPzl);\n    try {\n      mList = setupComicsList(\"mSortPref\");\n    } catch (Exception e) {\n      e.printStackTrace();\n      Toast.makeText(\n              getApplicationContext(),\n              \"Failed to 'setupComicsList'! Reason: \" + e.getMessage(),\n              Toast.LENGTH_LONG)\n          .show();\n    }\n    _initComic();\n    Log.d(TAG, \"on resume finished ...\");\n  }\n"}, {"dataset": "setContentView", "exampleID": 212, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/photo/mobile-android/tree/master/app/src/com/trovebox/android/app/AccountLogin.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_account_login);\n    init();\n    addRegisteredReceiver(\n        LoginUtils.getAndRegisterDestroyOnLoginActionBroadcastReceiver(TAG, this));\n  }\n"}, {"dataset": "setContentView", "exampleID": 213, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 107, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/SuikoHero38/CraveParty/tree/master/FINAL/JakeWharton-ActionBarSherlock-e5c2d1c/library/src/com/exypnos/craveparty/controller/AddCulinaryActivity.java", "rawCode": "  public void onCreate(Bundle arg0) {\n    // TODO Auto-generated method stub\n    super.onCreate(arg0);\n    setContentView(R.layout.activity_add_culinary);\n    /*\n    mLocale = new Locale(\"en\");\n    Locale.setDefault(mLocale);\n    Configuration config_en = new Configuration();\n    config_en.locale = mLocale;\n    getBaseContext().getResources().updateConfiguration(config_en, getBaseContext().getResources().getDisplayMetrics());\n\n    Configuration config = new Configuration();\n    config.locale = mLocale;\n    this.getApplicationContext().getResources().updateConfiguration(config, null);\n\n\n    button = (Button) findViewById(R.id.buttonCL);\n\n    button.setOnClickListener(new View.OnClickListener() {\n    public void onClick(View v) {\n\n    Log.e(\"Error\", \"Selalu masuk jika di klik\");\n    if(mLocale.toString().equals(\"en\")){\n    mLocale = new Locale(\"id\");\n    }\n    else{\n    mLocale = new Locale(\"en\");\n    }\n\n    Locale.setDefault(mLocale);\n    Configuration config_en = new Configuration();\n    config_en.locale = mLocale;\n    getBaseContext().getResources().updateConfiguration(config_en, getBaseContext().getResources().getDisplayMetrics());\n    setContentView(R.layout.activity_add_culinary);\n\n    }\n    });\n    */\n  }\n"}, {"dataset": "setContentView", "exampleID": 214, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 156, "focalAPIEnd": 206, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/tests/StatusBar/src/com/android/statusbartest/NotificationBuilderTest.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    mNM = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);\n    setContentView(R.layout.notification_builder_test);\n    if (icicle == null) {\n      setDefaults();\n    }\n    for (int id :\n        new int[] {\n          R.id.clear_1,\n          R.id.clear_2,\n          R.id.clear_3,\n          R.id.clear_4,\n          R.id.clear_5,\n          R.id.clear_6,\n          R.id.clear_7,\n          R.id.clear_8,\n          R.id.clear_9,\n          R.id.clear_10,\n          R.id.notify_1,\n          R.id.notify_2,\n          R.id.notify_3,\n          R.id.notify_4,\n          R.id.notify_5,\n          R.id.notify_6,\n          R.id.notify_7,\n          R.id.notify_8,\n          R.id.notify_9,\n          R.id.notify_10,\n          R.id.ten,\n          R.id.clear_all,\n        }) {\n      findViewById(id).setOnClickListener(mClickListener);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 215, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 266, "focalAPIEnd": 312, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/phini/Android-cybercom/tree/master/Formularz/src/com/example/formularz/FormDetailsActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    this.requestWindowFeature(Window.FEATURE_NO_TITLE);\n    this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);\n\n    setContentView(R.layout.activity_form_details);\n\n    MenuItem mi = (MenuItem) findViewById(R.id.menu_save);\n    mi.setEnabled(false);\n\n    EditText etSurname = (EditText) findViewById(R.id.etSurname);\n    registerForContextMenu(etSurname);\n\n    ArrayAdapter<String> adapterColours =\n        new ArrayAdapter<String>(\n            this, android.R.layout.simple_dropdown_item_1line, ContentHelper.COLOURS);\n\n    ArrayAdapter<CharSequence> adapterLangs =\n        ArrayAdapter.createFromResource(\n            this, R.array.langs_array, android.R.layout.simple_dropdown_item_1line);\n\n    ArrayAdapter<CharSequence> adapterGenders =\n        new ArrayAdapter<CharSequence>(\n            this, android.R.layout.simple_dropdown_item_1line, ContentHelper.GENDERS);\n\n    Spinner spinner = (Spinner) findViewById(R.id.sGender);\n\n    spinner.setAdapter(adapterGenders);\n\n    MultiAutoCompleteTextView mactvLangs = (MultiAutoCompleteTextView) findViewById(R.id.mactvLang);\n\n    mactvLangs.setAdapter(adapterLangs);\n    mactvLangs.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\n\n    MultiAutoCompleteTextView mactvColours =\n        (MultiAutoCompleteTextView) findViewById(R.id.mactvColour);\n\n    mactvColours.setAdapter(adapterColours);\n\n    mactvColours.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\n\n    EditText etTemp = (EditText) findViewById(R.id.etBlog);\n    etTemp.setLinksClickable(true);\n    etTemp.setAutoLinkMask(Linkify.ALL);\n\n    etTemp = (EditText) findViewById(R.id.etPhone);\n    etTemp.setLinksClickable(true);\n    etTemp.setAutoLinkMask(Linkify.ALL);\n\n    Button b = (Button) findViewById(R.id.bShowDatePickerDialog);\n    b.setOnClickListener(\n        new View.OnClickListener() {\n\n          public void onClick(View v) {\n            showDatePicker();\n          }\n        });\n\n    setViewsVisible(false);\n\n    getData();\n\n    SeekBar seekBar = (SeekBar) findViewById(R.id.seekBar1);\n    Calendar c = Calendar.getInstance();\n    int y = c.get(Calendar.YEAR);\n    seekBar.setMax(y - 2004);\n    seekBar.setOnSeekBarChangeListener(\n        new SeekBar.OnSeekBarChangeListener() {\n\n          public void onStopTrackingTouch(SeekBar seekBar) {}\n\n          public void onStartTrackingTouch(SeekBar seekBar) {}\n\n          public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n\n            TextView tv = (TextView) findViewById(R.id.tvOnFbValue);\n            tv.setText(progress + \"lat\");\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 216, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 366, "focalAPIEnd": 403, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/ApiDemos/src/com/example/android/apis/app/CustomTitle.java", "rawCode": "  /**\n   * Initialization of the Activity after it is first created. Must at least call {@link\n   * android.app.Activity#setContentView(int)} to describe what is to be displayed in the screen.\n   */\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);\n    setContentView(R.layout.custom_title);\n    getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.custom_title_1);\n\n    final TextView leftText = (TextView) findViewById(R.id.left_text);\n    final TextView rightText = (TextView) findViewById(R.id.right_text);\n    final EditText leftTextEdit = (EditText) findViewById(R.id.left_text_edit);\n    final EditText rightTextEdit = (EditText) findViewById(R.id.right_text_edit);\n    Button leftButton = (Button) findViewById(R.id.left_text_button);\n    Button rightButton = (Button) findViewById(R.id.right_text_button);\n\n    leftButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            leftText.setText(leftTextEdit.getText());\n          }\n        });\n    rightButton.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            rightText.setText(rightTextEdit.getText());\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 217, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 260, "focalAPIEnd": 293, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zsol/Mms/tree/master/src/com/android/mms/ui/ManageSimMessages.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n\n    mContentResolver = getContentResolver();\n    mQueryHandler = new QueryHandler(mContentResolver, this);\n    setContentView(R.layout.sim_list);\n    mSimList = (ListView) findViewById(R.id.messages);\n    mMessage = (TextView) findViewById(R.id.empty_message);\n\n    init();\n  }\n"}, {"dataset": "setContentView", "exampleID": 218, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 150, "focalAPIEnd": 181, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gceylan/pro-lang/tree/master/android/GenelTekrar/src/com/gceylan/geneltekrar/ekran2.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    // TODO Auto-generated method stub\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.ekran2);\n  }\n"}, {"dataset": "setContentView", "exampleID": 219, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 428, "focalAPIEnd": 457, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RudolfWeeber/eyes-free/tree/master/trunk/documentation/RockLockTutorial/RockLock_02/src/com/marvin/rocklock/RockLockActivity.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    // Start the service in case it is not already running\n    startService(new Intent(this, ScreenOnHandlerService.class));\n\n    requestWindowFeature(android.view.Window.FEATURE_NO_TITLE);\n    getWindow().addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);\n\n    setContentView(R.layout.main);\n\n    mp = new MusicPlayer(this);\n\n    final TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);\n    tm.listen(\n        new PhoneStateListener() {\n          @Override\n          public void onCallStateChanged(int state, String incomingNumber) {\n            // If the phone is not idle, immediately quit and let the\n            // default lock screen handle it.\n            if (state != TelephonyManager.CALL_STATE_IDLE) {\n              finish();\n              return;\n            }\n          }\n        },\n        PhoneStateListener.LISTEN_CALL_STATE);\n\n    unlockButton = (Button) findViewById(R.id.unlockButton);\n    unlockButton.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            dismissSlideUnlockScreen();\n          }\n        });\n\n    IntentFilter filter = new IntentFilter();\n    filter.addAction(Intent.ACTION_MEDIA_BUTTON);\n    filter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY);\n    registerReceiver(mediaButtonReceiver, filter);\n\n    uiAnimation = new AnimationLayer(this);\n\n    gestureOverlay =\n        new GestureOverlay(\n            this,\n            new GestureListener() {\n\n              @Override\n              public void onGestureChange(int g) {\n                isSeeking = false;\n                uiAnimation.setDirection(g);\n                switch (g) {\n                  case Gesture.UPLEFT:\n                    updateDisplayText(getString(R.string.previous_artist), mp.getPrevArtistName());\n                    break;\n                  case Gesture.UP:\n                    updateDisplayText(getString(R.string.previous_album), mp.getPrevAlbumName());\n                    break;\n                  case Gesture.UPRIGHT:\n                    updateDisplayText(getString(R.string.next_artist), mp.getNextArtistName());\n                    break;\n                  case Gesture.LEFT:\n                    updateDisplayText(getString(R.string.previous_track), mp.getPrevTrackName());\n                    break;\n                  case Gesture.CENTER:\n                    if (mp.isPlaying()) {\n                      updateDisplayText(getString(R.string.pause), mp.getCurrentSongInfo());\n                    } else {\n                      updateDisplayText(getString(R.string.play), mp.getCurrentSongInfo());\n                    }\n                    break;\n                  case Gesture.RIGHT:\n                    updateDisplayText(getString(R.string.next_track), mp.getNextTrackName());\n                    break;\n                  case Gesture.DOWNLEFT:\n                    if (seekingStopped) {\n                      updateDisplayText(getString(R.string.rewind), mp.getCurrentSongInfo());\n                      isSeeking = true;\n                      new Thread(new Seeker(-1)).start();\n                    }\n                    break;\n                  case Gesture.DOWN:\n                    updateDisplayText(getString(R.string.next_album), mp.getNextAlbumName());\n                    break;\n                  case Gesture.DOWNRIGHT:\n                    if (seekingStopped) {\n                      updateDisplayText(getString(R.string.fast_forward), mp.getCurrentSongInfo());\n                      isSeeking = true;\n                      new Thread(new Seeker(1)).start();\n                    }\n                    break;\n                }\n              }\n\n              @Override\n              public void onGestureFinish(int g) {\n                isSeeking = false;\n                uiAnimation.setDirection(-1);\n                switch (g) {\n                  case Gesture.UPLEFT:\n                    mp.prevArtist();\n                    break;\n                  case Gesture.UP:\n                    mp.prevAlbum();\n                    break;\n                  case Gesture.UPRIGHT:\n                    mp.nextArtist();\n                    break;\n                  case Gesture.LEFT:\n                    mp.prevTrack();\n                    break;\n                  case Gesture.CENTER:\n                    mp.togglePlayPause();\n                    break;\n                  case Gesture.RIGHT:\n                    mp.nextTrack();\n                    break;\n                  case Gesture.DOWN:\n                    mp.nextAlbum();\n                    break;\n                }\n                updateDisplayText(null, null);\n              }\n\n              @Override\n              public void onGestureStart(int g) {\n                poked = true;\n                isSeeking = false;\n              }\n            });\n\n    contentFrame = (FrameLayout) findViewById(R.id.contentFrame);\n    View textLayer = this.getLayoutInflater().inflate(R.layout.textlayer, null);\n    dateText = (TextView) textLayer.findViewById(R.id.dateText);\n    statusText = (TextView) textLayer.findViewById(R.id.statusText);\n    infoText = (TextView) textLayer.findViewById(R.id.infoText);\n    contentFrame.addView(uiAnimation);\n    contentFrame.addView(textLayer);\n    contentFrame.addView(gestureOverlay);\n  }\n"}, {"dataset": "setContentView", "exampleID": 220, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 163, "focalAPIEnd": 193, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/amcereijo/trcardmanager/tree/master/src/com/trcardmanager/login/TRCardManagerLoginActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    requestWindowFeature(Window.FEATURE_NO_TITLE);\n\n    setContentView(R.layout.login);\n\n    TRCardManagerApplication.setActualActivity(this);\n\n    findRemeberedUser();\n    prepareLoginView();\n  }\n"}, {"dataset": "setContentView", "exampleID": 221, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 163, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ConicalRom/platform_packages_apps_settings/tree/master/src/com/android/settings/ChooseLockPatternExample.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.choose_lock_pattern_example);\n    initViews();\n  }\n"}, {"dataset": "setContentView", "exampleID": 222, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 143, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/meca1012/ShareYourSpot/tree/master/ShareYourSpot_Client/src/de/hska/shareyourspot/android/activites/Friends.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.friends);\n\n    this.listUsers = (ListView) findViewById(R.id.list_friends);\n  }\n"}, {"dataset": "setContentView", "exampleID": 223, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 126, "focalAPIEnd": 174, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/janrain/jump.android/tree/master/Samples/SimpleDemo/src/com/janrain/android/simpledemo/LinkListActivity.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    Log.d(TAG, \"[onCreate]\");\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.linked_account_listview);\n    mLinkAccount = (Button) findViewById(R.id.btn_link_account);\n    mLinkAccount.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View v) {\n            if (Jump.getSignedInUser() != null && Jump.getAccessToken() != null) {\n              link_unlink = true;\n              Jump.showSocialSignInDialog(LinkListActivity.this, null, true, mJREngageDelegate);\n\n            } else {\n              LinkListActivity.this.startActivity(\n                  new Intent(\n                      LinkListActivity.this, com.janrain.android.simpledemo.MainActivity.class));\n            }\n          }\n        });\n    link_account = (ListView) findViewById(android.R.id.list);\n    validateSignedInUser();\n    link_account.setOnItemClickListener(\n        new OnItemClickListener() {\n\n          @Override\n          public void onItemClick(AdapterView<?> a, View v, int position, long id) {\n            setPosition(position);\n\n            mIdentifier = (TextView) v.findViewById(R.id.row_profile_linkaccount_label);\n            unlinkAccount = (ImageView) v.findViewById(R.id.row_unlink_btn);\n\n            AlertDialog.Builder b = new AlertDialog.Builder(LinkListActivity.this);\n            b.setTitle(\"Unlink Account\");\n            b.setMessage(\"Do you want to unlink the account?\");\n            b.setPositiveButton(\n                \"Unlink\",\n                new DialogInterface.OnClickListener() {\n                  public void onClick(DialogInterface dialog, int whichButton) {\n                    link_unlink = false;\n                    if (!Jump.getSignedInUser().hasPassword()) {\n                      if (link_account.getChildCount() > 1) {\n                        Jump.performUnlinkAccount(\n                            String.valueOf(mIdentifier.getText()), captureApiResultHandler);\n                      } else {\n                        Toast.makeText(\n                                LinkListActivity.this,\n                                \"Cannot unlink this account\",\n                                Toast.LENGTH_LONG)\n                            .show();\n                      }\n                    } else {\n                      Jump.performUnlinkAccount(\n                          String.valueOf(mIdentifier.getText()), captureApiResultHandler);\n                    }\n                    dialog.dismiss();\n                  }\n                });\n            b.setNegativeButton(\n                \"Cancel\",\n                new DialogInterface.OnClickListener() {\n                  public void onClick(DialogInterface dialog, int whichButton) {\n                    dialog.dismiss();\n                  }\n                });\n            b.show();\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 224, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 164, "focalAPIEnd": 201, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MIPS/cts/tree/master/tests/src/android/app/cts/AppStubActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    mRequestWinFeatureRet = requestWindowFeature(1);\n    setContentView(R.layout.app_activity);\n  }\n"}, {"dataset": "setContentView", "exampleID": 225, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 317, "focalAPIEnd": 347, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rogerhzh/linphone_XIA/tree/master/src/org/linphone/setup/SetupActivity.java", "rawCode": "  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    if (getResources().getBoolean(R.bool.isTablet)\n        && getRequestedOrientation() != ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE) {\n      setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n    }\n\n    setContentView(R.layout.setup);\n    firstFragment =\n        getResources().getBoolean(R.bool.setup_use_linphone_as_first_fragment)\n            ? SetupFragmentsEnum.LINPHONE_LOGIN\n            : SetupFragmentsEnum.WELCOME;\n    if (findViewById(R.id.fragmentContainer) != null) {\n      if (savedInstanceState == null) {\n        display(firstFragment);\n      } else {\n        currentFragment =\n            (SetupFragmentsEnum) savedInstanceState.getSerializable(\"CurrentFragment\");\n      }\n    }\n\n    mPref = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());\n\n    initUI();\n    instance = this;\n  };\n"}, {"dataset": "setContentView", "exampleID": 226, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 84, "focalAPIEnd": 113, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/abajwa/csci498Android/tree/master/LunchList/src/csci498/abajwa/lunchlist/HelpPage.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    setContentView(R.layout.help);\n\n    browser = (WebView) findViewById(R.id.webkit);\n    browser.loadUrl(\"file:///android_asset/help.html\");\n  }\n"}, {"dataset": "setContentView", "exampleID": 227, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 280, "focalAPIEnd": 309, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/julenka/asui-sp13/tree/master/AUIS-HW3-schwarz-julia/src/homework3/android/WindowGroup.java", "rawCode": "  @Override\n  /**\n   * Sets the content of the page to be the layout defined in layout/text.xml Gets the drawView and\n   * debugView Starts a method which waits until the\n   */\n  public void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.test);\n\n    // title is set in AndroidManifest.xml\n    // canvas is setup in onDraw in DrawView\n\n    debugTextView = (TextView) findViewById(R.id.debugText);\n    debugTextView.setTextColor(Color.WHITE);\n    debugTextView.setTextSize(16);\n\n    // if useConsole is true, print of log message in LogCat\n    if (useConsole) {\n      debugTextView.setText(\"Messages printed in LogCat\");\n    }\n    // else, initialize debugString, which is the output string for the debug text area\n    else {\n      debugString = \"\";\n    }\n\n    println(\"Starting WindowGroup\");\n\n    drawView = (DrawView) findViewById(R.id.drawView);\n\n    // draw the window once the drawView has been set up.\n    final GraphicalObject me = this;\n    Thread t =\n        new Thread(\n            new Runnable() {\n              public void run() {\n                while (!drawView.getOnDrawFirstCalled()) {\n                  try {\n                    Thread.sleep(200);\n                  } catch (InterruptedException e) {\n                    e.printStackTrace();\n                  }\n                }\n                setup();\n                addClipRect(new BoundaryRectangle(0, 0, drawView.getWidth(), drawView.getHeight()));\n                redraw();\n              }\n            });\n    t.start();\n  }\n"}, {"dataset": "setContentView", "exampleID": 228, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 158, "focalAPIEnd": 196, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/WSO2Mobile/wso2mobileserver/tree/master/products/mdm/modules/android-client/src/com/wso2mobile/mdm/MainActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // setContentView(R.layout.activity_main);\n    setContentView(R.layout.activity_main);\n\n    devicePolicyManager = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);\n    demoDeviceAdmin = new ComponentName(this, WSO2MobileDeviceAdminReceiver.class);\n    context = this;\n\n    Bundle extras = getIntent().getExtras();\n    if (extras != null) {\n      if (extras.containsKey(getResources().getString(R.string.intent_extra_regid))) {\n        regId = extras.getString(getResources().getString(R.string.intent_extra_regid));\n      }\n\n      if (extras.containsKey(getResources().getString(R.string.intent_extra_email))) {\n        email = extras.getString(getResources().getString(R.string.intent_extra_email));\n      }\n    }\n\n    if (regId.equals(\"\") || regId == null) {\n      GCMRegistrar.register(this, CommonUtilities.SENDER_ID);\n    }\n    if (GCMRegistrar.isRegisteredOnServer(this)) {\n      regId = GCMRegistrar.getRegistrationId(this);\n    }\n\n    SharedPreferences mainPref =\n        this.getSharedPreferences(\n            getResources().getString(R.string.shared_pref_package), Context.MODE_PRIVATE);\n    Editor editor = mainPref.edit();\n    editor.putString(getResources().getString(R.string.shared_pref_username), email);\n    editor.commit();\n\n    // Enroll automatically\n    final Context context = MainActivity.this;\n    mRegisterTask =\n        new AsyncTask<Void, Void, String>() {\n\n          @Override\n          protected String doInBackground(Void... params) {\n            // boolean registered = ServerUtilities.register(context, regId);\n            // ServerUtilities.register(context, regId);\n            try {\n              regState = ServerUtilities.register(regId, context);\n            } catch (Exception e) {\n              e.printStackTrace();\n            }\n            return null;\n          }\n\n          ProgressDialog progressDialog;\n          // declare other objects as per your need\n          @Override\n          protected void onPreExecute() {\n            progressDialog =\n                ProgressDialog.show(\n                    MainActivity.this,\n                    getResources().getString(R.string.dialog_enrolling),\n                    getResources().getString(R.string.dialog_please_wait),\n                    true);\n\n            // do initialization of required objects objects here\n          };\n\n          @Override\n          protected void onPostExecute(String result) {\n            if (progressDialog != null && progressDialog.isShowing()) {\n              progressDialog.dismiss();\n            }\n            if (regState) {\n              Intent intent = new Intent(MainActivity.this, AlreadyRegisteredActivity.class);\n              intent.putExtra(getResources().getString(R.string.intent_extra_regid), regId);\n              intent.putExtra(getResources().getString(R.string.intent_extra_fresh_reg_flag), true);\n              intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n              startActivity(intent);\n              // finish();\n            } else {\n              Intent intent = new Intent(MainActivity.this, AuthenticationErrorActivity.class);\n              intent.putExtra(getResources().getString(R.string.intent_extra_regid), regId);\n              intent.putExtra(\n                  getResources().getString(R.string.intent_extra_from_activity),\n                  MainActivity.class.getSimpleName());\n              intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n              startActivity(intent);\n              // finish();\n            }\n            // }else{\n            // btnLayout.setVisibility(View.VISIBLE);\n            // progressDialog.dismiss();\n            // }\n            mRegisterTask = null;\n          }\n        };\n    mRegisterTask.execute(null, null, null);\n\n    btnEnroll = (Button) findViewById(R.id.btnEnroll);\n    btnLayout = (RelativeLayout) findViewById(R.id.enrollPanel);\n    // ImageView optionBtn = (ImageView) findViewById(R.id.option_button);\n\n    btnEnroll.setOnClickListener(\n        new OnClickListener() {\n\n          @Override\n          public void onClick(View v) {\n            // TODO Auto-generated method stub\n            mRegisterTask =\n                new AsyncTask<Void, Void, String>() {\n\n                  @Override\n                  protected String doInBackground(Void... params) {\n                    // boolean registered = ServerUtilities.register(context, regId);\n                    // ServerUtilities.register(context, regId);\n                    try {\n                      regState = ServerUtilities.register(regId, context);\n                    } catch (Exception e) {\n                      e.printStackTrace();\n                    }\n\n                    return null;\n                  }\n\n                  ProgressDialog progressDialog;\n                  // declare other objects as per your need\n                  @Override\n                  protected void onPreExecute() {\n                    progressDialog =\n                        ProgressDialog.show(\n                            MainActivity.this,\n                            getResources().getString(R.string.dialog_enrolling),\n                            getResources().getString(R.string.dialog_please_wait),\n                            true);\n\n                    // do initialization of required objects objects here\n                  };\n\n                  @Override\n                  protected void onPostExecute(String result) {\n                    if (progressDialog != null && progressDialog.isShowing()) {\n                      progressDialog.dismiss();\n                    }\n                    if (regState) {\n                      Intent intent =\n                          new Intent(MainActivity.this, AlreadyRegisteredActivity.class);\n                      intent.putExtra(getResources().getString(R.string.intent_extra_regid), regId);\n                      intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n                      startActivity(intent);\n                      // finish();\n                    } else {\n                      Intent intent =\n                          new Intent(MainActivity.this, AuthenticationErrorActivity.class);\n                      intent.putExtra(getResources().getString(R.string.intent_extra_regid), regId);\n                      intent.putExtra(\n                          getResources().getString(R.string.intent_extra_from_activity),\n                          MainActivity.class.getSimpleName());\n                      intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n                      startActivity(intent);\n                      // finish();\n                    }\n                    // }else{\n                    // btnLayout.setVisibility(View.VISIBLE);\n                    // progressDialog.dismiss();\n                    // }\n                    mRegisterTask = null;\n                  }\n                };\n            mRegisterTask.execute(null, null, null);\n          }\n        });\n\n    /*btnEnroll.setOnClickListener(new OnClickListener() {\n\n    @Override\n    public void onClick(View v) {\n\n    final Context context = MainActivity.this;\n    mRegisterTask = new AsyncTask<Void, Void, Void>() {\n\n    @Override\n    protected Void doInBackground(Void... params) {\n    // boolean registered = ServerUtilities.register(context, regId);\n    // ServerUtilities.register(context, regId);\n    ServerUtilities.register(regId, context);\n\n    return null;\n    }\n\n    ProgressDialog progressDialog;\n    //declare other objects as per your need\n    @Override\n    protected void onPreExecute()\n    {\n    progressDialog= ProgressDialog.show(MainActivity.this, \"Enrolling Device\",\"Please wait\", true);\n\n    //do initialization of required objects objects here\n    };\n    @Override\n    protected void onPostExecute(Void result) {\n    //Direct to register successful class\n    Intent intent = new Intent(MainActivity.this,RegisterSuccessful.class);\n    intent.putExtra(\"regid\", regId);\n    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n    startActivity(intent);\n    finish();\n    mRegisterTask = null;\n    //progressDialog.dismiss();\n    }\n\n    };\n    mRegisterTask.execute(null, null, null);\n\n    }\n    });*/\n  }\n"}, {"dataset": "setContentView", "exampleID": 229, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 475, "focalAPIEnd": 504, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rgladwell/m2e-android/tree/master/me.gladwell.eclipse.m2e.android.test/projects/android-application/src/main/java/your/company/HelloAndroidActivity.java", "rawCode": "  /**\n   * Called when the activity is first created.\n   *\n   * @param savedInstanceState If the activity is being re-initialized after previously being shut\n   *     down then this Bundle contains the data it most recently supplied in\n   *     onSaveInstanceState(Bundle). <b>Note: Otherwise it is null.</b>\n   */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    Log.i(TAG, StringUtils.capitalize(\"onCreate\"));\n    setContentView(R.layout.main);\n  }\n"}, {"dataset": "setContentView", "exampleID": 230, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 99, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bkrieger/fruity/tree/master/src/edu/upenn/cis/fruity/SalesSelectionActivity.java", "rawCode": "  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sales_item_selection);\n\n    // Pre-process which whole fruits are available.\n    DatabaseHandler dh = DatabaseHandler.getInstance(this);\n    FruitStand currentStand = dh.getCurrentFruitStand();\n    ProcessedInventoryItem[] currentItems = currentStand.getProcessedInventoryItems(this);\n    availableItems = new HashSet<String>();\n    for (ProcessedInventoryItem i : currentItems) {\n      if (i.count > 0) {\n        availableItems.add(i.item_name);\n        if (i.item_name.startsWith(\"other1:\")) other1name = i.item_name.substring(7);\n        if (i.item_name.startsWith(\"other2:\")) other2name = i.item_name.substring(7);\n      }\n    }\n\n    Intent intent = getIntent();\n    age_category = intent.getIntExtra(\"age_category\", -1);\n    isMale = intent.getBooleanExtra(\"isMale\", true);\n\n    mixedBags = 0;\n    smoothies = 0;\n    granola = 0;\n    apples = 0;\n    oranges = 0;\n    grapes = 0;\n    pears = 0;\n    bananas = 0;\n    kiwis = 0;\n    total = 0;\n    other1 = 0;\n    other2 = 0;\n    onPopup = false;\n\n    putBackCounts();\n  }\n"}, {"dataset": "setContentView", "exampleID": 231, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 84, "focalAPIEnd": 118, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/coolya/subsonic/tree/master/subsonic-android/src/net/sourceforge/subsonic/androidapp/activity/EqualizerActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle bundle) {\n    super.onCreate(bundle);\n    setContentView(R.layout.equalizer);\n    equalizerController = DownloadServiceImpl.getInstance().getEqualizerController();\n    equalizer = equalizerController.getEqualizer();\n\n    initEqualizer();\n\n    final View presetButton = findViewById(R.id.equalizer_preset);\n    registerForContextMenu(presetButton);\n    presetButton.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View view) {\n            presetButton.showContextMenu();\n          }\n        });\n\n    CheckBox enabledCheckBox = (CheckBox) findViewById(R.id.equalizer_enabled);\n    enabledCheckBox.setChecked(equalizer.getEnabled());\n    enabledCheckBox.setOnCheckedChangeListener(\n        new CompoundButton.OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\n            setEqualizerEnabled(b);\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 232, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 160, "focalAPIEnd": 189, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/botaydotcom/iCreate/tree/master/src/com/android/apptime/Main.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    Resources res = getResources();\n    TabHost tabHost = getTabHost();\n    TabHost.TabSpec spec;\n    Intent intent;\n\n    intent = new Intent().setClass(this, CalendarView.class);\n\n    spec =\n        tabHost\n            .newTabSpec(\"calendar\")\n            .setIndicator(\"Calendar\", res.getDrawable(R.drawable.ic_tab_calendar))\n            .setContent(intent);\n    tabHost.addTab(spec);\n\n    intent = new Intent().setClass(this, MapView.class);\n    spec =\n        tabHost\n            .newTabSpec(\"map\")\n            .setIndicator(\"Map\", res.getDrawable(R.drawable.ic_tab_map))\n            .setContent(intent);\n    tabHost.addTab(spec);\n\n    intent = new Intent().setClass(this, OrganizerView.class);\n    spec =\n        tabHost\n            .newTabSpec(\"organizer\")\n            .setIndicator(\"Organizer\", res.getDrawable(R.drawable.ic_tab_organizer))\n            .setContent(intent);\n    tabHost.addTab(spec);\n\n    tabHost.setCurrentTab(0);\n\n    String s = getResources().getString(R.string.apikeyfield);\n    // startService(new Intent(Main.this,IvleDataPuller.class));\n    // stopService(new Intent(Main.this,IvleDataPuller.class));\n    DatabaseInterface database = DatabaseInterface.getDatabaseInterface(getApplicationContext());\n    database.OpenDatabase(getApplicationContext());\n    // List<String> alerttype = new ArrayList<String>(); alerttype.add(\"alert1\");\n    // Date starttime= new Date(1221423535);\n    // Date endtime = new Date(122142400);\n    // Date alerttime = new Date(122142340);\n    // Item item = new Item(\"title test\",\n    // \"description test\", \"location test\", \"category test\", alerttype,\n    // \"priority test\", \"Event\", starttime,\n    // endtime, null, alerttime, \"repeat test\",\n    // \"completed test\", 1);\n    // //database.AddItemToDatabase(getApplicationContext(), item);\n    // //database.AddItemToDatabase(this.getApplicationContext(),item);\n    //\n    // database.RetrieveItemFromDatabase(getApplicationContext(), 5);\n    DateFormat dfm = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    try {\n      Date a = dfm.parse(\"1970-01-02 09:55:42\"); // Fri, 02 Jan 1970 09:55:42 GMT\n      a = new Date(1221423535);\n      // database.RetrieveItemFromDatabase(getApplicationContext(), a);\n      int yu = 0;\n    } catch (ParseException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n    database.CloseDatabase();\n\n    /*\n     * DatabaseInterface db = new DatabaseInterface(this); List<String>\n     * alerttype = new ArrayList<String>(); alerttype.add(\"alert1\");\n     * alerttype.add(\"alert2\"); Item item = new Item(\"title test\",\n     * \"description test\", \"location test\", \"category test\", alerttype,\n     * \"priority test\", \"Event\", \"1991-07-11 12:08:12\",\n     * \"2007-02-26 20:15:00\", null, \"2014-08-20 20:21:22\", \"repeat test\",\n     * \"completed test\", 1); String et = item.GetAlertTime(); //String et1 =\n     * item.GetDeadline(); idb.createEvent(item);\n     *\n     * item.SetTitle(\"title test 2\"); idb.updateEvent(item);\n     * db.AddItemToDatabase(this, item); Cursor mycs = idb.getEventById(1);\n     * String titletest = mycs.getString(8);\n     */\n    // Date newdate = new Date();\n    // long ttt = newdate.getTime();\n    // /*\n    // Date olddate = new Date(\"1991-07-11 12:08:12\");\n    // boolean tttt = false;\n    // if (olddate.getTime() < newdate.getTime()) tttt=true;\n    // */\n    //\n    //\n    // DateFormat dfm = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    // try {\n    // Date a = dfm.parse(\"2007-02-26 20:15:00\");\n    // int yu= 0;\n    // } catch (ParseException e) {\n    // // TODO Auto-generated catch block\n    // e.printStackTrace();\n    // }\n    //\n    //\n    // newdb.close();\n    // IvleTimetableData timetable = new IvleTimetableData();\n    //\n\n  }\n"}, {"dataset": "setContentView", "exampleID": 233, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 96, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/initrc/sharedsolar-android/tree/master/src/org/sharedsolar/VendorAddCreditReceipt.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.vendor_add_credit_receipt);\n\n    String info = null;\n    Bundle extras = getIntent().getExtras();\n    if (extras != null) info = extras.getString(\"info\");\n    if (info == null) info = \"\";\n\n    ((TextView) findViewById(R.id.vendorAddCreditReceiptInfo)).setText(info);\n\n    ((Button) findViewById(R.id.vendorAddCreditReceiptOkBtn))\n        .setOnClickListener(\n            new OnClickListener() {\n              public void onClick(View v) {\n                Intent intent = new Intent(v.getContext(), VendorHome.class);\n                startActivity(intent);\n              }\n            });\n  }\n"}, {"dataset": "setContentView", "exampleID": 234, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/riis/AndroidArduino/tree/master/AndroidArduinoRS232/Android/src/com/riis/androidarduino/rs232/MainActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    usbComm = new UsbComm(this);\n    usbComm.shouldPrintLogMsgs(true);\n\n    keepRunning = true;\n    displayedStatus = false;\n    lastStatus = false;\n\n    setUpGUI();\n  }\n"}, {"dataset": "setContentView", "exampleID": 235, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ese-unibe-ch/ese2013-team3/tree/master/WordFinder/src/ch/unibe/scg/team3/wordfinder/ReceivedRequestsActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_received_requests);\n    requests = new ArrayList<User>();\n    requestHandler = new RequestHandler(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 236, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 169, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/darklord777/ProyectoCargaAcademica/tree/master/cargaAcademicaEISI/src/sv/ues/fia/cargaacademicaeisi/ActividadAcademicaMenuActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_actividad_academica_menu);\n\n    ActividadAcad_insertar = (Button) findViewById(R.id.btn_MenuActividadAcad_Ins);\n    ActividadAcad_insertar.setOnClickListener(this);\n    ActividadAcad_consultar = (Button) findViewById(R.id.btn_MenuActividadAcad_Cons);\n    ActividadAcad_consultar.setOnClickListener(this);\n    ActividadAcad_eliminar = (Button) findViewById(R.id.btn_MenuActividadAcad_Elim);\n    ActividadAcad_eliminar.setOnClickListener(this);\n    ActividadAcad_actualizar = (Button) findViewById(R.id.btn_MenuActividadAcad_Act);\n    ActividadAcad_actualizar.setOnClickListener(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 237, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 109, "focalAPIEnd": 139, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tmobile/themes-platform-packages-apps-Email/tree/master/src/com/android/email/activity/Debug.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.debug);\n\n    mPreferences = Preferences.getPreferences(this);\n\n    mVersionView = (TextView) findViewById(R.id.version);\n    mEnableDebugLoggingView = (CheckBox) findViewById(R.id.debug_logging);\n    mEnableSensitiveLoggingView = (CheckBox) findViewById(R.id.sensitive_logging);\n\n    mEnableDebugLoggingView.setOnCheckedChangeListener(this);\n    mEnableSensitiveLoggingView.setOnCheckedChangeListener(this);\n\n    mVersionView.setText(\n        String.format(\n            getString(R.string.debug_version_fmt).toString(), getString(R.string.build_number)));\n\n    mEnableDebugLoggingView.setChecked(Email.DEBUG);\n    mEnableSensitiveLoggingView.setChecked(Email.DEBUG_SENSITIVE);\n\n    // EXCHANGE-REMOVE-SECTION-START\n    mEnableExchangeLoggingView = (CheckBox) findViewById(R.id.exchange_logging);\n    mEnableExchangeFileLoggingView = (CheckBox) findViewById(R.id.exchange_file_logging);\n    mEnableExchangeLoggingView.setOnCheckedChangeListener(this);\n    mEnableExchangeFileLoggingView.setOnCheckedChangeListener(this);\n    mEnableExchangeLoggingView.setChecked(Eas.USER_LOG);\n    mEnableExchangeFileLoggingView.setChecked(Eas.FILE_LOG);\n    // EXCHANGE-REMOVE-SECTION-END\n  }\n"}, {"dataset": "setContentView", "exampleID": 238, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 336, "focalAPIEnd": 373, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thiendamvam/WhyQ/tree/master/Code/src/whyq/view/ImageDetail.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // setStyle(DialogFragment.STYLE_NO_TITLE, STYLE_NO_TITLE);\n    // setStyle(DialogFragment.STYLE_NO_FRAME, DialogFragment.STYLE_NORMAL);\n    // View v = LayoutInflater.from(getParent()).inflate(R.layout.image_detail, null);\n    setContentView(R.layout.image_detail);\n    ListActivity.isRefesh = false;\n    this.url = getIntent().getExtras().getString(\"url\");\n    btnClose = (Button) findViewById(R.id.btnClose);\n    webImageView = (WebImageView) findViewById(R.id.thumbnail);\n    if (url != null) {\n      webImageView.setImageUrl(url);\n      webImageView.loadImage();\n    }\n    btnClose.setOnClickListener(\n        new View.OnClickListener() {\n\n          @Override\n          public void onClick(View arg0) {\n            // TODO Auto-generated method stub\n            finish();\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 239, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 88, "focalAPIEnd": 132, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kitkatandroid/JLS36G_base/tree/master/core/tests/coretests/src/android/widget/scroll/RequestRectangleVisible.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    setContentView(R.layout.scroll_to_rectangle);\n\n    final Rect rect = new Rect();\n    final View childToMakeVisible = findViewById(R.id.childToMakeVisible);\n\n    final TextView topBlob = (TextView) findViewById(R.id.topBlob);\n    final TextView bottomBlob = (TextView) findViewById(R.id.bottomBlob);\n\n    // estimate to get blobs larger than screen\n    int screenHeight = getWindowManager().getDefaultDisplay().getHeight();\n    int numLinesForScreen = screenHeight / 18;\n\n    for (int i = 0; i < numLinesForScreen; i++) {\n      topBlob.append(i + \" another line in the blob\\n\");\n      bottomBlob.append(i + \" another line in the blob\\n\");\n    }\n\n    findViewById(R.id.scrollToRectFromTop)\n        .setOnClickListener(\n            new View.OnClickListener() {\n\n              public void onClick(View v) {\n                rect.set(0, 0, childToMakeVisible.getLeft(), childToMakeVisible.getHeight());\n                childToMakeVisible.requestRectangleOnScreen(rect, true);\n              }\n            });\n\n    findViewById(R.id.scrollToRectFromTop2)\n        .setOnClickListener(\n            new View.OnClickListener() {\n\n              public void onClick(View v) {\n                rect.set(0, 0, topBlob.getWidth(), topBlob.getHeight());\n                topBlob.requestRectangleOnScreen(rect, true);\n              }\n            });\n\n    findViewById(R.id.scrollToRectFromBottom)\n        .setOnClickListener(\n            new View.OnClickListener() {\n\n              public void onClick(View v) {\n                rect.set(0, 0, childToMakeVisible.getLeft(), childToMakeVisible.getHeight());\n                childToMakeVisible.requestRectangleOnScreen(rect, true);\n              }\n            });\n\n    findViewById(R.id.scrollToRectFromBottom2)\n        .setOnClickListener(\n            new View.OnClickListener() {\n\n              public void onClick(View v) {\n                rect.set(0, 0, bottomBlob.getWidth(), bottomBlob.getHeight());\n                bottomBlob.requestRectangleOnScreen(rect, true);\n              }\n            });\n  }\n"}, {"dataset": "setContentView", "exampleID": 240, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tonnguye/csci498android/tree/master/LunchList/src/csci498/tonnguye/lunchlist/LunchList.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    LunchFragment lunch = (LunchFragment) getSupportFragmentManager().findFragmentById(R.id.lunch);\n\n    lunch.setOnRestaurantListener(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 241, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 151, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/xinyis/android-training/tree/master/projects/fundamentals/5th/StyledActionBarSample/src/jp/mixi/sample/actionbar/sherlock/styled/SherlockTabNavigationActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sample);\n\n    // タブナビゲーションモードに設定\n    getSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\n    // タブを作成して追加。タブの選択・解除・再選択をハンドリングするコールバックの TabListener をセットしないと実行時例外でクラッシュする\n    getSupportActionBar()\n        .addTab(getSupportActionBar().newTab().setText(\"Tab1\").setTabListener(this));\n    getSupportActionBar()\n        .addTab(getSupportActionBar().newTab().setText(\"Tab2\").setTabListener(this));\n    getSupportActionBar()\n        .addTab(getSupportActionBar().newTab().setText(\"Tab3\").setTabListener(this));\n  }\n"}, {"dataset": "setContentView", "exampleID": 242, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 161, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/galievruslan/mss-android/tree/master/mss/src/com/mss/application/RoutePointEditActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_route_point_edit);\n\n    mRoutePointId =\n        getIntent().getLongExtra(KEY_ROUTE_POINT_ID, RoutePointActivity.ROUTE_POINT_ID_NEW);\n\n    mHelper = OpenHelperManager.getHelper(this, DatabaseHelper.class);\n    try {\n      mRouteService = new RouteService(mHelper);\n      mRoutePointService = new RoutePointService(mHelper);\n      mCustomerService = new CustomerService(mHelper);\n      mShippingAddressService = new ShippingAddressService(mHelper);\n    } catch (Throwable e) {\n      Log.e(TAG, e.getMessage());\n    }\n\n    String routeDateStr = getIntent().getStringExtra(KEY_ROUTE_DATE);\n    if (routeDateStr != null && routeDateStr != \"\") {\n      try {\n        DateFormat format = SimpleDateFormat.getDateInstance();\n        mRouteDate = format.parse(getIntent().getStringExtra(KEY_ROUTE_DATE));\n      } catch (ParseException e) {\n        Log.e(TAG, e.getMessage());\n      }\n    }\n\n    if (mRoutePointId != RoutePointActivity.ROUTE_POINT_ID_NEW) {\n      mRoutePoint = mRoutePointService.getById(mRoutePointId);\n      Route route = mRouteService.getById(mRoutePoint.getRouteId());\n      mRouteDate = route.getDate();\n\n      mShippingAddress = mShippingAddressService.getById(mRoutePoint.getShippingAddressId());\n      if (mShippingAddress != null)\n        mCustomer = mCustomerService.getByShippingAddress(mShippingAddress);\n\n      getSupportLoaderManager().initLoader(LOADER_ID_ROUTE_POINT, null, this);\n    }\n\n    mCustomerEditText = (EditText) findViewById(R.id.customer_edit_text);\n    mShippinAddressEditText = (EditText) findViewById(R.id.shipping_address_edit_text);\n    mCustomerEditText.setOnClickListener(\n        new TextView.OnClickListener() {\n          @Override\n          public void onClick(View view) {\n            Intent customersActivity = new Intent(getApplicationContext(), CustomersActivity.class);\n            startActivityForResult(customersActivity, PICK_CUSTOMER_REQUEST);\n          }\n        });\n\n    mCustomerEditText.setKeyListener(null);\n\n    mShippinAddressEditText.setOnClickListener(\n        new TextView.OnClickListener() {\n          @Override\n          public void onClick(View view) {\n            Intent shippingAddressesActivity =\n                new Intent(getApplicationContext(), ShippingAddressesActivity.class);\n            if (mCustomer != null) {\n              shippingAddressesActivity.putExtra(\"customer_id\", (Long) mCustomer.getId());\n            }\n            startActivityForResult(shippingAddressesActivity, PICK_SHIPPING_ADDRESS_REQUEST);\n          }\n        });\n\n    mShippinAddressEditText.setKeyListener(null);\n\n    // Let's show the application icon as the Up button\n    if (getSupportActionBar() != null) getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n  }\n"}, {"dataset": "setContentView", "exampleID": 243, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 112, "focalAPIEnd": 151, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/abraxasson/publicGaming/tree/master/House of Fire - Android/House of Fire/src/house/of/fire/LogInActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_login);\n\n    nameEditText = (EditText) findViewById(R.id.nameEditText);\n    outputText = (TextView) findViewById(R.id.output_text);\n    playButton = (Button) findViewById(R.id.button_play);\n    playButton.setEnabled(false);\n\n    nameEditText.addTextChangedListener(\n        new TextWatcher() {\n\n          public void onTextChanged(CharSequence s, int start, int before, int count) {}\n\n          public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\n\n          public void afterTextChanged(Editable s) {\n            if (nameEditText.length() > 0) {\n              playButton.setEnabled(true);\n            } else {\n              playButton.setEnabled(false);\n            }\n          }\n        });\n\n    handler = new Handler();\n  }\n"}, {"dataset": "setContentView", "exampleID": 244, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 160, "focalAPIEnd": 211, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imeeting/Android-PullToRefresh/tree/master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshScrollViewActivity.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.pull_to_refresh_scrollview);\n\n    mPullRefreshScrollView = (PullToRefreshScrollView) findViewById(R.id.pull_refresh_scrollview);\n    mPullRefreshScrollView.setOnRefreshListener(\n        new OnRefreshListener<ScrollView>() {\n\n          @Override\n          public void onRefresh(PullToRefreshBase<ScrollView> refreshView) {\n            new GetDataTask().execute();\n          }\n        });\n\n    mScrollView = mPullRefreshScrollView.getRefreshableView();\n  }\n"}, {"dataset": "setContentView", "exampleID": 245, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 156, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/prongs/Hisaab/tree/master/android_new/src/hisaab/hisaab/ItemDetailActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_item_detail);\n\n    getActionBar().setDisplayHomeAsUpEnabled(true);\n\n    if (savedInstanceState == null) {\n      Bundle arguments = new Bundle();\n      arguments.putString(\n          ItemDetailFragment.ARG_ITEM_ID,\n          getIntent().getStringExtra(ItemDetailFragment.ARG_ITEM_ID));\n      ItemDetailFragment fragment = new ItemDetailFragment();\n      fragment.setArguments(arguments);\n      getSupportFragmentManager()\n          .beginTransaction()\n          .add(R.id.item_detail_container, fragment)\n          .commit();\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 246, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 96, "focalAPIEnd": 135, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/laco0416/SmileEssence-Lite/tree/master/src/net/miz_hi/smileessence/view/activity/LicenseActivity.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.license_layout);\n  }\n"}, {"dataset": "setContentView", "exampleID": 247, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 153, "focalAPIEnd": 193, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/easilyBaffled/435/tree/master/WebGuitar/example-aut/adr-aut/ContactManager/result/com.example.android.contactmanager.ContactManager/traditional_mutants/void_populateContactList()/AOIU_6/ContactManager.java", "rawCode": "  public void onCreate(android.os.Bundle savedInstanceState) {\n    Log.v(TAG, \"Activity State: onCreate()\");\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.contact_manager);\n    mAddAccountButton = (android.widget.Button) findViewById(R.id.addContactButton);\n    mContactList = (android.widget.ListView) findViewById(R.id.contactList);\n    mShowInvisibleControl = (android.widget.CheckBox) findViewById(R.id.showInvisible);\n    mShowInvisible = false;\n    mShowInvisibleControl.setChecked(mShowInvisible);\n    mAddAccountButton.setOnClickListener(\n        new android.view.View.OnClickListener() {\n          public void onClick(android.view.View v) {\n            Log.d(TAG, \"mAddAccountButton clicked\");\n            launchContactAdder();\n          }\n        });\n    mShowInvisibleControl.setOnCheckedChangeListener(\n        new android.widget.CompoundButton.OnCheckedChangeListener() {\n          public void onCheckedChanged(\n              android.widget.CompoundButton buttonView, boolean isChecked) {\n            Log.d(TAG, \"mShowInvisibleControl changed: \" + isChecked);\n            mShowInvisible = isChecked;\n            populateContactList();\n          }\n        });\n    populateContactList();\n  }\n"}, {"dataset": "setContentView", "exampleID": 248, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 112, "focalAPIEnd": 148, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mattadams/gcmobile/tree/master/src/org/odk/collect/android/activities/DrawActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.draw_layout);\n\n    if (getIntent().getStringExtra(KEY_DRAW_MODE) != null) {\n      mDrawMode = getIntent().getStringExtra(KEY_DRAW_MODE);\n\n      // Lazy language change\n      if (mDrawMode.contains(\"annotate\")) mDrawMode = \"annotation\";\n    }\n\n    setTitle(\n        getString(R.string.app_name)\n            + \" > \"\n            + mDrawMode.substring(0, 1).toUpperCase()\n            + mDrawMode.substring(1));\n\n    mSaveUri = (Uri) getIntent().getExtras().getParcelable(KEY_OUTPUT_URI);\n    Log.d(Collect.LOGTAG, t + \"saveUri at \" + mSaveUri.toString());\n    Log.d(Collect.LOGTAG, t + \"saveUri.getPath at \" + mSaveUri.getPath());\n\n    // Initalize drawables\n    mPaint = new Paint();\n    mPaint.setAntiAlias(true);\n    mPaint.setDither(true);\n    mPaint.setColor(0xFFFF0000);\n    mPaint.setStyle(Paint.Style.STROKE);\n    mPaint.setStrokeJoin(Paint.Join.ROUND);\n    mPaint.setStrokeCap(Paint.Cap.ROUND);\n    mPaint.setStrokeWidth(8);\n\n    // Specific drawables for signature mode\n    if (mDrawMode.equals(KEY_SIGNATURE_MODE)) {\n      mPaint.setColor(0xFF000000);\n      mPaint.setStrokeWidth(6);\n    }\n\n    mEmboss = new EmbossMaskFilter(new float[] {1, 1, 1}, 0.4f, 6, 3.5f);\n    mBlur = new BlurMaskFilter(8, BlurMaskFilter.Blur.NORMAL);\n\n    ((Button) findViewById(R.id.drawCancel))\n        .setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                showDialog(DIALOG_CANCEL);\n              }\n            });\n\n    ((Button) findViewById(R.id.drawClear))\n        .setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                showDialog(DIALOG_CLEAR);\n              }\n            });\n\n    ((Button) findViewById(R.id.drawSave))\n        .setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                showDialog(DIALOG_SAVE);\n              }\n            });\n  }\n"}, {"dataset": "setContentView", "exampleID": 249, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 138, "focalAPIEnd": 187, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/OMFGB/packages_apps_Mms/tree/master/src/com/android/mms/ui/DeliveryReportActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    requestWindowFeature(Window.FEATURE_NO_TITLE);\n    setContentView(R.layout.delivery_report_activity);\n\n    Intent intent = getIntent();\n    mMessageId = getMessageId(icicle, intent);\n    mMessageType = getMessageType(icicle, intent);\n\n    initListView();\n    initListAdapter();\n  }\n"}, {"dataset": "setContentView", "exampleID": 250, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teleportR/TeleportR/tree/master/src/org/teleportr/activity/RideDetails.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.ride);\n\n    ride = (Ride) getIntent().getParcelableExtra(\"ride\");\n    // ((RideView)findViewById(R.id.ride)).setRide(ride);\n\n    switch (ride.mode) {\n      case Ride.MODE_SK8:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_sk8);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_sk8);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"wouldn't it be great to skate through town, and your phone introduces you to the nicest spots along the way? if you are skate-nerd or nerd-skater feel free to write this plugin. \\n\\n scotty@teleportR.org \");\n        break;\n      case Ride.MODE_MFG:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_mfg);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_mfg);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"sharing is great! sharing mobility is also quite cheap and enviremental friendly. why not have a place, where you can find all the different offers at one time? feel free to help us shift the paradigms of mobility. \\n\\n scotty@teleportR.org\");\n        break;\n      case Ride.MODE_BIKE:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_bike);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_bike);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"slow down and see the landscape; go by bike. just hit the button below. this plugin is not great jet, but somehow it works. ;-) make a tour, or make this plugin better \\n\\n--> scotty@teleportR.org\");\n        break;\n      case Ride.MODE_TAXI:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_taxi);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_taxi);\n        shareText =\n            \"#taxi to \"\n                + ((Teleporter) getApplication()).destination.name\n                + \"? #rideshare @teleporter #gtugbc #gddde\";\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"very basic concept of a teleportR taxi-plugin. if you need a taxi, hit the button below, and talk to a munich taxi company. plz. compare the real fare payed to our estimated and tell us the difference. \\n\\n scotty@teleportR.org\");\n        ((Button) findViewById(R.id.go)).setText(\"Call\");\n        break;\n      case Ride.MODE_DRIVE:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_drive);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_car);\n        shareText =\n            \"driving to \"\n                + ((Teleporter) getApplication()).destination.name\n                + \" #rideshare @teleporter #gtugbc #gddde\";\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"basicly this is just a navi. one like nearly everybody got. how could one make this extraordinary and super userfriendly? push the button for testing, and share your ideas. \\n\\n scotty@teleportR.org\");\n        break;\n      case Ride.MODE_WALK:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_walk);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_walk);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"the walkers guide through urbanity. how can we make this galactic? help us. \\n\\n scotty@teleportR.org\");\n        break;\n      case Ride.MODE_FLIGHT:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_flight);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_ufo);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"Congratulations!\\nYou found Scotty :-)\\nand won a FREE beer.\\nHit the SHARE button\\nto unlock your beer.\\nCheers!\");\n        shareText = \"found Scotty @teleporter and unlocked one #beer @niederlassung #gtugbc #gddde\";\n        shareIntruction = \"TWEET this to unlock your FREE beer @niederlassung!\";\n        break;\n      case Ride.MODE_TRAIN:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_train);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_train);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"Congratulations!\\nYou found Scotty :-)\\nand won a FREE beer.\\nHit the SHARE button\\nto unlock your beer.\\nCheers!\");\n        break;\n      case Ride.MODE_TRANSIT:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_transit);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_transit);\n        final WebView webview = (WebView) findViewById(R.id.web);\n        findViewById(R.id.progress).setVisibility(View.VISIBLE);\n        findViewById(R.id.go).setVisibility(View.GONE);\n        webview.loadUrl(ride.uri);\n        webview.setWebChromeClient(\n            new WebChromeClient() {\n              @Override\n              public void onProgressChanged(WebView view, int newProgress) {\n                if (newProgress == 100) {\n                  webview.setVisibility(View.VISIBLE);\n                  findViewById(R.id.progress).setVisibility(View.GONE);\n                }\n              }\n            });\n        shareText =\n            \"on my way to \"\n                + ((Teleporter) getApplication()).destination.name\n                + \" @teleporter arriving \"\n                + RideView.DATE_FORMAT.format(ride.arr)\n                + \" #gtugbc #gddde \"\n                + ride.uri;\n        ((TextView) findViewById(R.id.text1)).setText(\"\");\n        ((ImageView) findViewById(R.id.advertisement))\n            .setBackgroundResource(R.drawable.mode_transit);\n        break;\n      case Ride.MODE_TELEPORTER:\n        findViewById(R.id.layout).setBackgroundResource(R.drawable.mode_teleporter);\n        ((Button) findViewById(R.id.home)).setBackgroundResource(R.drawable.btn_teleporter);\n        ((TextView) findViewById(R.id.text1))\n            .setText(\n                \"right now teleportation is at a post-experimental stage; we made some substential breakthrouths, but it is not stabel jet. we need more experianced technitians who will join our mission for mobile mobility. Join scotty and the teleportR projekt. beam now! \");\n        break;\n\n      default:\n        break;\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 251, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 126, "focalAPIEnd": 164, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/ApiDemos/src/com/example/android/apis/media/MediaPlayerDemo.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    // TODO Auto-generated method stub\n    super.onCreate(icicle);\n    setContentView(R.layout.mediaplayer_1);\n    mlocalaudio = (Button) findViewById(R.id.localaudio);\n    mlocalaudio.setOnClickListener(mLocalAudioListener);\n    mresourcesaudio = (Button) findViewById(R.id.resourcesaudio);\n    mresourcesaudio.setOnClickListener(mResourcesAudioListener);\n\n    mlocalvideo = (Button) findViewById(R.id.localvideo);\n    mlocalvideo.setOnClickListener(mLocalVideoListener);\n    mstreamvideo = (Button) findViewById(R.id.streamvideo);\n    mstreamvideo.setOnClickListener(mStreamVideoListener);\n  }\n"}, {"dataset": "setContentView", "exampleID": 252, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 371, "focalAPIEnd": 404, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RonnieVandenPoel/SourceFish/tree/master/JakeWharton-ActionBarSherlock-e5c2d1c/samples/demos/src/com/actionbarsherlock/sample/demos/Progress.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    setTheme(SampleList.THEME); // Used for theme switching in samples\n    super.onCreate(savedInstanceState);\n\n    // This has to be called before setContentView and you must use the\n    // class in com.actionbarsherlock.view and NOT android.view\n    requestWindowFeature(Window.FEATURE_PROGRESS);\n\n    setContentView(R.layout.progress);\n\n    findViewById(R.id.go)\n        .setOnClickListener(\n            new View.OnClickListener() {\n              @Override\n              public void onClick(View arg0) {\n                if (mProgress == 100) {\n                  mProgress = 0;\n                  mProgressRunner.run();\n                }\n              }\n            });\n  }\n"}, {"dataset": "setContentView", "exampleID": 253, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/francho/unutopia-android/tree/master/merybere/09-MyBroadcast/src/com/merybere/app/mybroadcast/MainActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    // Creamos el view del botón como variable local, porque no lo necesito más\n    View button = findViewById(R.id.button1);\n    // Añadimos el listener que se queda escuchando cuando se produzca el click\n    button.setOnClickListener(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 254, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 305, "focalAPIEnd": 349, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pocorall/scaloid-apidemos/tree/master/src/main/java/com/example/android/apis/appwidget/ExampleAppWidgetConfigure.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    // Set the result to CANCELED. This will cause the widget host to cancel\n    // out of the widget placement if they press the back button.\n    setResult(RESULT_CANCELED);\n\n    // Set the view layout resource to use.\n    setContentView(R.layout.appwidget_configure);\n\n    // Find the EditText\n    mAppWidgetPrefix = (EditText) findViewById(R.id.appwidget_prefix);\n\n    // Bind the action for the save button.\n    findViewById(R.id.save_button).setOnClickListener(mOnClickListener);\n\n    // Find the widget id from the intent.\n    Intent intent = getIntent();\n    Bundle extras = intent.getExtras();\n    if (extras != null) {\n      mAppWidgetId =\n          extras.getInt(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);\n    }\n\n    // If they gave us an intent without the widget id, just bail.\n    if (mAppWidgetId == AppWidgetManager.INVALID_APPWIDGET_ID) {\n      finish();\n    }\n\n    mAppWidgetPrefix.setText(loadTitlePref(ExampleAppWidgetConfigure.this, mAppWidgetId));\n  }\n"}, {"dataset": "setContentView", "exampleID": 255, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 227, "focalAPIEnd": 274, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/magneticbear/scala1_android/tree/master/src/com/magneticbear/scala1/SpeakersInfo.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    // Create a bundle to save the web state\n    if (save_speaker == null) {\n      save_speaker = new Bundle();\n    }\n\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_speakers_info);\n\n    // Setup debug data\n\n    int speaker_id_to_load = -1;\n\n    // Setup real data\n    if (getIntent().getExtras() != null) {\n      if (getIntent().getExtras().containsKey(\"speaker\"))\n        speaker_id_to_load = getIntent().getExtras().getInt(\"speaker\");\n    }\n    String speaker_title_to_display = ServerData.get_speaker_by_id(speaker_id_to_load).name;\n\n    // Navigate to speaker url\n    WebView speakers_info_webview = (WebView) findViewById(R.id.webview_speaker_info);\n\n    // This is a bugfix for HTTPS pages, that will just not display because the user is not prompted\n    // to accept the cert. This is an android bug, and this is the accepted workaround\n    final int sid = speaker_id_to_load;\n    speakers_info_webview.setWebViewClient(\n        new WebViewClient() {\n          public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {\n            handler.proceed();\n          }\n\n          @Override\n          public boolean shouldOverrideUrlLoading(WebView view, String url) {\n            String[] urlbits = url.split(\"/\");\n            String type = urlbits[urlbits.length - 2];\n            String index = urlbits[urlbits.length - 1];\n\n            if (type.equals(\"speakers\")) {\n              UserData.mixpanel.track(\"SpeakerInfo_\" + sid + \"_ToSpeakerInfo_\" + index, null);\n\n              // Go to speaker of index\n              Intent intent = new Intent(view.getContext(), SpeakersInfo.class);\n              intent.putExtra(\"speaker\", Integer.parseInt(index));\n              startActivityForResult(intent, 0);\n            } else if (type.equals(\"events\")) {\n              UserData.mixpanel.track(\"SpeakerInfo_\" + sid + \"_ToEventInfo_\" + index, null);\n\n              // Go to event of index\n              Intent intent = new Intent(view.getContext(), EventInfo.class);\n              intent.putExtra(\"event\", Integer.parseInt(index));\n              startActivityForResult(intent, 0);\n            } else {\n              Intent browse = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\n              startActivity(browse);\n            }\n\n            return false;\n          }\n\n          @Override\n          public void onPageFinished(WebView view, String url) {\n            super.onPageFinished(view, url);\n            findViewById(R.id.speaker_info_progress_spacer).setVisibility(0x8); // gone\n            findViewById(R.id.speaker_info_progress).setVisibility(0x8); // gone\n            findViewById(R.id.webview_speaker_info).setVisibility(0x0); // here\n          }\n        });\n\n    speakers_info_webview.getSettings().setJavaScriptEnabled(true);\n    speakers_info_webview.loadUrl(getString(R.string.url_speakers_info_base) + speaker_id_to_load);\n\n    // Set title to speaker name title\n    TextView title = (TextView) findViewById(R.id.speaker_info_title);\n    title.setText(speaker_title_to_display);\n\n    if (savedInstanceState != null) {\n      speakers_info_webview.restoreState(savedInstanceState);\n    }\n\n    // Check fav star start\n    fav_proc(speaker_id_to_load);\n\n    // Setup fav button\n    final int closure_saved_id = speaker_id_to_load;\n    findViewById(R.id.speaker_info_bar_star)\n        .setOnClickListener(\n            new OnClickListener() {\n              @Override\n              public void onClick(View v) {\n                Struct_Speaker box = new Struct_Speaker(\"BOX\", closure_saved_id);\n                if (UserData.is_fav(box)) {\n                  UserData.mixpanel.track(\n                      \"SpeakerInfoItemUnfavedSpeakerID_\" + closure_saved_id, null);\n\n                  // already a fav make not fav\n                  UserData.remove_fav(box);\n                  UserData.write_changes(getBaseContext());\n                  fav_proc(closure_saved_id);\n                } else {\n                  UserData.mixpanel.track(\n                      \"SpeakerInfoItemFavedSpeakerID_\" + closure_saved_id, null);\n\n                  // not a fav make a fav\n                  UserData.add_fav(ServerData.get_speaker_by_id(closure_saved_id));\n                  UserData.write_changes(getBaseContext());\n                  fav_proc(closure_saved_id);\n                }\n              }\n            });\n  }\n"}, {"dataset": "setContentView", "exampleID": 256, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 35, "focalAPIEnd": 71, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/abhishekjain89/androidperformance/tree/master/client/Ping/src/com/num/activities/FullDisplayActivity.java", "rawCode": "  public void showLoadPage() {\n    setContentView(R.layout.load_screen);\n  }\n"}, {"dataset": "setContentView", "exampleID": 257, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 161, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Blakez/android_frameworks_base/tree/master/tests/HwAccelerationTest/src/com/android/test/hwui/TransformsAndAnimationsActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.transforms_and_animations);\n\n    button1 = (Button) findViewById(R.id.button1);\n    button2 = (Button) findViewById(R.id.button2);\n    button3 = (Button) findViewById(R.id.button3);\n    button1a = (Button) findViewById(R.id.button1a);\n    button2a = (Button) findViewById(R.id.button2a);\n    button3a = (Button) findViewById(R.id.button3a);\n    button1b = (Button) findViewById(R.id.button1b);\n    button2b = (Button) findViewById(R.id.button2b);\n    button3b = (Button) findViewById(R.id.button3b);\n    button4 = (Button) findViewById(R.id.button4);\n    button5 = (Button) findViewById(R.id.button5);\n    button6 = (Button) findViewById(R.id.button6);\n    button7 = (Button) findViewById(R.id.button7);\n    button8 = (Button) findViewById(R.id.button8);\n    layersNoneCB = (CheckBox) findViewById(R.id.layersNoneCB);\n    layersHardwareCB = (CheckBox) findViewById(R.id.layersHwCB);\n    layersSoftwareCB = (CheckBox) findViewById(R.id.layersSwCB);\n\n    layersNoneCB.setOnCheckedChangeListener(\n        new CheckBox.OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n            if (isChecked) {\n              setLayerType(View.LAYER_TYPE_NONE);\n              layersHardwareCB.setChecked(false);\n              layersSoftwareCB.setChecked(false);\n            }\n          }\n        });\n\n    layersSoftwareCB.setOnCheckedChangeListener(\n        new CheckBox.OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n            if (isChecked) {\n              setLayerType(View.LAYER_TYPE_SOFTWARE);\n              layersHardwareCB.setChecked(false);\n              layersNoneCB.setChecked(false);\n            }\n          }\n        });\n\n    layersHardwareCB.setOnCheckedChangeListener(\n        new CheckBox.OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n            if (isChecked) {\n              setLayerType(View.LAYER_TYPE_HARDWARE);\n              layersNoneCB.setChecked(false);\n              layersSoftwareCB.setChecked(false);\n            }\n          }\n        });\n\n    button1a.setAlpha(.5f);\n    button2a.setAlpha(.5f);\n    button3a.setAlpha(.5f);\n    button3.setTranslationX(50);\n    button7.setTranslationX(50);\n    button8.setTranslationX(50);\n\n    final AlphaAnimation alphaAnim = new AlphaAnimation(1, 0);\n    alphaAnim.setDuration(1000);\n    alphaAnim.setRepeatCount(Animation.INFINITE);\n    alphaAnim.setRepeatMode(Animation.REVERSE);\n\n    final TranslateAnimation transAnim = new TranslateAnimation(0, -50, 0, 0);\n    transAnim.setDuration(1000);\n    transAnim.setRepeatCount(Animation.INFINITE);\n    transAnim.setRepeatMode(Animation.REVERSE);\n\n    getWindow()\n        .getDecorView()\n        .postDelayed(\n            new Runnable() {\n              @Override\n              public void run() {\n                button1.startAnimation(alphaAnim);\n                button2.startAnimation(alphaAnim);\n                button3.startAnimation(alphaAnim);\n\n                button1a.startAnimation(alphaAnim);\n                button2a.startAnimation(alphaAnim);\n                button3a.startAnimation(alphaAnim);\n\n                button1b.startAnimation(alphaAnim);\n                button2b.startAnimation(alphaAnim);\n                button3b.startAnimation(alphaAnim);\n                startAnimator(button1b);\n                startAnimator(button2b);\n                startAnimator(button3b);\n\n                button7.startAnimation(transAnim);\n                button8.startAnimation(transAnim);\n              }\n            },\n            2000);\n  }\n"}, {"dataset": "setContentView", "exampleID": 258, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 109, "focalAPIEnd": 150, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gomboc36/WAP-Drive/tree/master/battle-client/src/com/wap/battle/client/MonsterActivity.java", "rawCode": "  protected void onCreate(Bundle bundle) {\n    super.onCreate(bundle);\n    Log.i(LOG_TAG, \"onCreate()\");\n    setContentView(R.layout.activity_monster);\n\n    tunes();\n    play();\n    // Init SoundPool\n    soundPool = new SoundPool(4, AudioManager.STREAM_MUSIC, 100);\n    soundsMap = new HashMap<Integer, Integer>();\n    soundsMap.put(SOUND1, soundPool.load(this, R.raw.select, 1));\n\n    imageGravatar = (ImageView) findViewById(R.id.imageGravatar);\n    monsterDetails = (TextView) findViewById(R.id.myMonsterData);\n    listDefender = (ListView) findViewById(R.id.listDefender);\n    listDefender.setOnItemClickListener(this);\n\n    service = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);\n    service.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);\n    service.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, this);\n\n    Bundle extras = getIntent().getExtras();\n    attacker = extras.getParcelable(Monster.ATTACKER);\n    new ImageTask().execute(attacker.getGravatar(), attacker.getId());\n    monsterDetails.setText(\n        \"Name: \"\n            + attacker.getTitle()\n            + \"\\nHP: \"\n            + attacker.getCurrentHealth()\n            + \" / \"\n            + attacker.getMaxHealth()\n            + \"\\nAP: \"\n            + attacker.getAttack()\n            + \"\\nElement: \"\n            + attacker.getElement());\n  }\n"}, {"dataset": "setContentView", "exampleID": 259, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 280, "focalAPIEnd": 323, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/manzhda/FBReaderJLib/tree/master/src/org/geometerplus/android/fbreader/network/AddCustomCatalogActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    Thread.setDefaultUncaughtExceptionHandler(\n        new org.geometerplus.zlibrary.ui.android.library.UncaughtExceptionHandler(this));\n\n    AuthenticationActivity.initCredentialsCreator(this);\n\n    setContentView(R.layout.add_custom_catalog);\n\n    myResource = ZLResource.resource(\"dialog\").getResource(\"CustomCatalogDialog\");\n\n    setTitle(myResource.getResource(\"title\").getValue());\n\n    setTextFromResource(R.id.add_custom_catalog_title_label, \"catalogTitle\");\n    setTextFromResource(R.id.add_custom_catalog_url_label, \"catalogUrl\");\n    setTextFromResource(R.id.add_custom_catalog_summary_label, \"catalogSummary\");\n    setTextFromResource(R.id.add_custom_catalog_title_example, \"catalogTitleExample\");\n    setTextFromResource(R.id.add_custom_catalog_url_example, \"catalogUrlExample\");\n    setTextFromResource(R.id.add_custom_catalog_summary_example, \"catalogSummaryExample\");\n\n    setupButton(\n        R.id.ok_button,\n        \"ok\",\n        new View.OnClickListener() {\n          public void onClick(View view) {\n            final InputMethodManager imm =\n                (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\n            imm.hideSoftInputFromWindow(\n                findViewById(R.id.add_custom_catalog_url).getWindowToken(), 0);\n            imm.hideSoftInputFromWindow(\n                findViewById(R.id.add_custom_catalog_title).getWindowToken(), 0);\n            imm.hideSoftInputFromWindow(\n                findViewById(R.id.add_custom_catalog_summary).getWindowToken(), 0);\n            onOkButton();\n          }\n        });\n    setupButton(\n        R.id.cancel_button,\n        \"cancel\",\n        new View.OnClickListener() {\n          public void onClick(View view) {\n            finish();\n          }\n        });\n\n    Util.initLibrary(this);\n\n    final Intent intent = getIntent();\n    final String action = intent.getAction();\n    myEditNotAdd = Util.EDIT_CATALOG_ACTION.equals(action);\n    myLink = null;\n    Uri uri = null;\n    if (myEditNotAdd\n        || Intent.ACTION_VIEW.equals(action)\n        || Util.ADD_CATALOG_URL_ACTION.equals(action)) {\n      uri = intent.getData();\n      if (uri != null) {\n        if (\"opds\".equals(uri.getScheme())) {\n          uri = Uri.parse(\"http\" + uri.toString().substring(4));\n        }\n        final INetworkLink link = NetworkLibrary.Instance().getLinkByUrl(uri.toString());\n        if (link instanceof ICustomNetworkLink) {\n          myLink = (ICustomNetworkLink) link;\n        }\n      }\n\n      myType = INetworkLink.Type.byIndex(intent.getIntExtra(TYPE, myType.Index));\n    }\n\n    if (myLink != null) {\n      setTextById(R.id.add_custom_catalog_url, myLink.getUrl(UrlInfo.Type.Catalog));\n      setTextById(R.id.add_custom_catalog_title, myLink.getTitle());\n      setTextById(R.id.add_custom_catalog_summary, myLink.getSummary());\n      setExtraFieldsVisibility(true);\n    } else if (uri != null) {\n      if (\"opds\".equals(uri.getScheme())) {\n        uri = Uri.parse(\"http\" + uri.toString().substring(4));\n      }\n      loadInfoByUri(uri);\n    } else {\n      setExtraFieldsVisibility(false);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 260, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 154, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Rubusch/android/tree/master/DemoActivityMasterDetailFlow01/src/com/example/demoactivitymasterdetailflow01/ItemListActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_item_list);\n\n    if (findViewById(R.id.item_detail_container) != null) {\n      // The detail container view will be present only in the\n      // large-screen layouts (res/values-large and\n      // res/values-sw600dp). If this view is present, then the\n      // activity should be in two-pane mode.\n      mTwoPane = true;\n\n      // In two-pane mode, list items should be given the\n      // 'activated' state when touched.\n      ((ItemListFragment) getSupportFragmentManager().findFragmentById(R.id.item_list))\n          .setActivateOnItemClick(true);\n    }\n\n    // TODO: If exposing deep links into your app, handle intents here.\n  }\n"}, {"dataset": "setContentView", "exampleID": 261, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 33, "focalAPIEnd": 72, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Wolfy42/RoadrunnerAndroid/tree/master/src/at/roadrunner/android/activity/Items.java", "rawCode": "  private void setLayout() {\n    setContentView(R.layout.activity_items);\n    ActionBar actionBar = (ActionBar) findViewById(R.id.actionbar);\n    actionBar.setTitle(R.string.items_title);\n    actionBar.setHomeAction(\n        new IntentAction(\n            this,\n            new Intent(this, Roadrunner.class).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP),\n            R.drawable.ic_title_home_default));\n    actionBar.addAction(new IntentAction(this, createMapIntent(), R.drawable.ic_title_map_default));\n  }\n"}, {"dataset": "setContentView", "exampleID": 262, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 96, "focalAPIEnd": 133, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Grupp1/Raddargruppen/tree/master/Raddargruppen/src/raddar/views/EditContactView.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.edit_contact);\n    editContactEditText = (EditText) this.findViewById(R.id.editContactEditText);\n    editContactButton = (Button) this.findViewById(R.id.editContactButton);\n    editContactButton.setOnClickListener(this);\n    cancelButton = (Button) this.findViewById(R.id.editContactCancel);\n    cancelButton.setOnClickListener(this);\n    editContactEditText.setText(ContactListView.nameChoice);\n    editContactEditText.requestFocus();\n    editContactEditText.selectAll();\n  }\n"}, {"dataset": "setContentView", "exampleID": 263, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 149, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jcahan/privacy-app/tree/master/src/officialapp/columbiaprivacyapp/MainActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n\n    android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);\n    // initializing Parse\n    initializeParse();\n\n    // Getting preferences\n    getPreferences();\n\n    if (userNameInPref.equals(\"default\")) {\n      createDialogBox();\n      userNameInPref = prefs.getString(\"prefUsername\", \"default\");\n    }\n\n    // Communicating with DataSource\n    openDatasource();\n\n    // Creates Sherlock Tab Menu\n    initalizeSherlockTabs();\n\n    // Initiating Timers\n    initAlarm();\n\n    THIS = this;\n  }\n"}, {"dataset": "setContentView", "exampleID": 264, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 97, "focalAPIEnd": 129, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Xorcerer/android-private-sms/tree/master/src/com/anibug/smsmanager/activity/LandingActivity.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.landing);\n\n    settings = getSharedPreferences(PreferenceConstants.PREF_NAME, MODE_PRIVATE);\n    boolean passwordRequired =\n        settings.getBoolean(PreferenceConstants.PREF_PASSWORD_REQUIRED, true);\n\n    if (!passwordRequired) {\n      showConversationList();\n      finish();\n      return;\n    }\n\n    inputName = (EditText) findViewById(R.id.landing_input_name);\n    inputName.setOnEditorActionListener(\n        new TextView.OnEditorActionListener() {\n          @Override\n          public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {\n            ok(textView);\n            return true;\n          }\n        });\n\n    getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);\n  }\n"}, {"dataset": "setContentView", "exampleID": 265, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 109, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dbstar/dbstar/tree/master/DbstarLauncher/src/com/dbstar/app/alert/GDAlertDialog.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.alert_dialog);\n\n    mTitleView = (TextView) findViewById(R.id.alertTitle);\n    mMessageView = (TextView) findViewById(R.id.message);\n\n    mOkButton = (Button) findViewById(R.id.buttonOK);\n    mCancelButton = (Button) findViewById(R.id.buttonCancel);\n    mCenterSpacer = findViewById(R.id.centerSpacer);\n\n    mOkButton.setOnClickListener(mButtonClickListener);\n    mCancelButton.setOnClickListener(mButtonClickListener);\n\n    if (mOnCreatedListener != null) {\n      mOnCreatedListener.onCreated(this);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 266, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 160, "focalAPIEnd": 197, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chenatu/ccnx-underlay/tree/master/android/apps/CCNx-Android-Chat/src/org/ccnx/android/apps/chat/ChatScreen.java", "rawCode": "  /** Called when the activity is first created. */\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.ccnchat_chat);\n\n    EditText etPost = (EditText) findViewById(R.id.etPost);\n    etPost.setEnabled(false);\n    etPost.setOnKeyListener(this);\n\n    tv = (TextView) findViewById(R.id.tvOutput);\n    // tv.setMovementMethod(new ScrollingMovementMethod());\n    tv.setText(\"\");\n    sv = (ScrollView) findViewById(R.id.svOutput);\n\n    ScreenOutput(\"Starting the CCN listen thread\\n\");\n\n    Intent i = this.getIntent();\n    String namespace = i.getStringExtra(CcnxChatMain.PREF_NAMESPACE);\n    String username = i.getStringExtra(CcnxChatMain.PREF_HANDLE);\n    String remotehost = i.getStringExtra(CcnxChatMain.PREF_REMOTEHOST);\n    String remoteport = i.getStringExtra(CcnxChatMain.PREF_REMOTEPORT);\n\n    _worker = new ChatWorker(this, this);\n    _worker.start(username, namespace, remotehost, remoteport);\n\n    // Do these CCNx operations after we created ChatWorker\n    ScreenOutput(\"User name = \" + UserConfiguration.userName() + \"\\n\");\n    ScreenOutput(\"ccnDir = \" + UserConfiguration.userConfigurationDirectory() + \"\\n\");\n    ScreenOutput(\"Waiting for CCN Services to become ready\\n\");\n  }\n"}, {"dataset": "setContentView", "exampleID": 267, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 42, "focalAPIEnd": 86, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/LSGAdmins/lsgapp/tree/master/src/com/lsg/app/setup/SetupAssistant.java", "rawCode": "  public void setVPlanTeacherData() {\n    setContentView(R.layout.setup_vplan_teacher);\n    ((Button) findViewById(R.id.teacher_short)).setText(teacher_short);\n    setPermissions();\n  }\n"}, {"dataset": "setContentView", "exampleID": 268, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 98, "focalAPIEnd": 134, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/freekspb/photo-of-the-day/tree/master/src/hram/android/PhotoOfTheDay/gallery/AndroidCustomGalleryActivity.java", "rawCode": "  @Override\n  protected void onStart() {\n    super.onStart();\n\n    // Log.i(TAG, \"onStart\");\n\n    setContentView(R.layout.gallerygrid);\n\n    imagegrid = (GridView) findViewById(R.id.PhoneImageGrid);\n    imagegrid.setOnItemClickListener(\n        new OnItemClickListener() {\n          public void onItemClick(AdapterView<?> arg0, View v, int arg2, long arg3) {\n            openImage(v);\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 269, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 150, "focalAPIEnd": 188, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wangshukunwsk/Inspection/tree/master/SourceCode/src/com/bchd/inspection/ui/MoreActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    // TODO Auto-generated method stub\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.more_activity);\n    prepareView();\n    // mTitleView.setText(R.string.category_more);\n\n    mtxtSettings.setOnClickListener(txtSettings_OnClickListener);\n  }\n"}, {"dataset": "setContentView", "exampleID": 270, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 152, "focalAPIEnd": 189, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/btmura/rbb/tree/master/src/com/btmura/android/reddit/app/AccountListActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setTheme(ThemePrefs.getTheme(this));\n    setContentView(R.layout.account_list);\n    setupViews(savedInstanceState);\n  }\n"}, {"dataset": "setContentView", "exampleID": 271, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 1656, "focalAPIEnd": 1693, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vyloy/lnvc/tree/master/stb/vlc-android/src/org/videolan/vlc/gui/MainActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    if (!Util.hasCompatibleCPU()) {\n      Log.e(TAG, Util.getErrorMsg());\n      Intent i = new Intent(this, CompatErrorActivity.class);\n      startActivity(i);\n      finish();\n      super.onCreate(savedInstanceState);\n      return;\n    }\n\n    /* Get the current version from package */\n    PackageInfo pinfo = null;\n    try {\n      pinfo = getPackageManager().getPackageInfo(getPackageName(), 0);\n    } catch (NameNotFoundException e) {\n      Log.e(TAG, \"package info not found.\");\n    }\n    if (pinfo != null) mVersionNumber = pinfo.versionCode;\n\n    /* Get settings */\n    mSettings = PreferenceManager.getDefaultSharedPreferences(this);\n\n    /* Check if it's the first run */\n    mFirstRun = mSettings.getInt(PREF_FIRST_RUN, -1) != mVersionNumber;\n    if (mFirstRun) {\n      Editor editor = mSettings.edit();\n      editor.putInt(PREF_FIRST_RUN, mVersionNumber);\n      editor.commit();\n    }\n\n    /* Start VLC prefs */\n    LibVLC.useIOMX(this);\n\n    try {\n      // Start LibVLC\n      LibVLC.getInstance();\n    } catch (LibVlcException e) {\n      e.printStackTrace();\n      Intent i = new Intent(this, CompatErrorActivity.class);\n      i.putExtra(\"runtimeError\", true);\n      i.putExtra(\"message\", \"LibVLC failed to initialize (LibVlcException)\");\n      startActivity(i);\n      finish();\n      super.onCreate(savedInstanceState);\n      return;\n    }\n\n    super.onCreate(savedInstanceState);\n\n    /** * Start initializing the UI ** */\n\n    /* Enable the indeterminate progress feature */\n    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n\n    // Set up the sliding menu\n    setContentView(R.layout.sliding_menu);\n    mMenu = (SlidingMenu) findViewById(R.id.sliding_menu);\n    changeMenuOffset();\n\n    View v_main = LayoutInflater.from(this).inflate(R.layout.main, null);\n    mMenu.setContent(v_main);\n\n    View sidebar = LayoutInflater.from(this).inflate(R.layout.sidebar, null);\n    final ListView listView = (ListView) sidebar.findViewById(android.R.id.list);\n    listView.setFooterDividersEnabled(true);\n    mSidebarAdapter = new SidebarAdapter();\n    listView.setAdapter(mSidebarAdapter);\n    mMenu.setMenu(sidebar);\n\n    /* Initialize UI variables */\n    mInfoLayout = v_main.findViewById(R.id.info_layout);\n    mInfoProgress = (ProgressBar) v_main.findViewById(R.id.info_progress);\n    mInfoText = (TextView) v_main.findViewById(R.id.info_text);\n\n    /* Set up the action bar */\n    mActionBar = getSupportActionBar();\n    mActionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n    mActionBar.setDisplayOptions(0, ActionBar.DISPLAY_SHOW_TITLE);\n    mActionBar.setDisplayHomeAsUpEnabled(true);\n\n    /* Add padding between the home button and the arrow */\n    ImageView home =\n        (ImageView) findViewById(Util.isHoneycombOrLater() ? android.R.id.home : R.id.abs__home);\n    if (home != null) home.setPadding(20, 0, 0, 0);\n\n    /* Set up the sidebar click listener */\n    listView.setOnItemClickListener(\n        new OnItemClickListener() {\n\n          @Override\n          public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n            SidebarAdapter.SidebarEntry entry = (SidebarEntry) listView.getItemAtPosition(position);\n            Fragment current =\n                getSupportFragmentManager().findFragmentById(R.id.fragment_placeholder);\n\n            if (current == null || current.getTag() == entry.id) {\n                /* Already selected */\n              mMenu.showAbove();\n              return;\n            }\n\n            /*\n             * Clear any backstack before switching tabs. This avoids\n             * activating an old backstack, when a user hits the back button\n             * to quit\n             */\n            for (int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); i++) {\n              getSupportFragmentManager().popBackStack();\n            }\n\n            FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n            ft.detach(current);\n            ft.attach(getFragment(entry.id));\n            ft.commit();\n            mCurrentFragment = entry.id;\n            mMenu.showAbove();\n          }\n        });\n\n    /* Set up the mini audio player */\n    mAudioPlayer = new AudioMiniPlayer();\n    mAudioController = AudioServiceController.getInstance();\n    mAudioPlayer.setAudioPlayerControl(mAudioController);\n    mAudioPlayer.update();\n\n    getSupportFragmentManager()\n        .beginTransaction()\n        .replace(R.id.audio_mini_player, mAudioPlayer)\n        .commit();\n\n    /* Show info/alpha/beta Warning */\n    if (mSettings.getInt(PREF_SHOW_INFO, -1) != mVersionNumber) showInfoDialog();\n    else if (mFirstRun) {\n      /*\n       * The sliding menu is automatically opened when the user closes\n       * the info dialog. If (for any reason) the dialog is not shown,\n       * open the menu after a short delay.\n       */\n      final Handler handler = new Handler();\n      handler.postDelayed(\n          new Runnable() {\n            @Override\n            public void run() {\n              mMenu.showBehind();\n            }\n          },\n          500);\n    }\n\n    /* Prepare the progressBar */\n    IntentFilter filter = new IntentFilter();\n    filter.addAction(ACTION_SHOW_PROGRESSBAR);\n    filter.addAction(ACTION_HIDE_PROGRESSBAR);\n    filter.addAction(ACTION_SHOW_TEXTINFO);\n    registerReceiver(messageReceiver, filter);\n\n    /* Reload the latest preferences */\n    reloadPreferences();\n\n    /* Load the thumbnailer */\n    mThumbnailerManager = new ThumbnailerManager(this, getWindowManager().getDefaultDisplay());\n  }\n"}, {"dataset": "setContentView", "exampleID": 272, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 150, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CSSE490-Android-Development/FortyWinks/tree/master/Android-Application/src/com/fernferret/android/fortywinks/AddQuikAlarm.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.new_quik_alarm);\n\n    mSettings = PreferenceManager.getDefaultSharedPreferences(this);\n\n    mTypePicker = (RadioGroup) findViewById(R.id.new_quik_alarm_type_radio_group);\n    mTimePicker = (TimePicker) findViewById(R.id.new_quik_alarm_time_picker);\n    mHelperText = (TextView) findViewById(R.id.new_quik_alarm_help_text);\n\n    mSubmit = (Button) findViewById(R.id.new_quik_alarm_add_alarm_button);\n    mCancel = (Button) findViewById(R.id.new_quik_alarm_cancel_button);\n    mSubmit.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            Intent result = new Intent();\n            int numberOfFollowups;\n            int timeTillSleep;\n\n            try {\n              numberOfFollowups =\n                  Integer.parseInt(\n                      mSettings.getString(getString(R.string.pref_key_num_followups), \"4\"));\n            } catch (NumberFormatException e) {\n              numberOfFollowups = 4;\n            }\n\n            try {\n              timeTillSleep =\n                  Integer.parseInt(\n                      mSettings.getString(getString(R.string.pref_key_time_till_sleep), \"14\"));\n            } catch (NumberFormatException e) {\n              timeTillSleep = 14;\n            }\n\n            int lengthBetweenFollowup;\n            try {\n              lengthBetweenFollowup =\n                  Integer.parseInt(\n                      mSettings.getString(getString(R.string.pref_key_followup_interval), \"5\"));\n            } catch (NumberFormatException e) {\n              lengthBetweenFollowup = 5;\n            }\n            if (mTypePicker.getCheckedRadioButtonId() == R.id.new_quik_alarm_radio_time_until) {\n              mProposedAlarm =\n                  new ProposedAlarm(\n                      mTimePicker.getCurrentHour(),\n                      mTimePicker.getCurrentMinute(),\n                      numberOfFollowups,\n                      lengthBetweenFollowup,\n                      timeTillSleep);\n            } else {\n              mProposedAlarm =\n                  new ProposedAlarm(\n                      mTimePicker.getCurrentHour(),\n                      mTimePicker.getCurrentMinute(),\n                      numberOfFollowups,\n                      lengthBetweenFollowup,\n                      timeTillSleep,\n                      ProposedAlarmType.QuickAlarm);\n            }\n\n            Alarm transport = new Alarm(mProposedAlarm);\n            result.putExtra(\"ALARM\", transport);\n            setResult(Activity.RESULT_OK, result);\n            finish();\n          }\n        });\n    mCancel.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            finish();\n          }\n        });\n\n    setTimeClockFormat();\n    mTypePicker.setOnCheckedChangeListener(\n        new OnCheckedChangeListener() {\n          @Override\n          public void onCheckedChanged(RadioGroup group, int checkedId) {\n            setTimeClockFormat();\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 273, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 148, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/heldersantosmoreira/TheTrainProject/tree/master/Android/src/pt/traincompany/tickets/TicketActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_ticket);\n\n    Ticket t = (Ticket) getIntent().getExtras().get(\"ticket\");\n    this.ticket = t;\n\n    TextView id = (TextView) findViewById(R.id.id);\n    id.setText(ticket.id + \"\");\n\n    TextView departure = (TextView) findViewById(R.id.departureTime);\n    departure.setText(ticket.departureTime);\n\n    TextView arrival = (TextView) findViewById(R.id.arrivalTime);\n    arrival.setText(ticket.arrivalTime);\n\n    TextView data = (TextView) findViewById(R.id.date);\n    data.setText(ticket.date);\n\n    TextView from = (TextView) findViewById(R.id.from);\n    from.setText(ticket.from);\n\n    TextView to = (TextView) findViewById(R.id.to);\n    to.setText(ticket.to);\n\n    TextView price = (TextView) findViewById(R.id.price);\n    price.setText(ticket.price + \" €\");\n\n    TextView duration = (TextView) findViewById(R.id.duration);\n    duration.setText(ticket.duration);\n\n    ImageView paid = (ImageView) findViewById(R.id.paid);\n    if (ticket.paid) {\n      Button cancel = (Button) findViewById(R.id.btnDeleteTicket);\n      cancel.setVisibility(View.INVISIBLE);\n      Button pay = (Button) findViewById(R.id.btnPayTicket);\n      pay.setVisibility(View.INVISIBLE);\n      paid.setImageResource(R.drawable.pago);\n    } else paid.setImageResource(R.drawable.delete);\n\n    dialog = ProgressDialog.show(TicketActivity.this, \"\", \"A gerar identificador...\", true);\n    dialog.setCancelable(true);\n\n    new Thread(\n            new Runnable() {\n              public void run() {\n\n                URL newurl;\n                try {\n                  newurl = new URL(Configurations.QRCODE + ticket.id);\n                  bitmap = BitmapFactory.decodeStream(newurl.openConnection().getInputStream());\n                } catch (MalformedURLException e) {\n                  e.printStackTrace();\n                  dialog.dismiss();\n                  Toast.makeText(\n                          TicketActivity.this,\n                          \"Ocorreu um erro ao gerar o QR Code...\",\n                          Toast.LENGTH_SHORT)\n                      .show();\n                } catch (IOException e) {\n                  e.printStackTrace();\n                  dialog.dismiss();\n                  runOnUiThread(\n                      new Runnable() {\n                        public void run() {\n                          Toast.makeText(\n                                  TicketActivity.this,\n                                  \"Ocorreu um erro ao gerar o QR Code...\",\n                                  Toast.LENGTH_SHORT)\n                              .show();\n                        }\n                      });\n                }\n\n                runOnUiThread(\n                    new Runnable() {\n                      public void run() {\n                        ImageView qrCode = (ImageView) findViewById(R.id.qrCode);\n                        qrCode.setImageBitmap(bitmap);\n                        dialog.dismiss();\n                      }\n                    });\n              }\n            })\n        .start();\n\n    Button cancel = (Button) findViewById(R.id.btnDeleteTicket);\n    cancel.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View v) {\n            AlertDialog.Builder builder = new AlertDialog.Builder(TicketActivity.this);\n            builder\n                .setMessage(\"Tem a certeza que pretende cancelar o bilhete?\")\n                .setTitle(\"Cancelar bilhete\")\n                .setPositiveButton(\n                    \"Sim\",\n                    new DialogInterface.OnClickListener() {\n                      public void onClick(DialogInterface dialog2, int id2) {\n                        dialog =\n                            ProgressDialog.show(\n                                TicketActivity.this, \"\", \"A cancelar o bilhete...\", true);\n                        dialog.setCancelable(true);\n                        CancelTicket search = new CancelTicket();\n                        new Thread(search).start();\n                      }\n                    })\n                .setNegativeButton(\"Não\", null);\n            builder.show();\n          }\n        });\n\n    Button pay = (Button) findViewById(R.id.btnPayTicket);\n    pay.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View v) {\n            dialog =\n                ProgressDialog.show(TicketActivity.this, \"\", \"A comunicar com o servidor...\", true);\n            dialog.setCancelable(true);\n            GetCardsByUserId get = new GetCardsByUserId();\n            new Thread(get).start();\n          }\n        });\n\n    // Check for available NFC Adapter\n    NfcAdapter mNfcAdapter = NfcAdapter.getDefaultAdapter(this);\n    if (mNfcAdapter == null) {\n      Toast.makeText(this, \"NFC is not available\", Toast.LENGTH_LONG).show();\n      finish();\n      return;\n    }\n    // Register callback\n    mNfcAdapter.setNdefPushMessageCallback(this, this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 274, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 158, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/wang103/DigitalStickyNotes/tree/master/Code/src/edu/illinois/userinterfaces/ShowMessagesActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_show_messages);\n\n    this.getListView().setDividerHeight(2);\n\n    // Show the Up button in the action bar.\n    getActionBar().setDisplayHomeAsUpEnabled(true);\n\n    fillData();\n\n    registerForContextMenu(getListView());\n  }\n"}, {"dataset": "setContentView", "exampleID": 275, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 137, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Sravan2j/Cinequest-Android/tree/master/Misc/facebook-android-sdk-3.5.2/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerSampleActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n\n    resultsTextView = (TextView) findViewById(R.id.resultsTextView);\n    pickFriendsButton = (Button) findViewById(R.id.pickFriendsButton);\n    pickFriendsButton.setOnClickListener(\n        new View.OnClickListener() {\n          public void onClick(View view) {\n            onClickPickFriends();\n          }\n        });\n\n    lifecycleHelper =\n        new UiLifecycleHelper(\n            this,\n            new Session.StatusCallback() {\n              @Override\n              public void call(Session session, SessionState state, Exception exception) {\n                onSessionStateChanged(session, state, exception);\n              }\n            });\n    lifecycleHelper.onCreate(savedInstanceState);\n\n    ensureOpenSession();\n  }\n"}, {"dataset": "setContentView", "exampleID": 276, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 146, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CMPUT301F12T05/classproject/tree/master/UFIll/src/ca/ualberta/cmput301f12t05/ufill/MainActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    email = new Intent(this, EmailPreferences.class);\n    binController = new BinController(this);\n    boolean empty = binController.emailAdapter.isEmailDatabaseEmpty();\n    if (empty) {\n      this.checkEmailAddedOrNot();\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 277, "initialization": ["View view = inflate(*,*)"], "initializationStart": [670], "initializationEnd": [724], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["view.findViewById(*)", "view.findViewById(*)", "view.findViewById(*)"], "configurationStart": [759, 909, 1003], "configurationEnd": [812, 965, 1049], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 1286, "focalAPIEnd": 1314, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Hectorxda/MySettings/tree/master/src/com/android/settings/MasterClear.java", "rawCode": "  /**\n   * In its initial state, the activity presents a button for the user to click in order to initiate\n   * a confirmation sequence. This method is called from various other points in the code to reset\n   * the activity to this base state.\n   *\n   * <p>Reinflating views from resources is expensive and prevents us from caching widget pointers,\n   * so we use a single-inflate pattern: we lazy- inflate each view, caching all of the widget\n   * pointers we'll need at the time, then simply reuse the inflated views directly whenever we need\n   * to change contents.\n   */\n  private void establishInitialState() {\n    if (mInitialView == null) {\n      mInitialView = mInflater.inflate(R.layout.master_clear_primary, null);\n      mInitiateButton = (Button) mInitialView.findViewById(R.id.initiate_master_clear);\n      mInitiateButton.setOnClickListener(mInitiateListener);\n      mExternalStorageContainer = mInitialView.findViewById(R.id.erase_external_container);\n      mExternalStorage = (CheckBox) mInitialView.findViewById(R.id.erase_external);\n      mExternalStorageContainer.setOnClickListener(\n          new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n              mExternalStorage.toggle();\n            }\n          });\n    }\n\n    setContentView(mInitialView);\n  }\n"}, {"dataset": "setContentView", "exampleID": 278, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 142, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Mr-Slash/TrailDevils/tree/master/src/ch/hsr/traildevil/presentation/TrailActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.detail);\n\n    initComponents();\n    handleIntent(getIntent());\n  }\n"}, {"dataset": "setContentView", "exampleID": 279, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 112, "focalAPIEnd": 147, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/andrograph/platform_development/tree/master/samples/ApiDemos/src/com/example/android/apis/view/ScrollBar3.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.scrollbar3);\n\n    findViewById(R.id.view3).setScrollBarStyle(View.SCROLLBARS_INSIDE_INSET);\n  }\n"}, {"dataset": "setContentView", "exampleID": 280, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/seniorprojectandroid/seniorproject/tree/master/seniorproject/src/edu/fiu/cs/seniorproject/PlaceDetailsActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_place_details);\n    getActionBar().setDisplayHomeAsUpEnabled(true);\n\n    AppLocationManager.init(this);\n\n    Intent intent = getIntent();\n\n    if (intent != null && intent.hasExtra(\"id\") && intent.hasExtra(\"source\")) {\n      String placeId = intent.getStringExtra(\"id\");\n      placeIdToDB = placeId;\n      SourceType source = (SourceType) intent.getSerializableExtra(\"source\");\n      placeSourceToDB = source.toString();\n\n      this.mLoader = new PlaceDownloader(this);\n      this.mLoader.executeOnExecutor(\n          AsyncTask.THREAD_POOL_EXECUTOR, new PlaceSearchData(placeId, source));\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 281, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 177, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/educacaoEmFoco/educacaoemfoco/tree/master/EEF/src/com/mdsgpp/eef/visao/TelaSobreComparacaoDeEstados.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sobre_tela_comparacao_de_estados);\n  }\n"}, {"dataset": "setContentView", "exampleID": 282, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 99, "focalAPIEnd": 129, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Guillermoo/unutopia-android/tree/master/herras78/RSSReader/src/com/valles/rssreader/AboutActivity.java", "rawCode": "  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.about);\n\n    final TextView Aceptar = (TextView) findViewById(R.id.btn_aceptar);\n    Aceptar.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            Salir();\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 283, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 108, "focalAPIEnd": 155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jknoxville/raceTrace/tree/master/project/src/uk/ac/cam/jk510/part2project/gui/NewSessionActivityBluetoothMaster.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_session_setup);\n    SessionManagerBluetooth.switchOnBluetooth(this);\n\n    selectedPlayers = (ListView) findViewById(R.id.selected_players);\n    ArrayList<String> pairedList = new ArrayList<String>();\n\n    SessionManagerBluetooth.populateList(\n        pairedList); // Add bluetooth names to the list driving the ListView\n\n    ArrayAdapter<String> listAdapter =\n        new ArrayAdapter<String>(this, R.layout.select_player_row, pairedList);\n    selectedPlayers.setAdapter(listAdapter);\n  }\n"}, {"dataset": "setContentView", "exampleID": 284, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 390, "focalAPIEnd": 429, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/NEXUS-EVO/frameworks_base/tree/master/libs/usb/tests/AccessoryChat/src/com/android/accessorychat/AccessoryChat.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    mUsbManager = (UsbManager) getSystemService(Context.USB_SERVICE);\n    mPermissionIntent = PendingIntent.getBroadcast(this, 0, new Intent(ACTION_USB_PERMISSION), 0);\n    IntentFilter filter = new IntentFilter(ACTION_USB_PERMISSION);\n    registerReceiver(mUsbReceiver, filter);\n\n    setContentView(R.layout.accessory_chat);\n    mLog = (TextView) findViewById(R.id.log);\n    mEditText = (EditText) findViewById(R.id.message);\n    mEditText.setOnEditorActionListener(this);\n  }\n"}, {"dataset": "setContentView", "exampleID": 285, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 84, "focalAPIEnd": 133, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arjunroy/cinder_base/tree/master/tests/appwidgets/AppWidgetHostTest/src/com/android/tests/appwidgethost/TestAppWidgetConfigure.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n    setContentView(R.layout.test_appwidget_configure);\n\n    findViewById(R.id.save_button).setOnClickListener(mOnClickListener);\n  }\n"}, {"dataset": "setContentView", "exampleID": 286, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 85, "focalAPIEnd": 122, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ktoonsez/AOKP-I777/tree/master/packages/apps/Settings/src/com/android/settings/BatteryInfo.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    setContentView(R.layout.battery_info);\n\n    // create the IntentFilter that will be used to listen\n    // to battery status broadcasts\n    mIntentFilter = new IntentFilter();\n    mIntentFilter.addAction(Intent.ACTION_BATTERY_CHANGED);\n  }\n"}, {"dataset": "setContentView", "exampleID": 287, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 151, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/nhvtgd/MITBAY/tree/master/src/com/login/LogIn.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_log_in);\n    // set navigating icon\n    ActionBar actionBar = getActionBar();\n    actionBar.setHomeButtonEnabled(true);\n    // Animation\n    makeAnimation();\n    // SharedPreferences\n    settings = getSharedPreferences(SETTING, 0);\n    prefEditor = settings.edit();\n    errorMessage = (TextView) findViewById(R.id.signInErrorMassage);\n    // Parse Initialization\n    Parse.initialize(\n        this,\n        \"2TGrIyvNfLwNy3kM8OnZLAQGtSW2f6cR3k9oxHak\",\n        \"Y8xlSKdSilJBepTNIJqthpbJ9KeppDWCdNUQdYFX\");\n    // Check Remember the last password\n    // Email Address\n    EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n    String previousUserName = settings.getString(USERNAME, \"\");\n    if (previousUserName != \"\") usernameField.setText(previousUserName);\n    // Password\n    EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n    String previousPassword = settings.getString(PASSWORD, \"\");\n    if (previousPassword != \"\") passwordField.setText(previousPassword);\n    // Confirm Button\n    confirm = (Button) findViewById(R.id.signInConfirmButton);\n    confirm.setOnClickListener(\n        new OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            if (System.currentTimeMillis() - timeClick < 1000) return;\n            else timeClick = System.currentTimeMillis();\n            ((TextView) findViewById(R.id.signInErrorMassage)).setText(\"\");\n            // Email Address\n            EditText usernameField = (EditText) findViewById(R.id.signInUsername);\n            username = usernameField.getText().toString();\n            // Password\n            EditText passwordField = (EditText) findViewById(R.id.signInPassword);\n            password = passwordField.getText().toString();\n            // Update\n            isValidLogIn(username, password);\n          }\n        });\n  }\n"}, {"dataset": "setContentView", "exampleID": 288, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 143, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/comsince/myappweixin/tree/master/musicPlayer/src/com/comsince/knowledge/activity/LoadingActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.loading);\n\n    new Handler()\n        .postDelayed(\n            new Runnable() {\n              @Override\n              public void run() {\n                Intent intent = new Intent(LoadingActivity.this, GuideActivity.class);\n                startActivity(intent);\n                LoadingActivity.this.finish();\n                Toast.makeText(getApplicationContext(), \"登录成功\", Toast.LENGTH_SHORT).show();\n              }\n            },\n            200);\n  }\n"}, {"dataset": "setContentView", "exampleID": 289, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/dsarkozi/Gourmet/tree/master/src/com/gourmet6/RestaurantActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_restaurant);\n    MainGourmet.isDone = false;\n    currentTown = MainGourmet.currentTown;\n    overridePendingTransition(0, R.anim.commetuveux);\n    // Show the Up button in the action bar.\n    setupActionBar();\n\n    g = (Gourmet) getApplication();\n    context = this;\n    dbh = new DBHandler(context);\n\n    hasRated = false;\n\n    currentRest = g.getRest();\n    setTitle(this.currentRest.getName().split(\"_\")[0]);\n\n    // Image\n    listImg = (LinearLayout) findViewById(R.id.listImgRest);\n    addImage();\n\n    // rating bar\n    ratingBar = (RatingBar) findViewById(R.id.ratingRest);\n    ratingBar.setIsIndicator(true);\n    if (g.getClient() != null) {\n      ratingBar.setOnTouchListener(\n          new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View v, MotionEvent event) {\n              if (!hasRated) {\n                createDialogToRate();\n              }\n              return false;\n            }\n          });\n    }\n\n    imgDesc = (ImageView) findViewById(R.id.imageViewDesc);\n    imgDesc.setClickable(true);\n    imgDesc.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View arg0) {\n            checkSizeDesc();\n          }\n        });\n\n    // TextView\n    tvInfoRate = (TextView) findViewById(R.id.tvInfoRate);\n    actualizeInfoRate();\n\n    description = (TextView) findViewById(R.id.descriptionRest);\n    description.setText(currentRest.getDescription());\n    description.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            checkSizeDesc();\n          }\n        });\n\n    horaire = (TextView) findViewById(R.id.horaireRest);\n    setHorair();\n\n    localisation = (TextView) findViewById(R.id.localisationRest);\n    setLocalisation();\n\n    if (currentRest.getTel() != null) {\n      tvTel = (TextView) findViewById(R.id.tvTelRest);\n      tvTel.setText(currentRest.getTel());\n    }\n    if (currentRest.getMail() != null) {\n      tvMail = (TextView) findViewById(R.id.tvMailRest);\n      tvMail.setText(currentRest.getMail());\n    }\n    if (currentRest.getWeb() != null) {\n      tvWeb = (TextView) findViewById(R.id.tvWebRest);\n      tvWeb.setText(currentRest.getWeb());\n    }\n    if (currentRest.getPriceCat() != 0) {\n      tvCatPrice = (TextView) findViewById(R.id.tvPriceCat);\n      tvCatPrice.setText(Dish.myRound(currentRest.getPriceCat()) + \" \\u20ac\");\n    }\n    if (currentRest.getSeats() != 0) {\n      tvSeats = (TextView) findViewById(R.id.tvPlaceRest);\n      tvSeats.setText(currentRest.getSeats() + \"\");\n    }\n\n    // Button\n    // Reaction du bouton de commande\n    order = (Button) findViewById(R.id.commandeInRest);\n    order.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            currentRest.createListDishes(new DBHandler(RestaurantActivity.this));\n            Intent commande = new Intent(RestaurantActivity.this, OrderActivity.class);\n            commande.putExtra(\"from\", true);\n            startActivity(commande);\n          }\n        });\n\n    // Reaction du bouton de reservation\n    reserve = (Button) findViewById(R.id.reserveInRest);\n    reserve.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            Intent reserv = new Intent(RestaurantActivity.this, ReservationActivity.class);\n            reserv.putExtra(\"from\", false);\n            startActivity(reserv);\n          }\n        });\n\n    // Reaction du bouton menu\n    menu = (Button) findViewById(R.id.menuInRest);\n    menu.setOnClickListener(\n        new View.OnClickListener() {\n          @Override\n          public void onClick(View v) {\n            currentRest.createListDishes(new DBHandler(RestaurantActivity.this));\n            Intent dishes = new Intent(RestaurantActivity.this, DishMenuActivity.class);\n            startActivity(dishes);\n          }\n        });\n    if (g.getClient() == null) {\n      order.setEnabled(false);\n      reserve.setEnabled(false);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 290, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 88, "focalAPIEnd": 127, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Calendar/tree/master/src/com/android/calendar/alerts/AlertActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    setContentView(R.layout.alert_activity);\n    setTitle(R.string.alert_title);\n\n    mQueryHandler = new QueryHandler(this);\n    mAdapter = new AlertAdapter(this, R.layout.alert_item);\n\n    mListView = (ListView) findViewById(R.id.alert_container);\n    mListView.setItemsCanFocus(true);\n    mListView.setAdapter(mAdapter);\n    mListView.setOnItemClickListener(mViewListener);\n\n    mDismissAllButton = (Button) findViewById(R.id.dismiss_all);\n    mDismissAllButton.setOnClickListener(this);\n\n    // Disable the buttons, since they need mCursor, which is created asynchronously\n    mDismissAllButton.setEnabled(false);\n  }\n"}, {"dataset": "setContentView", "exampleID": 291, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 278, "focalAPIEnd": 307, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/remi/andrake/tree/master/andrake_0.1/brainstorming/examples/basic_ui_old_ideas/.basic_ui/src/com/android/basicui/BasicUI.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    // set UI element instances\n    // Button _my_button = (Button) findViewById(R.id.my_button);\n\n    // set the view for this particular activity - it's called 'main'\n    setContentView(R.layout.main);\n\n    // this stuff ONLY WORKS (so far as i can tell) **AFTER** setContentView\n    // TextView txt = (TextView) findViewById(R.id.txt);\n    txt = (TextView) findViewById(R.id.txt);\n    txt.setText(\"updated!!!!\");\n\n    Button click_me = (Button) findViewById(R.id.my_button);\n\n    click_me.setOnClickListener(this);\n\n    /*\n    click_me.setOnClickListener(new View.OnClickListener(){\n    public void onClick(View v){\n    txt.setText(\"clicked! ... trying to goto another view ...\");\n\n    Intent i = new Intent(this, UiResult.class);\n    startActivityForResult(i, 2);\n\n    //Intent i = new Intent( BasicUI.this, UiResult.class );\n    //i.putExtra(\"foo\", \"bar\");\n    //startActivityForResult(i, 0);\n    //startActivityForResult( i, 12345 ); // where 0 is the \"activity\" ... an ENUM value\n\n    //Dialog foo = new AlertDialog.Builder(BasicUI.this)\n    //.setTitle(\"title from INLINE!\")\n    //.setMessage(\"INLINE messsage!\")\n    //.create();\n    //foo.show();\n    }\n    });\n    */\n  }\n"}, {"dataset": "setContentView", "exampleID": 292, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 112, "focalAPIEnd": 165, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sunriver/projects/tree/master/android/weiciyuan/src/org/qii/weiciyuan/ui/browser/BrowserLocalPicActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.browserbigpicactivity_layout);\n    ActionBar actionBar = getActionBar();\n    actionBar.setDisplayHomeAsUpEnabled(true);\n    actionBar.setTitle(R.string.browser_picture);\n\n    webView = (WebView) findViewById(R.id.iv);\n\n    webView.setBackgroundColor(getResources().getColor(R.color.transparent));\n    webView.getSettings().setJavaScriptEnabled(true);\n    webView.getSettings().setUseWideViewPort(true);\n    webView.getSettings().setLoadWithOverviewMode(true);\n    webView.getSettings().setBuiltInZoomControls(true);\n    webView.getSettings().setDisplayZoomControls(false);\n\n    webView.setVerticalScrollBarEnabled(false);\n    webView.setHorizontalScrollBarEnabled(false);\n\n    path = getIntent().getStringExtra(\"path\");\n\n    if (!TextUtils.isEmpty(path)) {\n\n      File file = new File(path);\n\n      String str1 = \"file://\" + file.getAbsolutePath().replace(\"/mnt/sdcard/\", \"/sdcard/\");\n      String str2 =\n          \"<html>\\n<head>\\n <style>\\n html,body{background:transparent;margin:0;padding:0;} *{-webkit-tap-highlight-color:rgba(0, 0, 0, 0);}\\n </style>\\n <script type=\\\"text/javascript\\\">\\n var imgUrl = \\\"\"\n              + str1\n              + \"\\\";\"\n              + \" var objImage = new Image();\\n\"\n              + \" var realWidth = 0;\\n\"\n              + \" var realHeight = 0;\\n\"\n              + \"\\n\"\n              + \" function onLoad() {\\n\"\n              + \" objImage.onload = function() {\\n\"\n              + \" realWidth = objImage.width;\\n\"\n              + \" realHeight = objImage.height;\\n\"\n              + \"\\n\"\n              + \" document.gagImg.src = imgUrl;\\n\"\n              + \" onResize();\\n\"\n              + \" }\\n\"\n              + \" objImage.src = imgUrl;\\n\"\n              + \" }\\n\"\n              + \"\\n\"\n              + \" function onResize() {\\n\"\n              + \" var scale = 1;\\n\"\n              + \" var newWidth = document.gagImg.width;\\n\"\n              + \" if (realWidth > newWidth) {\\n\"\n              + \" scale = realWidth / newWidth;\\n\"\n              + \" } else {\\n\"\n              + \" scale = newWidth / realWidth;\\n\"\n              + \" }\\n\"\n              + \"\\n\"\n              + \" hiddenHeight = Math.ceil(30 * scale);\\n\"\n              + \" document.getElementById('hiddenBar').style.height = hiddenHeight + \\\"px\\\";\\n\"\n              + \" document.getElementById('hiddenBar').style.marginTop = -hiddenHeight + \\\"px\\\";\\n\"\n              + \" }\\n\"\n              + \" </script>\\n\"\n              + \"</head>\\n\"\n              + \"<body onload=\\\"onLoad()\\\" onresize=\\\"onResize()\\\" onclick=\\\"Android.toggleOverlayDisplay();\\\">\\n\"\n              + \" <table style=\\\"width: 100%;height:100%;\\\">\\n\"\n              + \" <tr style=\\\"width: 100%;\\\">\\n\"\n              + \" <td valign=\\\"middle\\\" align=\\\"center\\\" style=\\\"width: 100%;\\\">\\n\"\n              + \" <div style=\\\"display:block\\\">\\n\"\n              + \" <img name=\\\"gagImg\\\" src=\\\"\\\" width=\\\"100%\\\" style=\\\"\\\" />\\n\"\n              + \" </div>\\n\"\n              + \" <div id=\\\"hiddenBar\\\" style=\\\"position:absolute; width: 100%; background: transparent;\\\"></div>\\n\"\n              + \" </td>\\n\"\n              + \" </tr>\\n\"\n              + \" </table>\\n\"\n              + \"</body>\\n\"\n              + \"</html>\";\n      webView.loadDataWithBaseURL(\"file:///android_asset/\", str2, \"text/html\", \"utf-8\", null);\n\n      final BitmapFactory.Options options = new BitmapFactory.Options();\n      options.inJustDecodeBounds = true;\n      BitmapFactory.decodeFile(path, options);\n      int width = options.outWidth;\n      int height = options.outHeight;\n      getActionBar().setSubtitle(String.valueOf(width) + \"x\" + String.valueOf(height));\n\n      webView.setVisibility(View.VISIBLE);\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 293, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 136, "focalAPIEnd": 169, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mconf/sipdroid/tree/master/src/org/sipdroid/sipua/ui/Sipdroid.java", "rawCode": "  @Override\n  public void onCreate(Bundle icicle) {\n    super.onCreate(icicle);\n\n    requestWindowFeature(Window.FEATURE_NO_TITLE);\n    setContentView(R.layout.sipdroid);\n    sip_uri_box = (AutoCompleteTextView) findViewById(R.id.txt_callee);\n    sip_uri_box2 = (AutoCompleteTextView) findViewById(R.id.txt_callee2);\n    sip_uri_box.setOnKeyListener(\n        new OnKeyListener() {\n          public boolean onKey(View v, int keyCode, KeyEvent event) {\n            if (event.getAction() == KeyEvent.ACTION_DOWN && keyCode == KeyEvent.KEYCODE_ENTER) {\n              call_menu(sip_uri_box);\n              return true;\n            }\n            return false;\n          }\n        });\n    sip_uri_box.setOnItemClickListener(\n        new OnItemClickListener() {\n          public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n            call_menu(sip_uri_box);\n          }\n        });\n    sip_uri_box2.setOnKeyListener(\n        new OnKeyListener() {\n          public boolean onKey(View v, int keyCode, KeyEvent event) {\n            if (event.getAction() == KeyEvent.ACTION_DOWN && keyCode == KeyEvent.KEYCODE_ENTER) {\n              call_menu(sip_uri_box2);\n              return true;\n            }\n            return false;\n          }\n        });\n    sip_uri_box2.setOnItemClickListener(\n        new OnItemClickListener() {\n          public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n            call_menu(sip_uri_box2);\n          }\n        });\n    on(this, true);\n\n    Button contactsButton = (Button) findViewById(R.id.contacts_button);\n    contactsButton.setOnClickListener(\n        new Button.OnClickListener() {\n          public void onClick(View v) {\n            Intent myIntent = new Intent(Intent.ACTION_DIAL);\n            startActivity(myIntent);\n          }\n        });\n\n    final Context mContext = this;\n    final OnDismissListener listener = this;\n\n    createButton = (Button) findViewById(R.id.create_button);\n    createButton.setOnClickListener(\n        new Button.OnClickListener() {\n          public void onClick(View v) {\n            CreateAccount createDialog = new CreateAccount(mContext);\n            createDialog.setOnDismissListener(listener);\n            createDialog.show();\n          }\n        });\n\n    if (!PreferenceManager.getDefaultSharedPreferences(this)\n        .getBoolean(Settings.PREF_NOPORT, Settings.DEFAULT_NOPORT)) {\n      boolean ask = false;\n      for (int i = 0; i < SipdroidEngine.LINES; i++) {\n        String j = (i != 0 ? \"\" + i : \"\");\n        if (PreferenceManager.getDefaultSharedPreferences(this)\n                .getString(Settings.PREF_SERVER + j, Settings.DEFAULT_SERVER)\n                .equals(Settings.DEFAULT_SERVER)\n            && PreferenceManager.getDefaultSharedPreferences(this)\n                    .getString(Settings.PREF_USERNAME + j, Settings.DEFAULT_USERNAME)\n                    .length()\n                != 0\n            && PreferenceManager.getDefaultSharedPreferences(this)\n                .getString(Settings.PREF_PORT + j, Settings.DEFAULT_PORT)\n                .equals(Settings.DEFAULT_PORT)) ask = true;\n      }\n      if (ask)\n        new AlertDialog.Builder(this)\n            .setMessage(R.string.dialog_port)\n            .setPositiveButton(\n                R.string.yes,\n                new DialogInterface.OnClickListener() {\n                  public void onClick(DialogInterface dialog, int whichButton) {\n                    Editor edit = PreferenceManager.getDefaultSharedPreferences(mContext).edit();\n                    for (int i = 0; i < SipdroidEngine.LINES; i++) {\n                      String j = (i != 0 ? \"\" + i : \"\");\n                      if (PreferenceManager.getDefaultSharedPreferences(mContext)\n                              .getString(Settings.PREF_SERVER + j, Settings.DEFAULT_SERVER)\n                              .equals(Settings.DEFAULT_SERVER)\n                          && PreferenceManager.getDefaultSharedPreferences(mContext)\n                                  .getString(Settings.PREF_USERNAME + j, Settings.DEFAULT_USERNAME)\n                                  .length()\n                              != 0\n                          && PreferenceManager.getDefaultSharedPreferences(mContext)\n                              .getString(Settings.PREF_PORT + j, Settings.DEFAULT_PORT)\n                              .equals(Settings.DEFAULT_PORT))\n                        edit.putString(Settings.PREF_PORT + j, \"5061\");\n                    }\n                    edit.commit();\n                    Receiver.engine(mContext).halt();\n                    Receiver.engine(mContext).StartEngine();\n                  }\n                })\n            .setNeutralButton(\n                R.string.no,\n                new DialogInterface.OnClickListener() {\n                  public void onClick(DialogInterface dialog, int whichButton) {}\n                })\n            .setNegativeButton(\n                R.string.dontask,\n                new DialogInterface.OnClickListener() {\n                  public void onClick(DialogInterface dialog, int whichButton) {\n                    Editor edit = PreferenceManager.getDefaultSharedPreferences(mContext).edit();\n                    edit.putBoolean(Settings.PREF_NOPORT, true);\n                    edit.commit();\n                  }\n                })\n            .show();\n    } else if (PreferenceManager.getDefaultSharedPreferences(this)\n            .getString(Settings.PREF_PREF, Settings.DEFAULT_PREF)\n            .equals(Settings.VAL_PREF_PSTN)\n        && !PreferenceManager.getDefaultSharedPreferences(this)\n            .getBoolean(Settings.PREF_NODEFAULT, Settings.DEFAULT_NODEFAULT))\n      new AlertDialog.Builder(this)\n          .setMessage(R.string.dialog_default)\n          .setPositiveButton(\n              R.string.yes,\n              new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int whichButton) {\n                  Editor edit = PreferenceManager.getDefaultSharedPreferences(mContext).edit();\n                  edit.putString(Settings.PREF_PREF, Settings.VAL_PREF_SIP);\n                  edit.commit();\n                }\n              })\n          .setNeutralButton(\n              R.string.no,\n              new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int whichButton) {}\n              })\n          .setNegativeButton(\n              R.string.dontask,\n              new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int whichButton) {\n                  Editor edit = PreferenceManager.getDefaultSharedPreferences(mContext).edit();\n                  edit.putBoolean(Settings.PREF_NODEFAULT, true);\n                  edit.commit();\n                }\n              })\n          .show();\n  }\n"}, {"dataset": "setContentView", "exampleID": 294, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 117, "focalAPIEnd": 155, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/iweinzierl/passsafe/tree/master/androidapp/src/de/iweinzierl/passsafe/android/activity/sync/SyncActivity.java", "rawCode": "  @Override\n  protected void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_sync);\n  }\n"}, {"dataset": "setContentView", "exampleID": 295, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 71, "focalAPIEnd": 119, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kitkatandroid/JLS36G_base/tree/master/packages/SystemUI/src/com/android/systemui/recent/RecentsActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    setContentView(R.layout.status_bar_recent_panel);\n    mRecentsPanel = (RecentsPanelView) findViewById(R.id.recents_root);\n    mRecentsPanel.setOnTouchListener(new TouchOutsideListener(mRecentsPanel));\n    mRecentsPanel.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);\n\n    final RecentTasksLoader recentTasksLoader = RecentTasksLoader.getInstance(this);\n    recentTasksLoader.setRecentsPanel(mRecentsPanel, mRecentsPanel);\n    mRecentsPanel.setMinSwipeAlpha(\n        getResources().getInteger(R.integer.config_recent_item_min_alpha) / 100f);\n\n    if (savedInstanceState == null || savedInstanceState.getBoolean(WAS_SHOWING)) {\n      handleIntent(getIntent(), (savedInstanceState == null));\n    }\n    mIntentFilter = new IntentFilter();\n    mIntentFilter.addAction(CLOSE_RECENTS_INTENT);\n    mIntentFilter.addAction(WINDOW_ANIMATION_START_INTENT);\n    registerReceiver(mIntentReceiver, mIntentFilter);\n    super.onCreate(savedInstanceState);\n  }\n"}, {"dataset": "setContentView", "exampleID": 296, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 182, "focalAPIEnd": 220, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/RonnieVandenPoel/SourceFish/tree/master/JakeWharton-ActionBarSherlock-e5c2d1c/samples/fragments/src/com/actionbarsherlock/sample/fragments/FragmentMenuSupport.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    setTheme(SampleList.THEME); // Used for theme switching in samples\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.fragment_menu);\n\n    // Make sure the two menu fragments are created.\n    FragmentManager fm = getSupportFragmentManager();\n    FragmentTransaction ft = fm.beginTransaction();\n    mFragment1 = fm.findFragmentByTag(\"f1\");\n    if (mFragment1 == null) {\n      mFragment1 = new MenuFragment();\n      ft.add(mFragment1, \"f1\");\n    }\n    mFragment2 = fm.findFragmentByTag(\"f2\");\n    if (mFragment2 == null) {\n      mFragment2 = new Menu2Fragment();\n      ft.add(mFragment2, \"f2\");\n    }\n    ft.commit();\n\n    // Watch check box clicks.\n    mCheckBox1 = (CheckBox) findViewById(R.id.menu1);\n    mCheckBox1.setOnClickListener(mClickListener);\n    mCheckBox2 = (CheckBox) findViewById(R.id.menu2);\n    mCheckBox2.setOnClickListener(mClickListener);\n\n    // Make sure fragments start out with correct visibility.\n    updateFragmentVisibility();\n  }\n"}, {"dataset": "setContentView", "exampleID": 297, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 159, "focalAPIEnd": 187, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/aismail/AndroAR/tree/master/AndroARGUI/src/com/androar/MoveSelectionActivity.java", "rawCode": "  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    requestWindowFeature(Window.FEATURE_NO_TITLE);\n    setContentView(R.layout.add);\n    initialize(savedInstanceState);\n  }\n"}, {"dataset": "setContentView", "exampleID": 298, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 111, "focalAPIEnd": 153, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/geosch/forum-app/tree/master/forum-app/src/com/example/forum_app/RegisterActivity.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_register);\n\n    this.setTitle(R.string.register);\n\n    // this.btRegister = (Button) this.findViewById(com.example.forum_app.R.id.btRegister);\n    this.tvRegisterError = (TextView) this.findViewById(com.example.forum_app.R.id.tvRegisterError);\n\n    this.etNickname = (EditText) this.findViewById(com.example.forum_app.R.id.etNickname);\n    this.etPassword = (EditText) this.findViewById(com.example.forum_app.R.id.etPassword);\n    this.etPasswordConfirm =\n        (EditText) this.findViewById(com.example.forum_app.R.id.etPasswordConfirm);\n    this.spCountry = (Spinner) this.findViewById(com.example.forum_app.R.id.spCountry);\n    this.etEmail = (EditText) this.findViewById(com.example.forum_app.R.id.etEmail);\n    this.spGender = (Spinner) this.findViewById(com.example.forum_app.R.id.spGender);\n\n    Locale[] locales = Locale.getAvailableLocales();\n    String[] countries = new String[locales.length];\n    Set<String> strings = new HashSet<String>();\n\n    for (int i = 0; i < countries.length; i++) {\n      String country =\n          locales[i]\n              .getDisplayCountry(\n                  new Locale(\n                      this.getString(R.string.country_language),\n                      this.getString(R.string.country_language_state)))\n              .trim();\n      if (!country.isEmpty()) {\n        strings.add(country);\n      }\n    }\n\n    countries = strings.toArray(new String[0]);\n    java.util.Arrays.sort(countries);\n\n    ArrayAdapter<String> country_adapter =\n        new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, countries);\n    spCountry.setAdapter(country_adapter);\n\n    this.regexp_pattern = Patterns.EMAIL_ADDRESS;\n  }\n"}, {"dataset": "setContentView", "exampleID": 299, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 182, "focalAPIEnd": 221, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/VandyMobile/guide-android/tree/master/JakeWharton-ActionBarSherlock-88fc341/samples/fragments/src/com/actionbarsherlock/sample/fragments/FragmentStackSupport.java", "rawCode": "  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    setTheme(SampleList.THEME); // Used for theme switching in samples\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.fragment_stack);\n\n    // Watch for button clicks.\n    Button button = (Button) findViewById(R.id.new_fragment);\n    button.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            addFragmentToStack();\n          }\n        });\n\n    if (savedInstanceState == null) {\n      // Do first time initialization -- add initial fragment.\n      Fragment newFragment = CountingFragment.newInstance(mStackLevel);\n      FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n      ft.add(R.id.simple_fragment, newFragment).commit();\n    } else {\n      mStackLevel = savedInstanceState.getInt(\"level\");\n    }\n  }\n"}, {"dataset": "setContentView", "exampleID": 300, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = activity.setContentView(view)", "focalAPIStart": 66, "focalAPIEnd": 105, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/welovechickens/Annenberg-Friend-Finder/tree/master/Annenberg Friend Finder/src/com/harvard/annenberg/ProfileActivity.java", "rawCode": "  public void onCreate(Bundle bun) {\n    super.onCreate(bun);\n    setContentView(R.layout.profile_layout);\n    prefs = getSharedPreferences(\"AFF\", 0);\n    // Update Name and HUID\n    TextView name = (TextView) findViewById(R.id.profile_name);\n    name.setText(prefs.getString(\"n\", \"\"));\n    table = (TextView) findViewById(R.id.profile_table);\n    // TextView huid = (TextView) findViewById(R.id.profile_HUID);\n    // huid.setText(prefs.getString(\"huid\", \"\"));\n\n    mImage = (ImageView) findViewById(R.id.profile_image);\n\n    String huid = prefs.getString(\"huid\", \"\").trim();\n    int urlData = huid.lastIndexOf(\"/\");\n    String aURL = \"http://mgm.funformobile.com/aff/img/\" + huid.substring(urlData + 1) + \".jpg\";\n\n    ImageDownloader imgDownloader = new ImageDownloader();\n    imgDownloader.execute(aURL);\n\n    // Image\n    // TODO: Gallery set image stuff.\n    // String uriString = c.getString(c\n    // .getColumnIndexOrThrow(DbAdapter.KEY_USER_IMAGE));\n    // if (uriString.equals(\"\") == false) {\n    // Uri uri = Uri.parse(uriString);\n    // ImageView image = (ImageView) findViewById(R.id.profile_image);\n    // image.setImageURI(uri);\n    // }\n    // c.close();\n    // database.close();\n    // Spinner\n    s = (Spinner) findViewById(R.id.profile_status);\n    ArrayAdapter a =\n        ArrayAdapter.createFromResource(\n            this, R.array.status_array, android.R.layout.simple_spinner_item);\n    a.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n    s.setAdapter(a);\n    s.setOnItemSelectedListener(statusListener);\n\n    getStatus();\n\n    // Table\n    // TextView tableText = (TextView) findViewById(R.id.profile_table);\n    // String table = prefs.getString(\"table\", \"\");\n    // tableText.setText((table.equals(\"\") ? \"N/A\" : \"\" + table));\n\n    // Check in button\n    checkIn = (Button) findViewById(R.id.check_in);\n    checkIn.setOnClickListener(\n        new View.OnClickListener() {\n\n          public void onClick(View v) {\n            if (prefs.getBoolean(\"checkedin\", false) == false) {\n              Intent i = new Intent(ProfileActivity.this, NewAnnenbergActivity.class);\n              i.putExtra(\"STARTCODE\", true);\n              startActivityForResult(i, 0);\n            } else {\n              currentSelection = 1;\n              tableID = 0;\n              prefs.edit().putBoolean(\"checkedin\", false).commit();\n              checkIn.setText(\"Check In\");\n              s.setSelection(0);\n              table.setText(\"N/A\");\n            }\n          }\n        });\n\n    /** Creates listener for the icon. */\n    mImage.setOnClickListener(\n        new OnClickListener() {\n          public void onClick(View v) {\n            Intent innerIntent = new Intent(Intent.ACTION_GET_CONTENT);\n            innerIntent.setType(\"image/*\");\n            startActivityForResult(innerIntent, PICKPIC_FROM_ALBUM);\n          }\n        });\n  }\n"}]