[{"dataset": "dismiss", "exampleID": 6501, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 145, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rubikill/DictionaryQLQT/tree/master/facebook/src/com/facebook/widget/WebDialog.java", "rawCode": "    @Override\n    public void onPageFinished(WebView view, String url) {\n      super.onPageFinished(view, url);\n      if (!isDetached) {\n        spinner.dismiss();\n      }\n      /*\n       * Once web view is fully loaded, set the contentFrameLayout background to be transparent\n       * and make visible the 'x' image.\n       */\n      contentFrameLayout.setBackgroundColor(Color.TRANSPARENT);\n      webView.setVisibility(View.VISIBLE);\n      crossImageView.setVisibility(View.VISIBLE);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6502, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 253, "guardExpressionEnd": 284, "guardBlockStart": 253, "guardBlockEnd": 324, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 293, "focalAPIEnd": 317, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/askcs/asksensedemo/tree/master/src/main/java/com/askcs/asksensedemo/task/LoginTask.java", "rawCode": "  /**\n   * Executed after `doInBackground(...)` and is executed on the GUI thread.\n   *\n   * @param success if the login was successful.\n   */\n  @Override\n  protected void onPostExecute(Boolean success) {\n\n    // Close the dialog, if still visible.\n    if (progressDialog.isShowing()) {\n      progressDialog.dismiss();\n    }\n\n    Toast.makeText(activity, message, Toast.LENGTH_LONG).show();\n\n    try {\n      // Fetch all credential Setting object from the local DB.\n      Setting usernameSetting = settingDao.queryForId(Setting.USER_KEY);\n      Setting passwordSetting = settingDao.queryForId(Setting.PASSWORD_KEY);\n      Setting loggedInSetting = settingDao.queryForId(Setting.LOGGED_IN_KEY);\n\n      // Change all settings depending on successful login.\n      usernameSetting.setValue(success ? username : \"\");\n      passwordSetting.setValue(success ? passwordHash : \"\");\n      loggedInSetting.setValue(String.valueOf(success ? Boolean.TRUE : Boolean.FALSE));\n\n      // Update/commit the settings to the local DB.\n      settingDao.update(usernameSetting);\n      settingDao.update(passwordSetting);\n      settingDao.update(loggedInSetting);\n    } catch (SQLException e) {\n      Log.e(TAG, \"Something went wrong updating login credentials: \", e);\n    }\n\n    if (success) {\n      // Close the LoginActivity upon successful login and start the main Activity.\n      activity.startActivity(new Intent(activity, MainActivity.class));\n      activity.finish();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6503, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 77, "focalAPIEnd": 91, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/zamiang/Atomate/tree/master/listomate/listomate-Android/src/com/listomate/models/ContactList.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          prog.dismiss();\n          cAdapter = new ContactArrayAdapter(thisContext, R.layout.listitemlayout, contacts);\n          getListView().setFastScrollEnabled(true);\n          setListAdapter(cAdapter);\n        }\n"}, {"dataset": "dismiss", "exampleID": 6504, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 3101, "guardExpressionEnd": 3136, "guardBlockStart": 3101, "guardBlockEnd": 3180, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 3145, "focalAPIEnd": 3173, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/TeamNyx/packages_apps_Browser/tree/master/src/com/android/browser/WallpaperHandler.java", "rawCode": "  @Override\n  public void run() {\n    WallpaperManager wm = WallpaperManager.getInstance(mContext);\n    Drawable oldWallpaper = wm.getDrawable();\n    InputStream inputstream = null;\n    try {\n      // TODO: This will cause the resource to be downloaded again, when\n      // we should in most cases be able to grab it from the cache. To fix\n      // this we should query WebCore to see if we can access a cached\n      // version and instead open an input stream on that. This pattern\n      // could also be used in the download manager where the same problem\n      // exists.\n      inputstream = openStream();\n      if (inputstream != null) {\n        if (!inputstream.markSupported()) {\n          inputstream = new BufferedInputStream(inputstream, BUFFER_SIZE);\n        }\n        inputstream.mark(BUFFER_SIZE);\n        BitmapFactory.Options options = new BitmapFactory.Options();\n        options.inJustDecodeBounds = true;\n        // We give decodeStream a wrapped input stream so it doesn't\n        // mess with our mark (currently it sets a mark of 1024)\n        BitmapFactory.decodeStream(new BufferedInputStream(inputstream), null, options);\n        int maxWidth = wm.getDesiredMinimumWidth();\n        int maxHeight = wm.getDesiredMinimumHeight();\n        // Give maxWidth and maxHeight some leeway\n        maxWidth *= 1.25;\n        maxHeight *= 1.25;\n        int bmWidth = options.outWidth;\n        int bmHeight = options.outHeight;\n\n        int scale = 1;\n        while (bmWidth > maxWidth || bmHeight > maxHeight) {\n          scale <<= 1;\n          bmWidth >>= 1;\n          bmHeight >>= 1;\n        }\n        options.inJustDecodeBounds = false;\n        options.inSampleSize = scale;\n        try {\n          inputstream.reset();\n        } catch (IOException e) {\n          // BitmapFactory read more than we could buffer\n          // Re-open the stream\n          inputstream.close();\n          inputstream = openStream();\n        }\n        Bitmap scaledWallpaper = BitmapFactory.decodeStream(inputstream, null, options);\n        wm.setBitmap(scaledWallpaper);\n      }\n    } catch (IOException e) {\n      Log.e(LOGTAG, \"Unable to set new wallpaper\");\n      // Act as though the user canceled the operation so we try to\n      // restore the old wallpaper.\n      mCanceled = true;\n    } finally {\n      if (inputstream != null) {\n        try {\n          inputstream.close();\n        } catch (IOException e) {\n          // Ignore\n        }\n      }\n    }\n\n    if (mCanceled) {\n      // Restore the old wallpaper if the user cancelled whilst we were\n      // setting\n      // the new wallpaper.\n      int width = oldWallpaper.getIntrinsicWidth();\n      int height = oldWallpaper.getIntrinsicHeight();\n      Bitmap bm = Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565);\n      Canvas canvas = new Canvas(bm);\n      oldWallpaper.setBounds(0, 0, width, height);\n      oldWallpaper.draw(canvas);\n      canvas.setBitmap(null);\n      try {\n        wm.setBitmap(bm);\n      } catch (IOException e) {\n        Log.e(LOGTAG, \"Unable to restore old wallpaper.\");\n      }\n      mCanceled = false;\n    }\n\n    if (mWallpaperProgress.isShowing()) {\n      mWallpaperProgress.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6505, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 77, "guardExpressionEnd": 103, "guardBlockStart": 77, "guardBlockEnd": 128, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 104, "focalAPIEnd": 127, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/defrex/Connectsy-Android/tree/master/src/com/connectsy2/settings/Preferences.java", "rawCode": "  public void onRemoteError(int httpStatus, String response, int code) {\n    if (loadingDialog != null) loadingDialog.dismiss();\n    if (code == CHANGE_PASSWORD) {\n      try {\n        JSONObject e = new JSONObject(response);\n        if (e.getString(\"error\").equals(\"INVALID_PASSWORD\"))\n          toast(\"Invalid password, please try again\");\n        else toast(\"Password Change Error: \" + httpStatus);\n      } catch (JSONException e) {\n        e.printStackTrace();\n      }\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6506, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 97, "guardExpressionEnd": 117, "guardBlockStart": 97, "guardBlockEnd": 136, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 118, "focalAPIEnd": 135, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/poko/IH/tree/master/android/src/net/ecoarttech/ihplus/network/DirectionsAsyncTask.java", "rawCode": "  @Override\n  protected void onPostExecute(String result) {\n    super.onPostExecute(result);\n    if (mDialog != null) mDialog.dismiss();\n    if (mCompletionListener != null) mCompletionListener.onComplete(result);\n  }\n"}, {"dataset": "dismiss", "exampleID": 6507, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 97, "guardExpressionEnd": 156, "guardBlockStart": 97, "guardBlockEnd": 183, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 157, "focalAPIEnd": 182, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mattadams/gcmobile/tree/master/src/com/radicaldynamic/gcmobile/android/activities/DataExportActivity.java", "rawCode": "  @Override\n  public void exportError(String errorMsg) {\n    // Close progress automatically\n    if (mProgressDialog != null && mProgressDialog.isShowing()) mProgressDialog.dismiss();\n\n    AlertDialog.Builder builder = new AlertDialog.Builder(this);\n\n    builder\n        .setCancelable(false)\n        .setIcon(R.drawable.ic_dialog_alert)\n        .setTitle(\"Export Problem\")\n        .setMessage(errorMsg);\n\n    builder.setPositiveButton(\n        getString(R.string.ok),\n        new DialogInterface.OnClickListener() {\n          public void onClick(DialogInterface dialog, int whichButton) {\n            dialog.cancel();\n          }\n        });\n\n    mDialog = builder.create();\n    mDialog.show();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6508, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 92, "focalAPIEnd": 108, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pankajc-optimus/android-lib/tree/master/FacebookIntegration/Code/FaceBookApp/src/com/optimus/mobile/FQLInterfaceDialog.java", "rawCode": "    @Override\n    public void onComplete(final String response, final Object state) {\n      dialog.dismiss();\n      /*\n       * Output can be a JSONArray or a JSONObject. Try JSONArray and if\n       * there's a JSONException, parse to JSONObject\n       */\n      try {\n        JSONArray json = new JSONArray(response);\n        setText(json.toString(2));\n      } catch (JSONException e) {\n        try {\n          /*\n           * JSONObject probably indicates there was some error\n           * Display that error, but for end user you should parse the\n           * error and show appropriate message\n           */\n          JSONObject json = new JSONObject(response);\n          setText(json.toString(2));\n        } catch (JSONException e1) {\n          setText(e1.getMessage());\n        }\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6509, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 926, "guardExpressionEnd": 949, "guardBlockStart": 926, "guardBlockEnd": 985, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 960, "focalAPIEnd": 976, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ggc-itec/ggc-connect/tree/master/src/edu/ggc/it/banner_web/BannerWebActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Void result) {\n      // share cookies between httpclient and webview;\n      // Thank you stackoverflow.com!\n      // http://stackoverflow.com/questions/1652850/android-webview-cookie-problem?lq=1\n      if (cookies != null && !cookies.isEmpty()) {\n        CookieSyncManager.createInstance(webView.getContext());\n        CookieManager cookieManager = CookieManager.getInstance();\n        for (Cookie cookie : cookies) {\n          Cookie sessionInfo = cookie;\n          String cookieString =\n              sessionInfo.getName()\n                  + \"=\"\n                  + sessionInfo.getValue()\n                  + \"; domain=\"\n                  + sessionInfo.getDomain();\n          cookieManager.setCookie(BANNER_DOMAIN, cookieString);\n          CookieSyncManager.getInstance().sync();\n        }\n      }\n      SystemClock.sleep(2000);\n      webView.loadUrl(BANNER_MENU_URL);\n\n      if (dialog.isShowing()) {\n        dialog.dismiss();\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6510, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "v(String,String)"], "tryExpressionStart": 163, "tryExpressionEnd": 167, "tryBlockStart": 163, "tryBlockEnd": 657, "catchExpressionStart": 555, "catchExpressionEnd": 575, "catchBlockStart": 555, "catchBlockEnd": 657, "exceptionHandlingCallStart": [633, 585], "exceptionHandlingCallEnd": [647, 648], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 236, "focalAPIEnd": 261, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/spinnercat/Annenberg-Friend-Finder/tree/master/Annenberg Friend Finder/src/com/harvard/annenberg/FriendListActivity.java", "rawCode": "    protected void onPostExecute(String result) {\n      // Toast.makeText(this.get, \"Your Ringtone has been downloaded\",\n      // Toast.LENGTH_LONG).show();\n      try {\n        // displayMsg();\n        // displayImage(resultbm)\n        mProgressDialog.dismiss();\n        showUploadSuccess(result);\n        groups = getGroups();\n        children = getChilds();\n        fla = new FriendListAdapter(FriendListActivity.this, groups, children, expListView);\n        expListView.setAdapter(fla);\n        // Log.v(\"Ringtone\",\"Ringtone Path:\"+resultbm);\n\n      } catch (Exception e) {\n        Log.v(\"Exception google search\", \"Exception:\" + e.getMessage());\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6511, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/todoroo/astrid/tree/master/facebook/samples/Hackbook/src/com/facebook/android/GraphExplorer.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      makeToast(\"Permissions could not be fetched, none will be selected by default.\");\n      mHandler.post(\n          new Runnable() {\n            @Override\n            public void run() {\n              new PermissionsDialog(GraphExplorer.this).show();\n            }\n          });\n    }\n"}, {"dataset": "dismiss", "exampleID": 6512, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 49, "guardExpressionEnd": 94, "guardBlockStart": 49, "guardBlockEnd": 114, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 95, "focalAPIEnd": 113, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/AppBlade/SDK/tree/master/Android/AppBlade Framework/src/com/appblade/framework/authenticate/AuthTokensDownloadTask.java", "rawCode": "  @Override\n  protected void onCancelled() {\n    if (progress != null && progress.isShowing()) progress.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6513, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 136, "focalAPIEnd": 160, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Skylark95/Amazon-App-Notifier/tree/master/app/src/main/java/com/skylark95/amazonfreenotify/settings/FirstStartPreferences.java", "rawCode": "    @Override\n    protected void onPostExecute(Void unused) {\n      String message = \"Restarting... \";\n      Log.i(TAG, message);\n      progressDialog.dismiss();\n      context.reload();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6514, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 3026, "guardExpressionEnd": 3049, "guardBlockStart": 3026, "guardBlockEnd": 3081, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 3058, "focalAPIEnd": 3074, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/siga111/PFM/tree/master/ANDROID/src/main/pfmandroid/getdata/RetrieveTransferData.java", "rawCode": "  @Override\n  protected void onPostExecute(String result) {\n    // Attempt to extract an array of currencies (more than one in database)\n    try {\n      JSONArray getArray = new JSONObject(currency).getJSONArray(\"currency\");\n\n      for (int i = 0; i < getArray.length(); i++) {\n        int id = ((JSONObject) getArray.get(i)).getInt(\"id\");\n        String code = ((JSONObject) getArray.get(i)).getString(\"code\");\n        DataStorage.typesOfCurrency.add(new Currency(id, code));\n      }\n    } catch (JSONException e) {\n      // If we reach here, it means we couldn't find currency array (only one in database)\n      // Create a single currency, extracted from database.\n      try {\n        JSONObject getObject = new JSONObject(currency).getJSONObject(\"currency\");\n        int id = getObject.getInt(\"id\");\n        String code = getObject.getString(\"code\");\n        DataStorage.typesOfCurrency.add(new Currency(id, code));\n      } catch (JSONException e1) {\n        // TODO Auto-generated catch block\n        e1.printStackTrace();\n      }\n    }\n\n    // Try to extract an array of wallets.\n    try {\n      JSONArray getArray = new JSONObject(wallets).getJSONArray(\"account\");\n\n      // Add all wallets and for each wallet, every currency without any amount.\n      for (int i = 0; i < getArray.length(); i++) {\n        int id = ((JSONObject) getArray.get(i)).getInt(\"id\");\n        String name = ((JSONObject) getArray.get(i)).getString(\"name\");\n        DataStorage.listOfWallets.add(new Wallet(id, name));\n        for (int j = 0; j < DataStorage.typesOfCurrency.size(); j++) {\n          DataStorage.listOfWallets\n              .get(i)\n              .addMoney(\n                  new Money(\n                      DataStorage.typesOfCurrency.get(j).getId(),\n                      DataStorage.typesOfCurrency.get(j).getCode()));\n        }\n      }\n    } catch (JSONException e) {\n      // If we are here, there is no array -> Only one wallet for the user, extract it.\n      try {\n        JSONObject getObject = new JSONObject(wallets).getJSONObject(\"account\");\n        int id = getObject.getInt(\"id\");\n        String name = getObject.getString(\"name\");\n        DataStorage.listOfWallets.add(new Wallet(id, name));\n        for (int j = 0; j < DataStorage.typesOfCurrency.size(); j++) {\n          DataStorage.listOfWallets\n              .get(DataStorage.listOfWallets.size() - 1)\n              .addMoney(\n                  new Money(\n                      DataStorage.typesOfCurrency.get(j).getId(),\n                      DataStorage.typesOfCurrency.get(j).getCode()));\n        }\n      } catch (JSONException e1) {\n        // TODO Auto-generated catch block\n        e1.printStackTrace();\n      }\n    }\n\n    GetBalanceInfo innertask = new GetBalanceInfo();\n    innertask.execute();\n\n    try {\n      innertask.get();\n    } catch (InterruptedException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    } catch (ExecutionException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n\n    if (dialog.isShowing()) {\n      dialog.dismiss();\n    }\n\n    context.displayData();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6515, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 226, "guardExpressionEnd": 254, "guardBlockStart": 226, "guardBlockEnd": 307, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 269, "focalAPIEnd": 294, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Ramblurr/Anki-Android/tree/master/src/com/ichi2/anki/DeckPicker.java", "rawCode": "        @Override\n        public void onPostExecute(Payload data) {\n          // Log.i(AnkiDroidApp.TAG, \"onPostExecute\");\n          Resources res = DeckPicker.this.getResources();\n          mDontSaveOnStop = false;\n          if (mProgressDialog != null) {\n            mProgressDialog.dismiss();\n          }\n          mSyncMessage = data.message;\n          if (!data.success) {\n            Object[] result = (Object[]) data.result;\n            if (result[0] instanceof String) {\n              String resultType = (String) result[0];\n              if (resultType.equals(\"badAuth\")) {\n                // delete old auth information\n                SharedPreferences preferences = AnkiDroidApp.getSharedPrefs(getBaseContext());\n                Editor editor = preferences.edit();\n                editor.putString(\"username\", \"\");\n                editor.putString(\"hkey\", \"\");\n                editor.commit();\n                // then show\n                showDialog(DIALOG_USER_NOT_LOGGED_IN_SYNC);\n              } else if (resultType.equals(\"noChanges\")) {\n                mDialogMessage = res.getString(R.string.sync_no_changes_message);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"clockOff\")) {\n                long diff = (Long) result[1];\n                if (diff >= 86100) {\n                  // The difference if more than a day minus 5 minutes acceptable by ankiweb error\n                  mDialogMessage =\n                      res.getString(\n                          R.string.sync_log_clocks_unsynchronized,\n                          diff,\n                          res.getString(R.string.sync_log_clocks_unsynchronized_date));\n                } else if (Math.abs((diff % 3600.0) - 1800.0) >= 1500.0) {\n                  // The difference would be within limit if we adjusted the time by few hours\n                  // It doesn't work for all timezones, but it covers most and it's a guess anyway\n                  mDialogMessage =\n                      res.getString(\n                          R.string.sync_log_clocks_unsynchronized,\n                          diff,\n                          res.getString(R.string.sync_log_clocks_unsynchronized_tz));\n                } else {\n                  mDialogMessage = res.getString(R.string.sync_log_clocks_unsynchronized, diff, \"\");\n                }\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"fullSync\")) {\n                if (data.data != null && data.data.length >= 1 && data.data[0] instanceof Integer) {\n                  mSyncMediaUsn = (Integer) data.data[0];\n                }\n                showDialog(DIALOG_SYNC_CONFLICT_RESOLUTION);\n              } else if (resultType.equals(\"dbError\")) {\n                mDialogMessage =\n                    res.getString(R.string.sync_corrupt_database, R.string.repair_deck);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"overwriteError\")) {\n                mDialogMessage = res.getString(R.string.sync_overwrite_error);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"remoteDbError\")) {\n                mDialogMessage = res.getString(R.string.sync_remote_db_error);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"sdAccessError\")) {\n                mDialogMessage = res.getString(R.string.sync_write_access_error);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"finishError\")) {\n                mDialogMessage = res.getString(R.string.sync_log_finish_error);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"IOException\")) {\n                handleDbError();\n              } else if (resultType.equals(\"genericError\")) {\n                mDialogMessage = res.getString(R.string.sync_generic_error);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"OutOfMemoryError\")) {\n                mDialogMessage = res.getString(R.string.error_insufficient_memory);\n                showDialog(DIALOG_SYNC_LOG);\n              } else if (resultType.equals(\"upgradeRequired\")) {\n                showDialog(DIALOG_SYNC_UPGRADE_REQUIRED);\n              } else if (resultType.equals(\"sanityCheckError\")) {\n                Collection col = AnkiDroidApp.getCol();\n                col.modSchema();\n                col.save();\n                mDialogMessage = res.getString(R.string.sync_sanity_failed);\n                showDialog(DIALOG_SYNC_SANITY_ERROR);\n              } else if (resultType.equals(\"serverAbort\")) {\n                // syncMsg has already been set above, no need to fetch it here.\n                showDialog(DIALOG_SYNC_LOG);\n              } else {\n                if (result.length > 1 && result[1] instanceof Integer) {\n                  int type = (Integer) result[1];\n                  switch (type) {\n                    case 503:\n                      mDialogMessage = res.getString(R.string.sync_too_busy);\n                      break;\n                    default:\n                      mDialogMessage =\n                          res.getString(\n                              R.string.sync_log_error_specific,\n                              Integer.toString(type),\n                              (String) result[2]);\n                      break;\n                  }\n                } else if (result[0] instanceof String) {\n                  mDialogMessage =\n                      res.getString(R.string.sync_log_error_specific, -1, (String) result[0]);\n                } else {\n                  mDialogMessage = res.getString(R.string.sync_generic_error);\n                }\n                showDialog(DIALOG_SYNC_LOG);\n              }\n            }\n          } else {\n            updateDecksList(\n                (TreeSet<Object[]>) data.result, (Integer) data.data[2], (Integer) data.data[3]);\n            if (data.data[4] != null) {\n              mDialogMessage = (String) data.data[4];\n            } else if (data.data.length > 0\n                && data.data[0] instanceof String\n                && ((String) data.data[0]).length() > 0) {\n              String dataString = (String) data.data[0];\n              if (dataString.equals(\"upload\")) {\n                mDialogMessage = res.getString(R.string.sync_log_uploading_message);\n              } else if (dataString.equals(\"download\")) {\n                mDialogMessage = res.getString(R.string.sync_log_downloading_message);\n                // set downloaded collection as current one\n              } else {\n                mDialogMessage = res.getString(R.string.sync_database_success);\n              }\n            } else {\n              mDialogMessage = res.getString(R.string.sync_database_success);\n            }\n\n            showDialog(DIALOG_SYNC_LOG);\n\n            // close opening dialog in case it's open\n            if (mOpenCollectionDialog != null && mOpenCollectionDialog.isShowing()) {\n              mOpenCollectionDialog.dismiss();\n            }\n\n            if (mFragmented) {\n              try {\n                // Pick the correct deck after sync. Updates the values in the fragment if same\n                // deck.\n                long did = AnkiDroidApp.getCol().getDecks().current().getLong(\"id\");\n                selectDeck(did);\n              } catch (JSONException e) {\n                throw new RuntimeException();\n              }\n            }\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6516, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 29, "guardExpressionEnd": 49, "guardBlockStart": 29, "guardBlockEnd": 104, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 58, "focalAPIEnd": 75, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gaeeyo/garaponMate/tree/master/src/jp/syoboi/android/garaponmate/task/ProgressDialogTask.java", "rawCode": "  void dismissDialog() {\n    if (mDialog != null) {\n      mDialog.dismiss();\n      mDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6517, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 419, "guardExpressionEnd": 447, "guardBlockStart": 419, "guardBlockEnd": 474, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 448, "focalAPIEnd": 473, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cytown/Phone_ics/tree/master/src/com/android/phone/EmergencyCallbackModeExitDialog.java", "rawCode": "        @Override\n        public void onReceive(Context context, Intent intent) {\n          // Received exit Emergency Callback Mode notification close all dialogs\n          if (intent.getAction().equals(TelephonyIntents.ACTION_EMERGENCY_CALLBACK_MODE_CHANGED)) {\n            if (intent.getBooleanExtra(\"phoneinECMState\", false) == false) {\n              if (mAlertDialog != null) mAlertDialog.dismiss();\n              if (mProgressDialog != null) mProgressDialog.dismiss();\n              EmergencyCallbackModeExitDialog.this.setResult(\n                  RESULT_OK, (new Intent()).putExtra(EXTRA_EXIT_ECM_RESULT, true));\n              finish();\n            }\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6518, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 356, "guardExpressionEnd": 376, "guardBlockStart": 356, "guardBlockEnd": 395, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 377, "focalAPIEnd": 394, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cens/ohmagePhone/tree/master/src/org/ohmage/authenticator/AuthenticatorActivity.java", "rawCode": "  /** Called when the authentication process completes (see attemptLogin()). */\n  public void onAuthenticationResult(AuthenticateResponse response) {\n\n    try {\n      dismissDialog(DIALOG_LOGIN_PROGRESS);\n    } catch (IllegalArgumentException e) {\n      Log.e(TAG, \"Attempting to dismiss dialog that had not been shown.\");\n      e.printStackTrace();\n      if (pDialog != null) pDialog.dismiss();\n    }\n\n    switch (response.getResult()) {\n      case SUCCESS:\n        Log.v(TAG, \"login success\");\n        mHashedPassword = response.getHashedPassword();\n        if (!mConfirmCredentials) {\n          if (ConfigHelper.isSingleCampaignMode()) {\n            final String hashedPassword = response.getHashedPassword();\n            // Download the single campaign\n            showDialog(DIALOG_DOWNLOADING_CAMPAIGNS);\n            mCampaignDownloadTask.setCredentials(mUsername, mHashedPassword);\n            mCampaignDownloadTask.forceLoad();\n          } else {\n            finishLogin();\n          }\n        } else {\n          finishConfirmCredentials(true);\n        }\n        break;\n      case FAILURE:\n        Log.e(TAG, \"login failure: \" + response.getErrorCodes());\n\n        // show error dialog\n        if (Arrays.asList(response.getErrorCodes()).contains(\"0201\")) {\n          mPreferencesHelper.setUserDisabled(true);\n          showDialog(DIALOG_USER_DISABLED);\n        } else {\n          showDialog(DIALOG_LOGIN_ERROR);\n        }\n        break;\n      case HTTP_ERROR:\n        Log.w(TAG, \"login http error\");\n\n        // show error dialog\n        showDialog(DIALOG_NETWORK_ERROR);\n        break;\n      case INTERNAL_ERROR:\n        Log.e(TAG, \"login internal error\");\n\n        // show error dialog\n        showDialog(DIALOG_INTERNAL_ERROR);\n        break;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6519, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 515, "guardExpressionEnd": 537, "guardBlockStart": 515, "guardBlockEnd": 584, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 552, "focalAPIEnd": 571, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jerryofouc/AmazingMiniSkirt/tree/master/AmazingClient/src/com/netease/amazing/component/ContactFragment.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          super.handleMessage(msg);\n          LinearLayout teacherLayout = (LinearLayout) view.findViewById(R.id.contact_teacher);\n          LinearLayout classmateLayout = (LinearLayout) view.findViewById(R.id.contact_classmate);\n          LinearLayout friendLayout = (LinearLayout) view.findViewById(R.id.contact_friend);\n          setContactInfoByCategory(contactList, teacherLayout, classmateLayout, friendLayout);\n          // 关闭进度窗口\n          if (proDialog != null) {\n            proDialog.dismiss();\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6520, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 145, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fishkingsin/WristbandProject/tree/master/FacebookSDK/src/com/facebook/widget/WebDialog.java", "rawCode": "    @Override\n    public void onPageFinished(WebView view, String url) {\n      super.onPageFinished(view, url);\n      if (!isDetached) {\n        spinner.dismiss();\n      }\n      /*\n       * Once web view is fully loaded, set the contentFrameLayout background to be transparent\n       * and make visible the 'x' image.\n       */\n      contentFrameLayout.setBackgroundColor(Color.TRANSPARENT);\n      webView.setVisibility(View.VISIBLE);\n      crossImageView.setVisibility(View.VISIBLE);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6521, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 114, "focalAPIEnd": 139, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/remain/topick/tree/master/client/Topick/src/com/kosenventure/sansan/others/OCRTask.java", "rawCode": "  @Override\n  protected void onPostExecute(String result) {\n    super.onPostExecute(result);\n\n    // ダイアログを消す\n    mProgressDialog.dismiss();\n    // 結果がnullなら解析失敗\n    if (result == null)\n      Toast.makeText(mContext, getStr(R.string.toast_pick_up_failure_msg), Toast.LENGTH_SHORT)\n          .show();\n    // resultに\\nで区切られて格納されているため\n    createArrayToList(result.split(\"\\n\"));\n    showSelectKanaDialog();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6522, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 944, "focalAPIEnd": 962, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/teleportR/TeleportR/tree/master/src/org/teleportr/activity/Autocompletion.java", "rawCode": "    @Override\n    protected void onPostExecute(JSONArray json) {\n      try {\n        for (int i = 0; i < json.length(); i++) {\n          JSONObject j = json.getJSONObject(i).getJSONObject(\"download\");\n          if (!getPreferenceScreen().getSharedPreferences().contains(j.getString(\"file\"))) {\n            CheckBoxPreference c = new CheckBoxPreference(Autocompletion.this);\n            c.setKey(j.getString(\"file\"));\n            String title = j.getString(\"title\");\n            c.setTitle(title.split(\" \")[0]);\n            c.setSummary(title.substring(title.indexOf(\" \")));\n            c.setOnPreferenceClickListener(Autocompletion.this);\n            getPreferenceScreen().addItemFromInflater(c);\n          }\n        }\n      } catch (Exception e) {\n        Log.e(TAG, \"problem parsing nearby downloads json\");\n        Toast.makeText(Autocompletion.this, getString(R.string.download_error), Toast.LENGTH_LONG)\n            .show();\n      }\n      progress.dismiss();\n      super.onPostExecute(json);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6523, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["progressDialog.setProgress(int)", "progressDialog.setProgress(int)"], "configurationStart": [783, 1522], "configurationEnd": [803, 1542], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 477, "guardExpressionEnd": 493, "guardBlockStart": 477, "guardBlockEnd": 619, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1912, "focalAPIEnd": 1925, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/chrismccurdy/loot/tree/master/src/net/gumbercules/loot/backend/CopyThread.java", "rawCode": "  @Override\n  public void run() {\n    if (copyInProgress) {\n      return;\n    } else {\n      copyInProgress = true;\n    }\n\n    Looper.prepare();\n\n    int res = 0;\n    if (mOp == BACKUP) {\n      String backup_path = null;\n\n      if (mMod == OFFLINE) {\n        backup_path =\n            Environment.getExternalStorageDirectory().getPath()\n                + mContext.getResources().getString(R.string.backup_path);\n      } else {\n        backup_path = TEMP_BACKUP;\n      }\n\n      if (mPd != null) {\n        FileWatcherThread fwt = new FileWatcherThread(Database.getDbPath(), backup_path, mPd);\n        fwt.start();\n      }\n\n      synchronized (sDataLock) {\n        if (Database.backup(backup_path)) {\n          res = R.string.backup_successful;\n          if (mPd != null) {\n            mPd.setProgress(100);\n          }\n        } else {\n          res = R.string.backup_failed;\n        }\n      }\n    } else if (mOp == RESTORE) {\n      String backup_path = null;\n\n      if (mMod == OFFLINE) {\n        backup_path =\n            Environment.getExternalStorageDirectory().getPath()\n                + mContext.getResources().getString(R.string.backup_path);\n      } else {\n        backup_path = TEMP_BACKUP;\n      }\n\n      if (mPd != null) {\n        FileWatcherThread fwt = new FileWatcherThread(backup_path, Database.getDbPath(), mPd);\n        fwt.start();\n      }\n\n      synchronized (sDataLock) {\n        if (Database.restore(backup_path)) {\n          res = R.string.restore_successful;\n          if (mPd != null) {\n            mPd.setProgress(100);\n          }\n\n          new Thread() {\n            public void run() {\n              try {\n                Thread.sleep(3000);\n              } catch (InterruptedException e) {\n              }\n              System.exit(0);\n            }\n          }.start();\n        } else {\n          res = R.string.restore_failed;\n        }\n      }\n    }\n\n    if (mPd != null) {\n      mPd.dismiss();\n    }\n    copyInProgress = false;\n\n    if (res != 0) {\n      Toast.makeText(mContext, res, Toast.LENGTH_LONG).show();\n    }\n\n    Looper.loop();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6524, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["progressDialog.setProgress(int)", "progressDialog.setMessage(String)", "progressDialog.setMessage(String)", "progressDialog.setMessage(String)"], "configurationStart": [483, 573, 813, 1150], "configurationEnd": [521, 754, 1109, 1447], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 110, "guardExpressionEnd": 133, "guardBlockStart": 110, "guardBlockEnd": 1478, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1550, "focalAPIEnd": 1570, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.setOnCancelListener(OnCancelListener)"], "useStart": [1586], "useEnd": [1622], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/carnero/c-geo/tree/master/src/carnero/cgeo/mapcommon/cgeomap.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          if (msg.what == 0) {\n            if (waitDialog != null) {\n              Float diffTime =\n                  new Float(\n                      (System.currentTimeMillis() - detailProgressTime) / 1000); // seconds left\n              Float oneCache = diffTime / detailProgress; // left time per cache\n              Float etaTime = (detailTotal - detailProgress) * oneCache; // seconds remaining\n\n              waitDialog.setProgress(detailProgress);\n              if (etaTime < 40) {\n                waitDialog.setMessage(\n                    res.getString(R.string.caches_downloading)\n                        + \" \"\n                        + res.getString(R.string.caches_eta_ltm));\n              } else if (etaTime < 90) {\n                waitDialog.setMessage(\n                    res.getString(R.string.caches_downloading)\n                        + \" \"\n                        + String.format(Locale.getDefault(), \"%.0f\", (etaTime / 60))\n                        + \" \"\n                        + res.getString(R.string.caches_eta_min));\n              } else {\n                waitDialog.setMessage(\n                    res.getString(R.string.caches_downloading)\n                        + \" \"\n                        + String.format(Locale.getDefault(), \"%.0f\", (etaTime / 60))\n                        + \" \"\n                        + res.getString(R.string.caches_eta_mins));\n              }\n            }\n          } else {\n            if (waitDialog != null) {\n              waitDialog.dismiss();\n              waitDialog.setOnCancelListener(null);\n            }\n\n            if (geo == null) {\n              geo = app.startGeo(activity, geoUpdate, base, settings, warning, 0, 0);\n            }\n            if (settings.useCompass == 1 && dir == null) {\n              dir = app.startDir(activity, dirUpdate, warning);\n            }\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6525, "initialization": ["ProgressDialog progressDialog = show(*,String,String,boolean)"], "initializationStart": [78], "initializationEnd": [140], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 556, "focalAPIEnd": 580, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()", "progressDialog.dismiss()", "progressDialog.dismiss()", "progressDialog.dismiss()", "progressDialog.dismiss()", "progressDialog.dismiss()", "progressDialog.dismiss()"], "useStart": [733, 905, 1077, 1256, 1586, 1875, 2041], "useEnd": [757, 929, 1101, 1280, 1610, 1899, 2065], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kgnvch/Shoppit/tree/master/shoppit/src/il/ac/huji/shoppit/NewItemFragment.java", "rawCode": "  private void addItem() {\n\n    final ProgressDialog progressDialog =\n        ProgressDialog.show(getActivity(), \"\", \"Adding item...\", true);\n\n    String name = nameEditText.getText().toString().trim().replaceAll(\"[ \\t]+\", \" \");\n    String price = priceEditText.getText().toString();\n\n    String category = categorySpinner.getSelectedItem().toString();\n\n    String keywordsString = keywordsEditText.getText().toString().toLowerCase();\n    String[] keywords = keywordsString.split(\"\\\\s+\");\n\n    // Perform sanity checks\n\n    if (name.length() == 0) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Please enter the item's name\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    if (name.length() < 3) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item name is too short\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    if (name.length() > 30) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item name is too long\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    if (price.length() == 0) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Please enter the item's price\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    if (price.length() > 6) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item price is too long\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    // Check there are no more than two digits after the decimal point.\n    int decimalPos = price.indexOf(\".\");\n    if (decimalPos >= 0 && price.substring(decimalPos + 1).length() > 2) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item price is invalid\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    // Check if the price is a valid number\n    float priceVal = 0;\n    try {\n      priceVal = Float.parseFloat(price);\n    } catch (Exception e) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item price is invalid\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    if (priceVal == 0) {\n      progressDialog.dismiss();\n      Toast.makeText(getActivity(), \"Item price cannot be zero\", Toast.LENGTH_LONG).show();\n      return;\n    }\n\n    doneButton.setEnabled(false);\n\n    // Data is OK, upload the item to parse.\n\n    Item newItem = new Item();\n    newItem.setName(name);\n    newItem.setPrice(Double.parseDouble(price));\n    newItem.setCurrency(currencyView.getText().toString());\n    newItem.setAuthor(ParseUser.getCurrentUser());\n    newItem.setMainCategory(category);\n    newItem.setKeywords(keywords);\n\n    // location\n    // if location is 0, 0 then we have a problem. we could check for this, even though it's\n    // unlikely to happen.\n    ParseGeoPoint point =\n        new ParseGeoPoint(\n            ((NewItemActivity) getActivity()).getLatitude(),\n            ((NewItemActivity) getActivity()).getLongitude());\n    newItem.setLocation(point);\n\n    // photo\n    if (photoData != null) {\n      ParseFile photoFile = new ParseFile(\"photo.jpg\", photoData);\n      newItem.setPhotoFile(photoFile);\n    } else newItem.setPhotoFile(itemList.get(selectedItem).getPhotoFile());\n\n    // Permissions\n    // everyone can read the item, only user that creates it can edit it.\n    ParseACL itemACL = new ParseACL(ParseUser.getCurrentUser());\n    itemACL.setPublicReadAccess(true);\n    newItem.setACL(itemACL);\n\n    // Barcode\n    String barcode = ((NewItemActivity) getActivity()).getBarcode();\n    if (barcode != null) newItem.setBarcode(barcode);\n\n    newItem.saveInBackground(\n        new SaveCallback() {\n          @Override\n          public void done(ParseException e) {\n            progressDialog.dismiss();\n            if (e == null) {\n              Toast.makeText(getActivity(), \"Item added successfully\", Toast.LENGTH_LONG).show();\n              getActivity().setResult(Activity.RESULT_OK);\n              getActivity().finish();\n            } else {\n              Toast.makeText(getActivity(), \"Error adding item\", Toast.LENGTH_LONG).show();\n            }\n          }\n        });\n  }\n"}, {"dataset": "dismiss", "exampleID": 6526, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 59, "guardExpressionEnd": 86, "guardBlockStart": 59, "guardBlockEnd": 112, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 87, "focalAPIEnd": 111, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/initrc/sharedsolar-android/tree/master/src/org/sharedsolar/Chart.java", "rawCode": "        public void handleMessage(Message msg) {\n          if (progressDialog != null) progressDialog.dismiss();\n          if (jsonString != null) {\n            if (jsonString.equals(String.valueOf(Connector.CONNECTION_TIMEOUT))) {\n              MyUI.showNeutralDialog(\n                  Chart.this, R.string.chart, R.string.circuitUsageTimeoutMsg, R.string.ok);\n            } else {\n              updateData(buildModel());\n            }\n          } else {\n            MyUI.showNeutralDialog(\n                Chart.this, R.string.chart, R.string.loadingCircuitUsageError, R.string.ok);\n          }\n          // auto refresh\n          if (msg.what == AUTO_REFRESH && autoRefresh && active) autoRefresh();\n        }\n"}, {"dataset": "dismiss", "exampleID": 6527, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 71, "guardExpressionEnd": 102, "guardBlockStart": 71, "guardBlockEnd": 179, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 111, "focalAPIEnd": 139, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/auphonic/auphonic-mobile/tree/master/Android/cordova/plugins/org.apache.cordova.core.dialogs/src/android/Notification.java", "rawCode": "  /** Stop spinner. */\n  public synchronized void activityStop() {\n    if (this.spinnerDialog != null) {\n      this.spinnerDialog.dismiss();\n      this.spinnerDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6528, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": ["progressDialog.setMessage(String)", "progressDialog.show()"], "configurationStart": [326, 467], "configurationEnd": [453, 489], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 522, "focalAPIEnd": 547, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/faux123/android_packages_apps_Email/tree/master/src/com/android/email/activity/MessageView.java", "rawCode": "    @Override\n    public void handleMessage(android.os.Message msg) {\n      switch (msg.what) {\n        case MSG_PROGRESS:\n          setProgressBarIndeterminateVisibility(msg.arg1 != 0);\n          break;\n        case MSG_ATTACHMENT_PROGRESS:\n          boolean progress = (msg.arg1 != 0);\n          if (progress) {\n            mProgressDialog.setMessage(\n                getString(R.string.message_view_fetching_attachment_progress, mLoadAttachmentName));\n            mProgressDialog.show();\n          } else {\n            mProgressDialog.dismiss();\n          }\n          setProgressBarIndeterminateVisibility(progress);\n          break;\n        case MSG_LOAD_CONTENT_URI:\n          String uriString = (String) msg.obj;\n          if (mMessageContentView != null) {\n            mMessageContentView.loadUrl(uriString);\n          }\n          break;\n        case MSG_SET_ATTACHMENTS_ENABLED:\n          for (int i = 0, count = mAttachments.getChildCount(); i < count; i++) {\n            AttachmentInfo attachment = (AttachmentInfo) mAttachments.getChildAt(i).getTag();\n            attachment.viewButton.setEnabled(msg.arg1 == 1);\n            attachment.downloadButton.setEnabled(msg.arg1 == 1);\n          }\n          break;\n        case MSG_LOAD_BODY_ERROR:\n          Toast.makeText(MessageView.this, R.string.error_loading_message_body, Toast.LENGTH_LONG)\n              .show();\n          break;\n        case MSG_NETWORK_ERROR:\n          Toast.makeText(MessageView.this, R.string.status_network_error, Toast.LENGTH_LONG).show();\n          break;\n        case MSG_FETCHING_ATTACHMENT:\n          Toast.makeText(\n                  MessageView.this,\n                  getString(R.string.message_view_fetching_attachment_toast),\n                  Toast.LENGTH_SHORT)\n              .show();\n          break;\n        case MSG_VIEW_ATTACHMENT_ERROR:\n          Toast.makeText(\n                  MessageView.this,\n                  getString(R.string.message_view_display_attachment_toast),\n                  Toast.LENGTH_SHORT)\n              .show();\n          break;\n        case MSG_UPDATE_ATTACHMENT_ICON:\n          ((AttachmentInfo) mAttachments.getChildAt(msg.arg1).getTag())\n              .iconView.setImageBitmap((Bitmap) msg.obj);\n          break;\n        case MSG_FINISH_LOAD_ATTACHMENT:\n          long attachmentId = (Long) msg.obj;\n          doFinishLoadAttachment(attachmentId);\n          break;\n        default:\n          super.handleMessage(msg);\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6529, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 129, "guardExpressionEnd": 153, "guardBlockStart": 129, "guardBlockEnd": 190, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 164, "focalAPIEnd": 181, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thiendamvam/WhyQ/tree/master/Code/libs/facebook/src/com/facebook/widget/WebDialog.java", "rawCode": "  @Override\n  public void dismiss() {\n    if (webView != null) {\n      webView.stopLoading();\n    }\n    if (!isDetached) {\n      if (spinner.isShowing()) {\n        spinner.dismiss();\n      }\n      super.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6530, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 57, "guardExpressionEnd": 88, "guardBlockStart": 57, "guardBlockEnd": 165, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 97, "focalAPIEnd": 125, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/cloudspokes/mobile_campus/tree/master/aau/android/SalesforceSDK/libs/incubator-cordova-android-framework/src/org/apache/cordova/DroidGap.java", "rawCode": "  /** Stop spinner. */\n  public void spinnerStop() {\n    if (this.spinnerDialog != null) {\n      this.spinnerDialog.dismiss();\n      this.spinnerDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6531, "initialization": ["ProgressDialog progressDialog = show(*,String,String)"], "initializationStart": [135], "initializationEnd": [208], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 890, "focalAPIEnd": 906, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/ethankhall/Chronos/tree/master/ChronosApp/src/main/java/com/kopysoft/chronos/activities/ClockActivity.java", "rawCode": "  private void sendEmail() {\n    // PayPeriodHolder payPeriodHolder, Job thisJob, Context context\n\n    ProgressDialog dialog =\n        ProgressDialog.show(ClockActivity.this, \"\", \"Generating. Please wait...\");\n\n    PayPeriodHolder pph;\n    if (getSupportActionBar().getSelectedTab().getPosition() == 0) {\n      pph = new PayPeriodHolder(jobId);\n    } else {\n      pph = payHolder;\n    }\n    Email newEmail = new Email(pph, jobId, getApplicationContext());\n\n    SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(this);\n    int reportLevel = Integer.valueOf(pref.getString(\"reportLevel\", \"1\"));\n\n    String returnValue;\n    if (reportLevel == 2) {\n      returnValue = newEmail.getBriefView();\n    } else {\n      returnValue = newEmail.getExpandedView();\n    }\n\n    String emailBody = new String(\"Greetings!\\n\\tHere is my time card\\n\");\n    emailBody += returnValue;\n\n    dialog.dismiss();\n\n    // Create email\n    Intent emailIntent = new Intent(android.content.Intent.ACTION_SEND);\n    emailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, \"Time Card\");\n    emailIntent.putExtra(android.content.Intent.EXTRA_TEXT, emailBody);\n\n    emailIntent.setType(\"message/rfc822\");\n    startActivity(emailIntent);\n  }\n"}, {"dataset": "dismiss", "exampleID": 6532, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 42, "focalAPIEnd": 63, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mnlk2-custom/android_packages_apps_Settings/tree/master/src/com/android/settings/SettingsLicenseActivity.java", "rawCode": "  private void showErrorAndFinish() {\n    mSpinnerDlg.dismiss();\n    mSpinnerDlg = null;\n    Toast.makeText(this, R.string.settings_license_activity_unavailable, Toast.LENGTH_LONG).show();\n    finish();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6533, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mturley/luper/tree/master/facebook-android-sdk-3.0.1/samples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      setText(activity.getString(R.string.facebook_error) + error.getMessage());\n    }\n"}, {"dataset": "dismiss", "exampleID": 6534, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 384, "focalAPIEnd": 418, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()", "progressDialog.dismiss()"], "useStart": [1236, 1399], "useEnd": [1270, 1433], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/igofrias/feriaSW/tree/master/Viper/Proyecto/src/com/Phyrex/proyecto/BTService.java", "rawCode": "        @Override\n        public void handleMessage(Message myMessage) {\n          switch (myMessage.getData().getInt(\"message\")) {\n            case BTCommunicator.DISPLAY_TOAST:\n              showToast(myMessage.getData().getString(\"toastText\"), Toast.LENGTH_SHORT);\n              break;\n            case BTCommunicator.STATE_CONNECTED:\n              connected = true;\n              connectingProgressDialog.dismiss();\n              sendBTCmessage(BTCommunicator.NO_DELAY, BTCommunicator.GET_FIRMWARE_VERSION, 0, 0);\n              break;\n\n            case BTCommunicator.MOTOR_STATE:\n              if (myBTCommunicator != null) {\n                byte[] motorMessage = myBTCommunicator.getReturnMessage();\n                int position =\n                    byteToInt(motorMessage[21])\n                        + (byteToInt(motorMessage[22]) << 8)\n                        + (byteToInt(motorMessage[23]) << 16)\n                        + (byteToInt(motorMessage[24]) << 24);\n                showToast(\n                    getResources().getString(R.string.current_position) + position,\n                    Toast.LENGTH_SHORT);\n              }\n\n              break;\n\n            case BTCommunicator.STATE_CONNECTERROR_PAIRING:\n              connectingProgressDialog.dismiss();\n              destroyBTCommunicator();\n              break;\n\n            case BTCommunicator.STATE_CONNECTERROR:\n              connectingProgressDialog.dismiss();\n            case BTCommunicator.STATE_RECEIVEERROR:\n            case BTCommunicator.STATE_SENDERROR:\n              destroyBTCommunicator();\n              if (btErrorPending == false) {\n                btErrorPending = true;\n                // inform the user of the error with an AlertDialog\n                AlertDialog.Builder builder = new AlertDialog.Builder(thisActivity);\n                builder\n                    .setTitle(getResources().getString(R.string.bt_error_dialog_title))\n                    .setMessage(getResources().getString(R.string.bt_error_dialog_message))\n                    .setCancelable(false)\n                    .setPositiveButton(\n                        \"OK\",\n                        new DialogInterface.OnClickListener() {\n                          @Override\n                          public void onClick(DialogInterface dialog, int id) {\n                            btErrorPending = false;\n                            dialog.cancel();\n                            // agregar re conexion\n                            // selectNXT();\n                          }\n                        });\n                builder.create().show();\n              }\n\n              break;\n\n            case BTCommunicator.FIRMWARE_VERSION:\n              if (myBTCommunicator != null) {\n                byte[] firmwareMessage = myBTCommunicator.getReturnMessage();\n                // check if we know the firmware\n                for (int pos = 0; pos < 4; pos++) {\n                  if (firmwareMessage[pos + 3] != LCPMessage.FIRMWARE_VERSION_LEJOSMINDDROID[pos]) {\n                    break;\n                  }\n                }\n              }\n\n              break;\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6535, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 221, "guardExpressionEnd": 253, "guardBlockStart": 221, "guardBlockEnd": 332, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 262, "focalAPIEnd": 291, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/thedracle/cordova-android-chromeview/tree/master/framework/src/org/apache/cordova/Notification.java", "rawCode": "  /**\n   * Show the progress dialog.\n   *\n   * @param title Title of the dialog\n   * @param message The message of the dialog\n   */\n  public synchronized void progressStart(final String title, final String message) {\n    if (this.progressDialog != null) {\n      this.progressDialog.dismiss();\n      this.progressDialog = null;\n    }\n    final Notification notification = this;\n    final CordovaInterface cordova = this.cordova;\n    Runnable runnable =\n        new Runnable() {\n          public void run() {\n            notification.progressDialog = new ProgressDialog(cordova.getActivity());\n            notification.progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n            notification.progressDialog.setTitle(title);\n            notification.progressDialog.setMessage(message);\n            notification.progressDialog.setCancelable(true);\n            notification.progressDialog.setMax(100);\n            notification.progressDialog.setProgress(0);\n            notification.progressDialog.setOnCancelListener(\n                new DialogInterface.OnCancelListener() {\n                  public void onCancel(DialogInterface dialog) {\n                    notification.progressDialog = null;\n                  }\n                });\n            notification.progressDialog.show();\n          }\n        };\n    this.cordova.getActivity().runOnUiThread(runnable);\n  }\n"}, {"dataset": "dismiss", "exampleID": 6536, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 60, "focalAPIEnd": 72, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/emolinablas/CoretelProject/tree/master/Coretel/src/com/researchmobile/coretel/view/OpcionTipoEvento.java", "rawCode": "    protected void onPostExecute(Integer resultado) {\n      pd.dismiss();\n      llenaLista();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6537, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kvite/astridclone/tree/master/facebook/samples/Hackbook/src/com/facebook/android/Places.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      showToast(\"Fetch Places Error: \" + error.getMessage());\n    }\n"}, {"dataset": "dismiss", "exampleID": 6538, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 239, "focalAPIEnd": 251, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/liwenhaosuper/SysOfIMPS/tree/master/IMPS/src/com/imps/activities/Login.java", "rawCode": "    @Override\n    public void onReceive(Context context, Intent intent) {\n      // TODO Auto-generated method stub\n      String action = intent.getAction();\n      System.out.println(\"!!!login: get broadcast!!! action is \" + action);\n      pd.dismiss();\n      if (\"error_msg\".equals(action)) {\n        errorMsg = intent.getStringExtra(\"message\");\n        showDialog(ERROR);\n        stopConfig();\n        try {\n          initialConfig();\n        } catch (Exception e) {\n          // TODO Auto-generated catch block\n          e.printStackTrace();\n        }\n      } else if (\"login_success\".equals(action)) {\n        Toast.makeText(\n                Login.this, getResources().getString(R.string.login_success), Toast.LENGTH_SHORT)\n            .show();\n        System.out.println(\"!!!login_success has been received!!!\");\n        UserManager.getInstance().SendFriListReq();\n        ComponentName cn = new ComponentName(Login.this, My_Map.class);\n        Intent ti = new Intent();\n        ti.setComponent(cn);\n        Bundle bundle = new Bundle();\n        bundle.putString(\"mUsername\", account.getText().toString());\n        ti.putExtra(\"username\", bundle);\n        startActivity(ti);\n\n      } else if (\"exit\".equals(action)) {\n        Client.session.close();\n        stopService(new Intent(Login.this, IMService.class));\n        finish();\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6539, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 606, "guardExpressionEnd": 621, "guardBlockStart": 606, "guardBlockEnd": 635, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 622, "focalAPIEnd": 634, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/todoroo/astrid/tree/master/astrid/plugin-src/com/todoroo/astrid/files/AACRecordingActivity.java", "rawCode": "  @Override\n  public void encodingFinished() {\n    try {\n\n      AtomicReference<String> nameRef = new AtomicReference<String>();\n      String outFile = FileUtilities.getNewAudioAttachmentPath(this, nameRef);\n\n      new AACToM4A().convert(this, tempFile, outFile);\n\n      Intent result = new Intent();\n      result.putExtra(RESULT_OUTFILE, outFile);\n      result.putExtra(RESULT_FILENAME, nameRef.get());\n      setResult(RESULT_OK, result);\n      finish();\n    } catch (IOException e) {\n      e.printStackTrace();\n      Toast.makeText(this, R.string.audio_err_encoding, Toast.LENGTH_LONG).show();\n    }\n    if (pd != null) pd.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6540, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 879, "focalAPIEnd": 903, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/societies/SOCIETIES-Platform/tree/master/context-management/ActivityStressRecognition/src/dlr/stressrecognition/PslActivity.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          String[] log = new String[1];\n          switch (msg.what) {\n            case MESSAGE_CALIB:\n              break;\n            case MESSAGE_CALIB_FIN:\n              log[0] = \"Calibrating Finished\";\n              eventLogger.write(log);\n              sensor.calibrate();\n              new CountDownTimer(10000, 1000) {\n                public void onTick(long millisUntilFinished) {\n                  statusText.setText(\"seconds remaining: \" + millisUntilFinished / 1000);\n                }\n\n                public void onFinish() {\n                  statusText.setText(\"START!\");\n                  PlaySound.play(getBaseContext());\n                  exercise.startExercise();\n                  sensor.start();\n                }\n              }.start();\n              statusText.setText(\"\");\n              progressDialog.dismiss();\n              break;\n            case MESSAGE_UPDATE:\n              log[0] = \"New Message\";\n              eventLogger.write(log);\n              // statusText.setText(msg.getData().getString(\"sdBN\"));\n              break;\n            case MESSAGE_STOP:\n              log[0] = \"Stop\";\n              eventLogger.write(log);\n              break;\n            case EXERCISE_CHANGED:\n              log[0] = \"Exercise changed->\" + msg.getData().getString(\"Activity\");\n              eventLogger.write(log);\n              statusText.setText(msg.getData().getString(\"Activity\"));\n              break;\n            case EXERCISE_FINISHED:\n              log[0] = \"Exercise changed->STOP\";\n              eventLogger.write(log);\n              statusText.setText(\"STOP\");\n              stopSensorSystem();\n              finish();\n              break;\n            case BT_CONNECTED:\n              btStarted = true;\n              notification.setText(msg.getData().getString(\"device\") + \"connected\");\n              notification.show();\n              break;\n            case BT_NOTCONNECTED:\n              notification.setText(\"Unable to connect\");\n              notification.show();\n              break;\n            case BT_NOTAVAILABLE:\n              Toast.makeText(\n                      getApplicationContext(), \"Bluetooth is not available\", Toast.LENGTH_LONG)\n                  .show();\n              finish();\n              return;\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6541, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 602, "focalAPIEnd": 618, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()"], "useStart": [736], "useEnd": [752], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/proxy-gen/codegen/tree/master/samples/platform/android/facebook/java/facebook-android-sdk-3.0.1/samples/Hackbook/src/com/facebook/android/UploadPhotoResultDialog.java", "rawCode": "    @Override\n    public void onComplete(final String response, final Object state) {\n      try {\n        JSONObject json = Util.parseJson(response);\n        final String pictureURL = json.getString(\"picture\");\n        if (TextUtils.isEmpty(pictureURL)) {\n          setText(\"Error getting \\'picture\\' field of the photo\");\n        } else {\n          mHandler.post(\n              new Runnable() {\n                @Override\n                public void run() {\n                  new FetchImage().execute(pictureURL);\n                }\n              });\n        }\n      } catch (JSONException e) {\n        dialog.dismiss();\n        setText(activity.getString(R.string.exception) + e.getMessage());\n      } catch (FacebookError e) {\n        dialog.dismiss();\n        setText(activity.getString(R.string.facebook_error) + e.getMessage());\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6542, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 119, "focalAPIEnd": 145, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/matthew117/DurhamLife-Android/tree/master/DuchessAndroid/src/uk/ac/dur/duchess/ui/activity/EventListActivity.java", "rawCode": "    @Override\n    public void onLocationChanged(final Location newLocation) {\n      if (newLocation != null) {\n        locationProgress.dismiss();\n\n        listView.sortByDistance(newLocation);\n\n        lm.removeUpdates(this);\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6543, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 56, "focalAPIEnd": 68, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Gregs-List/Chronos/tree/master/Project_Documents/Final_Deliverable/gregsList/src/com/example/gregslist/SignUp.java", "rawCode": "    protected void onPostExecute(String result) {\n      pd.dismiss();\n      int duration = Toast.LENGTH_SHORT;\n      Context context = getApplicationContext();\n      if (result.equals(\"error\")) {\n        Toast toast =\n            Toast.makeText(\n                context, \"This email address is already registered. Go back to login\", duration);\n        toast.show();\n      } else {\n        Toast toast1 = Toast.makeText(context, \"Registration successful. Please login.\", duration);\n        toast1.show();\n        Intent i = new Intent(SignUp.this, LoginActivity.class);\n        startActivity(i);\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6544, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 426, "guardExpressionEnd": 453, "guardBlockStart": 426, "guardBlockEnd": 493, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 462, "focalAPIEnd": 486, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/sasq64/droidsound/tree/master/src/com/ssb/droidsound/PlayerActivity.java", "rawCode": "  @Override\n  protected void onDestroy() {\n    super.onDestroy();\n    Log.d(TAG, \"#### onDestroy()\");\n\n    if (state.receiver != null) {\n      unregisterReceiver(state.receiver);\n    }\n\n    if (playListView != null) {\n      playListView.close();\n      // SharedPreferences prefs = getSharedPreferences(\"songdb\",\n      // Context.MODE_PRIVATE);\n    }\n\n    if (searchCursor != null) {\n      searchCursor.realClose();\n    }\n\n    if (progressDialog != null) {\n      progressDialog.dismiss();\n    }\n\n    player = null;\n  }\n"}, {"dataset": "dismiss", "exampleID": 6545, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 88, "guardExpressionEnd": 153, "guardBlockStart": 88, "guardBlockEnd": 230, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 162, "focalAPIEnd": 190, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fywb251/bsl_impc_android/tree/master/cube-android/src/org/apache/cordova/CordovaActivity.java", "rawCode": "  /** Stop spinner - Must be called from UI thread */\n  public void spinnerStop() {\n    if (this.spinnerDialog != null && this.spinnerDialog.isShowing()) {\n      this.spinnerDialog.dismiss();\n      this.spinnerDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6546, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 68, "focalAPIEnd": 92, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/avantgarde280/myfeedle/tree/master/core/src/com/shafiq/myfeedle/core/StatusDialog.java", "rawCode": "    @Override\n    protected void onPostExecute(Void result) {\n      mLoadingDialog.dismiss();\n      showDialog();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6547, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 51, "guardExpressionEnd": 78, "guardBlockStart": 51, "guardBlockEnd": 118, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 87, "focalAPIEnd": 111, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/fabianonline/geotweeter-for-android/tree/master/src/de/geotweeter/activities/UserDetailActivity.java", "rawCode": "  public void onPause() {\n    super.onPause();\n    if (progressDialog != null) {\n      progressDialog.dismiss();\n    }\n    if (connectionDlg != null) {\n      connectionDlg.dismiss();\n    }\n    if (exceptionDlg != null) {\n      exceptionDlg.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6548, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 485, "focalAPIEnd": 501, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/hungryha/21W789/tree/master/src/edu/mit/rerun/view/ItemListActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(List<ReuseItem> objects) { // happens in\n      // UI thread\n      // Bad practice, but meh, it'd be better if java had tuples\n      if (objects == null) {\n        Toast.makeText(\n                getApplicationContext(),\n                \"Error getting data, please try again later\",\n                Toast.LENGTH_SHORT)\n            .show();\n      }\n      setListAdapter(new ItemListAdapter(mContext, (ArrayList<ReuseItem>) objects));\n      dialog.dismiss();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6549, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 77, "focalAPIEnd": 95, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Cowsrcool/connectbot-keyboardfix/tree/master/src/org/connectbot/GeneratePubkeyActivity.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          progress.dismiss();\n          GeneratePubkeyActivity.this.finish();\n        }\n"}, {"dataset": "dismiss", "exampleID": 6550, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 71, "focalAPIEnd": 95, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mattprecious/smstimefix/tree/master/SMSFixLibrary/src/com/mattprecious/smsfix/library/FixOld.java", "rawCode": "    @Override\n    protected void onPostExecute(Integer result) {\n      progressDialog.dismiss();\n\n      AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n      builder.setTitle(R.string.fix_old_complete_title);\n      builder.setMessage(getString(R.string.fix_old_complete_message, result));\n      builder.setPositiveButton(\n          android.R.string.ok,\n          new DialogInterface.OnClickListener() {\n\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n              dialog.cancel();\n            }\n          });\n\n      builder.create().show();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6551, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/facebook-android-sdk-master/samples/Hackbook/src/com/facebook/android/Places.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      showToast(\"Fetch Places Error: \" + error.getMessage());\n    }\n"}, {"dataset": "dismiss", "exampleID": 6552, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kvite/astridclone/tree/master/facebook/samples/Hackbook/src/com/facebook/android/Hackbook.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      Toast.makeText(\n              getApplicationContext(), \"Facebook Error: \" + error.getMessage(), Toast.LENGTH_SHORT)\n          .show();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6553, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "null!=progressDialog", "guardType": "IF {", "guardExpressionStart": 571, "guardExpressionEnd": 598, "guardBlockStart": 571, "guardBlockEnd": 667, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 607, "focalAPIEnd": 631, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MythTV-Clients/MythTV-Android-Frontend/tree/master/src/org/mythtv/client/ui/dvr/VideoActivity.java", "rawCode": "  private void startVideo(boolean raw) {\n    Log.v(TAG, \"startVideo : enter\");\n\n    Log.v(TAG, \"startVideo : program=\" + program.toString());\n\n    String temp = mLocationProfile.getUrl();\n    temp = temp.replaceAll(\"/$\", \"\");\n    String url = \"\";\n    if (raw) {\n      url =\n          temp\n              + \"/Content/GetFile?StorageGroup=\"\n              + program.getRecording().getStorageGroup()\n              + \"&FileName=\"\n              + program.getFilename();\n    } else {\n      url = temp + liveStreamInfo.getRelativeUrl();\n    }\n\n    Log.v(TAG, \"URL: \" + url);\n\n    if (null != progressDialog) {\n      progressDialog.dismiss();\n      progressDialog = null;\n    }\n\n    final Intent tostart = new Intent(Intent.ACTION_VIEW);\n    // tostart.setFlags( Intent.FLAG_ACTIVITY_NEW_TASK );\n    // tostart.setDataAndType( Uri.parse(url), \"application/x-mpegurl\" );\n    // tostart.setDataAndType( Uri.parse(url), \"application/vnd.apple.mpegurl\" );\n    tostart.setDataAndType(Uri.parse(url), \"video/*\");\n\n    if (!preferences.getBoolean(DISMISS, false)) {\n      Log.v(TAG, \"startVideo : displaying warning\");\n\n      View dismissView = View.inflate(this, R.layout.dismiss_checkbox, null);\n      CheckBox dismiss = (CheckBox) dismissView.findViewById(R.id.dismiss);\n      dismiss.setOnCheckedChangeListener(\n          new OnCheckedChangeListener() {\n\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\n              setDismissPreferences(isChecked);\n            }\n          });\n      dismiss.setText(getString(R.string.video_playback_doNotDisplay));\n\n      AlertDialog.Builder builder = new AlertDialog.Builder(this);\n      builder\n          .setTitle(R.string.video_playback_title)\n          .setMessage(R.string.video_playback_message)\n          .setView(dismissView)\n          .setPositiveButton(\n              R.string.video_playback_button_play,\n              new DialogInterface.OnClickListener() {\n\n                @Override\n                public void onClick(DialogInterface dialog, int which) {\n\n                  startActivity(tostart);\n                }\n              })\n          .setNegativeButton(\n              R.string.video_playback_button_cancel,\n              new DialogInterface.OnClickListener() {\n\n                @Override\n                public void onClick(DialogInterface dialog, int which) {\n\n                  finish();\n                }\n              })\n          .show();\n    } else {\n      Log.v(TAG, \"startVideo : not displaying warning\");\n\n      startActivity(tostart);\n    }\n\n    Log.v(TAG, \"startVideo : exit\");\n  }\n"}, {"dataset": "dismiss", "exampleID": 6554, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 36, "focalAPIEnd": 61, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kmonaghan/Broadsheet.ie-Android/tree/master/src/ie/broadsheet/app/BaseFragmentActivity.java", "rawCode": "  public void onPostExecute() {\n    mProgressDialog.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6555, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 88, "guardExpressionEnd": 153, "guardBlockStart": 88, "guardBlockEnd": 230, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 162, "focalAPIEnd": 190, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imhotep/incubator-cordova-android/tree/master/framework/src/org/apache/cordova/DroidGap.java", "rawCode": "  /** Stop spinner - Must be called from UI thread */\n  public void spinnerStop() {\n    if (this.spinnerDialog != null && this.spinnerDialog.isShowing()) {\n      this.spinnerDialog.dismiss();\n      this.spinnerDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6556, "initialization": ["ProgressDialog progressDialog = show(*,String,*,boolean)"], "initializationStart": [96], "initializationEnd": [171], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "e(String,String)", "printStackTrace()", "ProgressDialog.dismiss()", "Toast.show()"], "tryExpressionStart": 1164, "tryExpressionEnd": 1168, "tryBlockStart": 1164, "tryBlockEnd": 1581, "catchExpressionStart": 1342, "catchExpressionEnd": 1362, "catchBlockStart": 1342, "catchBlockEnd": 1581, "exceptionHandlingCallStart": [1418, 1440, 1467, 1495, 1542], "exceptionHandlingCallEnd": [1432, 1459, 1486, 1534, 1574], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1230, "focalAPIEnd": 1269, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()"], "useStart": [1495], "useEnd": [1534], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/erikwt/ParandroidMessaging/tree/master/src/org/parandroid/sms/ui/HelpActivity.java", "rawCode": "  private void doGenerateKeypair() {\n    ProgressDialog generateKeypairProgressDialog =\n        ProgressDialog.show(this, \"\", getString(R.string.generating_keypair), true);\n    Toast generateKeypairErrorToast =\n        Toast.makeText(this, R.string.generated_keypair_failure, Toast.LENGTH_SHORT);\n\n    // AlertDialog.Builder generateKeypairSuccessDialogBuilder = new AlertDialog.Builder(this);\n    // generateKeypairSuccessDialogBuilder.setMessage(getText(R.string.generated_keypair_success))\n    // .setTitle(getText(R.string.generate_keypair_title))\n    // .setCancelable(false)\n    // .setPositiveButton(getText(R.string.yes), new DialogInterface.OnClickListener() {\n    // public void onClick(DialogInterface dialog, int id) {\n    // Intent intent = new Intent(HelpActivity.this, SendPublicKeyActivity.class);\n    // startActivity(intent);\n    // }\n    // })\n    // .setNegativeButton(getText(R.string.no), new DialogInterface.OnClickListener() {\n    // public void onClick(DialogInterface dialog, int id) {\n    // dialog.cancel();\n    // }\n    // });\n    //\n    // AlertDialog generateKeypairSuccessDialog = generateKeypairSuccessDialogBuilder.create();\n\n    try {\n      MessageEncryptionFactory.generateKeyPair(this);\n      generateKeypairProgressDialog.dismiss();\n      // generateKeypairSuccessDialog.show();\n\n      showNext();\n    } catch (Exception e) {\n      String message = \"Error generating keypair: \" + e.getMessage();\n      Log.e(TAG, message);\n      e.printStackTrace();\n\n      generateKeypairProgressDialog.dismiss();\n      generateKeypairErrorToast.show();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6557, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 226, "guardExpressionEnd": 252, "guardBlockStart": 226, "guardBlockEnd": 273, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 253, "focalAPIEnd": 272, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/photo/mobile-android/tree/master/submodules/Android-Feather/src/com/aviary/android/feather/effects/EnhanceEffectPanel.java", "rawCode": "    @Override\n    protected void onPostExecute(Void result) {\n      super.onPostExecute(result);\n\n      mLogger.info(\"GenerateResultTask::onPostExecute\");\n\n      if (getContext().getBaseActivity().isFinishing()) return;\n      if (mProgress.isShowing()) mProgress.dismiss();\n      onComplete(mPreview, mActions);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6558, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 282, "guardExpressionEnd": 305, "guardBlockStart": 282, "guardBlockEnd": 341, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 316, "focalAPIEnd": 332, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pronoschallenge/pronoschallenge-android/tree/master/src/fr/pronoschallenge/afreechart/AFreeChartAnnotationActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(final Boolean success) {\n\n      AFreeChartAnnotationView mView =\n          new AFreeChartAnnotationView(\n              (AFreeChartAnnotationActivity) activity, evolutionEntries, getMode());\n      setActionBarContentView(mView);\n\n      if (dialog.isShowing()) {\n        dialog.dismiss();\n      }\n      super.onPostExecute(success);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6559, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1858, "focalAPIEnd": 1870, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vogtp/android-CPU-tuner/tree/master/src/ch/amana/android/cputuner/helper/CapabilityChecker.java", "rawCode": "  private void doCheck() {\n    int userLevel = SettingsStorage.getInstance().getUserLevel();\n    final ProfileModel currentCpuSettings = cpuHandler.getCurrentCpuSettings();\n    try {\n      CpuTunerApplication.stopCpuTuner(ctx);\n      SettingsStorage.getInstance().userLevel = 3;\n      rooted = RootHandler.isRoot();\n      EventListenerReceiver.unregisterEventListenerReceiver(ctx);\n\n      governors = cpuHandler.getAvailCpuGov();\n      govChecks = new HashMap<String, CapabilityChecker.GovernorResult>(governors.length);\n\n      if (RootHandler.NOT_AVAILABLE.equals(governors[0])) {\n        String noGov = ctx.getString(R.string.msg_no_governors_found);\n        GovernorResult res = new GovernorResult(noGov);\n        res.readGovernor = CheckResult.FAILURE;\n        res.writeGovernor = CheckResult.FAILURE;\n        govChecks.put(noGov, res);\n        return;\n      }\n\n      freqs = cpuHandler.getAvailCpuFreq(true);\n      minFreq = freqs[0];\n      maxFreq = freqs[freqs.length - 1];\n      if (freqs.length < 2 || minFreq == maxFreq) {\n        String noFreqs = ctx.getString(R.string.msg_not_enough_frequencies_found);\n        GovernorResult res = new GovernorResult(noFreqs);\n        res.readMaxFreq = CheckResult.CANNOT_CHECK;\n        res.writeMaxFreq = CheckResult.CANNOT_CHECK;\n        res.readMinFreq = CheckResult.CANNOT_CHECK;\n        res.writeMinFreq = CheckResult.CANNOT_CHECK;\n        govChecks.put(noFreqs, res);\n        return;\n      }\n\n      for (int i = 0; i < governors.length; i++) {\n        String gov = governors[i];\n        sleep(300);\n        checkGov(gov);\n      }\n    } catch (Throwable t) {\n      Logger.w(\"Capability check threw \", t);\n    } finally {\n      CpuTunerApplication.startCpuTuner(ctx);\n      SettingsStorage.getInstance().userLevel = userLevel;\n      cpuHandler.applyCpuSettings(ctx, currentCpuSettings);\n      try {\n        pd.dismiss();\n      } catch (Throwable e) {\n      }\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6560, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 71, "focalAPIEnd": 95, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applicake/Beandroid/tree/master/Beanstalk Android Client/src/com/applicake/beanstalkclient/activities/CreateNewRepositoryActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Integer result) {\n      progressDialog.dismiss();\n      if (failed) {\n        SimpleRetryDialogBuilder builder =\n            new SimpleRetryDialogBuilder(mContext, failMessage) {\n              @Override\n              public void retryAction() {\n                new SendRepositoryCreateTask().execute();\n              }\n            };\n\n        builder.displayDialog();\n      } else {\n\n        if (result == 201) {\n          GUI.displayMonit(mContext, \"Reposiotry was created successfully!\");\n          setResult(Constants.REFRESH_ACTIVITY);\n          finish();\n        }\n        if ((result == 0) && (errorMessage != null)) GUI.displayMonit(mContext, errorMessage);\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6561, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 208, "guardExpressionEnd": 237, "guardBlockStart": 208, "guardBlockEnd": 291, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 252, "focalAPIEnd": 278, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/lbaye/repo/tree/master/android/src/com/socmaps/ui/MessageGroupActivity.java", "rawCode": "        @Override\n        public void run() {\n          // TODO Auto-generated method stub\n          navigateToList(messageStatus, messageResponse);\n\n          // dismiss progress dialog if needed\n\n          if (m_ProgressDialog != null) {\n            m_ProgressDialog.dismiss();\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6562, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 62, "focalAPIEnd": 97, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vmagro/GlassTimelapse/tree/master/Android/GlassTimelapse/src/main/java/com.socaldevs.timelapse.android.fragments/SignInFragment.java", "rawCode": "        protected void onPostExecute(Void result) {\n          mConnectionProgressDialog.dismiss();\n          switchToNewsFeed();\n          getSherlockActivity().sendBroadcast(new Intent(Constants.INTENT_UNLOCK_ID));\n        }\n"}, {"dataset": "dismiss", "exampleID": 6563, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 92, "focalAPIEnd": 108, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/COMU/homescreen/tree/master/damla/FacebookApplication/src/com/comu/android/FacebookApplicationActivity.java", "rawCode": "    @Override\n    public void onComplete(final String response, final Object state) {\n      dialog.dismiss();\n      mHandler.post(\n          new Runnable() {\n            @Override\n            public void run() {\n              new UploadPhotoResultDialog(\n                      FacebookApplicationActivity.this, \"Upload Photo executed\", response)\n                  .show();\n            }\n          });\n    }\n"}, {"dataset": "dismiss", "exampleID": 6564, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1058, "focalAPIEnd": 1076, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/bradkittenbrink/seabiscuit-autocheckin/tree/master/CPAndroid/src/com/coffeeandpower/fragments/FragmentPeopleAndPlaces.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n\n          if (listView != null && listView.isShown() == true) {\n            if (type.equals(\"people\")) {\n\n              arrayUsers = msg.getData().getParcelableArrayList(\"nearby\");\n\n              // Sort users list\n              if (arrayUsers != null) {\n                Collections.sort(\n                    arrayUsers,\n                    new Comparator<UserSmart>() {\n                      @Override\n                      public int compare(UserSmart m1, UserSmart m2) {\n                        if (m1.getCheckedIn() > m2.getCheckedIn()) {\n                          return -1;\n                        }\n                        return 1;\n                      }\n                    });\n              }\n              // Populate table view\n              setPeopleList();\n            } else {\n              // pass message data along to venue update method\n              arrayVenues = msg.getData().getParcelableArrayList(\"venues\");\n              setPlaceList();\n            }\n\n            progress.dismiss();\n          }\n          super.handleMessage(msg);\n        }\n"}, {"dataset": "dismiss", "exampleID": 6565, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 731, "focalAPIEnd": 752, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tinrap/SiQuoia/tree/master/src/com/sjsu/siquoia/SiQuoiaHomeActivity.java", "rawCode": "    protected void onPostExecute(String result) {\n      user = SiQuoiaJSONParser.parseUser(result);\n\n      // update user's quiz\n      preferences = getSharedPreferences(SiQuoiaHomeActivity.SIQUOIA_PREF, 0);\n      SharedPreferences.Editor perferenceUpdater = preferences.edit();\n      perferenceUpdater.putString(QUIZ, user.getCurrentQuiz());\n      perferenceUpdater.putString(ANSWERS, user.getAnswers());\n      perferenceUpdater.putString(PACKET_TYPE, user.getPacketType());\n      perferenceUpdater.putInt(SIQUOIA_POINTS, user.getSiquoiaBucks());\n      perferenceUpdater.commit();\n\n      // set Current points\n      currentPointsTextView.setText(\"Current Points: \" + user.getSiquoiaBucks());\n\n      // close progress dialog\n      progressBar.dismiss();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6566, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 167, "guardExpressionEnd": 224, "guardBlockStart": 167, "guardBlockEnd": 264, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 233, "focalAPIEnd": 257, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/omegahm/DBP2P/tree/master/Battleships/src/dk/hotmovinglobster/battleships/SetupGameActivity.java", "rawCode": "  private void acceptRulesAndStart(int game_type) {\n    if (dialog_abort_warn != null && dialog_abort_warn.isShowing()) {\n      dialog_abort_warn.dismiss();\n    }\n    if (dialog_waiting != null && dialog_waiting.isShowing()) {\n      dialog_waiting.dismiss();\n    }\n\n    Log.v(\n        BattleshipsApplication.LOG_TAG,\n        \"SetupGameActivity: acceptRulesAndStart(\" + game_type + \")\");\n\n    switch (game_type) {\n      case GAME_TYPE_SHORT:\n        BattleshipsApplication.context().GRID_COLUMNS = 6;\n        BattleshipsApplication.context().GRID_ROWS = 6;\n        BattleshipsApplication.context().MAX_SHIPS = new int[] {0, 0, 2, 1, 1, 1};\n        break;\n      case GAME_TYPE_MEDIUM:\n      default:\n        BattleshipsApplication.context().GRID_COLUMNS = 8;\n        BattleshipsApplication.context().GRID_ROWS = 8;\n        BattleshipsApplication.context().MAX_SHIPS = new int[] {0, 0, 3, 2, 2, 1};\n        break;\n      case GAME_TYPE_LONG:\n        BattleshipsApplication.context().GRID_COLUMNS = 10;\n        BattleshipsApplication.context().GRID_ROWS = 10;\n        BattleshipsApplication.context().MAX_SHIPS = new int[] {0, 0, 3, 2, 2, 1};\n        break;\n    }\n\n    Log.v(\n        BattleshipsApplication.LOG_TAG,\n        \"SetupGameActivity: acceptRulesAndStart(\"\n            + BattleshipsApplication.context().GRID_COLUMNS\n            + \", \"\n            + BattleshipsApplication.context().GRID_ROWS\n            + \", \"\n            + Arrays.toString(BattleshipsApplication.context().MAX_SHIPS)\n            + \")\");\n\n    Intent i = new Intent(SetupGameActivity.this, PlaceShipsActivity.class);\n    startActivity(i);\n    finish();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6567, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 79, "guardExpressionEnd": 111, "guardBlockStart": 79, "guardBlockEnd": 190, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 120, "focalAPIEnd": 149, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/IGZjonasdacruz/igz-enterprise-geoshare/tree/master/src/client/plugins/org.apache.cordova.dialogs/src/android/Notification.java", "rawCode": "  /** Stop progress dialog. */\n  public synchronized void progressStop() {\n    if (this.progressDialog != null) {\n      this.progressDialog.dismiss();\n      this.progressDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6568, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 71, "focalAPIEnd": 96, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arhughes/droidchatty/tree/master/src/cc/hughes/droidchatty/ComposePostView.java", "rawCode": "    @Override\n    protected void onPostExecute(Integer result) {\n      _progressDialog.dismiss();\n\n      if (_exception != null)\n        ErrorDialog.display(\n            ComposePostView.this, \"Error\", \"Error posting:\\n\" + _exception.getMessage());\n      else postSuccessful(result.intValue());\n    }\n"}, {"dataset": "dismiss", "exampleID": 6569, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 92, "focalAPIEnd": 108, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/imkevinxu/totoro/tree/master/facebook-android-sdk-3.0/samples/Hackbook/src/com/facebook/android/FQLQuery.java", "rawCode": "    @Override\n    public void onComplete(final String response, final Object state) {\n      dialog.dismiss();\n      /*\n       * Output can be a JSONArray or a JSONObject.\n       * Try JSONArray and if there's a JSONException, parse to JSONObject\n       */\n      try {\n        JSONArray json = new JSONArray(response);\n        setText(json.toString(2));\n      } catch (JSONException e) {\n        try {\n          /*\n           * JSONObject probably indicates there was some error\n           * Display that error, but for end user you should parse the\n           * error and show appropriate message\n           */\n          JSONObject json = new JSONObject(response);\n          setText(json.toString(2));\n        } catch (JSONException e1) {\n          setText(activity.getString(R.string.exception) + e1.getMessage());\n        }\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6570, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 69, "focalAPIEnd": 85, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/china-ece/Gaia/tree/master/src/com/chinaece/gaia/gui/newLogItemActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(Boolean flag) {\n      dialog.dismiss();\n      if (flag) {\n        Intent intent1 = new Intent(newLogItemActivity.this, MainActivity.class);\n        startActivity(intent1);\n        Intent intent = new Intent(newLogItemActivity.this, CalendarActivity.class);\n        startActivity(intent);\n        newLogItemActivity.this.finish();\n        Toast.makeText(getApplicationContext(), \"提交成功\", Toast.LENGTH_SHORT).show();\n      } else {\n        Toast.makeText(getApplicationContext(), \"提交失败\", Toast.LENGTH_LONG).show();\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6571, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 72, "guardExpressionEnd": 103, "guardBlockStart": 72, "guardBlockEnd": 349, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 114, "focalAPIEnd": 138, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/arpit87/SB1/tree/master/Hopin/src/my/b1701/SB/test/ChatLoginActivity.java", "rawCode": "    @Override\n    public void loggedIn() throws RemoteException {\n      if (progressDialog.isShowing()) {\n        progressDialog.dismiss();\n        releaseService();\n        Intent i = new Intent(ChatLoginActivity.this, ChatTestActivity.class);\n        i.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);\n        startActivity(i);\n        finish();\n      }\n      ToastTracker.showToast(\"chatwindow callback,loggedin\");\n    }\n"}, {"dataset": "dismiss", "exampleID": 6572, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 172, "focalAPIEnd": 189, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vserrago/Soapbox-Android/tree/master/src/com/example/soapbox/CommentTask.java", "rawCode": "  @Override\n  protected void onPostExecute(JSONArray result) {\n    super.onPostExecute(result);\n\n    if (method.equals(GET)) callBack.onCommentRequestComplete(result);\n    mDialog.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6573, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "null!=progressDialog", "guardType": "IF {", "guardExpressionStart": 198, "guardExpressionEnd": 226, "guardBlockStart": 198, "guardBlockEnd": 303, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 237, "focalAPIEnd": 262, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/MythTV-Clients/MythTV-Android-Frontend/tree/master/src/org/mythtv/client/ui/preferences/MythtvPreferenceActivity.java", "rawCode": "    @SuppressWarnings(\"deprecation\")\n    public void serviceAdded(ServiceEvent event) {\n      Log.v(TAG, \"serviceAdded : enter\");\n\n      byte[] txtRecord;\n      boolean isMasterRole = false;\n\n      if (null != mProgressDialog) {\n        mProgressDialog.dismiss();\n        mProgressDialog = null;\n      }\n\n      Log.v(\n          TAG,\n          \"serviceAdded : \"\n              + event.getDNS().getServiceInfo(event.getType(), event.getName()).toString());\n\n      ServiceInfo info = event.getDNS().getServiceInfo(event.getType(), event.getName());\n\n      // 0.26 and 0.25 have an empty TXT Record. 0.27+ have a 6 followed by \"master\" or 5/\"slave\".\n      // Crude hack because Enumeration<String> txtRecords = info.getPropertyNames(); doesn't\n      // seem to handle the case of records with (legal) entries with no =. E.g. role=master vs.\n      // just master.\n\n      txtRecord = info.getTextBytes();\n\n      Log.v(\n          TAG, \"serviceAdded : backend role = \" + txtRecord[0] + \" ( 0 or 6 = master, 5 = slave)\");\n\n      if (txtRecord[0] == 0 || txtRecord[0] == 6) {\n        isMasterRole = true;\n      }\n\n      final String hostname = info.getInet4Address().getHostAddress();\n      final int port = info.getPort();\n      Log.v(TAG, \"serviceAdded : masterbackend=\" + (\"http://\" + hostname + \":\" + port + \"/\"));\n\n      if (null != hostname && !hostname.isEmpty() && isMasterRole) {\n\n        LocationProfile profile = new LocationProfile();\n        profile.setId(-1);\n        profile.setType(LocationType.HOME);\n        profile.setName(event.getName());\n        profile.setUrl(\"http://\" + hostname + \":\" + port + \"/\");\n\n        showLocationProfileEditDialog(wrActivity.get(), profile);\n\n      } else {\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(wrActivity.get());\n        builder.setTitle(R.string.preference_edit_error_dialog_title);\n        builder.setNeutralButton(\n            R.string.btn_ok,\n            new DialogInterface.OnClickListener() {\n\n              public void onClick(DialogInterface dialog, int which) {}\n            });\n\n        builder.setMessage(R.string.preference_home_profiles_scan_error_message);\n        builder.show();\n      }\n\n      Log.v(TAG, \"serviceAdded : exit\");\n    }\n"}, {"dataset": "dismiss", "exampleID": 6574, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 145, "focalAPIEnd": 162, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vserrago/Soapbox-Android/tree/master/src/com/example/soapbox/PostShoutTask.java", "rawCode": "  @Override\n  protected void onPostExecute(JSONObject result) {\n    super.onPostExecute(result);\n    callBack.onPostRequestComplete(result);\n    mDialog.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6575, "initialization": ["ProgressDialog progressDialog = show(*,String,String)"], "initializationStart": [943], "initializationEnd": [1004], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1216, "focalAPIEnd": 1240, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()"], "useStart": [1381], "useEnd": [1405], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/CMPUT301W13T11/FoodBook/tree/master/FooBook/src/ca/ualberta/cmput301w13t11/FoodBook/TakePhotosActivity.java", "rawCode": "  /**\n   * This method saves a bitmap to the device in compressed form (.png) Depending on whether an SD\n   * card is installed, the png image is saved on the SD card or in main memory. Saving is delegated\n   * to the database. The bitmap, filepath, and unique photo id (a timestamp) are passed on to the\n   * database controller.\n   *\n   * @param View - The view calling this method.\n   */\n  public void OnSavePhoto(View View) {\n    String timeStampId = String.valueOf(System.currentTimeMillis());\n\n    // responds to button Save Photo\n    if (bitmap != null) {\n      if (Environment.MEDIA_MOUNTED.equals(state)) {\n        imgPath = Environment.getExternalStorageDirectory() + File.separator + timeStampId;\n        file = new File(imgPath);\n      } else {\n        File dir = getDir(PICTURES_DIRECTORY, Context.MODE_PRIVATE);\n        file = new File(dir, timeStampId);\n        imgPath = file.getAbsolutePath();\n      }\n\n      progressDialog = ProgressDialog.show(TakePhotosActivity.this, \"\", \"Saving...\");\n      Photo photo = new Photo(timeStampId, imgPath);\n      DbC = DbController.getInstance(this, this);\n      /* Attempt to save photo to device. */\n      if (DbC.addPhotoToRecipe(photo, bitmap, uri)) {\n        progressDialog.dismiss();\n        Toast.makeText(getApplicationContext(), \"Image saved with success\", Toast.LENGTH_LONG)\n            .show();\n      } else {\n        progressDialog.dismiss();\n        Toast.makeText(getApplicationContext(), \"Error during image saving\", Toast.LENGTH_LONG)\n            .show();\n      }\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6576, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 1419, "guardExpressionEnd": 1442, "guardBlockStart": 1419, "guardBlockEnd": 1478, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1453, "focalAPIEnd": 1469, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/pronoschallenge/pronoschallenge-android/tree/master/src/fr/pronoschallenge/topflop/TopFlopActivity.java", "rawCode": "    @Override\n    protected void onPostExecute(final Boolean success) {\n\n      ListView evolutionListViewTop;\n      ListView evolutionListViewFlop;\n\n      if (typeChamp.compareTo(CLASSEMENT_MIXTE) == 0) {\n        evolutionListViewTop = (ListView) activity.findViewById(R.id.evolutionMixteListTop);\n        evolutionListViewFlop = (ListView) activity.findViewById(R.id.evolutionMixteListFlop);\n      } else if (typeChamp.compareTo(CLASSEMENT_GENERAL) == 0) {\n        evolutionListViewTop = (ListView) activity.findViewById(R.id.evolutionGeneralListTop);\n        evolutionListViewFlop = (ListView) activity.findViewById(R.id.evolutionGeneralListFlop);\n      } else {\n        evolutionListViewTop = (ListView) activity.findViewById(R.id.evolutionHourraListTop);\n        evolutionListViewFlop = (ListView) activity.findViewById(R.id.evolutionHourraListFlop);\n      }\n\n      if (evolutionEntriesTop.size() > 0) {\n        TopFlopSerieAdapter adapter =\n            new TopFlopSerieAdapter(activity, R.layout.top_flop_item, evolutionEntriesTop);\n        evolutionListViewTop.setAdapter(adapter);\n        adapter.notifyDataSetChanged();\n      }\n\n      if (evolutionEntriesFlop.size() > 0) {\n        TopFlopSerieAdapter adapter =\n            new TopFlopSerieAdapter(activity, R.layout.top_flop_item, evolutionEntriesFlop);\n        evolutionListViewFlop.setAdapter(adapter);\n        adapter.notifyDataSetChanged();\n      }\n\n      if (dialog.isShowing()) {\n        dialog.dismiss();\n      }\n      super.onPostExecute(success);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6577, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 129, "guardExpressionEnd": 153, "guardBlockStart": 129, "guardBlockEnd": 190, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 164, "focalAPIEnd": 181, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/steffanc/Tahoe/tree/master/modules/Facebook/src/com/facebook/widget/WebDialog.java", "rawCode": "  @Override\n  public void dismiss() {\n    if (webView != null) {\n      webView.stopLoading();\n    }\n    if (!isDetached) {\n      if (spinner.isShowing()) {\n        spinner.dismiss();\n      }\n      super.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6578, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 120, "guardExpressionEnd": 159, "guardBlockStart": 120, "guardBlockEnd": 176, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 160, "focalAPIEnd": 175, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/noinnion/newsplus/tree/master/extensions/ReadabilityExtension/src/com/noinnion/android/newsplus/extension/readability/LoginActivity.java", "rawCode": "    protected void onPostExecute(Boolean result) {\n      final Context c = getApplicationContext();\n      try {\n        if (mBusy != null && mBusy.isShowing()) mBusy.dismiss();\n      } catch (Exception e) {\n      }\n      if (result != null) processLogin();\n      else Prefs.setLoggedIn(c, false);\n    }\n"}, {"dataset": "dismiss", "exampleID": 6579, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 45, "guardExpressionEnd": 72, "guardBlockStart": 45, "guardBlockEnd": 112, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 81, "focalAPIEnd": 105, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/applicake/Beandroid/tree/master/Beanstalk Android Client/src/com/applicake/beanstalkclient/tasks/BeanstalkAsyncTask.java", "rawCode": "  private void dismissProgressDialog() {\n    if (progressDialog != null) {\n      progressDialog.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6580, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 164, "guardExpressionEnd": 183, "guardBlockStart": 164, "guardBlockEnd": 201, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 184, "focalAPIEnd": 200, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/kii-dev-jenkins/KiiSyncSampleApp/tree/master/src/com/kii/demo/sync/tasks/ChangePwdTask.java", "rawCode": "  /**\n   * {@inheritdoc}\n   *\n   * @see android.os.AsyncTask#onPostExecute(java.lang.Object)\n   */\n  @Override\n  protected void onPostExecute(Integer result) {\n    if (dialog != null) dialog.dismiss();\n    switch (result) {\n      case SyncMsg.OK:\n        String msg = \"Change Password is successful. Please login with new password:\" + newPassword;\n        StartActivity.showAlertDialog(mContext, TAG, msg);\n        break;\n      case SyncMsg.ERROR_SETUP:\n      default:\n        StartActivity.showAlertDialog(mContext, TAG, result);\n        break;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6581, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 1758, "focalAPIEnd": 1779, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/photon-infotech/connect-to-door/tree/master/connect-to-door-android/connectToDoorApp/src/com/photon/connecttodoor/activity/AttendanceListActivity.java", "rawCode": "    protected void onPostExecute(String result) {\n      if (result != null) {\n        final AttendanceModel attendance = new AttendanceModel(result);\n        try {\n          attendance.parseSource();\n        } catch (JSONException e) {\n          e.printStackTrace();\n        }\n        if (attendance.getAttendanceListModels().size() != 0) {\n          ListGeneratedAttendanceListArrayAdapter tableReport =\n              new ListGeneratedAttendanceListArrayAdapter(\n                  AttendanceListActivity.this, attendance.getAttendanceListModels());\n          attendanceListReport.setAdapter(tableReport);\n\n          attendanceListReport.setOnItemClickListener(\n              new OnItemClickListener() {\n\n                @Override\n                public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n                  // TODO Auto-generated method stub\n                  String name = attendance.getAttendanceListModels().get(arg2).getName();\n                  String employeeId =\n                      attendance.getAttendanceListModels().get(arg2).getEmployeeId();\n                  String projectId = attendance.getAttendanceListModels().get(arg2).getProjectId();\n                  Intent listIntent =\n                      new Intent(AttendanceListActivity.this, AttendanceDetailActivity.class);\n                  listIntent.putExtra(\"name\", name);\n                  listIntent.putExtra(\"employeeId\", employeeId);\n                  listIntent.putExtra(\"projectId\", projectId);\n                  startActivity(listIntent);\n                }\n              });\n\n          tableReport.notifyDataSetChanged();\n        } else {\n          alertMessage(\"Incorrect \" + categoryName, AttendanceListActivity.this);\n        }\n      }\n      this.dialog.dismiss();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6582, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 129, "guardExpressionEnd": 153, "guardBlockStart": 129, "guardBlockEnd": 190, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 164, "focalAPIEnd": 181, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/todoroo/astrid/tree/master/facebook/facebook/src/com/facebook/widget/WebDialog.java", "rawCode": "  @Override\n  public void dismiss() {\n    if (webView != null) {\n      webView.stopLoading();\n    }\n    if (!isDetached) {\n      if (spinner.isShowing()) {\n        spinner.dismiss();\n      }\n      super.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6583, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 330, "focalAPIEnd": 354, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/span/Team05/tree/master/src/se/team05/activity/MediaSelectorActivity.java", "rawCode": "  /**\n   * When the load has finished we create a new adapter of the cursor we receive from the media\n   * store content provider. The adapter is then set to the listvew. The adapter uses ARIST, ALBUM\n   * and TITLE to be displayed to the user.\n   */\n  public void onLoadFinished(Loader<Cursor> cursorLoader, Cursor cursor) {\n    progressDialog.dismiss();\n    if (adapter == null) {\n      albumArtMap = new HashMap<Long, Bitmap>();\n      cursor.moveToFirst();\n\n      while (!cursor.isAfterLast()) {\n        long albumId =\n            Long.parseLong(\n                cursor.getString(cursor.getColumnIndex(MediaStore.Audio.Media.ALBUM_ID)));\n        if (!albumArtMap.containsKey(albumId)) {\n          albumArtMap.put(albumId, buildBitmapFromUri(albumId));\n        }\n        cursor.moveToNext();\n      }\n\n      adapter =\n          new MediaSelectorAdapter(\n              getApplicationContext(),\n              R.layout.activity_media_selector,\n              cursor,\n              new String[] {\n                MediaStore.Audio.Media.ARTIST,\n                MediaStore.Audio.Media.ALBUM,\n                MediaStore.Audio.Media.TITLE\n              },\n              new int[] {R.id.text_1, R.id.text_2, R.id.text_3},\n              Adapter.NO_SELECTION,\n              selectedItems,\n              albumArtMap);\n      listView.setAdapter(adapter);\n    } else {\n      adapter.swapCursor(cursor);\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6584, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 84, "focalAPIEnd": 101, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/BreakingBytes/SifterReader/tree/master/src/com/BreakingBytes/SifterReader/SifterReader.java", "rawCode": "    @Override\n    protected void onPostExecute(JSONObject sifterJSONObject) {\n      mDialog.dismiss();\n      if (sifterJSONObject == null) return;\n      if (getSifterError(sifterJSONObject)) {\n        loginKeys();\n        return;\n      }\n      try {\n        loadProjects(sifterJSONObject);\n      } catch (JSONException e) {\n        e.printStackTrace();\n        mSifterHelper.onException(e.toString());\n        return;\n      }\n      JSONObject statuses = getSifterFilters(IssuesActivity.STATUSES);\n      JSONObject priorities = getSifterFilters(IssuesActivity.PRIORITIES);\n      if (statuses == null || priorities == null) return;\n      mSifterHelper.saveSifterFilters(statuses, priorities);\n      fillData();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6585, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 71, "guardExpressionEnd": 102, "guardBlockStart": 71, "guardBlockEnd": 179, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 111, "focalAPIEnd": 139, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/flow5/sdk/tree/master/android/f5framework/com/phonegap/Notification.java", "rawCode": "  /** Stop spinner. */\n  public synchronized void activityStop() {\n    if (this.spinnerDialog != null) {\n      this.spinnerDialog.dismiss();\n      this.spinnerDialog = null;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6586, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null&&progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 234, "guardExpressionEnd": 291, "guardBlockStart": 234, "guardBlockEnd": 331, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 300, "focalAPIEnd": 324, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/omegahm/DBP2P/tree/master/Battleships/src/dk/hotmovinglobster/battleships/LocalPlaceShipsActivity.java", "rawCode": "  private void opponentReady() {\n    Log.i(BattleshipsApplication.LOG_TAG, \"LocalPlaceShipsActivity: Opponent ready\");\n    if (dialog_abort_warn != null && dialog_abort_warn.isShowing()) {\n      dialog_abort_warn.dismiss();\n    }\n    if (dialog_waiting != null && dialog_waiting.isShowing()) {\n      dialog_waiting.dismiss();\n    }\n    Toast.makeText(this, \"Opponent ready!\", Toast.LENGTH_SHORT).show();\n    finish();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6587, "initialization": ["ProgressDialog progressDialog = show(*,String,String,boolean)"], "initializationStart": [427], "initializationEnd": [495], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 560, "focalAPIEnd": 576, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/Rking788/UMaine-iOS-Android/tree/master/UMaine/src/org/umece/android/umaine/sports/SportsDisplaySchHockey.java", "rawCode": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    this.setContentView(R.layout.sprots_activity_sch_hockey);\n    sgdho = new SportsGrabData();\n\n    Calendar ca = Calendar.getInstance();\n    /* Find Tablelayout defined in myTableLayout.xml */\n    TableLayout tl = (TableLayout) findViewById(R.id.hoTableLayout);\n\n    /* Get information from the server */\n    ProgressDialog dialog = ProgressDialog.show(this, \"\", \"Loading sports information...\", true);\n    List<String> retvalho = sgdho.postEventType(\"hockey\");\n    dialog.dismiss();\n\n    int current = 0;\n\n    boolean bPassedLast = true;\n\n    /* Define a solid line to be drawn between the last event and next event */\n    View solidBlueView = new View(this);\n    solidBlueView.setBackgroundColor(R.color.maine_blue);\n\n    for (String s : retvalho) {\n      current++;\n\n      String[] row = s.split(\";\");\n\n      sgdho.setPostDate(row[0]);\n      sgdho.setPostEvent(row[1]);\n      sgdho.setPostLocation(row[2]);\n      sgdho.setPostTime(row[3]);\n\n      TableRow tr = new TableRow(this);\n      TextView labelDate = new TextView(this);\n      TextView labelEvent = new TextView(this);\n      TextView labelLocation = new TextView(this);\n      TextView labelTime = new TextView(this);\n\n      String[] dateSplit = null;\n\n      if (!sgdho.getPostDate().contains(\"-\")) {\n        dateSplit = sgdho.getPostDate().split(\"/\");\n      } else {\n        String str2 = sgdho.getPostDate().substring(sgdho.getPostDate().indexOf(\"-\") + 1);\n        dateSplit = str2.split(\"/\");\n      }\n\n      int tempMonth = Integer.parseInt(dateSplit[0]);\n      int tempDay = Integer.parseInt(dateSplit[1]);\n      int tempYear = Integer.parseInt(dateSplit[2]) + 2000;\n\n      boolean bPassed = false;\n      // The month is +1 because it is zero based and the database is not\n      int curMonth = ca.get(Calendar.MONTH) + 1;\n      int curDate = ca.get(Calendar.DATE);\n      int curYear = ca.get(Calendar.YEAR);\n\n      if (tempYear < curYear) bPassed = true;\n      else if ((tempYear == curYear) && (tempMonth < curMonth)) bPassed = true;\n      else if ((tempYear == curYear) && (tempMonth == curMonth) && (tempDay < curDate))\n        bPassed = true;\n\n      if (bPassed) {\n        labelDate.setTextColor(R.color.maine_lightblue);\n        labelEvent.setTextColor(R.color.maine_lightblue);\n        labelLocation.setTextColor(R.color.maine_lightblue);\n        labelTime.setTextColor(R.color.maine_lightblue);\n\n      } else {\n        labelDate.setTextColor(Color.BLACK);\n        labelEvent.setTextColor(Color.BLACK);\n        labelLocation.setTextColor(Color.BLACK);\n        labelTime.setTextColor(Color.BLACK);\n      }\n\n      // Create a TextView to house the name of the province\n\n      labelDate.setId(100 + current);\n      labelDate.setText(sgdho.getPostDate());\n      labelDate.setTextSize(TypedValue.COMPLEX_UNIT_SP, UMSports.TEXT_SIZE);\n      labelDate.setGravity(android.view.Gravity.LEFT);\n      labelDate.setLayoutParams(\n          new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n\n      // Create a TextView to house the value of the after-tax income\n\n      labelEvent.setId(200 + current);\n      labelEvent.setText(sgdho.getPostEvent());\n      labelEvent.setTextSize(TypedValue.COMPLEX_UNIT_SP, UMSports.TEXT_SIZE);\n      labelEvent.setGravity(android.view.Gravity.LEFT);\n      labelEvent.setLayoutParams(\n          new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n\n      // Create a TextView to house the name of the province\n\n      labelLocation.setId(300 + current);\n      labelLocation.setText(sgdho.getPostLocation());\n      labelLocation.setTextSize(TypedValue.COMPLEX_UNIT_SP, UMSports.TEXT_SIZE);\n      labelLocation.setGravity(android.view.Gravity.LEFT);\n      labelLocation.setLayoutParams(\n          new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n\n      // Create a TextView to house the value of the after-tax income\n      labelTime.setId(400 + current);\n      labelTime.setText(sgdho.getPostTime());\n      labelTime.setTextSize(TypedValue.COMPLEX_UNIT_SP, UMSports.TEXT_SIZE);\n      labelTime.setGravity(android.view.Gravity.LEFT);\n      labelTime.setLayoutParams(\n          new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n\n      // set the table\n      tr.setId(current);\n      tr.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));\n      tr.addView(labelDate);\n      tr.addView(labelEvent);\n      tr.addView(labelLocation);\n      tr.addView(labelTime);\n\n      // Draw the solid line if needed\n      if ((!bPassed) && (bPassedLast))\n        tl.addView(\n            solidBlueView, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, 2));\n\n      // Add the TableRow to the TableLayout\n      tl.addView(\n          tr, new TableLayout.LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT));\n\n      bPassedLast = bPassed;\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6588, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 84, "focalAPIEnd": 101, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/mikofski/SifterReader/tree/master/src/com/BreakingBytes/SifterReader/SifterReader.java", "rawCode": "    @Override\n    protected void onPostExecute(JSONObject sifterJSONObject) {\n      mDialog.dismiss();\n      if (sifterJSONObject == null) return;\n      if (getSifterError(sifterJSONObject)) {\n        loginKeys();\n        return;\n      }\n      try {\n        loadProjects(sifterJSONObject);\n      } catch (JSONException e) {\n        e.printStackTrace();\n        mSifterHelper.onException(e.toString());\n        return;\n      }\n      JSONObject statuses = getSifterFilters(IssuesActivity.STATUSES);\n      JSONObject priorities = getSifterFilters(IssuesActivity.PRIORITIES);\n      if (statuses == null || priorities == null) return;\n      mSifterHelper.saveSifterFilters(statuses, priorities);\n      fillData();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6589, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 61, "focalAPIEnd": 77, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/COMU/homescreen/tree/master/damla/Facebookk/src/org/comu/homescreen/Hackbook.java", "rawCode": "    public void onFacebookError(FacebookError error) {\n      dialog.dismiss();\n      Toast.makeText(\n              getApplicationContext(), \"Facebook Error: \" + error.getMessage(), Toast.LENGTH_SHORT)\n          .show();\n    }\n"}, {"dataset": "dismiss", "exampleID": 6590, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 230, "focalAPIEnd": 254, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vitkin/aptoide-uploader/tree/master/src/pt/aptoide/backupapps/BazaarSignUp.java", "rawCode": "        @Override\n        public void handleMessage(Message msg) {\n          EnumLoginInterfaceTasks task = EnumLoginInterfaceTasks.reverseOrdinal(msg.what);\n          switch (task) {\n            case REPO_INSERTED:\n              dialogProgress.dismiss();\n              break;\n\n            default:\n              break;\n          }\n        }\n"}, {"dataset": "dismiss", "exampleID": 6591, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 176, "guardExpressionEnd": 202, "guardBlockStart": 176, "guardBlockEnd": 241, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 211, "focalAPIEnd": 234, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/purdue-cs-groups/cs252-lab06/tree/master/Client/src/edu/purdue/cs252/lab06/DirectoryActivity.java", "rawCode": "  public void connect(String readAddress, String writeAddress) {\n    if (incomingDialog != null) {\n      incomingDialog.dismiss();\n      if (onPhone) player.stop();\n    }\n\n    if (ringingDialog != null) {\n      ringingDialog.dismiss();\n    }\n\n    User target = null;\n    for (User u : users) {\n      if (otherUsername.equals(u.getUsername())) {\n        target = u;\n        break;\n      }\n    }\n\n    Intent i = new Intent(DirectoryActivity.this, CallActivity.class);\n    i.putExtra(\"username\", otherUsername);\n    i.putExtra(\"userAddress\", target.getIPAddress());\n    i.putExtra(\"readAddress\", readAddress);\n    i.putExtra(\"writeAddress\", writeAddress);\n\n    startActivity(i);\n\n    CALL_STATUS = 3;\n  }\n"}, {"dataset": "dismiss", "exampleID": 6592, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 58, "focalAPIEnd": 74, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/tlatsas/incident-locator-android/tree/master/src/com/incidentlocator/client/HttpRest.java", "rawCode": "    protected void onPostExecute(Boolean success) {\n      dialog.dismiss();\n      settingsSetBoolean(\"logged_in\", success.booleanValue());\n\n      if (success.booleanValue()) {\n        Log.d(TAG, \"Logged in - calling main activity\");\n        callMain();\n      } else {\n        CharSequence text = \"Cannot login to service\";\n        Toast toast = Toast.makeText(context, text, Toast.LENGTH_SHORT);\n        toast.show();\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6593, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog.isShowing()", "guardType": "IF {", "guardExpressionStart": 91, "guardExpressionEnd": 114, "guardBlockStart": 91, "guardBlockEnd": 132, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 115, "focalAPIEnd": 131, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/jsmaniac/2011-m1s2-ter/tree/master/code/PtiClic/src/org/pticlic/js/JavaScriptInterface.java", "rawCode": "  /** Permet de retirer l'affichage de la boite de dialog */\n  public void dismiss() {\n    if (dialog.isShowing()) dialog.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6594, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 42, "focalAPIEnd": 66, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/vogtp/android-clockcard/tree/master/src/ch/almana/android/stechkarte/utils/ProgressWrapperDialog.java", "rawCode": "  @Override\n  public void dismiss() {\n    progressDialog.dismiss();\n  }\n"}, {"dataset": "dismiss", "exampleID": 6595, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 45, "guardExpressionEnd": 73, "guardBlockStart": 45, "guardBlockEnd": 114, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 82, "focalAPIEnd": 107, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/heyongjian/joy_launcher/tree/master/src/com/joy/launcher2/preference/Preferences.java", "rawCode": "  private void dismissProgressDialog() {\n    if (mProgressDialog != null) {\n      mProgressDialog.dismiss();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6596, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 92, "focalAPIEnd": 108, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/satoshi-okawa/facebook-android-sdk-test1/tree/master/samples/Hackbook/src/com/facebook/android/FQLQuery.java", "rawCode": "    @Override\n    public void onComplete(final String response, final Object state) {\n      dialog.dismiss();\n      /*\n       * Output can be a JSONArray or a JSONObject.\n       * Try JSONArray and if there's a JSONException, parse to JSONObject\n       */\n      try {\n        JSONArray json = new JSONArray(response);\n        setText(json.toString(2));\n      } catch (JSONException e) {\n        try {\n          /*\n           * JSONObject probably indicates there was some error\n           * Display that error, but for end user you should parse the\n           * error and show appropriate message\n           */\n          JSONObject json = new JSONObject(response);\n          setText(json.toString(2));\n        } catch (JSONException e1) {\n          setText(activity.getString(R.string.exception) + e1.getMessage());\n        }\n      }\n    }\n"}, {"dataset": "dismiss", "exampleID": 6597, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "progressDialog!=null", "guardType": "IF {", "guardExpressionStart": 185, "guardExpressionEnd": 213, "guardBlockStart": 185, "guardBlockEnd": 316, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 224, "focalAPIEnd": 249, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.setProgressStyle(int)", "progressDialog.setMessage(String)", "progressDialog.setMax(int)", "progressDialog.setCancelable(boolean)", "progressDialog.show()", "progressDialog.setProgress(int)"], "useStart": [599, 650, 717, 765, 813, 901], "useEnd": [638, 705, 753, 801, 835, 941], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/igorhvr/mnemododo/tree/master/src/org/tbrk/mnemododo/ProgressTask.java", "rawCode": "  public void onProgressUpdate(Integer... progress) {\n    if (progress[0] == -1) {\n      // do it here, and not in onPostExecute, because\n      // the update requests are queued.\n      if (progress_dialog != null) {\n        progress_dialog.dismiss();\n        progress_dialog = null;\n        task_done = true;\n      }\n\n    } else {\n      if (progress_dialog == null && !task_done) {\n        Context context = null;\n\n        if (callback != null) {\n          context = callback.getContext();\n        }\n\n        if (context != null) {\n          progress_dialog = new ProgressDialog(context);\n          progress_dialog.setProgressStyle(style);\n          progress_dialog.setMessage(getString(progress_message));\n          progress_dialog.setMax(progress_max);\n          progress_dialog.setCancelable(false);\n          progress_dialog.show();\n        }\n      }\n\n      if (progress_dialog != null) {\n        progress_dialog.setProgress(progress[0]);\n      }\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6598, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 282, "focalAPIEnd": 299, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/rorist/nowatch-tv/tree/master/src/net/nowatch/ui/Player.java", "rawCode": "  @Override\n  protected void onNewIntent(Intent intent) {\n    Log.v(TAG, \"onNewIntent()\");\n    // FIXME: Start new file\n    setIntent(intent);\n    setFileByIntent();\n    if (isAudio) {\n      setAudioUI();\n      try {\n        playAudio();\n      } catch (RemoteException e) {\n        mDialog.dismiss();\n        e.printStackTrace();\n        finish();\n      }\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6599, "initialization": ["ProgressDialog progressDialog = show(*,String,*,boolean)"], "initializationStart": [96], "initializationEnd": [201], "hasTryCatch": 1, "exceptionType": "Exception", "exceptionHandlingCall": ["getMessage()", "e(String,String)", "printStackTrace()", "ProgressDialog.dismiss()", "Toast.show()"], "tryExpressionStart": 362, "tryExpressionEnd": 366, "tryBlockStart": 362, "tryBlockEnd": 731, "catchExpressionStart": 492, "catchExpressionEnd": 512, "catchBlockStart": 492, "catchBlockEnd": 731, "exceptionHandlingCallStart": [568, 590, 617, 645, 692], "exceptionHandlingCallEnd": [582, 609, 636, 684, 724], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 445, "focalAPIEnd": 484, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": ["progressDialog.dismiss()"], "useStart": [645], "useEnd": [684], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/erikwt/ParandroidMessaging/tree/master/src/org/parandroid/sms/ui/ConversationList.java", "rawCode": "  private void doGenerateKeypair() {\n    ProgressDialog generateKeypairProgressDialog =\n        ProgressDialog.show(\n            ConversationList.this, \"\", getString(R.string.generating_keypair), true);\n    Toast generateKeypairErrorToast =\n        Toast.makeText(\n            ConversationList.this, R.string.generated_keypair_failure, Toast.LENGTH_SHORT);\n\n    try {\n      MessageEncryptionFactory.generateKeyPair(ConversationList.this);\n      generateKeypairProgressDialog.dismiss();\n    } catch (Exception e) {\n      String message = \"Error generating keypair: \" + e.getMessage();\n      Log.e(TAG, message);\n      e.printStackTrace();\n\n      generateKeypairProgressDialog.dismiss();\n      generateKeypairErrorToast.show();\n    }\n  }\n"}, {"dataset": "dismiss", "exampleID": 6600, "initialization": [], "initializationStart": [], "initializationEnd": [], "hasTryCatch": 0, "exceptionType": "empty", "exceptionHandlingCall": [], "tryExpressionStart": -1, "tryExpressionEnd": -1, "tryBlockStart": -1, "tryBlockEnd": -1, "catchExpressionStart": -1, "catchExpressionEnd": -1, "catchBlockStart": -1, "catchBlockEnd": -1, "exceptionHandlingCallStart": [], "exceptionHandlingCallEnd": [], "configuration": [], "configurationStart": [], "configurationEnd": [], "guardCondition": "empty", "guardType": "empty", "guardExpressionStart": -1, "guardExpressionEnd": -1, "guardBlockStart": -1, "guardBlockEnd": -1, "focalAPI": " = progressDialog.dismiss()", "focalAPIStart": 95, "focalAPIEnd": 119, "followUpCheck": "empty", "checkType": "empty", "followUpCheckExpressionStart": -1, "followUpCheckExpressionEnd": -1, "followUpCheckBlockStart": -1, "followUpCheckBlockEnd": -1, "use": [], "useStart": [], "useEnd": [], "hasFinally": 0, "cleanUpCall": [], "finallyExpressionStart": -1, "finallyExpressionEnd": -1, "finallyBlockStart": -1, "finallyBlockEnd": -1, "cleanUpCallStart": [], "cleanUpCallEnd": [], "url": "https://github.com/gakshay/edakia_android/tree/master/src/com/gakshay/android/edakia/ChangePassword.java", "rawCode": "        public void handleMessage(Message msg) {\n          super.handleMessage(msg);\n          progressDialog.dismiss();\n          // initialize error text value to null.\n          TextView text = (TextView) findViewById(R.id.Error);\n          text.setText(null);\n\n          ((ImageView) findViewById(R.id.errImgMobile)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgOldPwd)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgNewPwd)).setVisibility(ImageView.INVISIBLE);\n          ((ImageView) findViewById(R.id.errImgNewPwdAgn)).setVisibility(ImageView.INVISIBLE);\n\n          oldPwd.setText(null);\n          newPwd.setText(null);\n          newPwdAgain.setText(null);\n\n          Intent homeIntent = new Intent(getApplicationContext(), Edakia.class);\n          homeIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n          homeIntent.putExtra(\"showResultDialogBox\", \"true\");\n          homeIntent.putExtra(\"transactionType\", \"chngPwd\");\n\n          if (\"Exception\".equalsIgnoreCase(chngPwdResp)) {\n            text.setText(getString(R.string.errorDialogMsg));\n\n            homeIntent.putExtra(\"isError\", \"true\");\n            homeIntent.putExtra(\"errorMessageText\", getString(R.string.errorDialogMsg));\n\n          } else if (chngPwdResp != null && chngPwdResp.contains(\"error\")) {\n            homeIntent.putExtra(\"isError\", \"true\");\n            homeIntent.putExtra(\n                \"errorMessageText\",\n                ActivitiesHelper.fetchValuesFromReponse(chngPwdResp).get(\"error\"));\n          } else {\n            homeIntent.putExtra(\"isError\", \"false\");\n          }\n\n          startActivity(homeIntent);\n          finish();\n        }\n"}]